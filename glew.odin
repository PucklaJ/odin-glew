//+build amd64, arm64
package gl

ZERO :: 0
FALSE :: 0
LOGIC_OP :: 3057
NONE :: 0
TEXTURE_COMPONENTS :: 4099
NO_ERROR :: 0
POINTS :: 0
CURRENT_BIT :: 1
TRUE :: 1
ONE :: 1
CLIENT_PIXEL_STORE_BIT :: 1
LINES :: 1
LINE_LOOP :: 2
POINT_BIT :: 2
CLIENT_VERTEX_ARRAY_BIT :: 2
LINE_STRIP :: 3
LINE_BIT :: 4
TRIANGLES :: 4
TRIANGLE_STRIP :: 5
TRIANGLE_FAN :: 6
QUADS :: 7
QUAD_STRIP :: 8
POLYGON_BIT :: 8
POLYGON :: 9
POLYGON_STIPPLE_BIT :: 16
PIXEL_MODE_BIT :: 32
LIGHTING_BIT :: 64
FOG_BIT :: 128
DEPTH_BUFFER_BIT :: 256
ACCUM :: 256
LOAD :: 257
RETURN :: 258
MULT :: 259
ADD :: 260
NEVER :: 512
ACCUM_BUFFER_BIT :: 512
LESS :: 513
EQUAL :: 514
LEQUAL :: 515
GREATER :: 516
NOTEQUAL :: 517
GEQUAL :: 518
ALWAYS :: 519
SRC_COLOR :: 768
ONE_MINUS_SRC_COLOR :: 769
SRC_ALPHA :: 770
ONE_MINUS_SRC_ALPHA :: 771
DST_ALPHA :: 772
ONE_MINUS_DST_ALPHA :: 773
DST_COLOR :: 774
ONE_MINUS_DST_COLOR :: 775
SRC_ALPHA_SATURATE :: 776
STENCIL_BUFFER_BIT :: 1024
FRONT_LEFT :: 1024
FRONT_RIGHT :: 1025
BACK_LEFT :: 1026
BACK_RIGHT :: 1027
FRONT :: 1028
BACK :: 1029
LEFT :: 1030
RIGHT :: 1031
FRONT_AND_BACK :: 1032
AUX0 :: 1033
AUX1 :: 1034
AUX2 :: 1035
AUX3 :: 1036
INVALID_ENUM :: 1280
INVALID_VALUE :: 1281
INVALID_OPERATION :: 1282
STACK_OVERFLOW :: 1283
STACK_UNDERFLOW :: 1284
OUT_OF_MEMORY :: 1285
GL_2D :: 1536
GL_3D :: 1537
GL_3D_COLOR :: 1538
GL_3D_COLOR_TEXTURE :: 1539
GL_4D_COLOR_TEXTURE :: 1540
PASS_THROUGH_TOKEN :: 1792
POINT_TOKEN :: 1793
LINE_TOKEN :: 1794
POLYGON_TOKEN :: 1795
BITMAP_TOKEN :: 1796
DRAW_PIXEL_TOKEN :: 1797
COPY_PIXEL_TOKEN :: 1798
LINE_RESET_TOKEN :: 1799
EXP :: 2048
VIEWPORT_BIT :: 2048
EXP2 :: 2049
CW :: 2304
CCW :: 2305
COEFF :: 2560
ORDER :: 2561
DOMAIN :: 2562
CURRENT_COLOR :: 2816
CURRENT_INDEX :: 2817
CURRENT_NORMAL :: 2818
CURRENT_TEXTURE_COORDS :: 2819
CURRENT_RASTER_COLOR :: 2820
CURRENT_RASTER_INDEX :: 2821
CURRENT_RASTER_TEXTURE_COORDS :: 2822
CURRENT_RASTER_POSITION :: 2823
CURRENT_RASTER_POSITION_VALID :: 2824
CURRENT_RASTER_DISTANCE :: 2825
POINT_SMOOTH :: 2832
POINT_SIZE :: 2833
POINT_SIZE_RANGE :: 2834
POINT_SIZE_GRANULARITY :: 2835
LINE_SMOOTH :: 2848
LINE_WIDTH :: 2849
LINE_WIDTH_RANGE :: 2850
LINE_WIDTH_GRANULARITY :: 2851
LINE_STIPPLE :: 2852
LINE_STIPPLE_PATTERN :: 2853
LINE_STIPPLE_REPEAT :: 2854
LIST_MODE :: 2864
MAX_LIST_NESTING :: 2865
LIST_BASE :: 2866
LIST_INDEX :: 2867
POLYGON_MODE :: 2880
POLYGON_SMOOTH :: 2881
POLYGON_STIPPLE :: 2882
EDGE_FLAG :: 2883
CULL_FACE :: 2884
CULL_FACE_MODE :: 2885
FRONT_FACE :: 2886
LIGHTING :: 2896
LIGHT_MODEL_LOCAL_VIEWER :: 2897
LIGHT_MODEL_TWO_SIDE :: 2898
LIGHT_MODEL_AMBIENT :: 2899
SHADE_MODEL :: 2900
COLOR_MATERIAL_FACE :: 2901
COLOR_MATERIAL_PARAMETER :: 2902
COLOR_MATERIAL :: 2903
FOG :: 2912
FOG_INDEX :: 2913
FOG_DENSITY :: 2914
FOG_START :: 2915
FOG_END :: 2916
FOG_MODE :: 2917
FOG_COLOR :: 2918
DEPTH_RANGE :: 2928
DEPTH_TEST :: 2929
DEPTH_WRITEMASK :: 2930
DEPTH_CLEAR_VALUE :: 2931
DEPTH_FUNC :: 2932
ACCUM_CLEAR_VALUE :: 2944
STENCIL_TEST :: 2960
STENCIL_CLEAR_VALUE :: 2961
STENCIL_FUNC :: 2962
STENCIL_VALUE_MASK :: 2963
STENCIL_FAIL :: 2964
STENCIL_PASS_DEPTH_FAIL :: 2965
STENCIL_PASS_DEPTH_PASS :: 2966
STENCIL_REF :: 2967
STENCIL_WRITEMASK :: 2968
MATRIX_MODE :: 2976
NORMALIZE :: 2977
VIEWPORT :: 2978
MODELVIEW_STACK_DEPTH :: 2979
PROJECTION_STACK_DEPTH :: 2980
TEXTURE_STACK_DEPTH :: 2981
MODELVIEW_MATRIX :: 2982
PROJECTION_MATRIX :: 2983
TEXTURE_MATRIX :: 2984
ATTRIB_STACK_DEPTH :: 2992
CLIENT_ATTRIB_STACK_DEPTH :: 2993
ALPHA_TEST :: 3008
ALPHA_TEST_FUNC :: 3009
ALPHA_TEST_REF :: 3010
DITHER :: 3024
BLEND_DST :: 3040
BLEND_SRC :: 3041
BLEND :: 3042
LOGIC_OP_MODE :: 3056
INDEX_LOGIC_OP :: 3057
COLOR_LOGIC_OP :: 3058
AUX_BUFFERS :: 3072
DRAW_BUFFER :: 3073
READ_BUFFER :: 3074
SCISSOR_BOX :: 3088
SCISSOR_TEST :: 3089
INDEX_CLEAR_VALUE :: 3104
INDEX_WRITEMASK :: 3105
COLOR_CLEAR_VALUE :: 3106
COLOR_WRITEMASK :: 3107
INDEX_MODE :: 3120
RGBA_MODE :: 3121
DOUBLEBUFFER :: 3122
STEREO :: 3123
RENDER_MODE :: 3136
PERSPECTIVE_CORRECTION_HINT :: 3152
POINT_SMOOTH_HINT :: 3153
LINE_SMOOTH_HINT :: 3154
POLYGON_SMOOTH_HINT :: 3155
FOG_HINT :: 3156
TEXTURE_GEN_S :: 3168
TEXTURE_GEN_T :: 3169
TEXTURE_GEN_R :: 3170
TEXTURE_GEN_Q :: 3171
PIXEL_MAP_I_TO_I :: 3184
PIXEL_MAP_S_TO_S :: 3185
PIXEL_MAP_I_TO_R :: 3186
PIXEL_MAP_I_TO_G :: 3187
PIXEL_MAP_I_TO_B :: 3188
PIXEL_MAP_I_TO_A :: 3189
PIXEL_MAP_R_TO_R :: 3190
PIXEL_MAP_G_TO_G :: 3191
PIXEL_MAP_B_TO_B :: 3192
PIXEL_MAP_A_TO_A :: 3193
PIXEL_MAP_I_TO_I_SIZE :: 3248
PIXEL_MAP_S_TO_S_SIZE :: 3249
PIXEL_MAP_I_TO_R_SIZE :: 3250
PIXEL_MAP_I_TO_G_SIZE :: 3251
PIXEL_MAP_I_TO_B_SIZE :: 3252
PIXEL_MAP_I_TO_A_SIZE :: 3253
PIXEL_MAP_R_TO_R_SIZE :: 3254
PIXEL_MAP_G_TO_G_SIZE :: 3255
PIXEL_MAP_B_TO_B_SIZE :: 3256
PIXEL_MAP_A_TO_A_SIZE :: 3257
UNPACK_SWAP_BYTES :: 3312
UNPACK_LSB_FIRST :: 3313
UNPACK_ROW_LENGTH :: 3314
UNPACK_SKIP_ROWS :: 3315
UNPACK_SKIP_PIXELS :: 3316
UNPACK_ALIGNMENT :: 3317
PACK_SWAP_BYTES :: 3328
PACK_LSB_FIRST :: 3329
PACK_ROW_LENGTH :: 3330
PACK_SKIP_ROWS :: 3331
PACK_SKIP_PIXELS :: 3332
PACK_ALIGNMENT :: 3333
MAP_COLOR :: 3344
MAP_STENCIL :: 3345
INDEX_SHIFT :: 3346
INDEX_OFFSET :: 3347
RED_SCALE :: 3348
RED_BIAS :: 3349
ZOOM_X :: 3350
ZOOM_Y :: 3351
GREEN_SCALE :: 3352
GREEN_BIAS :: 3353
BLUE_SCALE :: 3354
BLUE_BIAS :: 3355
ALPHA_SCALE :: 3356
ALPHA_BIAS :: 3357
DEPTH_SCALE :: 3358
DEPTH_BIAS :: 3359
MAX_EVAL_ORDER :: 3376
MAX_LIGHTS :: 3377
MAX_CLIP_PLANES :: 3378
MAX_TEXTURE_SIZE :: 3379
MAX_PIXEL_MAP_TABLE :: 3380
MAX_ATTRIB_STACK_DEPTH :: 3381
MAX_MODELVIEW_STACK_DEPTH :: 3382
MAX_NAME_STACK_DEPTH :: 3383
MAX_PROJECTION_STACK_DEPTH :: 3384
MAX_TEXTURE_STACK_DEPTH :: 3385
MAX_VIEWPORT_DIMS :: 3386
MAX_CLIENT_ATTRIB_STACK_DEPTH :: 3387
SUBPIXEL_BITS :: 3408
INDEX_BITS :: 3409
RED_BITS :: 3410
GREEN_BITS :: 3411
BLUE_BITS :: 3412
ALPHA_BITS :: 3413
DEPTH_BITS :: 3414
STENCIL_BITS :: 3415
ACCUM_RED_BITS :: 3416
ACCUM_GREEN_BITS :: 3417
ACCUM_BLUE_BITS :: 3418
ACCUM_ALPHA_BITS :: 3419
NAME_STACK_DEPTH :: 3440
AUTO_NORMAL :: 3456
MAP1_COLOR_4 :: 3472
MAP1_INDEX :: 3473
MAP1_NORMAL :: 3474
MAP1_TEXTURE_COORD_1 :: 3475
MAP1_TEXTURE_COORD_2 :: 3476
MAP1_TEXTURE_COORD_3 :: 3477
MAP1_TEXTURE_COORD_4 :: 3478
MAP1_VERTEX_3 :: 3479
MAP1_VERTEX_4 :: 3480
MAP2_COLOR_4 :: 3504
MAP2_INDEX :: 3505
MAP2_NORMAL :: 3506
MAP2_TEXTURE_COORD_1 :: 3507
MAP2_TEXTURE_COORD_2 :: 3508
MAP2_TEXTURE_COORD_3 :: 3509
MAP2_TEXTURE_COORD_4 :: 3510
MAP2_VERTEX_3 :: 3511
MAP2_VERTEX_4 :: 3512
MAP1_GRID_DOMAIN :: 3536
MAP1_GRID_SEGMENTS :: 3537
MAP2_GRID_DOMAIN :: 3538
MAP2_GRID_SEGMENTS :: 3539
TEXTURE_1D :: 3552
TEXTURE_2D :: 3553
FEEDBACK_BUFFER_POINTER :: 3568
FEEDBACK_BUFFER_SIZE :: 3569
FEEDBACK_BUFFER_TYPE :: 3570
SELECTION_BUFFER_POINTER :: 3571
SELECTION_BUFFER_SIZE :: 3572
TEXTURE_WIDTH :: 4096
TRANSFORM_BIT :: 4096
TEXTURE_HEIGHT :: 4097
TEXTURE_INTERNAL_FORMAT :: 4099
TEXTURE_BORDER_COLOR :: 4100
TEXTURE_BORDER :: 4101
DONT_CARE :: 4352
FASTEST :: 4353
NICEST :: 4354
AMBIENT :: 4608
DIFFUSE :: 4609
SPECULAR :: 4610
POSITION :: 4611
SPOT_DIRECTION :: 4612
SPOT_EXPONENT :: 4613
SPOT_CUTOFF :: 4614
CONSTANT_ATTENUATION :: 4615
LINEAR_ATTENUATION :: 4616
QUADRATIC_ATTENUATION :: 4617
COMPILE :: 4864
COMPILE_AND_EXECUTE :: 4865
BYTE :: 5120
UNSIGNED_BYTE :: 5121
SHORT :: 5122
UNSIGNED_SHORT :: 5123
INT :: 5124
UNSIGNED_INT :: 5125
FLOAT :: 5126
GL_2_BYTES :: 5127
GL_3_BYTES :: 5128
GL_4_BYTES :: 5129
DOUBLE :: 5130
CLEAR :: 5376
AND :: 5377
AND_REVERSE :: 5378
COPY :: 5379
AND_INVERTED :: 5380
NOOP :: 5381
XOR :: 5382
OR :: 5383
NOR :: 5384
EQUIV :: 5385
INVERT :: 5386
OR_REVERSE :: 5387
COPY_INVERTED :: 5388
OR_INVERTED :: 5389
NAND :: 5390
SET :: 5391
EMISSION :: 5632
SHININESS :: 5633
AMBIENT_AND_DIFFUSE :: 5634
COLOR_INDEXES :: 5635
MODELVIEW :: 5888
PROJECTION :: 5889
TEXTURE :: 5890
COLOR :: 6144
DEPTH :: 6145
STENCIL :: 6146
COLOR_INDEX :: 6400
STENCIL_INDEX :: 6401
DEPTH_COMPONENT :: 6402
RED :: 6403
GREEN :: 6404
BLUE :: 6405
ALPHA :: 6406
RGB :: 6407
RGBA :: 6408
LUMINANCE :: 6409
LUMINANCE_ALPHA :: 6410
BITMAP :: 6656
POINT :: 6912
LINE :: 6913
FILL :: 6914
RENDER :: 7168
FEEDBACK :: 7169
SELECT :: 7170
FLAT :: 7424
SMOOTH :: 7425
KEEP :: 7680
REPLACE :: 7681
INCR :: 7682
DECR :: 7683
VENDOR :: 7936
RENDERER :: 7937
VERSION :: 7938
EXTENSIONS :: 7939
S :: 8192
ENABLE_BIT :: 8192
T :: 8193
R :: 8194
Q :: 8195
MODULATE :: 8448
DECAL :: 8449
TEXTURE_ENV_MODE :: 8704
TEXTURE_ENV_COLOR :: 8705
TEXTURE_ENV :: 8960
EYE_LINEAR :: 9216
OBJECT_LINEAR :: 9217
SPHERE_MAP :: 9218
TEXTURE_GEN_MODE :: 9472
OBJECT_PLANE :: 9473
EYE_PLANE :: 9474
NEAREST :: 9728
LINEAR :: 9729
NEAREST_MIPMAP_NEAREST :: 9984
LINEAR_MIPMAP_NEAREST :: 9985
NEAREST_MIPMAP_LINEAR :: 9986
LINEAR_MIPMAP_LINEAR :: 9987
TEXTURE_MAG_FILTER :: 10240
TEXTURE_MIN_FILTER :: 10241
TEXTURE_WRAP_S :: 10242
TEXTURE_WRAP_T :: 10243
CLAMP :: 10496
REPEAT :: 10497
POLYGON_OFFSET_UNITS :: 10752
POLYGON_OFFSET_POINT :: 10753
POLYGON_OFFSET_LINE :: 10754
R3_G3_B2 :: 10768
V2F :: 10784
V3F :: 10785
C4UB_V2F :: 10786
C4UB_V3F :: 10787
C3F_V3F :: 10788
N3F_V3F :: 10789
C4F_N3F_V3F :: 10790
T2F_V3F :: 10791
T4F_V4F :: 10792
T2F_C4UB_V3F :: 10793
T2F_C3F_V3F :: 10794
T2F_N3F_V3F :: 10795
T2F_C4F_N3F_V3F :: 10796
T4F_C4F_N3F_V4F :: 10797
CLIP_PLANE0 :: 12288
CLIP_PLANE1 :: 12289
CLIP_PLANE2 :: 12290
CLIP_PLANE3 :: 12291
CLIP_PLANE4 :: 12292
CLIP_PLANE5 :: 12293
LIGHT0 :: 16384
COLOR_BUFFER_BIT :: 16384
LIGHT1 :: 16385
LIGHT2 :: 16386
LIGHT3 :: 16387
LIGHT4 :: 16388
LIGHT5 :: 16389
LIGHT6 :: 16390
LIGHT7 :: 16391
HINT_BIT :: 32768
POLYGON_OFFSET_FILL :: 32823
POLYGON_OFFSET_FACTOR :: 32824
ALPHA4 :: 32827
ALPHA8 :: 32828
ALPHA12 :: 32829
ALPHA16 :: 32830
LUMINANCE4 :: 32831
LUMINANCE8 :: 32832
LUMINANCE12 :: 32833
LUMINANCE16 :: 32834
LUMINANCE4_ALPHA4 :: 32835
LUMINANCE6_ALPHA2 :: 32836
LUMINANCE8_ALPHA8 :: 32837
LUMINANCE12_ALPHA4 :: 32838
LUMINANCE12_ALPHA12 :: 32839
LUMINANCE16_ALPHA16 :: 32840
INTENSITY :: 32841
INTENSITY4 :: 32842
INTENSITY8 :: 32843
INTENSITY12 :: 32844
INTENSITY16 :: 32845
RGB4 :: 32847
RGB5 :: 32848
RGB8 :: 32849
RGB10 :: 32850
RGB12 :: 32851
RGB16 :: 32852
RGBA2 :: 32853
RGBA4 :: 32854
RGB5_A1 :: 32855
RGBA8 :: 32856
RGB10_A2 :: 32857
RGBA12 :: 32858
RGBA16 :: 32859
TEXTURE_RED_SIZE :: 32860
TEXTURE_GREEN_SIZE :: 32861
TEXTURE_BLUE_SIZE :: 32862
TEXTURE_ALPHA_SIZE :: 32863
TEXTURE_LUMINANCE_SIZE :: 32864
TEXTURE_INTENSITY_SIZE :: 32865
PROXY_TEXTURE_1D :: 32867
PROXY_TEXTURE_2D :: 32868
TEXTURE_PRIORITY :: 32870
TEXTURE_RESIDENT :: 32871
TEXTURE_BINDING_1D :: 32872
TEXTURE_BINDING_2D :: 32873
VERTEX_ARRAY :: 32884
NORMAL_ARRAY :: 32885
COLOR_ARRAY :: 32886
INDEX_ARRAY :: 32887
TEXTURE_COORD_ARRAY :: 32888
EDGE_FLAG_ARRAY :: 32889
VERTEX_ARRAY_SIZE :: 32890
VERTEX_ARRAY_TYPE :: 32891
VERTEX_ARRAY_STRIDE :: 32892
NORMAL_ARRAY_TYPE :: 32894
NORMAL_ARRAY_STRIDE :: 32895
COLOR_ARRAY_SIZE :: 32897
COLOR_ARRAY_TYPE :: 32898
COLOR_ARRAY_STRIDE :: 32899
INDEX_ARRAY_TYPE :: 32901
INDEX_ARRAY_STRIDE :: 32902
TEXTURE_COORD_ARRAY_SIZE :: 32904
TEXTURE_COORD_ARRAY_TYPE :: 32905
TEXTURE_COORD_ARRAY_STRIDE :: 32906
EDGE_FLAG_ARRAY_STRIDE :: 32908
VERTEX_ARRAY_POINTER :: 32910
NORMAL_ARRAY_POINTER :: 32911
COLOR_ARRAY_POINTER :: 32912
INDEX_ARRAY_POINTER :: 32913
TEXTURE_COORD_ARRAY_POINTER :: 32914
EDGE_FLAG_ARRAY_POINTER :: 32915
COLOR_INDEX1_EXT :: 32994
COLOR_INDEX2_EXT :: 32995
COLOR_INDEX4_EXT :: 32996
COLOR_INDEX8_EXT :: 32997
COLOR_INDEX12_EXT :: 32998
COLOR_INDEX16_EXT :: 32999
EVAL_BIT :: 65536
LIST_BIT :: 131072
TEXTURE_BIT :: 262144
SCISSOR_BIT :: 524288
ALL_ATTRIB_BITS :: 1048575
CLIENT_ALL_ATTRIB_BITS :: 4294967295
SMOOTH_POINT_SIZE_RANGE :: 2834
SMOOTH_POINT_SIZE_GRANULARITY :: 2835
SMOOTH_LINE_WIDTH_RANGE :: 2850
SMOOTH_LINE_WIDTH_GRANULARITY :: 2851
UNSIGNED_BYTE_3_3_2 :: 32818
UNSIGNED_SHORT_4_4_4_4 :: 32819
UNSIGNED_SHORT_5_5_5_1 :: 32820
UNSIGNED_INT_8_8_8_8 :: 32821
UNSIGNED_INT_10_10_10_2 :: 32822
RESCALE_NORMAL :: 32826
TEXTURE_BINDING_3D :: 32874
PACK_SKIP_IMAGES :: 32875
PACK_IMAGE_HEIGHT :: 32876
UNPACK_SKIP_IMAGES :: 32877
UNPACK_IMAGE_HEIGHT :: 32878
TEXTURE_3D :: 32879
PROXY_TEXTURE_3D :: 32880
TEXTURE_DEPTH :: 32881
TEXTURE_WRAP_R :: 32882
MAX_3D_TEXTURE_SIZE :: 32883
BGR :: 32992
BGRA :: 32993
MAX_ELEMENTS_VERTICES :: 33000
MAX_ELEMENTS_INDICES :: 33001
CLAMP_TO_EDGE :: 33071
TEXTURE_MIN_LOD :: 33082
TEXTURE_MAX_LOD :: 33083
TEXTURE_BASE_LEVEL :: 33084
TEXTURE_MAX_LEVEL :: 33085
LIGHT_MODEL_COLOR_CONTROL :: 33272
SINGLE_COLOR :: 33273
SEPARATE_SPECULAR_COLOR :: 33274
UNSIGNED_BYTE_2_3_3_REV :: 33634
UNSIGNED_SHORT_5_6_5 :: 33635
UNSIGNED_SHORT_5_6_5_REV :: 33636
UNSIGNED_SHORT_4_4_4_4_REV :: 33637
UNSIGNED_SHORT_1_5_5_5_REV :: 33638
UNSIGNED_INT_8_8_8_8_REV :: 33639
ALIASED_POINT_SIZE_RANGE :: 33901
ALIASED_LINE_WIDTH_RANGE :: 33902
MULTISAMPLE :: 32925
SAMPLE_ALPHA_TO_COVERAGE :: 32926
SAMPLE_ALPHA_TO_ONE :: 32927
SAMPLE_COVERAGE :: 32928
SAMPLE_BUFFERS :: 32936
SAMPLES :: 32937
SAMPLE_COVERAGE_VALUE :: 32938
SAMPLE_COVERAGE_INVERT :: 32939
CLAMP_TO_BORDER :: 33069
TEXTURE0 :: 33984
TEXTURE1 :: 33985
TEXTURE2 :: 33986
TEXTURE3 :: 33987
TEXTURE4 :: 33988
TEXTURE5 :: 33989
TEXTURE6 :: 33990
TEXTURE7 :: 33991
TEXTURE8 :: 33992
TEXTURE9 :: 33993
TEXTURE10 :: 33994
TEXTURE11 :: 33995
TEXTURE12 :: 33996
TEXTURE13 :: 33997
TEXTURE14 :: 33998
TEXTURE15 :: 33999
TEXTURE16 :: 34000
TEXTURE17 :: 34001
TEXTURE18 :: 34002
TEXTURE19 :: 34003
TEXTURE20 :: 34004
TEXTURE21 :: 34005
TEXTURE22 :: 34006
TEXTURE23 :: 34007
TEXTURE24 :: 34008
TEXTURE25 :: 34009
TEXTURE26 :: 34010
TEXTURE27 :: 34011
TEXTURE28 :: 34012
TEXTURE29 :: 34013
TEXTURE30 :: 34014
TEXTURE31 :: 34015
ACTIVE_TEXTURE :: 34016
CLIENT_ACTIVE_TEXTURE :: 34017
MAX_TEXTURE_UNITS :: 34018
TRANSPOSE_MODELVIEW_MATRIX :: 34019
TRANSPOSE_PROJECTION_MATRIX :: 34020
TRANSPOSE_TEXTURE_MATRIX :: 34021
TRANSPOSE_COLOR_MATRIX :: 34022
SUBTRACT :: 34023
COMPRESSED_ALPHA :: 34025
COMPRESSED_LUMINANCE :: 34026
COMPRESSED_LUMINANCE_ALPHA :: 34027
COMPRESSED_INTENSITY :: 34028
COMPRESSED_RGB :: 34029
COMPRESSED_RGBA :: 34030
TEXTURE_COMPRESSION_HINT :: 34031
NORMAL_MAP :: 34065
REFLECTION_MAP :: 34066
TEXTURE_CUBE_MAP :: 34067
TEXTURE_BINDING_CUBE_MAP :: 34068
TEXTURE_CUBE_MAP_POSITIVE_X :: 34069
TEXTURE_CUBE_MAP_NEGATIVE_X :: 34070
TEXTURE_CUBE_MAP_POSITIVE_Y :: 34071
TEXTURE_CUBE_MAP_NEGATIVE_Y :: 34072
TEXTURE_CUBE_MAP_POSITIVE_Z :: 34073
TEXTURE_CUBE_MAP_NEGATIVE_Z :: 34074
PROXY_TEXTURE_CUBE_MAP :: 34075
MAX_CUBE_MAP_TEXTURE_SIZE :: 34076
COMBINE :: 34160
COMBINE_RGB :: 34161
COMBINE_ALPHA :: 34162
RGB_SCALE :: 34163
ADD_SIGNED :: 34164
INTERPOLATE :: 34165
CONSTANT :: 34166
PRIMARY_COLOR :: 34167
PREVIOUS :: 34168
SOURCE0_RGB :: 34176
SOURCE1_RGB :: 34177
SOURCE2_RGB :: 34178
SOURCE0_ALPHA :: 34184
SOURCE1_ALPHA :: 34185
SOURCE2_ALPHA :: 34186
OPERAND0_RGB :: 34192
OPERAND1_RGB :: 34193
OPERAND2_RGB :: 34194
OPERAND0_ALPHA :: 34200
OPERAND1_ALPHA :: 34201
OPERAND2_ALPHA :: 34202
TEXTURE_COMPRESSED_IMAGE_SIZE :: 34464
TEXTURE_COMPRESSED :: 34465
NUM_COMPRESSED_TEXTURE_FORMATS :: 34466
COMPRESSED_TEXTURE_FORMATS :: 34467
DOT3_RGB :: 34478
DOT3_RGBA :: 34479
MULTISAMPLE_BIT :: 536870912
BLEND_DST_RGB :: 32968
BLEND_SRC_RGB :: 32969
BLEND_DST_ALPHA :: 32970
BLEND_SRC_ALPHA :: 32971
POINT_SIZE_MIN :: 33062
POINT_SIZE_MAX :: 33063
POINT_FADE_THRESHOLD_SIZE :: 33064
POINT_DISTANCE_ATTENUATION :: 33065
GENERATE_MIPMAP :: 33169
GENERATE_MIPMAP_HINT :: 33170
DEPTH_COMPONENT16 :: 33189
DEPTH_COMPONENT24 :: 33190
DEPTH_COMPONENT32 :: 33191
MIRRORED_REPEAT :: 33648
FOG_COORDINATE_SOURCE :: 33872
FOG_COORDINATE :: 33873
FRAGMENT_DEPTH :: 33874
CURRENT_FOG_COORDINATE :: 33875
FOG_COORDINATE_ARRAY_TYPE :: 33876
FOG_COORDINATE_ARRAY_STRIDE :: 33877
FOG_COORDINATE_ARRAY_POINTER :: 33878
FOG_COORDINATE_ARRAY :: 33879
COLOR_SUM :: 33880
CURRENT_SECONDARY_COLOR :: 33881
SECONDARY_COLOR_ARRAY_SIZE :: 33882
SECONDARY_COLOR_ARRAY_TYPE :: 33883
SECONDARY_COLOR_ARRAY_STRIDE :: 33884
SECONDARY_COLOR_ARRAY_POINTER :: 33885
SECONDARY_COLOR_ARRAY :: 33886
MAX_TEXTURE_LOD_BIAS :: 34045
TEXTURE_FILTER_CONTROL :: 34048
TEXTURE_LOD_BIAS :: 34049
INCR_WRAP :: 34055
DECR_WRAP :: 34056
TEXTURE_DEPTH_SIZE :: 34890
DEPTH_TEXTURE_MODE :: 34891
TEXTURE_COMPARE_MODE :: 34892
TEXTURE_COMPARE_FUNC :: 34893
COMPARE_R_TO_TEXTURE :: 34894
CURRENT_FOG_COORD :: 33875
FOG_COORD :: 33873
FOG_COORD_ARRAY :: 33879
FOG_COORD_ARRAY_BUFFER_BINDING :: 34973
FOG_COORD_ARRAY_POINTER :: 33878
FOG_COORD_ARRAY_STRIDE :: 33877
FOG_COORD_ARRAY_TYPE :: 33876
FOG_COORD_SRC :: 33872
SRC0_ALPHA :: 34184
SRC0_RGB :: 34176
SRC1_ALPHA :: 34185
SRC1_RGB :: 34177
SRC2_ALPHA :: 34186
SRC2_RGB :: 34178
BUFFER_SIZE :: 34660
BUFFER_USAGE :: 34661
QUERY_COUNTER_BITS :: 34916
CURRENT_QUERY :: 34917
QUERY_RESULT :: 34918
QUERY_RESULT_AVAILABLE :: 34919
ARRAY_BUFFER :: 34962
ELEMENT_ARRAY_BUFFER :: 34963
ARRAY_BUFFER_BINDING :: 34964
ELEMENT_ARRAY_BUFFER_BINDING :: 34965
VERTEX_ARRAY_BUFFER_BINDING :: 34966
NORMAL_ARRAY_BUFFER_BINDING :: 34967
COLOR_ARRAY_BUFFER_BINDING :: 34968
INDEX_ARRAY_BUFFER_BINDING :: 34969
TEXTURE_COORD_ARRAY_BUFFER_BINDING :: 34970
EDGE_FLAG_ARRAY_BUFFER_BINDING :: 34971
SECONDARY_COLOR_ARRAY_BUFFER_BINDING :: 34972
FOG_COORDINATE_ARRAY_BUFFER_BINDING :: 34973
WEIGHT_ARRAY_BUFFER_BINDING :: 34974
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING :: 34975
READ_ONLY :: 35000
WRITE_ONLY :: 35001
READ_WRITE :: 35002
BUFFER_ACCESS :: 35003
BUFFER_MAPPED :: 35004
BUFFER_MAP_POINTER :: 35005
STREAM_DRAW :: 35040
STREAM_READ :: 35041
STREAM_COPY :: 35042
STATIC_DRAW :: 35044
STATIC_READ :: 35045
STATIC_COPY :: 35046
DYNAMIC_DRAW :: 35048
DYNAMIC_READ :: 35049
DYNAMIC_COPY :: 35050
SAMPLES_PASSED :: 35092
BLEND_EQUATION_RGB :: 32777
VERTEX_ATTRIB_ARRAY_ENABLED :: 34338
VERTEX_ATTRIB_ARRAY_SIZE :: 34339
VERTEX_ATTRIB_ARRAY_STRIDE :: 34340
VERTEX_ATTRIB_ARRAY_TYPE :: 34341
CURRENT_VERTEX_ATTRIB :: 34342
VERTEX_PROGRAM_POINT_SIZE :: 34370
VERTEX_PROGRAM_TWO_SIDE :: 34371
VERTEX_ATTRIB_ARRAY_POINTER :: 34373
STENCIL_BACK_FUNC :: 34816
STENCIL_BACK_FAIL :: 34817
STENCIL_BACK_PASS_DEPTH_FAIL :: 34818
STENCIL_BACK_PASS_DEPTH_PASS :: 34819
MAX_DRAW_BUFFERS :: 34852
DRAW_BUFFER0 :: 34853
DRAW_BUFFER1 :: 34854
DRAW_BUFFER2 :: 34855
DRAW_BUFFER3 :: 34856
DRAW_BUFFER4 :: 34857
DRAW_BUFFER5 :: 34858
DRAW_BUFFER6 :: 34859
DRAW_BUFFER7 :: 34860
DRAW_BUFFER8 :: 34861
DRAW_BUFFER9 :: 34862
DRAW_BUFFER10 :: 34863
DRAW_BUFFER11 :: 34864
DRAW_BUFFER12 :: 34865
DRAW_BUFFER13 :: 34866
DRAW_BUFFER14 :: 34867
DRAW_BUFFER15 :: 34868
BLEND_EQUATION_ALPHA :: 34877
POINT_SPRITE :: 34913
COORD_REPLACE :: 34914
MAX_VERTEX_ATTRIBS :: 34921
VERTEX_ATTRIB_ARRAY_NORMALIZED :: 34922
MAX_TEXTURE_COORDS :: 34929
MAX_TEXTURE_IMAGE_UNITS :: 34930
FRAGMENT_SHADER :: 35632
VERTEX_SHADER :: 35633
MAX_FRAGMENT_UNIFORM_COMPONENTS :: 35657
MAX_VERTEX_UNIFORM_COMPONENTS :: 35658
MAX_VARYING_FLOATS :: 35659
MAX_VERTEX_TEXTURE_IMAGE_UNITS :: 35660
MAX_COMBINED_TEXTURE_IMAGE_UNITS :: 35661
SHADER_TYPE :: 35663
FLOAT_VEC2 :: 35664
FLOAT_VEC3 :: 35665
FLOAT_VEC4 :: 35666
INT_VEC2 :: 35667
INT_VEC3 :: 35668
INT_VEC4 :: 35669
BOOL :: 35670
BOOL_VEC2 :: 35671
BOOL_VEC3 :: 35672
BOOL_VEC4 :: 35673
FLOAT_MAT2 :: 35674
FLOAT_MAT3 :: 35675
FLOAT_MAT4 :: 35676
SAMPLER_1D :: 35677
SAMPLER_2D :: 35678
SAMPLER_3D :: 35679
SAMPLER_CUBE :: 35680
SAMPLER_1D_SHADOW :: 35681
SAMPLER_2D_SHADOW :: 35682
DELETE_STATUS :: 35712
COMPILE_STATUS :: 35713
LINK_STATUS :: 35714
VALIDATE_STATUS :: 35715
INFO_LOG_LENGTH :: 35716
ATTACHED_SHADERS :: 35717
ACTIVE_UNIFORMS :: 35718
ACTIVE_UNIFORM_MAX_LENGTH :: 35719
SHADER_SOURCE_LENGTH :: 35720
ACTIVE_ATTRIBUTES :: 35721
ACTIVE_ATTRIBUTE_MAX_LENGTH :: 35722
FRAGMENT_SHADER_DERIVATIVE_HINT :: 35723
SHADING_LANGUAGE_VERSION :: 35724
CURRENT_PROGRAM :: 35725
POINT_SPRITE_COORD_ORIGIN :: 36000
LOWER_LEFT :: 36001
UPPER_LEFT :: 36002
STENCIL_BACK_REF :: 36003
STENCIL_BACK_VALUE_MASK :: 36004
STENCIL_BACK_WRITEMASK :: 36005
CURRENT_RASTER_SECONDARY_COLOR :: 33887
PIXEL_PACK_BUFFER :: 35051
PIXEL_UNPACK_BUFFER :: 35052
PIXEL_PACK_BUFFER_BINDING :: 35053
PIXEL_UNPACK_BUFFER_BINDING :: 35055
FLOAT_MAT2x3 :: 35685
FLOAT_MAT2x4 :: 35686
FLOAT_MAT3x2 :: 35687
FLOAT_MAT3x4 :: 35688
FLOAT_MAT4x2 :: 35689
FLOAT_MAT4x3 :: 35690
SRGB :: 35904
SRGB8 :: 35905
SRGB_ALPHA :: 35906
SRGB8_ALPHA8 :: 35907
SLUMINANCE_ALPHA :: 35908
SLUMINANCE8_ALPHA8 :: 35909
SLUMINANCE :: 35910
SLUMINANCE8 :: 35911
COMPRESSED_SRGB :: 35912
COMPRESSED_SRGB_ALPHA :: 35913
COMPRESSED_SLUMINANCE :: 35914
COMPRESSED_SLUMINANCE_ALPHA :: 35915
CLIP_DISTANCE0 :: 12288
CLIP_DISTANCE1 :: 12289
CLIP_DISTANCE2 :: 12290
CLIP_DISTANCE3 :: 12291
CLIP_DISTANCE4 :: 12292
CLIP_DISTANCE5 :: 12293
COMPARE_REF_TO_TEXTURE :: 34894
MAX_CLIP_DISTANCES :: 3378
MAX_VARYING_COMPONENTS :: 35659
CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT :: 1
MAJOR_VERSION :: 33307
MINOR_VERSION :: 33308
NUM_EXTENSIONS :: 33309
CONTEXT_FLAGS :: 33310
DEPTH_BUFFER :: 33315
STENCIL_BUFFER :: 33316
RGBA32F :: 34836
RGB32F :: 34837
RGBA16F :: 34842
RGB16F :: 34843
VERTEX_ATTRIB_ARRAY_INTEGER :: 35069
MAX_ARRAY_TEXTURE_LAYERS :: 35071
MIN_PROGRAM_TEXEL_OFFSET :: 35076
MAX_PROGRAM_TEXEL_OFFSET :: 35077
CLAMP_VERTEX_COLOR :: 35098
CLAMP_FRAGMENT_COLOR :: 35099
CLAMP_READ_COLOR :: 35100
FIXED_ONLY :: 35101
TEXTURE_RED_TYPE :: 35856
TEXTURE_GREEN_TYPE :: 35857
TEXTURE_BLUE_TYPE :: 35858
TEXTURE_ALPHA_TYPE :: 35859
TEXTURE_LUMINANCE_TYPE :: 35860
TEXTURE_INTENSITY_TYPE :: 35861
TEXTURE_DEPTH_TYPE :: 35862
TEXTURE_1D_ARRAY :: 35864
PROXY_TEXTURE_1D_ARRAY :: 35865
TEXTURE_2D_ARRAY :: 35866
PROXY_TEXTURE_2D_ARRAY :: 35867
TEXTURE_BINDING_1D_ARRAY :: 35868
TEXTURE_BINDING_2D_ARRAY :: 35869
R11F_G11F_B10F :: 35898
UNSIGNED_INT_10F_11F_11F_REV :: 35899
RGB9_E5 :: 35901
UNSIGNED_INT_5_9_9_9_REV :: 35902
TEXTURE_SHARED_SIZE :: 35903
TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH :: 35958
TRANSFORM_FEEDBACK_BUFFER_MODE :: 35967
MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :: 35968
TRANSFORM_FEEDBACK_VARYINGS :: 35971
TRANSFORM_FEEDBACK_BUFFER_START :: 35972
TRANSFORM_FEEDBACK_BUFFER_SIZE :: 35973
PRIMITIVES_GENERATED :: 35975
TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN :: 35976
RASTERIZER_DISCARD :: 35977
MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :: 35978
MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :: 35979
INTERLEAVED_ATTRIBS :: 35980
SEPARATE_ATTRIBS :: 35981
TRANSFORM_FEEDBACK_BUFFER :: 35982
TRANSFORM_FEEDBACK_BUFFER_BINDING :: 35983
RGBA32UI :: 36208
RGB32UI :: 36209
RGBA16UI :: 36214
RGB16UI :: 36215
RGBA8UI :: 36220
RGB8UI :: 36221
RGBA32I :: 36226
RGB32I :: 36227
RGBA16I :: 36232
RGB16I :: 36233
RGBA8I :: 36238
RGB8I :: 36239
RED_INTEGER :: 36244
GREEN_INTEGER :: 36245
BLUE_INTEGER :: 36246
ALPHA_INTEGER :: 36247
RGB_INTEGER :: 36248
RGBA_INTEGER :: 36249
BGR_INTEGER :: 36250
BGRA_INTEGER :: 36251
SAMPLER_1D_ARRAY :: 36288
SAMPLER_2D_ARRAY :: 36289
SAMPLER_1D_ARRAY_SHADOW :: 36291
SAMPLER_2D_ARRAY_SHADOW :: 36292
SAMPLER_CUBE_SHADOW :: 36293
UNSIGNED_INT_VEC2 :: 36294
UNSIGNED_INT_VEC3 :: 36295
UNSIGNED_INT_VEC4 :: 36296
INT_SAMPLER_1D :: 36297
INT_SAMPLER_2D :: 36298
INT_SAMPLER_3D :: 36299
INT_SAMPLER_CUBE :: 36300
INT_SAMPLER_1D_ARRAY :: 36302
INT_SAMPLER_2D_ARRAY :: 36303
UNSIGNED_INT_SAMPLER_1D :: 36305
UNSIGNED_INT_SAMPLER_2D :: 36306
UNSIGNED_INT_SAMPLER_3D :: 36307
UNSIGNED_INT_SAMPLER_CUBE :: 36308
UNSIGNED_INT_SAMPLER_1D_ARRAY :: 36310
UNSIGNED_INT_SAMPLER_2D_ARRAY :: 36311
QUERY_WAIT :: 36371
QUERY_NO_WAIT :: 36372
QUERY_BY_REGION_WAIT :: 36373
QUERY_BY_REGION_NO_WAIT :: 36374
TEXTURE_RECTANGLE :: 34037
TEXTURE_BINDING_RECTANGLE :: 34038
PROXY_TEXTURE_RECTANGLE :: 34039
MAX_RECTANGLE_TEXTURE_SIZE :: 34040
SAMPLER_2D_RECT :: 35683
SAMPLER_2D_RECT_SHADOW :: 35684
TEXTURE_BUFFER :: 35882
MAX_TEXTURE_BUFFER_SIZE :: 35883
TEXTURE_BINDING_BUFFER :: 35884
TEXTURE_BUFFER_DATA_STORE_BINDING :: 35885
TEXTURE_BUFFER_FORMAT :: 35886
SAMPLER_BUFFER :: 36290
INT_SAMPLER_2D_RECT :: 36301
INT_SAMPLER_BUFFER :: 36304
UNSIGNED_INT_SAMPLER_2D_RECT :: 36309
UNSIGNED_INT_SAMPLER_BUFFER :: 36312
RED_SNORM :: 36752
RG_SNORM :: 36753
RGB_SNORM :: 36754
RGBA_SNORM :: 36755
R8_SNORM :: 36756
RG8_SNORM :: 36757
RGB8_SNORM :: 36758
RGBA8_SNORM :: 36759
R16_SNORM :: 36760
RG16_SNORM :: 36761
RGB16_SNORM :: 36762
RGBA16_SNORM :: 36763
SIGNED_NORMALIZED :: 36764
PRIMITIVE_RESTART :: 36765
PRIMITIVE_RESTART_INDEX :: 36766
BUFFER_ACCESS_FLAGS :: 37151
BUFFER_MAP_LENGTH :: 37152
BUFFER_MAP_OFFSET :: 37153
CONTEXT_CORE_PROFILE_BIT :: 1
CONTEXT_COMPATIBILITY_PROFILE_BIT :: 2
LINES_ADJACENCY :: 10
LINE_STRIP_ADJACENCY :: 11
TRIANGLES_ADJACENCY :: 12
TRIANGLE_STRIP_ADJACENCY :: 13
PROGRAM_POINT_SIZE :: 34370
GEOMETRY_VERTICES_OUT :: 35094
GEOMETRY_INPUT_TYPE :: 35095
GEOMETRY_OUTPUT_TYPE :: 35096
MAX_GEOMETRY_TEXTURE_IMAGE_UNITS :: 35881
FRAMEBUFFER_ATTACHMENT_LAYERED :: 36263
FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS :: 36264
GEOMETRY_SHADER :: 36313
MAX_GEOMETRY_UNIFORM_COMPONENTS :: 36319
MAX_GEOMETRY_OUTPUT_VERTICES :: 36320
MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS :: 36321
MAX_VERTEX_OUTPUT_COMPONENTS :: 37154
MAX_GEOMETRY_INPUT_COMPONENTS :: 37155
MAX_GEOMETRY_OUTPUT_COMPONENTS :: 37156
MAX_FRAGMENT_INPUT_COMPONENTS :: 37157
CONTEXT_PROFILE_MASK :: 37158
VERTEX_ATTRIB_ARRAY_DIVISOR :: 35070
RGB10_A2UI :: 36975
SAMPLE_SHADING :: 35894
MIN_SAMPLE_SHADING_VALUE :: 35895
MIN_PROGRAM_TEXTURE_GATHER_OFFSET :: 36446
MAX_PROGRAM_TEXTURE_GATHER_OFFSET :: 36447
MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS :: 36767
TEXTURE_CUBE_MAP_ARRAY :: 36873
TEXTURE_BINDING_CUBE_MAP_ARRAY :: 36874
PROXY_TEXTURE_CUBE_MAP_ARRAY :: 36875
SAMPLER_CUBE_MAP_ARRAY :: 36876
SAMPLER_CUBE_MAP_ARRAY_SHADOW :: 36877
INT_SAMPLER_CUBE_MAP_ARRAY :: 36878
UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY :: 36879
TRANSFORM_FEEDBACK_PAUSED :: 36387
TRANSFORM_FEEDBACK_ACTIVE :: 36388
COMPRESSED_RGBA_BPTC_UNORM :: 36492
COMPRESSED_SRGB_ALPHA_BPTC_UNORM :: 36493
COMPRESSED_RGB_BPTC_SIGNED_FLOAT :: 36494
COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT :: 36495
COPY_READ_BUFFER_BINDING :: 36662
COPY_WRITE_BUFFER_BINDING :: 36663
NUM_SHADING_LANGUAGE_VERSIONS :: 33513
VERTEX_ATTRIB_ARRAY_LONG :: 34638
PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED :: 33313
MAX_VERTEX_ATTRIB_STRIDE :: 33509
TEXTURE_BUFFER_BINDING :: 35882
CONTEXT_FLAG_ROBUST_ACCESS_BIT :: 4
CONTEXT_FLAG_NO_ERROR_BIT :: 8
PARAMETER_BUFFER :: 33006
PARAMETER_BUFFER_BINDING :: 33007
TRANSFORM_FEEDBACK_OVERFLOW :: 33516
TRANSFORM_FEEDBACK_STREAM_OVERFLOW :: 33517
VERTICES_SUBMITTED :: 33518
PRIMITIVES_SUBMITTED :: 33519
VERTEX_SHADER_INVOCATIONS :: 33520
TESS_CONTROL_SHADER_PATCHES :: 33521
TESS_EVALUATION_SHADER_INVOCATIONS :: 33522
GEOMETRY_SHADER_PRIMITIVES_EMITTED :: 33523
FRAGMENT_SHADER_INVOCATIONS :: 33524
COMPUTE_SHADER_INVOCATIONS :: 33525
CLIPPING_INPUT_PRIMITIVES :: 33526
CLIPPING_OUTPUT_PRIMITIVES :: 33527
TEXTURE_MAX_ANISOTROPY :: 34046
MAX_TEXTURE_MAX_ANISOTROPY :: 34047
POLYGON_OFFSET_CLAMP :: 36379
SHADER_BINARY_FORMAT_SPIR_V :: 38225
SPIR_V_BINARY :: 38226
SPIR_V_EXTENSIONS :: 38227
NUM_SPIR_V_EXTENSIONS :: 38228
GL_3DFX_multisample :: 1
MULTISAMPLE_3DFX :: 34482
SAMPLE_BUFFERS_3DFX :: 34483
SAMPLES_3DFX :: 34484
MULTISAMPLE_BIT_3DFX :: 536870912
GL_3DFX_tbuffer :: 1
GL_3DFX_texture_compression_FXT1 :: 1
COMPRESSED_RGB_FXT1_3DFX :: 34480
COMPRESSED_RGBA_FXT1_3DFX :: 34481
AMD_blend_minmax_factor :: 1
FACTOR_MIN_AMD :: 36892
FACTOR_MAX_AMD :: 36893
AMD_compressed_3DC_texture :: 1
GL_3DC_X_AMD :: 34809
GL_3DC_XY_AMD :: 34810
AMD_compressed_ATC_texture :: 1
ATC_RGBA_INTERPOLATED_ALPHA_AMD :: 34798
ATC_RGB_AMD :: 35986
ATC_RGBA_EXPLICIT_ALPHA_AMD :: 35987
AMD_conservative_depth :: 1
AMD_debug_output :: 1
MAX_DEBUG_MESSAGE_LENGTH_AMD :: 37187
MAX_DEBUG_LOGGED_MESSAGES_AMD :: 37188
DEBUG_LOGGED_MESSAGES_AMD :: 37189
DEBUG_SEVERITY_HIGH_AMD :: 37190
DEBUG_SEVERITY_MEDIUM_AMD :: 37191
DEBUG_SEVERITY_LOW_AMD :: 37192
DEBUG_CATEGORY_API_ERROR_AMD :: 37193
DEBUG_CATEGORY_WINDOW_SYSTEM_AMD :: 37194
DEBUG_CATEGORY_DEPRECATION_AMD :: 37195
DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD :: 37196
DEBUG_CATEGORY_PERFORMANCE_AMD :: 37197
DEBUG_CATEGORY_SHADER_COMPILER_AMD :: 37198
DEBUG_CATEGORY_APPLICATION_AMD :: 37199
DEBUG_CATEGORY_OTHER_AMD :: 37200
AMD_depth_clamp_separate :: 1
DEPTH_CLAMP_NEAR_AMD :: 36894
DEPTH_CLAMP_FAR_AMD :: 36895
AMD_draw_buffers_blend :: 1
AMD_framebuffer_multisample_advanced :: 1
RENDERBUFFER_STORAGE_SAMPLES_AMD :: 37298
MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD :: 37299
MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD :: 37300
MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD :: 37301
NUM_SUPPORTED_MULTISAMPLE_MODES_AMD :: 37302
SUPPORTED_MULTISAMPLE_MODES_AMD :: 37303
AMD_framebuffer_sample_positions :: 1
SUBSAMPLE_DISTANCE_AMD :: 34879
PIXELS_PER_SAMPLE_PATTERN_X_AMD :: 37294
PIXELS_PER_SAMPLE_PATTERN_Y_AMD :: 37295
ALL_PIXELS_AMD :: 4294967295
AMD_gcn_shader :: 1
AMD_gpu_shader_half_float :: 1
FLOAT16_NV :: 36856
FLOAT16_VEC2_NV :: 36857
FLOAT16_VEC3_NV :: 36858
FLOAT16_VEC4_NV :: 36859
FLOAT16_MAT2_AMD :: 37317
FLOAT16_MAT3_AMD :: 37318
FLOAT16_MAT4_AMD :: 37319
FLOAT16_MAT2x3_AMD :: 37320
FLOAT16_MAT2x4_AMD :: 37321
FLOAT16_MAT3x2_AMD :: 37322
FLOAT16_MAT3x4_AMD :: 37323
FLOAT16_MAT4x2_AMD :: 37324
FLOAT16_MAT4x3_AMD :: 37325
AMD_gpu_shader_half_float_fetch :: 1
FLOAT16_SAMPLER_1D_AMD :: 37326
FLOAT16_SAMPLER_2D_AMD :: 37327
FLOAT16_SAMPLER_3D_AMD :: 37328
FLOAT16_SAMPLER_CUBE_AMD :: 37329
FLOAT16_SAMPLER_2D_RECT_AMD :: 37330
FLOAT16_SAMPLER_1D_ARRAY_AMD :: 37331
FLOAT16_SAMPLER_2D_ARRAY_AMD :: 37332
FLOAT16_SAMPLER_CUBE_MAP_ARRAY_AMD :: 37333
FLOAT16_SAMPLER_BUFFER_AMD :: 37334
FLOAT16_SAMPLER_2D_MULTISAMPLE_AMD :: 37335
FLOAT16_SAMPLER_2D_MULTISAMPLE_ARRAY_AMD :: 37336
FLOAT16_SAMPLER_1D_SHADOW_AMD :: 37337
FLOAT16_SAMPLER_2D_SHADOW_AMD :: 37338
FLOAT16_SAMPLER_2D_RECT_SHADOW_AMD :: 37339
FLOAT16_SAMPLER_1D_ARRAY_SHADOW_AMD :: 37340
FLOAT16_SAMPLER_2D_ARRAY_SHADOW_AMD :: 37341
FLOAT16_SAMPLER_CUBE_SHADOW_AMD :: 37342
FLOAT16_SAMPLER_CUBE_MAP_ARRAY_SHADOW_AMD :: 37343
FLOAT16_IMAGE_1D_AMD :: 37344
FLOAT16_IMAGE_2D_AMD :: 37345
FLOAT16_IMAGE_3D_AMD :: 37346
FLOAT16_IMAGE_2D_RECT_AMD :: 37347
FLOAT16_IMAGE_CUBE_AMD :: 37348
FLOAT16_IMAGE_1D_ARRAY_AMD :: 37349
FLOAT16_IMAGE_2D_ARRAY_AMD :: 37350
FLOAT16_IMAGE_CUBE_MAP_ARRAY_AMD :: 37351
FLOAT16_IMAGE_BUFFER_AMD :: 37352
FLOAT16_IMAGE_2D_MULTISAMPLE_AMD :: 37353
FLOAT16_IMAGE_2D_MULTISAMPLE_ARRAY_AMD :: 37354
AMD_gpu_shader_int16 :: 1
AMD_gpu_shader_int64 :: 1
AMD_interleaved_elements :: 1
RG8UI :: 33336
RG16UI :: 33338
VERTEX_ELEMENT_SWIZZLE_AMD :: 37284
VERTEX_ID_SWIZZLE_AMD :: 37285
AMD_multi_draw_indirect :: 1
AMD_name_gen_delete :: 1
DATA_BUFFER_AMD :: 37201
PERFORMANCE_MONITOR_AMD :: 37202
QUERY_OBJECT_AMD :: 37203
VERTEX_ARRAY_OBJECT_AMD :: 37204
SAMPLER_OBJECT_AMD :: 37205
AMD_occlusion_query_event :: 1
QUERY_DEPTH_PASS_EVENT_BIT_AMD :: 1
QUERY_DEPTH_FAIL_EVENT_BIT_AMD :: 2
QUERY_STENCIL_FAIL_EVENT_BIT_AMD :: 4
QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD :: 8
OCCLUSION_QUERY_EVENT_MASK_AMD :: 34639
QUERY_ALL_EVENT_BITS_AMD :: 4294967295
AMD_performance_monitor :: 1
COUNTER_TYPE_AMD :: 35776
COUNTER_RANGE_AMD :: 35777
UNSIGNED_INT64_AMD :: 35778
PERCENTAGE_AMD :: 35779
PERFMON_RESULT_AVAILABLE_AMD :: 35780
PERFMON_RESULT_SIZE_AMD :: 35781
PERFMON_RESULT_AMD :: 35782
AMD_pinned_memory :: 1
EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD :: 37216
AMD_program_binary_Z400 :: 1
Z400_BINARY_AMD :: 34624
AMD_query_buffer_object :: 1
QUERY_BUFFER_AMD :: 37266
QUERY_BUFFER_BINDING_AMD :: 37267
QUERY_RESULT_NO_WAIT_AMD :: 37268
AMD_sample_positions :: 1
AMD_seamless_cubemap_per_texture :: 1
TEXTURE_CUBE_MAP_SEAMLESS :: 34895
AMD_shader_atomic_counter_ops :: 1
AMD_shader_ballot :: 1
AMD_shader_explicit_vertex_parameter :: 1
AMD_shader_image_load_store_lod :: 1
AMD_shader_stencil_export :: 1
AMD_shader_stencil_value_export :: 1
AMD_shader_trinary_minmax :: 1
AMD_sparse_texture :: 1
TEXTURE_STORAGE_SPARSE_BIT_AMD :: 1
VIRTUAL_PAGE_SIZE_X_AMD :: 37269
VIRTUAL_PAGE_SIZE_Y_AMD :: 37270
VIRTUAL_PAGE_SIZE_Z_AMD :: 37271
MAX_SPARSE_TEXTURE_SIZE_AMD :: 37272
MAX_SPARSE_3D_TEXTURE_SIZE_AMD :: 37273
MAX_SPARSE_ARRAY_TEXTURE_LAYERS :: 37274
MIN_SPARSE_LEVEL_AMD :: 37275
MIN_LOD_WARNING_AMD :: 37276
AMD_stencil_operation_extended :: 1
SET_AMD :: 34634
REPLACE_VALUE_AMD :: 34635
STENCIL_OP_VALUE_AMD :: 34636
STENCIL_BACK_OP_VALUE_AMD :: 34637
AMD_texture_gather_bias_lod :: 1
AMD_texture_texture4 :: 1
AMD_transform_feedback3_lines_triangles :: 1
AMD_transform_feedback4 :: 1
STREAM_RASTERIZATION_AMD :: 37280
AMD_vertex_shader_layer :: 1
AMD_vertex_shader_tessellator :: 1
SAMPLER_BUFFER_AMD :: 36865
INT_SAMPLER_BUFFER_AMD :: 36866
UNSIGNED_INT_SAMPLER_BUFFER_AMD :: 36867
TESSELLATION_MODE_AMD :: 36868
TESSELLATION_FACTOR_AMD :: 36869
DISCRETE_AMD :: 36870
CONTINUOUS_AMD :: 36871
AMD_vertex_shader_viewport_index :: 1
ANDROID_extension_pack_es31a :: 1
ANGLE_depth_texture :: 1
ANGLE_framebuffer_blit :: 1
DRAW_FRAMEBUFFER_BINDING_ANGLE :: 36006
READ_FRAMEBUFFER_ANGLE :: 36008
DRAW_FRAMEBUFFER_ANGLE :: 36009
READ_FRAMEBUFFER_BINDING_ANGLE :: 36010
ANGLE_framebuffer_multisample :: 1
RENDERBUFFER_SAMPLES_ANGLE :: 36011
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE :: 36182
MAX_SAMPLES_ANGLE :: 36183
ANGLE_instanced_arrays :: 1
VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE :: 35070
ANGLE_pack_reverse_row_order :: 1
PACK_REVERSE_ROW_ORDER_ANGLE :: 37796
ANGLE_program_binary :: 1
PROGRAM_BINARY_ANGLE :: 37798
ANGLE_texture_compression_dxt1 :: 1
COMPRESSED_RGB_S3TC_DXT1_ANGLE :: 33776
COMPRESSED_RGBA_S3TC_DXT1_ANGLE :: 33777
COMPRESSED_RGBA_S3TC_DXT3_ANGLE :: 33778
COMPRESSED_RGBA_S3TC_DXT5_ANGLE :: 33779
ANGLE_texture_compression_dxt3 :: 1
ANGLE_texture_compression_dxt5 :: 1
ANGLE_texture_usage :: 1
TEXTURE_USAGE_ANGLE :: 37794
FRAMEBUFFER_ATTACHMENT_ANGLE :: 37795
ANGLE_timer_query :: 1
QUERY_COUNTER_BITS_ANGLE :: 34916
CURRENT_QUERY_ANGLE :: 34917
QUERY_RESULT_ANGLE :: 34918
QUERY_RESULT_AVAILABLE_ANGLE :: 34919
TIME_ELAPSED_ANGLE :: 35007
TIMESTAMP_ANGLE :: 36392
ANGLE_translated_shader_source :: 1
TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE :: 37792
APPLE_aux_depth_stencil :: 1
AUX_DEPTH_STENCIL_APPLE :: 35348
APPLE_client_storage :: 1
UNPACK_CLIENT_STORAGE_APPLE :: 34226
APPLE_clip_distance :: 1
MAX_CLIP_DISTANCES_APPLE :: 3378
CLIP_DISTANCE0_APPLE :: 12288
CLIP_DISTANCE1_APPLE :: 12289
CLIP_DISTANCE2_APPLE :: 12290
CLIP_DISTANCE3_APPLE :: 12291
CLIP_DISTANCE4_APPLE :: 12292
CLIP_DISTANCE5_APPLE :: 12293
CLIP_DISTANCE6_APPLE :: 12294
CLIP_DISTANCE7_APPLE :: 12295
APPLE_color_buffer_packed_float :: 1
APPLE_copy_texture_levels :: 1
APPLE_element_array :: 1
ELEMENT_ARRAY_APPLE :: 35340
ELEMENT_ARRAY_TYPE_APPLE :: 35341
ELEMENT_ARRAY_POINTER_APPLE :: 35342
APPLE_fence :: 1
DRAW_PIXELS_APPLE :: 35338
FENCE_APPLE :: 35339
APPLE_float_pixels :: 1
HALF_APPLE :: 5131
RGBA_FLOAT32_APPLE :: 34836
RGB_FLOAT32_APPLE :: 34837
ALPHA_FLOAT32_APPLE :: 34838
INTENSITY_FLOAT32_APPLE :: 34839
LUMINANCE_FLOAT32_APPLE :: 34840
LUMINANCE_ALPHA_FLOAT32_APPLE :: 34841
RGBA_FLOAT16_APPLE :: 34842
RGB_FLOAT16_APPLE :: 34843
ALPHA_FLOAT16_APPLE :: 34844
INTENSITY_FLOAT16_APPLE :: 34845
LUMINANCE_FLOAT16_APPLE :: 34846
LUMINANCE_ALPHA_FLOAT16_APPLE :: 34847
COLOR_FLOAT_APPLE :: 35343
APPLE_flush_buffer_range :: 1
BUFFER_SERIALIZED_MODIFY_APPLE :: 35346
BUFFER_FLUSHING_UNMAP_APPLE :: 35347
APPLE_framebuffer_multisample :: 1
DRAW_FRAMEBUFFER_BINDING_APPLE :: 36006
READ_FRAMEBUFFER_APPLE :: 36008
DRAW_FRAMEBUFFER_APPLE :: 36009
READ_FRAMEBUFFER_BINDING_APPLE :: 36010
RENDERBUFFER_SAMPLES_APPLE :: 36011
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE :: 36182
MAX_SAMPLES_APPLE :: 36183
APPLE_object_purgeable :: 1
BUFFER_OBJECT_APPLE :: 34227
RELEASED_APPLE :: 35353
VOLATILE_APPLE :: 35354
RETAINED_APPLE :: 35355
UNDEFINED_APPLE :: 35356
PURGEABLE_APPLE :: 35357
APPLE_pixel_buffer :: 1
MIN_PBUFFER_VIEWPORT_DIMS_APPLE :: 35344
APPLE_rgb_422 :: 1
UNSIGNED_SHORT_8_8_APPLE :: 34234
UNSIGNED_SHORT_8_8_REV_APPLE :: 34235
RGB_422_APPLE :: 35359
RGB_RAW_422_APPLE :: 35409
APPLE_row_bytes :: 1
PACK_ROW_BYTES_APPLE :: 35349
UNPACK_ROW_BYTES_APPLE :: 35350
APPLE_specular_vector :: 1
LIGHT_MODEL_SPECULAR_VECTOR_APPLE :: 34224
APPLE_sync :: 1
SYNC_FLUSH_COMMANDS_BIT_APPLE :: 1
SYNC_OBJECT_APPLE :: 35411
MAX_SERVER_WAIT_TIMEOUT_APPLE :: 37137
OBJECT_TYPE_APPLE :: 37138
SYNC_CONDITION_APPLE :: 37139
SYNC_STATUS_APPLE :: 37140
SYNC_FLAGS_APPLE :: 37141
SYNC_FENCE_APPLE :: 37142
SYNC_GPU_COMMANDS_COMPLETE_APPLE :: 37143
UNSIGNALED_APPLE :: 37144
SIGNALED_APPLE :: 37145
ALREADY_SIGNALED_APPLE :: 37146
TIMEOUT_EXPIRED_APPLE :: 37147
CONDITION_SATISFIED_APPLE :: 37148
WAIT_FAILED_APPLE :: 37149
TIMEOUT_IGNORED_APPLE :: `0xFFFFFFFFFFFFFFFFull`
APPLE_texture_2D_limited_npot :: 1
APPLE_texture_format_BGRA8888 :: 1
BGRA_EXT :: 32993
BGRA8_EXT :: 37793
APPLE_texture_max_level :: 1
TEXTURE_MAX_LEVEL_APPLE :: 33085
APPLE_texture_packed_float :: 1
R11F_G11F_B10F_APPLE :: 35898
UNSIGNED_INT_10F_11F_11F_REV_APPLE :: 35899
RGB9_E5_APPLE :: 35901
UNSIGNED_INT_5_9_9_9_REV_APPLE :: 35902
APPLE_texture_range :: 1
TEXTURE_RANGE_LENGTH_APPLE :: 34231
TEXTURE_RANGE_POINTER_APPLE :: 34232
TEXTURE_STORAGE_HINT_APPLE :: 34236
STORAGE_PRIVATE_APPLE :: 34237
STORAGE_CACHED_APPLE :: 34238
STORAGE_SHARED_APPLE :: 34239
APPLE_transform_hint :: 1
TRANSFORM_HINT_APPLE :: 34225
APPLE_vertex_array_object :: 1
VERTEX_ARRAY_BINDING_APPLE :: 34229
APPLE_vertex_array_range :: 1
VERTEX_ARRAY_RANGE_APPLE :: 34077
VERTEX_ARRAY_RANGE_LENGTH_APPLE :: 34078
VERTEX_ARRAY_STORAGE_HINT_APPLE :: 34079
MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE :: 34080
VERTEX_ARRAY_RANGE_POINTER_APPLE :: 34081
STORAGE_CLIENT_APPLE :: 34228
APPLE_vertex_program_evaluators :: 1
VERTEX_ATTRIB_MAP1_APPLE :: 35328
VERTEX_ATTRIB_MAP2_APPLE :: 35329
VERTEX_ATTRIB_MAP1_SIZE_APPLE :: 35330
VERTEX_ATTRIB_MAP1_COEFF_APPLE :: 35331
VERTEX_ATTRIB_MAP1_ORDER_APPLE :: 35332
VERTEX_ATTRIB_MAP1_DOMAIN_APPLE :: 35333
VERTEX_ATTRIB_MAP2_SIZE_APPLE :: 35334
VERTEX_ATTRIB_MAP2_COEFF_APPLE :: 35335
VERTEX_ATTRIB_MAP2_ORDER_APPLE :: 35336
VERTEX_ATTRIB_MAP2_DOMAIN_APPLE :: 35337
APPLE_ycbcr_422 :: 1
YCBCR_422_APPLE :: 34233
ARB_ES2_compatibility :: 1
FIXED :: 5132
IMPLEMENTATION_COLOR_READ_TYPE :: 35738
IMPLEMENTATION_COLOR_READ_FORMAT :: 35739
RGB565 :: 36194
LOW_FLOAT :: 36336
MEDIUM_FLOAT :: 36337
HIGH_FLOAT :: 36338
LOW_INT :: 36339
MEDIUM_INT :: 36340
HIGH_INT :: 36341
SHADER_BINARY_FORMATS :: 36344
NUM_SHADER_BINARY_FORMATS :: 36345
SHADER_COMPILER :: 36346
MAX_VERTEX_UNIFORM_VECTORS :: 36347
MAX_VARYING_VECTORS :: 36348
MAX_FRAGMENT_UNIFORM_VECTORS :: 36349
ARB_ES3_1_compatibility :: 1
ARB_ES3_2_compatibility :: 1
PRIMITIVE_BOUNDING_BOX_ARB :: 37566
MULTISAMPLE_LINE_WIDTH_RANGE_ARB :: 37761
MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB :: 37762
ARB_ES3_compatibility :: 1
TEXTURE_IMMUTABLE_LEVELS :: 33503
PRIMITIVE_RESTART_FIXED_INDEX :: 36201
ANY_SAMPLES_PASSED_CONSERVATIVE :: 36202
MAX_ELEMENT_INDEX :: 36203
COMPRESSED_R11_EAC :: 37488
COMPRESSED_SIGNED_R11_EAC :: 37489
COMPRESSED_RG11_EAC :: 37490
COMPRESSED_SIGNED_RG11_EAC :: 37491
COMPRESSED_RGB8_ETC2 :: 37492
COMPRESSED_SRGB8_ETC2 :: 37493
COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: 37494
COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: 37495
COMPRESSED_RGBA8_ETC2_EAC :: 37496
COMPRESSED_SRGB8_ALPHA8_ETC2_EAC :: 37497
ARB_arrays_of_arrays :: 1
ARB_base_instance :: 1
ARB_bindless_texture :: 1
UNSIGNED_INT64_ARB :: 5135
ARB_blend_func_extended :: 1
SRC1_COLOR :: 35065
ONE_MINUS_SRC1_COLOR :: 35066
ONE_MINUS_SRC1_ALPHA :: 35067
MAX_DUAL_SOURCE_DRAW_BUFFERS :: 35068
ARB_buffer_storage :: 1
MAP_READ_BIT :: 1
MAP_WRITE_BIT :: 2
MAP_PERSISTENT_BIT :: 64
MAP_COHERENT_BIT :: 128
DYNAMIC_STORAGE_BIT :: 256
CLIENT_STORAGE_BIT :: 512
CLIENT_MAPPED_BUFFER_BARRIER_BIT :: 16384
BUFFER_IMMUTABLE_STORAGE :: 33311
BUFFER_STORAGE_FLAGS :: 33312
ARB_cl_event :: 1
SYNC_CL_EVENT_ARB :: 33344
SYNC_CL_EVENT_COMPLETE_ARB :: 33345
ARB_clear_buffer_object :: 1
ARB_clear_texture :: 1
CLEAR_TEXTURE :: 37733
ARB_clip_control :: 1
CLIP_ORIGIN :: 37724
CLIP_DEPTH_MODE :: 37725
NEGATIVE_ONE_TO_ONE :: 37726
ZERO_TO_ONE :: 37727
ARB_color_buffer_float :: 1
RGBA_FLOAT_MODE_ARB :: 34848
CLAMP_VERTEX_COLOR_ARB :: 35098
CLAMP_FRAGMENT_COLOR_ARB :: 35099
CLAMP_READ_COLOR_ARB :: 35100
FIXED_ONLY_ARB :: 35101
ARB_compatibility :: 1
ARB_compressed_texture_pixel_storage :: 1
UNPACK_COMPRESSED_BLOCK_WIDTH :: 37159
UNPACK_COMPRESSED_BLOCK_HEIGHT :: 37160
UNPACK_COMPRESSED_BLOCK_DEPTH :: 37161
UNPACK_COMPRESSED_BLOCK_SIZE :: 37162
PACK_COMPRESSED_BLOCK_WIDTH :: 37163
PACK_COMPRESSED_BLOCK_HEIGHT :: 37164
PACK_COMPRESSED_BLOCK_DEPTH :: 37165
PACK_COMPRESSED_BLOCK_SIZE :: 37166
ARB_compute_shader :: 1
COMPUTE_SHADER_BIT :: 32
MAX_COMPUTE_SHARED_MEMORY_SIZE :: 33378
MAX_COMPUTE_UNIFORM_COMPONENTS :: 33379
MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS :: 33380
MAX_COMPUTE_ATOMIC_COUNTERS :: 33381
MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS :: 33382
COMPUTE_WORK_GROUP_SIZE :: 33383
MAX_COMPUTE_WORK_GROUP_INVOCATIONS :: 37099
UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER :: 37100
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER :: 37101
DISPATCH_INDIRECT_BUFFER :: 37102
DISPATCH_INDIRECT_BUFFER_BINDING :: 37103
COMPUTE_SHADER :: 37305
MAX_COMPUTE_UNIFORM_BLOCKS :: 37307
MAX_COMPUTE_TEXTURE_IMAGE_UNITS :: 37308
MAX_COMPUTE_IMAGE_UNIFORMS :: 37309
MAX_COMPUTE_WORK_GROUP_COUNT :: 37310
MAX_COMPUTE_WORK_GROUP_SIZE :: 37311
ARB_compute_variable_group_size :: 1
MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB :: 37099
MAX_COMPUTE_FIXED_GROUP_SIZE_ARB :: 37311
MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB :: 37700
MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB :: 37701
ARB_conditional_render_inverted :: 1
QUERY_WAIT_INVERTED :: 36375
QUERY_NO_WAIT_INVERTED :: 36376
QUERY_BY_REGION_WAIT_INVERTED :: 36377
QUERY_BY_REGION_NO_WAIT_INVERTED :: 36378
ARB_conservative_depth :: 1
ARB_copy_buffer :: 1
COPY_READ_BUFFER :: 36662
COPY_WRITE_BUFFER :: 36663
ARB_copy_image :: 1
ARB_cull_distance :: 1
MAX_CULL_DISTANCES :: 33529
MAX_COMBINED_CLIP_AND_CULL_DISTANCES :: 33530
ARB_debug_output :: 1
DEBUG_OUTPUT_SYNCHRONOUS_ARB :: 33346
DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB :: 33347
DEBUG_CALLBACK_FUNCTION_ARB :: 33348
DEBUG_CALLBACK_USER_PARAM_ARB :: 33349
DEBUG_SOURCE_API_ARB :: 33350
DEBUG_SOURCE_WINDOW_SYSTEM_ARB :: 33351
DEBUG_SOURCE_SHADER_COMPILER_ARB :: 33352
DEBUG_SOURCE_THIRD_PARTY_ARB :: 33353
DEBUG_SOURCE_APPLICATION_ARB :: 33354
DEBUG_SOURCE_OTHER_ARB :: 33355
DEBUG_TYPE_ERROR_ARB :: 33356
DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB :: 33357
DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB :: 33358
DEBUG_TYPE_PORTABILITY_ARB :: 33359
DEBUG_TYPE_PERFORMANCE_ARB :: 33360
DEBUG_TYPE_OTHER_ARB :: 33361
MAX_DEBUG_MESSAGE_LENGTH_ARB :: 37187
MAX_DEBUG_LOGGED_MESSAGES_ARB :: 37188
DEBUG_LOGGED_MESSAGES_ARB :: 37189
DEBUG_SEVERITY_HIGH_ARB :: 37190
DEBUG_SEVERITY_MEDIUM_ARB :: 37191
DEBUG_SEVERITY_LOW_ARB :: 37192
ARB_depth_buffer_float :: 1
DEPTH_COMPONENT32F :: 36012
DEPTH32F_STENCIL8 :: 36013
FLOAT_32_UNSIGNED_INT_24_8_REV :: 36269
ARB_depth_clamp :: 1
DEPTH_CLAMP :: 34383
ARB_depth_texture :: 1
DEPTH_COMPONENT16_ARB :: 33189
DEPTH_COMPONENT24_ARB :: 33190
DEPTH_COMPONENT32_ARB :: 33191
TEXTURE_DEPTH_SIZE_ARB :: 34890
DEPTH_TEXTURE_MODE_ARB :: 34891
ARB_derivative_control :: 1
ARB_direct_state_access :: 1
TEXTURE_TARGET :: 4102
QUERY_TARGET :: 33514
ARB_draw_buffers :: 1
MAX_DRAW_BUFFERS_ARB :: 34852
DRAW_BUFFER0_ARB :: 34853
DRAW_BUFFER1_ARB :: 34854
DRAW_BUFFER2_ARB :: 34855
DRAW_BUFFER3_ARB :: 34856
DRAW_BUFFER4_ARB :: 34857
DRAW_BUFFER5_ARB :: 34858
DRAW_BUFFER6_ARB :: 34859
DRAW_BUFFER7_ARB :: 34860
DRAW_BUFFER8_ARB :: 34861
DRAW_BUFFER9_ARB :: 34862
DRAW_BUFFER10_ARB :: 34863
DRAW_BUFFER11_ARB :: 34864
DRAW_BUFFER12_ARB :: 34865
DRAW_BUFFER13_ARB :: 34866
DRAW_BUFFER14_ARB :: 34867
DRAW_BUFFER15_ARB :: 34868
ARB_draw_buffers_blend :: 1
ARB_draw_elements_base_vertex :: 1
ARB_draw_indirect :: 1
DRAW_INDIRECT_BUFFER :: 36671
DRAW_INDIRECT_BUFFER_BINDING :: 36675
ARB_draw_instanced :: 1
ARB_enhanced_layouts :: 1
LOCATION_COMPONENT :: 37706
TRANSFORM_FEEDBACK_BUFFER_INDEX :: 37707
TRANSFORM_FEEDBACK_BUFFER_STRIDE :: 37708
ARB_explicit_attrib_location :: 1
ARB_explicit_uniform_location :: 1
MAX_UNIFORM_LOCATIONS :: 33390
ARB_fragment_coord_conventions :: 1
ARB_fragment_layer_viewport :: 1
ARB_fragment_program :: 1
FRAGMENT_PROGRAM_ARB :: 34820
PROGRAM_ALU_INSTRUCTIONS_ARB :: 34821
PROGRAM_TEX_INSTRUCTIONS_ARB :: 34822
PROGRAM_TEX_INDIRECTIONS_ARB :: 34823
PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB :: 34824
PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB :: 34825
PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB :: 34826
MAX_PROGRAM_ALU_INSTRUCTIONS_ARB :: 34827
MAX_PROGRAM_TEX_INSTRUCTIONS_ARB :: 34828
MAX_PROGRAM_TEX_INDIRECTIONS_ARB :: 34829
MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB :: 34830
MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB :: 34831
MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB :: 34832
MAX_TEXTURE_COORDS_ARB :: 34929
MAX_TEXTURE_IMAGE_UNITS_ARB :: 34930
ARB_fragment_program_shadow :: 1
ARB_fragment_shader :: 1
FRAGMENT_SHADER_ARB :: 35632
MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB :: 35657
FRAGMENT_SHADER_DERIVATIVE_HINT_ARB :: 35723
ARB_fragment_shader_interlock :: 1
ARB_framebuffer_no_attachments :: 1
FRAMEBUFFER_DEFAULT_WIDTH :: 37648
FRAMEBUFFER_DEFAULT_HEIGHT :: 37649
FRAMEBUFFER_DEFAULT_LAYERS :: 37650
FRAMEBUFFER_DEFAULT_SAMPLES :: 37651
FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS :: 37652
MAX_FRAMEBUFFER_WIDTH :: 37653
MAX_FRAMEBUFFER_HEIGHT :: 37654
MAX_FRAMEBUFFER_LAYERS :: 37655
MAX_FRAMEBUFFER_SAMPLES :: 37656
ARB_framebuffer_object :: 1
INVALID_FRAMEBUFFER_OPERATION :: 1286
FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING :: 33296
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE :: 33297
FRAMEBUFFER_ATTACHMENT_RED_SIZE :: 33298
FRAMEBUFFER_ATTACHMENT_GREEN_SIZE :: 33299
FRAMEBUFFER_ATTACHMENT_BLUE_SIZE :: 33300
FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE :: 33301
FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE :: 33302
FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE :: 33303
FRAMEBUFFER_DEFAULT :: 33304
FRAMEBUFFER_UNDEFINED :: 33305
DEPTH_STENCIL_ATTACHMENT :: 33306
INDEX :: 33314
MAX_RENDERBUFFER_SIZE :: 34024
DEPTH_STENCIL :: 34041
UNSIGNED_INT_24_8 :: 34042
DEPTH24_STENCIL8 :: 35056
TEXTURE_STENCIL_SIZE :: 35057
UNSIGNED_NORMALIZED :: 35863
DRAW_FRAMEBUFFER_BINDING :: 36006
FRAMEBUFFER_BINDING :: 36006
RENDERBUFFER_BINDING :: 36007
READ_FRAMEBUFFER :: 36008
DRAW_FRAMEBUFFER :: 36009
READ_FRAMEBUFFER_BINDING :: 36010
RENDERBUFFER_SAMPLES :: 36011
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE :: 36048
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME :: 36049
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL :: 36050
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :: 36051
FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER :: 36052
FRAMEBUFFER_COMPLETE :: 36053
FRAMEBUFFER_INCOMPLETE_ATTACHMENT :: 36054
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :: 36055
FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER :: 36059
FRAMEBUFFER_INCOMPLETE_READ_BUFFER :: 36060
FRAMEBUFFER_UNSUPPORTED :: 36061
MAX_COLOR_ATTACHMENTS :: 36063
COLOR_ATTACHMENT0 :: 36064
COLOR_ATTACHMENT1 :: 36065
COLOR_ATTACHMENT2 :: 36066
COLOR_ATTACHMENT3 :: 36067
COLOR_ATTACHMENT4 :: 36068
COLOR_ATTACHMENT5 :: 36069
COLOR_ATTACHMENT6 :: 36070
COLOR_ATTACHMENT7 :: 36071
COLOR_ATTACHMENT8 :: 36072
COLOR_ATTACHMENT9 :: 36073
COLOR_ATTACHMENT10 :: 36074
COLOR_ATTACHMENT11 :: 36075
COLOR_ATTACHMENT12 :: 36076
COLOR_ATTACHMENT13 :: 36077
COLOR_ATTACHMENT14 :: 36078
COLOR_ATTACHMENT15 :: 36079
DEPTH_ATTACHMENT :: 36096
STENCIL_ATTACHMENT :: 36128
FRAMEBUFFER :: 36160
RENDERBUFFER :: 36161
RENDERBUFFER_WIDTH :: 36162
RENDERBUFFER_HEIGHT :: 36163
RENDERBUFFER_INTERNAL_FORMAT :: 36164
STENCIL_INDEX1 :: 36166
STENCIL_INDEX4 :: 36167
STENCIL_INDEX8 :: 36168
STENCIL_INDEX16 :: 36169
RENDERBUFFER_RED_SIZE :: 36176
RENDERBUFFER_GREEN_SIZE :: 36177
RENDERBUFFER_BLUE_SIZE :: 36178
RENDERBUFFER_ALPHA_SIZE :: 36179
RENDERBUFFER_DEPTH_SIZE :: 36180
RENDERBUFFER_STENCIL_SIZE :: 36181
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE :: 36182
MAX_SAMPLES :: 36183
ARB_framebuffer_sRGB :: 1
FRAMEBUFFER_SRGB :: 36281
ARB_geometry_shader4 :: 1
LINES_ADJACENCY_ARB :: 10
LINE_STRIP_ADJACENCY_ARB :: 11
TRIANGLES_ADJACENCY_ARB :: 12
TRIANGLE_STRIP_ADJACENCY_ARB :: 13
PROGRAM_POINT_SIZE_ARB :: 34370
MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB :: 35881
FRAMEBUFFER_ATTACHMENT_LAYERED_ARB :: 36263
FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB :: 36264
FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB :: 36265
GEOMETRY_SHADER_ARB :: 36313
GEOMETRY_VERTICES_OUT_ARB :: 36314
GEOMETRY_INPUT_TYPE_ARB :: 36315
GEOMETRY_OUTPUT_TYPE_ARB :: 36316
MAX_GEOMETRY_VARYING_COMPONENTS_ARB :: 36317
MAX_VERTEX_VARYING_COMPONENTS_ARB :: 36318
MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB :: 36319
MAX_GEOMETRY_OUTPUT_VERTICES_ARB :: 36320
MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB :: 36321
ARB_get_program_binary :: 1
PROGRAM_BINARY_RETRIEVABLE_HINT :: 33367
PROGRAM_BINARY_LENGTH :: 34625
NUM_PROGRAM_BINARY_FORMATS :: 34814
PROGRAM_BINARY_FORMATS :: 34815
ARB_get_texture_sub_image :: 1
ARB_gl_spirv :: 1
SHADER_BINARY_FORMAT_SPIR_V_ARB :: 38225
SPIR_V_BINARY_ARB :: 38226
ARB_gpu_shader5 :: 1
GEOMETRY_SHADER_INVOCATIONS :: 34943
MAX_GEOMETRY_SHADER_INVOCATIONS :: 36442
MIN_FRAGMENT_INTERPOLATION_OFFSET :: 36443
MAX_FRAGMENT_INTERPOLATION_OFFSET :: 36444
FRAGMENT_INTERPOLATION_OFFSET_BITS :: 36445
MAX_VERTEX_STREAMS :: 36465
ARB_gpu_shader_fp64 :: 1
DOUBLE_MAT2 :: 36678
DOUBLE_MAT3 :: 36679
DOUBLE_MAT4 :: 36680
DOUBLE_MAT2x3 :: 36681
DOUBLE_MAT2x4 :: 36682
DOUBLE_MAT3x2 :: 36683
DOUBLE_MAT3x4 :: 36684
DOUBLE_MAT4x2 :: 36685
DOUBLE_MAT4x3 :: 36686
DOUBLE_VEC2 :: 36860
DOUBLE_VEC3 :: 36861
DOUBLE_VEC4 :: 36862
ARB_gpu_shader_int64 :: 1
INT64_ARB :: 5134
INT64_VEC2_ARB :: 36841
INT64_VEC3_ARB :: 36842
INT64_VEC4_ARB :: 36843
UNSIGNED_INT64_VEC2_ARB :: 36853
UNSIGNED_INT64_VEC3_ARB :: 36854
UNSIGNED_INT64_VEC4_ARB :: 36855
ARB_half_float_pixel :: 1
HALF_FLOAT_ARB :: 5131
ARB_half_float_vertex :: 1
HALF_FLOAT :: 5131
ARB_imaging :: 1
CONSTANT_COLOR :: 32769
ONE_MINUS_CONSTANT_COLOR :: 32770
CONSTANT_ALPHA :: 32771
ONE_MINUS_CONSTANT_ALPHA :: 32772
BLEND_COLOR :: 32773
FUNC_ADD :: 32774
MIN :: 32775
MAX :: 32776
BLEND_EQUATION :: 32777
FUNC_SUBTRACT :: 32778
FUNC_REVERSE_SUBTRACT :: 32779
CONVOLUTION_1D :: 32784
CONVOLUTION_2D :: 32785
SEPARABLE_2D :: 32786
CONVOLUTION_BORDER_MODE :: 32787
CONVOLUTION_FILTER_SCALE :: 32788
CONVOLUTION_FILTER_BIAS :: 32789
REDUCE :: 32790
CONVOLUTION_FORMAT :: 32791
CONVOLUTION_WIDTH :: 32792
CONVOLUTION_HEIGHT :: 32793
MAX_CONVOLUTION_WIDTH :: 32794
MAX_CONVOLUTION_HEIGHT :: 32795
POST_CONVOLUTION_RED_SCALE :: 32796
POST_CONVOLUTION_GREEN_SCALE :: 32797
POST_CONVOLUTION_BLUE_SCALE :: 32798
POST_CONVOLUTION_ALPHA_SCALE :: 32799
POST_CONVOLUTION_RED_BIAS :: 32800
POST_CONVOLUTION_GREEN_BIAS :: 32801
POST_CONVOLUTION_BLUE_BIAS :: 32802
POST_CONVOLUTION_ALPHA_BIAS :: 32803
HISTOGRAM :: 32804
PROXY_HISTOGRAM :: 32805
HISTOGRAM_WIDTH :: 32806
HISTOGRAM_FORMAT :: 32807
HISTOGRAM_RED_SIZE :: 32808
HISTOGRAM_GREEN_SIZE :: 32809
HISTOGRAM_BLUE_SIZE :: 32810
HISTOGRAM_ALPHA_SIZE :: 32811
HISTOGRAM_LUMINANCE_SIZE :: 32812
HISTOGRAM_SINK :: 32813
MINMAX :: 32814
MINMAX_FORMAT :: 32815
MINMAX_SINK :: 32816
TABLE_TOO_LARGE :: 32817
COLOR_MATRIX :: 32945
COLOR_MATRIX_STACK_DEPTH :: 32946
MAX_COLOR_MATRIX_STACK_DEPTH :: 32947
POST_COLOR_MATRIX_RED_SCALE :: 32948
POST_COLOR_MATRIX_GREEN_SCALE :: 32949
POST_COLOR_MATRIX_BLUE_SCALE :: 32950
POST_COLOR_MATRIX_ALPHA_SCALE :: 32951
POST_COLOR_MATRIX_RED_BIAS :: 32952
POST_COLOR_MATRIX_GREEN_BIAS :: 32953
POST_COLOR_MATRIX_BLUE_BIAS :: 32954
POST_COLOR_MATRIX_ALPHA_BIAS :: 32955
COLOR_TABLE :: 32976
POST_CONVOLUTION_COLOR_TABLE :: 32977
POST_COLOR_MATRIX_COLOR_TABLE :: 32978
PROXY_COLOR_TABLE :: 32979
PROXY_POST_CONVOLUTION_COLOR_TABLE :: 32980
PROXY_POST_COLOR_MATRIX_COLOR_TABLE :: 32981
COLOR_TABLE_SCALE :: 32982
COLOR_TABLE_BIAS :: 32983
COLOR_TABLE_FORMAT :: 32984
COLOR_TABLE_WIDTH :: 32985
COLOR_TABLE_RED_SIZE :: 32986
COLOR_TABLE_GREEN_SIZE :: 32987
COLOR_TABLE_BLUE_SIZE :: 32988
COLOR_TABLE_ALPHA_SIZE :: 32989
COLOR_TABLE_LUMINANCE_SIZE :: 32990
COLOR_TABLE_INTENSITY_SIZE :: 32991
IGNORE_BORDER :: 33104
CONSTANT_BORDER :: 33105
WRAP_BORDER :: 33106
REPLICATE_BORDER :: 33107
CONVOLUTION_BORDER_COLOR :: 33108
ARB_indirect_parameters :: 1
PARAMETER_BUFFER_ARB :: 33006
PARAMETER_BUFFER_BINDING_ARB :: 33007
ARB_instanced_arrays :: 1
VERTEX_ATTRIB_ARRAY_DIVISOR_ARB :: 35070
ARB_internalformat_query :: 1
NUM_SAMPLE_COUNTS :: 37760
ARB_internalformat_query2 :: 1
INTERNALFORMAT_SUPPORTED :: 33391
INTERNALFORMAT_PREFERRED :: 33392
INTERNALFORMAT_RED_SIZE :: 33393
INTERNALFORMAT_GREEN_SIZE :: 33394
INTERNALFORMAT_BLUE_SIZE :: 33395
INTERNALFORMAT_ALPHA_SIZE :: 33396
INTERNALFORMAT_DEPTH_SIZE :: 33397
INTERNALFORMAT_STENCIL_SIZE :: 33398
INTERNALFORMAT_SHARED_SIZE :: 33399
INTERNALFORMAT_RED_TYPE :: 33400
INTERNALFORMAT_GREEN_TYPE :: 33401
INTERNALFORMAT_BLUE_TYPE :: 33402
INTERNALFORMAT_ALPHA_TYPE :: 33403
INTERNALFORMAT_DEPTH_TYPE :: 33404
INTERNALFORMAT_STENCIL_TYPE :: 33405
MAX_WIDTH :: 33406
MAX_HEIGHT :: 33407
MAX_DEPTH :: 33408
MAX_LAYERS :: 33409
MAX_COMBINED_DIMENSIONS :: 33410
COLOR_COMPONENTS :: 33411
DEPTH_COMPONENTS :: 33412
STENCIL_COMPONENTS :: 33413
COLOR_RENDERABLE :: 33414
DEPTH_RENDERABLE :: 33415
STENCIL_RENDERABLE :: 33416
FRAMEBUFFER_RENDERABLE :: 33417
FRAMEBUFFER_RENDERABLE_LAYERED :: 33418
FRAMEBUFFER_BLEND :: 33419
READ_PIXELS :: 33420
READ_PIXELS_FORMAT :: 33421
READ_PIXELS_TYPE :: 33422
TEXTURE_IMAGE_FORMAT :: 33423
TEXTURE_IMAGE_TYPE :: 33424
GET_TEXTURE_IMAGE_FORMAT :: 33425
GET_TEXTURE_IMAGE_TYPE :: 33426
MIPMAP :: 33427
MANUAL_GENERATE_MIPMAP :: 33428
AUTO_GENERATE_MIPMAP :: 33429
COLOR_ENCODING :: 33430
SRGB_READ :: 33431
SRGB_WRITE :: 33432
SRGB_DECODE_ARB :: 33433
FILTER :: 33434
VERTEX_TEXTURE :: 33435
TESS_CONTROL_TEXTURE :: 33436
TESS_EVALUATION_TEXTURE :: 33437
GEOMETRY_TEXTURE :: 33438
FRAGMENT_TEXTURE :: 33439
COMPUTE_TEXTURE :: 33440
TEXTURE_SHADOW :: 33441
TEXTURE_GATHER :: 33442
TEXTURE_GATHER_SHADOW :: 33443
SHADER_IMAGE_LOAD :: 33444
SHADER_IMAGE_STORE :: 33445
SHADER_IMAGE_ATOMIC :: 33446
IMAGE_TEXEL_SIZE :: 33447
IMAGE_COMPATIBILITY_CLASS :: 33448
IMAGE_PIXEL_FORMAT :: 33449
IMAGE_PIXEL_TYPE :: 33450
SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST :: 33452
SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST :: 33453
SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE :: 33454
SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE :: 33455
TEXTURE_COMPRESSED_BLOCK_WIDTH :: 33457
TEXTURE_COMPRESSED_BLOCK_HEIGHT :: 33458
TEXTURE_COMPRESSED_BLOCK_SIZE :: 33459
CLEAR_BUFFER :: 33460
TEXTURE_VIEW :: 33461
VIEW_COMPATIBILITY_CLASS :: 33462
FULL_SUPPORT :: 33463
CAVEAT_SUPPORT :: 33464
IMAGE_CLASS_4_X_32 :: 33465
IMAGE_CLASS_2_X_32 :: 33466
IMAGE_CLASS_1_X_32 :: 33467
IMAGE_CLASS_4_X_16 :: 33468
IMAGE_CLASS_2_X_16 :: 33469
IMAGE_CLASS_1_X_16 :: 33470
IMAGE_CLASS_4_X_8 :: 33471
IMAGE_CLASS_2_X_8 :: 33472
IMAGE_CLASS_1_X_8 :: 33473
IMAGE_CLASS_11_11_10 :: 33474
IMAGE_CLASS_10_10_10_2 :: 33475
VIEW_CLASS_128_BITS :: 33476
VIEW_CLASS_96_BITS :: 33477
VIEW_CLASS_64_BITS :: 33478
VIEW_CLASS_48_BITS :: 33479
VIEW_CLASS_32_BITS :: 33480
VIEW_CLASS_24_BITS :: 33481
VIEW_CLASS_16_BITS :: 33482
VIEW_CLASS_8_BITS :: 33483
VIEW_CLASS_S3TC_DXT1_RGB :: 33484
VIEW_CLASS_S3TC_DXT1_RGBA :: 33485
VIEW_CLASS_S3TC_DXT3_RGBA :: 33486
VIEW_CLASS_S3TC_DXT5_RGBA :: 33487
VIEW_CLASS_RGTC1_RED :: 33488
VIEW_CLASS_RGTC2_RG :: 33489
VIEW_CLASS_BPTC_UNORM :: 33490
VIEW_CLASS_BPTC_FLOAT :: 33491
ARB_invalidate_subdata :: 1
ARB_map_buffer_alignment :: 1
MIN_MAP_BUFFER_ALIGNMENT :: 37052
ARB_map_buffer_range :: 1
MAP_INVALIDATE_RANGE_BIT :: 4
MAP_INVALIDATE_BUFFER_BIT :: 8
MAP_FLUSH_EXPLICIT_BIT :: 16
MAP_UNSYNCHRONIZED_BIT :: 32
ARB_matrix_palette :: 1
MATRIX_PALETTE_ARB :: 34880
MAX_MATRIX_PALETTE_STACK_DEPTH_ARB :: 34881
MAX_PALETTE_MATRICES_ARB :: 34882
CURRENT_PALETTE_MATRIX_ARB :: 34883
MATRIX_INDEX_ARRAY_ARB :: 34884
CURRENT_MATRIX_INDEX_ARB :: 34885
MATRIX_INDEX_ARRAY_SIZE_ARB :: 34886
MATRIX_INDEX_ARRAY_TYPE_ARB :: 34887
MATRIX_INDEX_ARRAY_STRIDE_ARB :: 34888
MATRIX_INDEX_ARRAY_POINTER_ARB :: 34889
ARB_multi_bind :: 1
ARB_multi_draw_indirect :: 1
ARB_multisample :: 1
MULTISAMPLE_ARB :: 32925
SAMPLE_ALPHA_TO_COVERAGE_ARB :: 32926
SAMPLE_ALPHA_TO_ONE_ARB :: 32927
SAMPLE_COVERAGE_ARB :: 32928
SAMPLE_BUFFERS_ARB :: 32936
SAMPLES_ARB :: 32937
SAMPLE_COVERAGE_VALUE_ARB :: 32938
SAMPLE_COVERAGE_INVERT_ARB :: 32939
MULTISAMPLE_BIT_ARB :: 536870912
ARB_multitexture :: 1
TEXTURE0_ARB :: 33984
TEXTURE1_ARB :: 33985
TEXTURE2_ARB :: 33986
TEXTURE3_ARB :: 33987
TEXTURE4_ARB :: 33988
TEXTURE5_ARB :: 33989
TEXTURE6_ARB :: 33990
TEXTURE7_ARB :: 33991
TEXTURE8_ARB :: 33992
TEXTURE9_ARB :: 33993
TEXTURE10_ARB :: 33994
TEXTURE11_ARB :: 33995
TEXTURE12_ARB :: 33996
TEXTURE13_ARB :: 33997
TEXTURE14_ARB :: 33998
TEXTURE15_ARB :: 33999
TEXTURE16_ARB :: 34000
TEXTURE17_ARB :: 34001
TEXTURE18_ARB :: 34002
TEXTURE19_ARB :: 34003
TEXTURE20_ARB :: 34004
TEXTURE21_ARB :: 34005
TEXTURE22_ARB :: 34006
TEXTURE23_ARB :: 34007
TEXTURE24_ARB :: 34008
TEXTURE25_ARB :: 34009
TEXTURE26_ARB :: 34010
TEXTURE27_ARB :: 34011
TEXTURE28_ARB :: 34012
TEXTURE29_ARB :: 34013
TEXTURE30_ARB :: 34014
TEXTURE31_ARB :: 34015
ACTIVE_TEXTURE_ARB :: 34016
CLIENT_ACTIVE_TEXTURE_ARB :: 34017
MAX_TEXTURE_UNITS_ARB :: 34018
ARB_occlusion_query :: 1
QUERY_COUNTER_BITS_ARB :: 34916
CURRENT_QUERY_ARB :: 34917
QUERY_RESULT_ARB :: 34918
QUERY_RESULT_AVAILABLE_ARB :: 34919
SAMPLES_PASSED_ARB :: 35092
ARB_occlusion_query2 :: 1
ANY_SAMPLES_PASSED :: 35887
ARB_parallel_shader_compile :: 1
MAX_SHADER_COMPILER_THREADS_ARB :: 37296
COMPLETION_STATUS_ARB :: 37297
ARB_pipeline_statistics_query :: 1
VERTICES_SUBMITTED_ARB :: 33518
PRIMITIVES_SUBMITTED_ARB :: 33519
VERTEX_SHADER_INVOCATIONS_ARB :: 33520
TESS_CONTROL_SHADER_PATCHES_ARB :: 33521
TESS_EVALUATION_SHADER_INVOCATIONS_ARB :: 33522
GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB :: 33523
FRAGMENT_SHADER_INVOCATIONS_ARB :: 33524
COMPUTE_SHADER_INVOCATIONS_ARB :: 33525
CLIPPING_INPUT_PRIMITIVES_ARB :: 33526
CLIPPING_OUTPUT_PRIMITIVES_ARB :: 33527
ARB_pixel_buffer_object :: 1
PIXEL_PACK_BUFFER_ARB :: 35051
PIXEL_UNPACK_BUFFER_ARB :: 35052
PIXEL_PACK_BUFFER_BINDING_ARB :: 35053
PIXEL_UNPACK_BUFFER_BINDING_ARB :: 35055
ARB_point_parameters :: 1
POINT_SIZE_MIN_ARB :: 33062
POINT_SIZE_MAX_ARB :: 33063
POINT_FADE_THRESHOLD_SIZE_ARB :: 33064
POINT_DISTANCE_ATTENUATION_ARB :: 33065
ARB_point_sprite :: 1
POINT_SPRITE_ARB :: 34913
COORD_REPLACE_ARB :: 34914
ARB_polygon_offset_clamp :: 1
ARB_post_depth_coverage :: 1
ARB_program_interface_query :: 1
UNIFORM :: 37601
UNIFORM_BLOCK :: 37602
PROGRAM_INPUT :: 37603
PROGRAM_OUTPUT :: 37604
BUFFER_VARIABLE :: 37605
SHADER_STORAGE_BLOCK :: 37606
IS_PER_PATCH :: 37607
VERTEX_SUBROUTINE :: 37608
TESS_CONTROL_SUBROUTINE :: 37609
TESS_EVALUATION_SUBROUTINE :: 37610
GEOMETRY_SUBROUTINE :: 37611
FRAGMENT_SUBROUTINE :: 37612
COMPUTE_SUBROUTINE :: 37613
VERTEX_SUBROUTINE_UNIFORM :: 37614
TESS_CONTROL_SUBROUTINE_UNIFORM :: 37615
TESS_EVALUATION_SUBROUTINE_UNIFORM :: 37616
GEOMETRY_SUBROUTINE_UNIFORM :: 37617
FRAGMENT_SUBROUTINE_UNIFORM :: 37618
COMPUTE_SUBROUTINE_UNIFORM :: 37619
TRANSFORM_FEEDBACK_VARYING :: 37620
ACTIVE_RESOURCES :: 37621
MAX_NAME_LENGTH :: 37622
MAX_NUM_ACTIVE_VARIABLES :: 37623
MAX_NUM_COMPATIBLE_SUBROUTINES :: 37624
NAME_LENGTH :: 37625
TYPE :: 37626
ARRAY_SIZE :: 37627
OFFSET :: 37628
BLOCK_INDEX :: 37629
ARRAY_STRIDE :: 37630
MATRIX_STRIDE :: 37631
IS_ROW_MAJOR :: 37632
ATOMIC_COUNTER_BUFFER_INDEX :: 37633
BUFFER_BINDING :: 37634
BUFFER_DATA_SIZE :: 37635
NUM_ACTIVE_VARIABLES :: 37636
ACTIVE_VARIABLES :: 37637
REFERENCED_BY_VERTEX_SHADER :: 37638
REFERENCED_BY_TESS_CONTROL_SHADER :: 37639
REFERENCED_BY_TESS_EVALUATION_SHADER :: 37640
REFERENCED_BY_GEOMETRY_SHADER :: 37641
REFERENCED_BY_FRAGMENT_SHADER :: 37642
REFERENCED_BY_COMPUTE_SHADER :: 37643
TOP_LEVEL_ARRAY_SIZE :: 37644
TOP_LEVEL_ARRAY_STRIDE :: 37645
LOCATION :: 37646
LOCATION_INDEX :: 37647
ARB_provoking_vertex :: 1
QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION :: 36428
FIRST_VERTEX_CONVENTION :: 36429
LAST_VERTEX_CONVENTION :: 36430
PROVOKING_VERTEX :: 36431
ARB_query_buffer_object :: 1
QUERY_BUFFER_BARRIER_BIT :: 32768
QUERY_BUFFER :: 37266
QUERY_BUFFER_BINDING :: 37267
QUERY_RESULT_NO_WAIT :: 37268
ARB_robust_buffer_access_behavior :: 1
ARB_robustness :: 1
CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB :: 4
LOSE_CONTEXT_ON_RESET_ARB :: 33362
GUILTY_CONTEXT_RESET_ARB :: 33363
INNOCENT_CONTEXT_RESET_ARB :: 33364
UNKNOWN_CONTEXT_RESET_ARB :: 33365
RESET_NOTIFICATION_STRATEGY_ARB :: 33366
NO_RESET_NOTIFICATION_ARB :: 33377
ARB_robustness_application_isolation :: 1
ARB_robustness_share_group_isolation :: 1
ARB_sample_locations :: 1
SAMPLE_LOCATION_ARB :: 36432
SAMPLE_LOCATION_SUBPIXEL_BITS_ARB :: 37693
SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB :: 37694
SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB :: 37695
PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB :: 37696
PROGRAMMABLE_SAMPLE_LOCATION_ARB :: 37697
FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB :: 37698
FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB :: 37699
ARB_sample_shading :: 1
SAMPLE_SHADING_ARB :: 35894
MIN_SAMPLE_SHADING_VALUE_ARB :: 35895
ARB_sampler_objects :: 1
SAMPLER_BINDING :: 35097
ARB_seamless_cube_map :: 1
ARB_seamless_cubemap_per_texture :: 1
ARB_separate_shader_objects :: 1
VERTEX_SHADER_BIT :: 1
FRAGMENT_SHADER_BIT :: 2
GEOMETRY_SHADER_BIT :: 4
TESS_CONTROL_SHADER_BIT :: 8
TESS_EVALUATION_SHADER_BIT :: 16
PROGRAM_SEPARABLE :: 33368
ACTIVE_PROGRAM :: 33369
PROGRAM_PIPELINE_BINDING :: 33370
ALL_SHADER_BITS :: 4294967295
ARB_shader_atomic_counter_ops :: 1
ARB_shader_atomic_counters :: 1
ATOMIC_COUNTER_BUFFER :: 37568
ATOMIC_COUNTER_BUFFER_BINDING :: 37569
ATOMIC_COUNTER_BUFFER_START :: 37570
ATOMIC_COUNTER_BUFFER_SIZE :: 37571
ATOMIC_COUNTER_BUFFER_DATA_SIZE :: 37572
ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS :: 37573
ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES :: 37574
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER :: 37575
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER :: 37576
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER :: 37577
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER :: 37578
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER :: 37579
MAX_VERTEX_ATOMIC_COUNTER_BUFFERS :: 37580
MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS :: 37581
MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS :: 37582
MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS :: 37583
MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS :: 37584
MAX_COMBINED_ATOMIC_COUNTER_BUFFERS :: 37585
MAX_VERTEX_ATOMIC_COUNTERS :: 37586
MAX_TESS_CONTROL_ATOMIC_COUNTERS :: 37587
MAX_TESS_EVALUATION_ATOMIC_COUNTERS :: 37588
MAX_GEOMETRY_ATOMIC_COUNTERS :: 37589
MAX_FRAGMENT_ATOMIC_COUNTERS :: 37590
MAX_COMBINED_ATOMIC_COUNTERS :: 37591
MAX_ATOMIC_COUNTER_BUFFER_SIZE :: 37592
ACTIVE_ATOMIC_COUNTER_BUFFERS :: 37593
UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX :: 37594
UNSIGNED_INT_ATOMIC_COUNTER :: 37595
MAX_ATOMIC_COUNTER_BUFFER_BINDINGS :: 37596
ARB_shader_ballot :: 1
ARB_shader_bit_encoding :: 1
ARB_shader_clock :: 1
ARB_shader_draw_parameters :: 1
ARB_shader_group_vote :: 1
ARB_shader_image_load_store :: 1
VERTEX_ATTRIB_ARRAY_BARRIER_BIT :: 1
ELEMENT_ARRAY_BARRIER_BIT :: 2
UNIFORM_BARRIER_BIT :: 4
TEXTURE_FETCH_BARRIER_BIT :: 8
SHADER_IMAGE_ACCESS_BARRIER_BIT :: 32
COMMAND_BARRIER_BIT :: 64
PIXEL_BUFFER_BARRIER_BIT :: 128
TEXTURE_UPDATE_BARRIER_BIT :: 256
BUFFER_UPDATE_BARRIER_BIT :: 512
FRAMEBUFFER_BARRIER_BIT :: 1024
TRANSFORM_FEEDBACK_BARRIER_BIT :: 2048
ATOMIC_COUNTER_BARRIER_BIT :: 4096
MAX_IMAGE_UNITS :: 36664
MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS :: 36665
IMAGE_BINDING_NAME :: 36666
IMAGE_BINDING_LEVEL :: 36667
IMAGE_BINDING_LAYERED :: 36668
IMAGE_BINDING_LAYER :: 36669
IMAGE_BINDING_ACCESS :: 36670
IMAGE_1D :: 36940
IMAGE_2D :: 36941
IMAGE_3D :: 36942
IMAGE_2D_RECT :: 36943
IMAGE_CUBE :: 36944
IMAGE_BUFFER :: 36945
IMAGE_1D_ARRAY :: 36946
IMAGE_2D_ARRAY :: 36947
IMAGE_CUBE_MAP_ARRAY :: 36948
IMAGE_2D_MULTISAMPLE :: 36949
IMAGE_2D_MULTISAMPLE_ARRAY :: 36950
INT_IMAGE_1D :: 36951
INT_IMAGE_2D :: 36952
INT_IMAGE_3D :: 36953
INT_IMAGE_2D_RECT :: 36954
INT_IMAGE_CUBE :: 36955
INT_IMAGE_BUFFER :: 36956
INT_IMAGE_1D_ARRAY :: 36957
INT_IMAGE_2D_ARRAY :: 36958
INT_IMAGE_CUBE_MAP_ARRAY :: 36959
INT_IMAGE_2D_MULTISAMPLE :: 36960
INT_IMAGE_2D_MULTISAMPLE_ARRAY :: 36961
UNSIGNED_INT_IMAGE_1D :: 36962
UNSIGNED_INT_IMAGE_2D :: 36963
UNSIGNED_INT_IMAGE_3D :: 36964
UNSIGNED_INT_IMAGE_2D_RECT :: 36965
UNSIGNED_INT_IMAGE_CUBE :: 36966
UNSIGNED_INT_IMAGE_BUFFER :: 36967
UNSIGNED_INT_IMAGE_1D_ARRAY :: 36968
UNSIGNED_INT_IMAGE_2D_ARRAY :: 36969
UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY :: 36970
UNSIGNED_INT_IMAGE_2D_MULTISAMPLE :: 36971
UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY :: 36972
MAX_IMAGE_SAMPLES :: 36973
IMAGE_BINDING_FORMAT :: 36974
IMAGE_FORMAT_COMPATIBILITY_TYPE :: 37063
IMAGE_FORMAT_COMPATIBILITY_BY_SIZE :: 37064
IMAGE_FORMAT_COMPATIBILITY_BY_CLASS :: 37065
MAX_VERTEX_IMAGE_UNIFORMS :: 37066
MAX_TESS_CONTROL_IMAGE_UNIFORMS :: 37067
MAX_TESS_EVALUATION_IMAGE_UNIFORMS :: 37068
MAX_GEOMETRY_IMAGE_UNIFORMS :: 37069
MAX_FRAGMENT_IMAGE_UNIFORMS :: 37070
MAX_COMBINED_IMAGE_UNIFORMS :: 37071
ALL_BARRIER_BITS :: 4294967295
ARB_shader_image_size :: 1
ARB_shader_objects :: 1
PROGRAM_OBJECT_ARB :: 35648
SHADER_OBJECT_ARB :: 35656
OBJECT_TYPE_ARB :: 35662
OBJECT_SUBTYPE_ARB :: 35663
FLOAT_VEC2_ARB :: 35664
FLOAT_VEC3_ARB :: 35665
FLOAT_VEC4_ARB :: 35666
INT_VEC2_ARB :: 35667
INT_VEC3_ARB :: 35668
INT_VEC4_ARB :: 35669
BOOL_ARB :: 35670
BOOL_VEC2_ARB :: 35671
BOOL_VEC3_ARB :: 35672
BOOL_VEC4_ARB :: 35673
FLOAT_MAT2_ARB :: 35674
FLOAT_MAT3_ARB :: 35675
FLOAT_MAT4_ARB :: 35676
SAMPLER_1D_ARB :: 35677
SAMPLER_2D_ARB :: 35678
SAMPLER_3D_ARB :: 35679
SAMPLER_CUBE_ARB :: 35680
SAMPLER_1D_SHADOW_ARB :: 35681
SAMPLER_2D_SHADOW_ARB :: 35682
SAMPLER_2D_RECT_ARB :: 35683
SAMPLER_2D_RECT_SHADOW_ARB :: 35684
OBJECT_DELETE_STATUS_ARB :: 35712
OBJECT_COMPILE_STATUS_ARB :: 35713
OBJECT_LINK_STATUS_ARB :: 35714
OBJECT_VALIDATE_STATUS_ARB :: 35715
OBJECT_INFO_LOG_LENGTH_ARB :: 35716
OBJECT_ATTACHED_OBJECTS_ARB :: 35717
OBJECT_ACTIVE_UNIFORMS_ARB :: 35718
OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB :: 35719
OBJECT_SHADER_SOURCE_LENGTH_ARB :: 35720
ARB_shader_precision :: 1
ARB_shader_stencil_export :: 1
ARB_shader_storage_buffer_object :: 1
SHADER_STORAGE_BARRIER_BIT :: 8192
MAX_COMBINED_SHADER_OUTPUT_RESOURCES :: 36665
SHADER_STORAGE_BUFFER :: 37074
SHADER_STORAGE_BUFFER_BINDING :: 37075
SHADER_STORAGE_BUFFER_START :: 37076
SHADER_STORAGE_BUFFER_SIZE :: 37077
MAX_VERTEX_SHADER_STORAGE_BLOCKS :: 37078
MAX_GEOMETRY_SHADER_STORAGE_BLOCKS :: 37079
MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS :: 37080
MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS :: 37081
MAX_FRAGMENT_SHADER_STORAGE_BLOCKS :: 37082
MAX_COMPUTE_SHADER_STORAGE_BLOCKS :: 37083
MAX_COMBINED_SHADER_STORAGE_BLOCKS :: 37084
MAX_SHADER_STORAGE_BUFFER_BINDINGS :: 37085
MAX_SHADER_STORAGE_BLOCK_SIZE :: 37086
SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT :: 37087
ARB_shader_subroutine :: 1
ACTIVE_SUBROUTINES :: 36325
ACTIVE_SUBROUTINE_UNIFORMS :: 36326
MAX_SUBROUTINES :: 36327
MAX_SUBROUTINE_UNIFORM_LOCATIONS :: 36328
ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS :: 36423
ACTIVE_SUBROUTINE_MAX_LENGTH :: 36424
ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH :: 36425
NUM_COMPATIBLE_SUBROUTINES :: 36426
COMPATIBLE_SUBROUTINES :: 36427
ARB_shader_texture_image_samples :: 1
ARB_shader_texture_lod :: 1
ARB_shader_viewport_layer_array :: 1
ARB_shading_language_100 :: 1
SHADING_LANGUAGE_VERSION_ARB :: 35724
ARB_shading_language_420pack :: 1
ARB_shading_language_include :: 1
SHADER_INCLUDE_ARB :: 36270
NAMED_STRING_LENGTH_ARB :: 36329
NAMED_STRING_TYPE_ARB :: 36330
ARB_shading_language_packing :: 1
ARB_shadow :: 1
TEXTURE_COMPARE_MODE_ARB :: 34892
TEXTURE_COMPARE_FUNC_ARB :: 34893
COMPARE_R_TO_TEXTURE_ARB :: 34894
ARB_shadow_ambient :: 1
TEXTURE_COMPARE_FAIL_VALUE_ARB :: 32959
ARB_sparse_buffer :: 1
SPARSE_STORAGE_BIT_ARB :: 1024
SPARSE_BUFFER_PAGE_SIZE_ARB :: 33528
ARB_sparse_texture :: 1
VIRTUAL_PAGE_SIZE_X_ARB :: 37269
VIRTUAL_PAGE_SIZE_Y_ARB :: 37270
VIRTUAL_PAGE_SIZE_Z_ARB :: 37271
MAX_SPARSE_TEXTURE_SIZE_ARB :: 37272
MAX_SPARSE_3D_TEXTURE_SIZE_ARB :: 37273
MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB :: 37274
TEXTURE_SPARSE_ARB :: 37286
VIRTUAL_PAGE_SIZE_INDEX_ARB :: 37287
NUM_VIRTUAL_PAGE_SIZES_ARB :: 37288
SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB :: 37289
NUM_SPARSE_LEVELS_ARB :: 37290
ARB_sparse_texture2 :: 1
ARB_sparse_texture_clamp :: 1
ARB_spirv_extensions :: 1
ARB_stencil_texturing :: 1
DEPTH_STENCIL_TEXTURE_MODE :: 37098
ARB_sync :: 1
SYNC_FLUSH_COMMANDS_BIT :: 1
MAX_SERVER_WAIT_TIMEOUT :: 37137
OBJECT_TYPE :: 37138
SYNC_CONDITION :: 37139
SYNC_STATUS :: 37140
SYNC_FLAGS :: 37141
SYNC_FENCE :: 37142
SYNC_GPU_COMMANDS_COMPLETE :: 37143
UNSIGNALED :: 37144
SIGNALED :: 37145
ALREADY_SIGNALED :: 37146
TIMEOUT_EXPIRED :: 37147
CONDITION_SATISFIED :: 37148
WAIT_FAILED :: 37149
TIMEOUT_IGNORED :: `0xFFFFFFFFFFFFFFFFull`
ARB_tessellation_shader :: 1
PATCHES :: 14
UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER :: 34032
UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER :: 34033
MAX_TESS_CONTROL_INPUT_COMPONENTS :: 34924
MAX_TESS_EVALUATION_INPUT_COMPONENTS :: 34925
MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS :: 36382
MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS :: 36383
PATCH_VERTICES :: 36466
PATCH_DEFAULT_INNER_LEVEL :: 36467
PATCH_DEFAULT_OUTER_LEVEL :: 36468
TESS_CONTROL_OUTPUT_VERTICES :: 36469
TESS_GEN_MODE :: 36470
TESS_GEN_SPACING :: 36471
TESS_GEN_VERTEX_ORDER :: 36472
TESS_GEN_POINT_MODE :: 36473
ISOLINES :: 36474
FRACTIONAL_ODD :: 36475
FRACTIONAL_EVEN :: 36476
MAX_PATCH_VERTICES :: 36477
MAX_TESS_GEN_LEVEL :: 36478
MAX_TESS_CONTROL_UNIFORM_COMPONENTS :: 36479
MAX_TESS_EVALUATION_UNIFORM_COMPONENTS :: 36480
MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS :: 36481
MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS :: 36482
MAX_TESS_CONTROL_OUTPUT_COMPONENTS :: 36483
MAX_TESS_PATCH_COMPONENTS :: 36484
MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS :: 36485
MAX_TESS_EVALUATION_OUTPUT_COMPONENTS :: 36486
TESS_EVALUATION_SHADER :: 36487
TESS_CONTROL_SHADER :: 36488
MAX_TESS_CONTROL_UNIFORM_BLOCKS :: 36489
MAX_TESS_EVALUATION_UNIFORM_BLOCKS :: 36490
ARB_texture_barrier :: 1
ARB_texture_border_clamp :: 1
CLAMP_TO_BORDER_ARB :: 33069
ARB_texture_buffer_object :: 1
TEXTURE_BUFFER_ARB :: 35882
MAX_TEXTURE_BUFFER_SIZE_ARB :: 35883
TEXTURE_BINDING_BUFFER_ARB :: 35884
TEXTURE_BUFFER_DATA_STORE_BINDING_ARB :: 35885
TEXTURE_BUFFER_FORMAT_ARB :: 35886
ARB_texture_buffer_object_rgb32 :: 1
ARB_texture_buffer_range :: 1
TEXTURE_BUFFER_OFFSET :: 37277
TEXTURE_BUFFER_SIZE :: 37278
TEXTURE_BUFFER_OFFSET_ALIGNMENT :: 37279
ARB_texture_compression :: 1
COMPRESSED_ALPHA_ARB :: 34025
COMPRESSED_LUMINANCE_ARB :: 34026
COMPRESSED_LUMINANCE_ALPHA_ARB :: 34027
COMPRESSED_INTENSITY_ARB :: 34028
COMPRESSED_RGB_ARB :: 34029
COMPRESSED_RGBA_ARB :: 34030
TEXTURE_COMPRESSION_HINT_ARB :: 34031
TEXTURE_COMPRESSED_IMAGE_SIZE_ARB :: 34464
TEXTURE_COMPRESSED_ARB :: 34465
NUM_COMPRESSED_TEXTURE_FORMATS_ARB :: 34466
COMPRESSED_TEXTURE_FORMATS_ARB :: 34467
ARB_texture_compression_bptc :: 1
COMPRESSED_RGBA_BPTC_UNORM_ARB :: 36492
COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB :: 36493
COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB :: 36494
COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB :: 36495
ARB_texture_compression_rgtc :: 1
COMPRESSED_RED_RGTC1 :: 36283
COMPRESSED_SIGNED_RED_RGTC1 :: 36284
COMPRESSED_RG_RGTC2 :: 36285
COMPRESSED_SIGNED_RG_RGTC2 :: 36286
ARB_texture_cube_map :: 1
NORMAL_MAP_ARB :: 34065
REFLECTION_MAP_ARB :: 34066
TEXTURE_CUBE_MAP_ARB :: 34067
TEXTURE_BINDING_CUBE_MAP_ARB :: 34068
TEXTURE_CUBE_MAP_POSITIVE_X_ARB :: 34069
TEXTURE_CUBE_MAP_NEGATIVE_X_ARB :: 34070
TEXTURE_CUBE_MAP_POSITIVE_Y_ARB :: 34071
TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB :: 34072
TEXTURE_CUBE_MAP_POSITIVE_Z_ARB :: 34073
TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB :: 34074
PROXY_TEXTURE_CUBE_MAP_ARB :: 34075
MAX_CUBE_MAP_TEXTURE_SIZE_ARB :: 34076
ARB_texture_cube_map_array :: 1
TEXTURE_CUBE_MAP_ARRAY_ARB :: 36873
TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB :: 36874
PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB :: 36875
SAMPLER_CUBE_MAP_ARRAY_ARB :: 36876
SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB :: 36877
INT_SAMPLER_CUBE_MAP_ARRAY_ARB :: 36878
UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB :: 36879
ARB_texture_env_add :: 1
ARB_texture_env_combine :: 1
SUBTRACT_ARB :: 34023
COMBINE_ARB :: 34160
COMBINE_RGB_ARB :: 34161
COMBINE_ALPHA_ARB :: 34162
RGB_SCALE_ARB :: 34163
ADD_SIGNED_ARB :: 34164
INTERPOLATE_ARB :: 34165
CONSTANT_ARB :: 34166
PRIMARY_COLOR_ARB :: 34167
PREVIOUS_ARB :: 34168
SOURCE0_RGB_ARB :: 34176
SOURCE1_RGB_ARB :: 34177
SOURCE2_RGB_ARB :: 34178
SOURCE0_ALPHA_ARB :: 34184
SOURCE1_ALPHA_ARB :: 34185
SOURCE2_ALPHA_ARB :: 34186
OPERAND0_RGB_ARB :: 34192
OPERAND1_RGB_ARB :: 34193
OPERAND2_RGB_ARB :: 34194
OPERAND0_ALPHA_ARB :: 34200
OPERAND1_ALPHA_ARB :: 34201
OPERAND2_ALPHA_ARB :: 34202
ARB_texture_env_crossbar :: 1
ARB_texture_env_dot3 :: 1
DOT3_RGB_ARB :: 34478
DOT3_RGBA_ARB :: 34479
ARB_texture_filter_anisotropic :: 1
ARB_texture_filter_minmax :: 1
TEXTURE_REDUCTION_MODE_ARB :: 37734
WEIGHTED_AVERAGE_ARB :: 37735
ARB_texture_float :: 1
RGBA32F_ARB :: 34836
RGB32F_ARB :: 34837
ALPHA32F_ARB :: 34838
INTENSITY32F_ARB :: 34839
LUMINANCE32F_ARB :: 34840
LUMINANCE_ALPHA32F_ARB :: 34841
RGBA16F_ARB :: 34842
RGB16F_ARB :: 34843
ALPHA16F_ARB :: 34844
INTENSITY16F_ARB :: 34845
LUMINANCE16F_ARB :: 34846
LUMINANCE_ALPHA16F_ARB :: 34847
TEXTURE_RED_TYPE_ARB :: 35856
TEXTURE_GREEN_TYPE_ARB :: 35857
TEXTURE_BLUE_TYPE_ARB :: 35858
TEXTURE_ALPHA_TYPE_ARB :: 35859
TEXTURE_LUMINANCE_TYPE_ARB :: 35860
TEXTURE_INTENSITY_TYPE_ARB :: 35861
TEXTURE_DEPTH_TYPE_ARB :: 35862
UNSIGNED_NORMALIZED_ARB :: 35863
ARB_texture_gather :: 1
MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB :: 36446
MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB :: 36447
MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB :: 36767
ARB_texture_mirror_clamp_to_edge :: 1
MIRROR_CLAMP_TO_EDGE :: 34627
ARB_texture_mirrored_repeat :: 1
MIRRORED_REPEAT_ARB :: 33648
ARB_texture_multisample :: 1
SAMPLE_POSITION :: 36432
SAMPLE_MASK :: 36433
SAMPLE_MASK_VALUE :: 36434
MAX_SAMPLE_MASK_WORDS :: 36441
TEXTURE_2D_MULTISAMPLE :: 37120
PROXY_TEXTURE_2D_MULTISAMPLE :: 37121
TEXTURE_2D_MULTISAMPLE_ARRAY :: 37122
PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY :: 37123
TEXTURE_BINDING_2D_MULTISAMPLE :: 37124
TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: 37125
TEXTURE_SAMPLES :: 37126
TEXTURE_FIXED_SAMPLE_LOCATIONS :: 37127
SAMPLER_2D_MULTISAMPLE :: 37128
INT_SAMPLER_2D_MULTISAMPLE :: 37129
UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE :: 37130
SAMPLER_2D_MULTISAMPLE_ARRAY :: 37131
INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 37132
UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 37133
MAX_COLOR_TEXTURE_SAMPLES :: 37134
MAX_DEPTH_TEXTURE_SAMPLES :: 37135
MAX_INTEGER_SAMPLES :: 37136
ARB_texture_non_power_of_two :: 1
ARB_texture_query_levels :: 1
ARB_texture_query_lod :: 1
ARB_texture_rectangle :: 1
TEXTURE_RECTANGLE_ARB :: 34037
TEXTURE_BINDING_RECTANGLE_ARB :: 34038
PROXY_TEXTURE_RECTANGLE_ARB :: 34039
MAX_RECTANGLE_TEXTURE_SIZE_ARB :: 34040
ARB_texture_rg :: 1
COMPRESSED_RED :: 33317
COMPRESSED_RG :: 33318
RG :: 33319
RG_INTEGER :: 33320
R8 :: 33321
R16 :: 33322
RG8 :: 33323
RG16 :: 33324
R16F :: 33325
R32F :: 33326
RG16F :: 33327
RG32F :: 33328
R8I :: 33329
R8UI :: 33330
R16I :: 33331
R16UI :: 33332
R32I :: 33333
R32UI :: 33334
RG8I :: 33335
RG16I :: 33337
RG32I :: 33339
RG32UI :: 33340
ARB_texture_rgb10_a2ui :: 1
ARB_texture_stencil8 :: 1
ARB_texture_storage :: 1
TEXTURE_IMMUTABLE_FORMAT :: 37167
ARB_texture_storage_multisample :: 1
ARB_texture_swizzle :: 1
TEXTURE_SWIZZLE_R :: 36418
TEXTURE_SWIZZLE_G :: 36419
TEXTURE_SWIZZLE_B :: 36420
TEXTURE_SWIZZLE_A :: 36421
TEXTURE_SWIZZLE_RGBA :: 36422
ARB_texture_view :: 1
TEXTURE_VIEW_MIN_LEVEL :: 33499
TEXTURE_VIEW_NUM_LEVELS :: 33500
TEXTURE_VIEW_MIN_LAYER :: 33501
TEXTURE_VIEW_NUM_LAYERS :: 33502
ARB_timer_query :: 1
TIME_ELAPSED :: 35007
TIMESTAMP :: 36392
ARB_transform_feedback2 :: 1
TRANSFORM_FEEDBACK :: 36386
TRANSFORM_FEEDBACK_BUFFER_PAUSED :: 36387
TRANSFORM_FEEDBACK_BUFFER_ACTIVE :: 36388
TRANSFORM_FEEDBACK_BINDING :: 36389
ARB_transform_feedback3 :: 1
MAX_TRANSFORM_FEEDBACK_BUFFERS :: 36464
ARB_transform_feedback_instanced :: 1
ARB_transform_feedback_overflow_query :: 1
TRANSFORM_FEEDBACK_OVERFLOW_ARB :: 33516
TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB :: 33517
ARB_transpose_matrix :: 1
TRANSPOSE_MODELVIEW_MATRIX_ARB :: 34019
TRANSPOSE_PROJECTION_MATRIX_ARB :: 34020
TRANSPOSE_TEXTURE_MATRIX_ARB :: 34021
TRANSPOSE_COLOR_MATRIX_ARB :: 34022
ARB_uniform_buffer_object :: 1
UNIFORM_BUFFER :: 35345
UNIFORM_BUFFER_BINDING :: 35368
UNIFORM_BUFFER_START :: 35369
UNIFORM_BUFFER_SIZE :: 35370
MAX_VERTEX_UNIFORM_BLOCKS :: 35371
MAX_GEOMETRY_UNIFORM_BLOCKS :: 35372
MAX_FRAGMENT_UNIFORM_BLOCKS :: 35373
MAX_COMBINED_UNIFORM_BLOCKS :: 35374
MAX_UNIFORM_BUFFER_BINDINGS :: 35375
MAX_UNIFORM_BLOCK_SIZE :: 35376
MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS :: 35377
MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS :: 35378
MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS :: 35379
UNIFORM_BUFFER_OFFSET_ALIGNMENT :: 35380
ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH :: 35381
ACTIVE_UNIFORM_BLOCKS :: 35382
UNIFORM_TYPE :: 35383
UNIFORM_SIZE :: 35384
UNIFORM_NAME_LENGTH :: 35385
UNIFORM_BLOCK_INDEX :: 35386
UNIFORM_OFFSET :: 35387
UNIFORM_ARRAY_STRIDE :: 35388
UNIFORM_MATRIX_STRIDE :: 35389
UNIFORM_IS_ROW_MAJOR :: 35390
UNIFORM_BLOCK_BINDING :: 35391
UNIFORM_BLOCK_DATA_SIZE :: 35392
UNIFORM_BLOCK_NAME_LENGTH :: 35393
UNIFORM_BLOCK_ACTIVE_UNIFORMS :: 35394
UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES :: 35395
UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER :: 35396
UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER :: 35397
UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :: 35398
INVALID_INDEX :: `0xFFFFFFFFu`
ARB_vertex_array_bgra :: 1
ARB_vertex_array_object :: 1
VERTEX_ARRAY_BINDING :: 34229
ARB_vertex_attrib_64bit :: 1
ARB_vertex_attrib_binding :: 1
VERTEX_ATTRIB_BINDING :: 33492
VERTEX_ATTRIB_RELATIVE_OFFSET :: 33493
VERTEX_BINDING_DIVISOR :: 33494
VERTEX_BINDING_OFFSET :: 33495
VERTEX_BINDING_STRIDE :: 33496
MAX_VERTEX_ATTRIB_RELATIVE_OFFSET :: 33497
MAX_VERTEX_ATTRIB_BINDINGS :: 33498
VERTEX_BINDING_BUFFER :: 36687
ARB_vertex_blend :: 1
MODELVIEW0_ARB :: 5888
MODELVIEW1_ARB :: 34058
MAX_VERTEX_UNITS_ARB :: 34468
ACTIVE_VERTEX_UNITS_ARB :: 34469
WEIGHT_SUM_UNITY_ARB :: 34470
VERTEX_BLEND_ARB :: 34471
CURRENT_WEIGHT_ARB :: 34472
WEIGHT_ARRAY_TYPE_ARB :: 34473
WEIGHT_ARRAY_STRIDE_ARB :: 34474
WEIGHT_ARRAY_SIZE_ARB :: 34475
WEIGHT_ARRAY_POINTER_ARB :: 34476
WEIGHT_ARRAY_ARB :: 34477
MODELVIEW2_ARB :: 34594
MODELVIEW3_ARB :: 34595
MODELVIEW4_ARB :: 34596
MODELVIEW5_ARB :: 34597
MODELVIEW6_ARB :: 34598
MODELVIEW7_ARB :: 34599
MODELVIEW8_ARB :: 34600
MODELVIEW9_ARB :: 34601
MODELVIEW10_ARB :: 34602
MODELVIEW11_ARB :: 34603
MODELVIEW12_ARB :: 34604
MODELVIEW13_ARB :: 34605
MODELVIEW14_ARB :: 34606
MODELVIEW15_ARB :: 34607
MODELVIEW16_ARB :: 34608
MODELVIEW17_ARB :: 34609
MODELVIEW18_ARB :: 34610
MODELVIEW19_ARB :: 34611
MODELVIEW20_ARB :: 34612
MODELVIEW21_ARB :: 34613
MODELVIEW22_ARB :: 34614
MODELVIEW23_ARB :: 34615
MODELVIEW24_ARB :: 34616
MODELVIEW25_ARB :: 34617
MODELVIEW26_ARB :: 34618
MODELVIEW27_ARB :: 34619
MODELVIEW28_ARB :: 34620
MODELVIEW29_ARB :: 34621
MODELVIEW30_ARB :: 34622
MODELVIEW31_ARB :: 34623
ARB_vertex_buffer_object :: 1
BUFFER_SIZE_ARB :: 34660
BUFFER_USAGE_ARB :: 34661
ARRAY_BUFFER_ARB :: 34962
ELEMENT_ARRAY_BUFFER_ARB :: 34963
ARRAY_BUFFER_BINDING_ARB :: 34964
ELEMENT_ARRAY_BUFFER_BINDING_ARB :: 34965
VERTEX_ARRAY_BUFFER_BINDING_ARB :: 34966
NORMAL_ARRAY_BUFFER_BINDING_ARB :: 34967
COLOR_ARRAY_BUFFER_BINDING_ARB :: 34968
INDEX_ARRAY_BUFFER_BINDING_ARB :: 34969
TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB :: 34970
EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB :: 34971
SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB :: 34972
FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB :: 34973
WEIGHT_ARRAY_BUFFER_BINDING_ARB :: 34974
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB :: 34975
READ_ONLY_ARB :: 35000
WRITE_ONLY_ARB :: 35001
READ_WRITE_ARB :: 35002
BUFFER_ACCESS_ARB :: 35003
BUFFER_MAPPED_ARB :: 35004
BUFFER_MAP_POINTER_ARB :: 35005
STREAM_DRAW_ARB :: 35040
STREAM_READ_ARB :: 35041
STREAM_COPY_ARB :: 35042
STATIC_DRAW_ARB :: 35044
STATIC_READ_ARB :: 35045
STATIC_COPY_ARB :: 35046
DYNAMIC_DRAW_ARB :: 35048
DYNAMIC_READ_ARB :: 35049
DYNAMIC_COPY_ARB :: 35050
ARB_vertex_program :: 1
COLOR_SUM_ARB :: 33880
VERTEX_PROGRAM_ARB :: 34336
VERTEX_ATTRIB_ARRAY_ENABLED_ARB :: 34338
VERTEX_ATTRIB_ARRAY_SIZE_ARB :: 34339
VERTEX_ATTRIB_ARRAY_STRIDE_ARB :: 34340
VERTEX_ATTRIB_ARRAY_TYPE_ARB :: 34341
CURRENT_VERTEX_ATTRIB_ARB :: 34342
PROGRAM_LENGTH_ARB :: 34343
PROGRAM_STRING_ARB :: 34344
MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB :: 34350
MAX_PROGRAM_MATRICES_ARB :: 34351
CURRENT_MATRIX_STACK_DEPTH_ARB :: 34368
CURRENT_MATRIX_ARB :: 34369
VERTEX_PROGRAM_POINT_SIZE_ARB :: 34370
VERTEX_PROGRAM_TWO_SIDE_ARB :: 34371
VERTEX_ATTRIB_ARRAY_POINTER_ARB :: 34373
PROGRAM_ERROR_POSITION_ARB :: 34379
PROGRAM_BINDING_ARB :: 34423
MAX_VERTEX_ATTRIBS_ARB :: 34921
VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB :: 34922
PROGRAM_ERROR_STRING_ARB :: 34932
PROGRAM_FORMAT_ASCII_ARB :: 34933
PROGRAM_FORMAT_ARB :: 34934
PROGRAM_INSTRUCTIONS_ARB :: 34976
MAX_PROGRAM_INSTRUCTIONS_ARB :: 34977
PROGRAM_NATIVE_INSTRUCTIONS_ARB :: 34978
MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB :: 34979
PROGRAM_TEMPORARIES_ARB :: 34980
MAX_PROGRAM_TEMPORARIES_ARB :: 34981
PROGRAM_NATIVE_TEMPORARIES_ARB :: 34982
MAX_PROGRAM_NATIVE_TEMPORARIES_ARB :: 34983
PROGRAM_PARAMETERS_ARB :: 34984
MAX_PROGRAM_PARAMETERS_ARB :: 34985
PROGRAM_NATIVE_PARAMETERS_ARB :: 34986
MAX_PROGRAM_NATIVE_PARAMETERS_ARB :: 34987
PROGRAM_ATTRIBS_ARB :: 34988
MAX_PROGRAM_ATTRIBS_ARB :: 34989
PROGRAM_NATIVE_ATTRIBS_ARB :: 34990
MAX_PROGRAM_NATIVE_ATTRIBS_ARB :: 34991
PROGRAM_ADDRESS_REGISTERS_ARB :: 34992
MAX_PROGRAM_ADDRESS_REGISTERS_ARB :: 34993
PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB :: 34994
MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB :: 34995
MAX_PROGRAM_LOCAL_PARAMETERS_ARB :: 34996
MAX_PROGRAM_ENV_PARAMETERS_ARB :: 34997
PROGRAM_UNDER_NATIVE_LIMITS_ARB :: 34998
TRANSPOSE_CURRENT_MATRIX_ARB :: 34999
MATRIX0_ARB :: 35008
MATRIX1_ARB :: 35009
MATRIX2_ARB :: 35010
MATRIX3_ARB :: 35011
MATRIX4_ARB :: 35012
MATRIX5_ARB :: 35013
MATRIX6_ARB :: 35014
MATRIX7_ARB :: 35015
MATRIX8_ARB :: 35016
MATRIX9_ARB :: 35017
MATRIX10_ARB :: 35018
MATRIX11_ARB :: 35019
MATRIX12_ARB :: 35020
MATRIX13_ARB :: 35021
MATRIX14_ARB :: 35022
MATRIX15_ARB :: 35023
MATRIX16_ARB :: 35024
MATRIX17_ARB :: 35025
MATRIX18_ARB :: 35026
MATRIX19_ARB :: 35027
MATRIX20_ARB :: 35028
MATRIX21_ARB :: 35029
MATRIX22_ARB :: 35030
MATRIX23_ARB :: 35031
MATRIX24_ARB :: 35032
MATRIX25_ARB :: 35033
MATRIX26_ARB :: 35034
MATRIX27_ARB :: 35035
MATRIX28_ARB :: 35036
MATRIX29_ARB :: 35037
MATRIX30_ARB :: 35038
MATRIX31_ARB :: 35039
ARB_vertex_shader :: 1
VERTEX_SHADER_ARB :: 35633
MAX_VERTEX_UNIFORM_COMPONENTS_ARB :: 35658
MAX_VARYING_FLOATS_ARB :: 35659
MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB :: 35660
MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB :: 35661
OBJECT_ACTIVE_ATTRIBUTES_ARB :: 35721
OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB :: 35722
ARB_vertex_type_10f_11f_11f_rev :: 1
ARB_vertex_type_2_10_10_10_rev :: 1
UNSIGNED_INT_2_10_10_10_REV :: 33640
INT_2_10_10_10_REV :: 36255
ARB_viewport_array :: 1
MAX_VIEWPORTS :: 33371
VIEWPORT_SUBPIXEL_BITS :: 33372
VIEWPORT_BOUNDS_RANGE :: 33373
LAYER_PROVOKING_VERTEX :: 33374
VIEWPORT_INDEX_PROVOKING_VERTEX :: 33375
UNDEFINED_VERTEX :: 33376
ARB_window_pos :: 1
ARM_mali_program_binary :: 1
MALI_PROGRAM_BINARY_ARM :: 36705
ARM_mali_shader_binary :: 1
MALI_SHADER_BINARY_ARM :: 36704
ARM_rgba8 :: 1
RGBA8_OES :: 32856
ARM_shader_core_properties :: 1
SHADER_CORE_COUNT_ARM :: 38640
SHADER_CORE_ACTIVE_COUNT_ARM :: 38641
SHADER_CORE_PRESENT_MASK_ARM :: 38642
SHADER_CORE_MAX_WARP_COUNT_ARM :: 38643
SHADER_CORE_PIXEL_RATE_ARM :: 38644
SHADER_CORE_TEXEL_RATE_ARM :: 38645
SHADER_CORE_FMA_RATE_ARM :: 38646
ARM_shader_framebuffer_fetch :: 1
FETCH_PER_SAMPLE_ARM :: 36709
FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM :: 36710
ARM_shader_framebuffer_fetch_depth_stencil :: 1
ARM_texture_unnormalized_coordinates :: 1
TEXTURE_UNNORMALIZED_COORDINATES_ARM :: 36714
ATIX_point_sprites :: 1
TEXTURE_POINT_MODE_ATIX :: 24752
TEXTURE_POINT_ONE_COORD_ATIX :: 24753
TEXTURE_POINT_SPRITE_ATIX :: 24754
POINT_SPRITE_CULL_MODE_ATIX :: 24755
POINT_SPRITE_CULL_CENTER_ATIX :: 24756
POINT_SPRITE_CULL_CLIP_ATIX :: 24757
ATIX_texture_env_combine3 :: 1
MODULATE_ADD_ATIX :: 34628
MODULATE_SIGNED_ADD_ATIX :: 34629
MODULATE_SUBTRACT_ATIX :: 34630
ATIX_texture_env_route :: 1
SECONDARY_COLOR_ATIX :: 34631
TEXTURE_OUTPUT_RGB_ATIX :: 34632
TEXTURE_OUTPUT_ALPHA_ATIX :: 34633
ATIX_vertex_shader_output_point_size :: 1
OUTPUT_POINT_SIZE_ATIX :: 24846
ATI_draw_buffers :: 1
MAX_DRAW_BUFFERS_ATI :: 34852
DRAW_BUFFER0_ATI :: 34853
DRAW_BUFFER1_ATI :: 34854
DRAW_BUFFER2_ATI :: 34855
DRAW_BUFFER3_ATI :: 34856
DRAW_BUFFER4_ATI :: 34857
DRAW_BUFFER5_ATI :: 34858
DRAW_BUFFER6_ATI :: 34859
DRAW_BUFFER7_ATI :: 34860
DRAW_BUFFER8_ATI :: 34861
DRAW_BUFFER9_ATI :: 34862
DRAW_BUFFER10_ATI :: 34863
DRAW_BUFFER11_ATI :: 34864
DRAW_BUFFER12_ATI :: 34865
DRAW_BUFFER13_ATI :: 34866
DRAW_BUFFER14_ATI :: 34867
DRAW_BUFFER15_ATI :: 34868
ATI_element_array :: 1
ELEMENT_ARRAY_ATI :: 34664
ELEMENT_ARRAY_TYPE_ATI :: 34665
ELEMENT_ARRAY_POINTER_ATI :: 34666
ATI_envmap_bumpmap :: 1
BUMP_ROT_MATRIX_ATI :: 34677
BUMP_ROT_MATRIX_SIZE_ATI :: 34678
BUMP_NUM_TEX_UNITS_ATI :: 34679
BUMP_TEX_UNITS_ATI :: 34680
DUDV_ATI :: 34681
DU8DV8_ATI :: 34682
BUMP_ENVMAP_ATI :: 34683
BUMP_TARGET_ATI :: 34684
ATI_fragment_shader :: 1
GL_2X_BIT_ATI :: 1
RED_BIT_ATI :: 1
GL_4X_BIT_ATI :: 2
COMP_BIT_ATI :: 2
GREEN_BIT_ATI :: 2
GL_8X_BIT_ATI :: 4
BLUE_BIT_ATI :: 4
NEGATE_BIT_ATI :: 4
BIAS_BIT_ATI :: 8
HALF_BIT_ATI :: 8
QUARTER_BIT_ATI :: 16
EIGHTH_BIT_ATI :: 32
SATURATE_BIT_ATI :: 64
FRAGMENT_SHADER_ATI :: 35104
REG_0_ATI :: 35105
REG_1_ATI :: 35106
REG_2_ATI :: 35107
REG_3_ATI :: 35108
REG_4_ATI :: 35109
REG_5_ATI :: 35110
CON_0_ATI :: 35137
CON_1_ATI :: 35138
CON_2_ATI :: 35139
CON_3_ATI :: 35140
CON_4_ATI :: 35141
CON_5_ATI :: 35142
CON_6_ATI :: 35143
CON_7_ATI :: 35144
MOV_ATI :: 35169
ADD_ATI :: 35171
MUL_ATI :: 35172
SUB_ATI :: 35173
DOT3_ATI :: 35174
DOT4_ATI :: 35175
MAD_ATI :: 35176
LERP_ATI :: 35177
CND_ATI :: 35178
CND0_ATI :: 35179
DOT2_ADD_ATI :: 35180
SECONDARY_INTERPOLATOR_ATI :: 35181
NUM_FRAGMENT_REGISTERS_ATI :: 35182
NUM_FRAGMENT_CONSTANTS_ATI :: 35183
NUM_PASSES_ATI :: 35184
NUM_INSTRUCTIONS_PER_PASS_ATI :: 35185
NUM_INSTRUCTIONS_TOTAL_ATI :: 35186
NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI :: 35187
NUM_LOOPBACK_COMPONENTS_ATI :: 35188
COLOR_ALPHA_PAIRING_ATI :: 35189
SWIZZLE_STR_ATI :: 35190
SWIZZLE_STQ_ATI :: 35191
SWIZZLE_STR_DR_ATI :: 35192
SWIZZLE_STQ_DQ_ATI :: 35193
SWIZZLE_STRQ_ATI :: 35194
SWIZZLE_STRQ_DQ_ATI :: 35195
ATI_map_object_buffer :: 1
ATI_meminfo :: 1
VBO_FREE_MEMORY_ATI :: 34811
TEXTURE_FREE_MEMORY_ATI :: 34812
RENDERBUFFER_FREE_MEMORY_ATI :: 34813
ATI_pn_triangles :: 1
PN_TRIANGLES_ATI :: 34800
MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI :: 34801
PN_TRIANGLES_POINT_MODE_ATI :: 34802
PN_TRIANGLES_NORMAL_MODE_ATI :: 34803
PN_TRIANGLES_TESSELATION_LEVEL_ATI :: 34804
PN_TRIANGLES_POINT_MODE_LINEAR_ATI :: 34805
PN_TRIANGLES_POINT_MODE_CUBIC_ATI :: 34806
PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI :: 34807
PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI :: 34808
ATI_separate_stencil :: 1
STENCIL_BACK_FUNC_ATI :: 34816
STENCIL_BACK_FAIL_ATI :: 34817
STENCIL_BACK_PASS_DEPTH_FAIL_ATI :: 34818
STENCIL_BACK_PASS_DEPTH_PASS_ATI :: 34819
ATI_shader_texture_lod :: 1
ATI_text_fragment_shader :: 1
TEXT_FRAGMENT_SHADER_ATI :: 33280
ATI_texture_compression_3dc :: 1
COMPRESSED_LUMINANCE_ALPHA_3DC_ATI :: 34871
ATI_texture_env_combine3 :: 1
MODULATE_ADD_ATI :: 34628
MODULATE_SIGNED_ADD_ATI :: 34629
MODULATE_SUBTRACT_ATI :: 34630
ATI_texture_float :: 1
RGBA_FLOAT32_ATI :: 34836
RGB_FLOAT32_ATI :: 34837
ALPHA_FLOAT32_ATI :: 34838
INTENSITY_FLOAT32_ATI :: 34839
LUMINANCE_FLOAT32_ATI :: 34840
LUMINANCE_ALPHA_FLOAT32_ATI :: 34841
RGBA_FLOAT16_ATI :: 34842
RGB_FLOAT16_ATI :: 34843
ALPHA_FLOAT16_ATI :: 34844
INTENSITY_FLOAT16_ATI :: 34845
LUMINANCE_FLOAT16_ATI :: 34846
LUMINANCE_ALPHA_FLOAT16_ATI :: 34847
ATI_texture_mirror_once :: 1
MIRROR_CLAMP_ATI :: 34626
MIRROR_CLAMP_TO_EDGE_ATI :: 34627
ATI_vertex_array_object :: 1
STATIC_ATI :: 34656
DYNAMIC_ATI :: 34657
PRESERVE_ATI :: 34658
DISCARD_ATI :: 34659
OBJECT_BUFFER_SIZE_ATI :: 34660
OBJECT_BUFFER_USAGE_ATI :: 34661
ARRAY_OBJECT_BUFFER_ATI :: 34662
ARRAY_OBJECT_OFFSET_ATI :: 34663
ATI_vertex_attrib_array_object :: 1
ATI_vertex_streams :: 1
MAX_VERTEX_STREAMS_ATI :: 34667
VERTEX_SOURCE_ATI :: 34668
VERTEX_STREAM0_ATI :: 34669
VERTEX_STREAM1_ATI :: 34670
VERTEX_STREAM2_ATI :: 34671
VERTEX_STREAM3_ATI :: 34672
VERTEX_STREAM4_ATI :: 34673
VERTEX_STREAM5_ATI :: 34674
VERTEX_STREAM6_ATI :: 34675
VERTEX_STREAM7_ATI :: 34676
DMP_program_binary :: 1
SMAPHS30_PROGRAM_BINARY_DMP :: 37457
SMAPHS_PROGRAM_BINARY_DMP :: 37458
DMP_PROGRAM_BINARY_DMP :: 37459
DMP_shader_binary :: 1
SHADER_BINARY_DMP :: 37456
EXT_422_pixels :: 1
GL_422_EXT :: 32972
GL_422_REV_EXT :: 32973
GL_422_AVERAGE_EXT :: 32974
GL_422_REV_AVERAGE_EXT :: 32975
EXT_Cg_shader :: 1
CG_VERTEX_SHADER_EXT :: 35086
CG_FRAGMENT_SHADER_EXT :: 35087
EXT_EGL_image_array :: 1
EXT_EGL_image_external_wrap_modes :: 1
EXT_EGL_image_storage :: 1
EXT_EGL_image_storage_compression :: 1
SURFACE_COMPRESSION_EXT :: 38592
SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT :: 38593
SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT :: 38594
EXT_EGL_sync :: 1
EXT_YUV_target :: 1
SAMPLER_EXTERNAL_2D_Y2Y_EXT :: 35815
EXT_abgr :: 1
ABGR_EXT :: 32768
EXT_base_instance :: 1
EXT_bgra :: 1
BGR_EXT :: 32992
EXT_bindable_uniform :: 1
MAX_VERTEX_BINDABLE_UNIFORMS_EXT :: 36322
MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT :: 36323
MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT :: 36324
MAX_BINDABLE_UNIFORM_SIZE_EXT :: 36333
UNIFORM_BUFFER_EXT :: 36334
UNIFORM_BUFFER_BINDING_EXT :: 36335
EXT_blend_color :: 1
CONSTANT_COLOR_EXT :: 32769
ONE_MINUS_CONSTANT_COLOR_EXT :: 32770
CONSTANT_ALPHA_EXT :: 32771
ONE_MINUS_CONSTANT_ALPHA_EXT :: 32772
BLEND_COLOR_EXT :: 32773
EXT_blend_equation_separate :: 1
BLEND_EQUATION_RGB_EXT :: 32777
BLEND_EQUATION_ALPHA_EXT :: 34877
EXT_blend_func_extended :: 1
SRC_ALPHA_SATURATE_EXT :: 776
SRC1_ALPHA_EXT :: 34185
SRC1_COLOR_EXT :: 35065
ONE_MINUS_SRC1_COLOR_EXT :: 35066
ONE_MINUS_SRC1_ALPHA_EXT :: 35067
MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT :: 35068
LOCATION_INDEX_EXT :: 37647
EXT_blend_func_separate :: 1
BLEND_DST_RGB_EXT :: 32968
BLEND_SRC_RGB_EXT :: 32969
BLEND_DST_ALPHA_EXT :: 32970
BLEND_SRC_ALPHA_EXT :: 32971
EXT_blend_logic_op :: 1
EXT_blend_minmax :: 1
FUNC_ADD_EXT :: 32774
MIN_EXT :: 32775
MAX_EXT :: 32776
BLEND_EQUATION_EXT :: 32777
EXT_blend_subtract :: 1
FUNC_SUBTRACT_EXT :: 32778
FUNC_REVERSE_SUBTRACT_EXT :: 32779
EXT_buffer_storage :: 1
MAP_PERSISTENT_BIT_EXT :: 64
MAP_COHERENT_BIT_EXT :: 128
DYNAMIC_STORAGE_BIT_EXT :: 256
CLIENT_STORAGE_BIT_EXT :: 512
CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT :: 16384
BUFFER_IMMUTABLE_STORAGE_EXT :: 33311
BUFFER_STORAGE_FLAGS_EXT :: 33312
EXT_clear_texture :: 1
EXT_clip_control :: 1
LOWER_LEFT_EXT :: 36001
UPPER_LEFT_EXT :: 36002
CLIP_ORIGIN_EXT :: 37724
CLIP_DEPTH_MODE_EXT :: 37725
NEGATIVE_ONE_TO_ONE_EXT :: 37726
ZERO_TO_ONE_EXT :: 37727
EXT_clip_cull_distance :: 1
MAX_CLIP_DISTANCES_EXT :: 3378
CLIP_DISTANCE0_EXT :: 12288
CLIP_DISTANCE1_EXT :: 12289
CLIP_DISTANCE2_EXT :: 12290
CLIP_DISTANCE3_EXT :: 12291
CLIP_DISTANCE4_EXT :: 12292
CLIP_DISTANCE5_EXT :: 12293
CLIP_DISTANCE6_EXT :: 12294
CLIP_DISTANCE7_EXT :: 12295
MAX_CULL_DISTANCES_EXT :: 33529
MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT :: 33530
EXT_clip_volume_hint :: 1
CLIP_VOLUME_CLIPPING_HINT_EXT :: 33008
EXT_cmyka :: 1
CMYK_EXT :: 32780
CMYKA_EXT :: 32781
PACK_CMYK_HINT_EXT :: 32782
UNPACK_CMYK_HINT_EXT :: 32783
EXT_color_buffer_float :: 1
EXT_color_buffer_half_float :: 1
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT :: 33297
R16F_EXT :: 33325
RG16F_EXT :: 33327
RGBA16F_EXT :: 34842
RGB16F_EXT :: 34843
UNSIGNED_NORMALIZED_EXT :: 35863
EXT_color_subtable :: 1
EXT_compiled_vertex_array :: 1
ARRAY_ELEMENT_LOCK_FIRST_EXT :: 33192
ARRAY_ELEMENT_LOCK_COUNT_EXT :: 33193
EXT_compressed_ETC1_RGB8_sub_texture :: 1
EXT_conservative_depth :: 1
EXT_convolution :: 1
CONVOLUTION_1D_EXT :: 32784
CONVOLUTION_2D_EXT :: 32785
SEPARABLE_2D_EXT :: 32786
CONVOLUTION_BORDER_MODE_EXT :: 32787
CONVOLUTION_FILTER_SCALE_EXT :: 32788
CONVOLUTION_FILTER_BIAS_EXT :: 32789
REDUCE_EXT :: 32790
CONVOLUTION_FORMAT_EXT :: 32791
CONVOLUTION_WIDTH_EXT :: 32792
CONVOLUTION_HEIGHT_EXT :: 32793
MAX_CONVOLUTION_WIDTH_EXT :: 32794
MAX_CONVOLUTION_HEIGHT_EXT :: 32795
POST_CONVOLUTION_RED_SCALE_EXT :: 32796
POST_CONVOLUTION_GREEN_SCALE_EXT :: 32797
POST_CONVOLUTION_BLUE_SCALE_EXT :: 32798
POST_CONVOLUTION_ALPHA_SCALE_EXT :: 32799
POST_CONVOLUTION_RED_BIAS_EXT :: 32800
POST_CONVOLUTION_GREEN_BIAS_EXT :: 32801
POST_CONVOLUTION_BLUE_BIAS_EXT :: 32802
POST_CONVOLUTION_ALPHA_BIAS_EXT :: 32803
EXT_coordinate_frame :: 1
TANGENT_ARRAY_EXT :: 33849
BINORMAL_ARRAY_EXT :: 33850
CURRENT_TANGENT_EXT :: 33851
CURRENT_BINORMAL_EXT :: 33852
TANGENT_ARRAY_TYPE_EXT :: 33854
TANGENT_ARRAY_STRIDE_EXT :: 33855
BINORMAL_ARRAY_TYPE_EXT :: 33856
BINORMAL_ARRAY_STRIDE_EXT :: 33857
TANGENT_ARRAY_POINTER_EXT :: 33858
BINORMAL_ARRAY_POINTER_EXT :: 33859
MAP1_TANGENT_EXT :: 33860
MAP2_TANGENT_EXT :: 33861
MAP1_BINORMAL_EXT :: 33862
MAP2_BINORMAL_EXT :: 33863
EXT_copy_image :: 1
EXT_copy_texture :: 1
EXT_cull_vertex :: 1
CULL_VERTEX_EXT :: 33194
CULL_VERTEX_EYE_POSITION_EXT :: 33195
CULL_VERTEX_OBJECT_POSITION_EXT :: 33196
EXT_debug_label :: 1
PROGRAM_PIPELINE_OBJECT_EXT :: 35407
PROGRAM_OBJECT_EXT :: 35648
SHADER_OBJECT_EXT :: 35656
BUFFER_OBJECT_EXT :: 37201
QUERY_OBJECT_EXT :: 37203
VERTEX_ARRAY_OBJECT_EXT :: 37204
EXT_debug_marker :: 1
EXT_depth_bounds_test :: 1
DEPTH_BOUNDS_TEST_EXT :: 34960
DEPTH_BOUNDS_EXT :: 34961
EXT_depth_clamp :: 1
DEPTH_CLAMP_EXT :: 34383
EXT_direct_state_access :: 1
PROGRAM_MATRIX_EXT :: 36397
TRANSPOSE_PROGRAM_MATRIX_EXT :: 36398
PROGRAM_MATRIX_STACK_DEPTH_EXT :: 36399
EXT_discard_framebuffer :: 1
COLOR_EXT :: 6144
DEPTH_EXT :: 6145
STENCIL_EXT :: 6146
EXT_disjoint_timer_query :: 1
QUERY_COUNTER_BITS_EXT :: 34916
CURRENT_QUERY_EXT :: 34917
QUERY_RESULT_EXT :: 34918
QUERY_RESULT_AVAILABLE_EXT :: 34919
TIME_ELAPSED_EXT :: 35007
TIMESTAMP_EXT :: 36392
GPU_DISJOINT_EXT :: 36795
EXT_draw_buffers :: 1
MAX_DRAW_BUFFERS_EXT :: 34852
DRAW_BUFFER0_EXT :: 34853
DRAW_BUFFER1_EXT :: 34854
DRAW_BUFFER2_EXT :: 34855
DRAW_BUFFER3_EXT :: 34856
DRAW_BUFFER4_EXT :: 34857
DRAW_BUFFER5_EXT :: 34858
DRAW_BUFFER6_EXT :: 34859
DRAW_BUFFER7_EXT :: 34860
DRAW_BUFFER8_EXT :: 34861
DRAW_BUFFER9_EXT :: 34862
DRAW_BUFFER10_EXT :: 34863
DRAW_BUFFER11_EXT :: 34864
DRAW_BUFFER12_EXT :: 34865
DRAW_BUFFER13_EXT :: 34866
DRAW_BUFFER14_EXT :: 34867
DRAW_BUFFER15_EXT :: 34868
MAX_COLOR_ATTACHMENTS_EXT :: 36063
COLOR_ATTACHMENT0_EXT :: 36064
COLOR_ATTACHMENT1_EXT :: 36065
COLOR_ATTACHMENT2_EXT :: 36066
COLOR_ATTACHMENT3_EXT :: 36067
COLOR_ATTACHMENT4_EXT :: 36068
COLOR_ATTACHMENT5_EXT :: 36069
COLOR_ATTACHMENT6_EXT :: 36070
COLOR_ATTACHMENT7_EXT :: 36071
COLOR_ATTACHMENT8_EXT :: 36072
COLOR_ATTACHMENT9_EXT :: 36073
COLOR_ATTACHMENT10_EXT :: 36074
COLOR_ATTACHMENT11_EXT :: 36075
COLOR_ATTACHMENT12_EXT :: 36076
COLOR_ATTACHMENT13_EXT :: 36077
COLOR_ATTACHMENT14_EXT :: 36078
COLOR_ATTACHMENT15_EXT :: 36079
EXT_draw_buffers2 :: 1
EXT_draw_buffers_indexed :: 1
EXT_draw_elements_base_vertex :: 1
EXT_draw_instanced :: 1
EXT_draw_range_elements :: 1
MAX_ELEMENTS_VERTICES_EXT :: 33000
MAX_ELEMENTS_INDICES_EXT :: 33001
EXT_draw_transform_feedback :: 1
EXT_external_buffer :: 1
EXT_float_blend :: 1
EXT_fog_coord :: 1
FOG_COORDINATE_SOURCE_EXT :: 33872
FOG_COORDINATE_EXT :: 33873
FRAGMENT_DEPTH_EXT :: 33874
CURRENT_FOG_COORDINATE_EXT :: 33875
FOG_COORDINATE_ARRAY_TYPE_EXT :: 33876
FOG_COORDINATE_ARRAY_STRIDE_EXT :: 33877
FOG_COORDINATE_ARRAY_POINTER_EXT :: 33878
FOG_COORDINATE_ARRAY_EXT :: 33879
EXT_frag_depth :: 1
EXT_fragment_lighting :: 1
FRAGMENT_LIGHTING_EXT :: 33792
FRAGMENT_COLOR_MATERIAL_EXT :: 33793
FRAGMENT_COLOR_MATERIAL_FACE_EXT :: 33794
FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT :: 33795
MAX_FRAGMENT_LIGHTS_EXT :: 33796
MAX_ACTIVE_LIGHTS_EXT :: 33797
CURRENT_RASTER_NORMAL_EXT :: 33798
LIGHT_ENV_MODE_EXT :: 33799
FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT :: 33800
FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT :: 33801
FRAGMENT_LIGHT_MODEL_AMBIENT_EXT :: 33802
FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT :: 33803
FRAGMENT_LIGHT0_EXT :: 33804
FRAGMENT_LIGHT7_EXT :: 33811
EXT_framebuffer_blit :: 1
DRAW_FRAMEBUFFER_BINDING_EXT :: 36006
READ_FRAMEBUFFER_EXT :: 36008
DRAW_FRAMEBUFFER_EXT :: 36009
READ_FRAMEBUFFER_BINDING_EXT :: 36010
EXT_framebuffer_blit_layers :: 1
EXT_framebuffer_multisample :: 1
RENDERBUFFER_SAMPLES_EXT :: 36011
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT :: 36182
MAX_SAMPLES_EXT :: 36183
EXT_framebuffer_multisample_blit_scaled :: 1
SCALED_RESOLVE_FASTEST_EXT :: 37050
SCALED_RESOLVE_NICEST_EXT :: 37051
EXT_framebuffer_object :: 1
INVALID_FRAMEBUFFER_OPERATION_EXT :: 1286
MAX_RENDERBUFFER_SIZE_EXT :: 34024
FRAMEBUFFER_BINDING_EXT :: 36006
RENDERBUFFER_BINDING_EXT :: 36007
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT :: 36048
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT :: 36049
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT :: 36050
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT :: 36051
FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT :: 36052
FRAMEBUFFER_COMPLETE_EXT :: 36053
FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT :: 36054
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT :: 36055
FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT :: 36057
FRAMEBUFFER_INCOMPLETE_FORMATS_EXT :: 36058
FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT :: 36059
FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT :: 36060
FRAMEBUFFER_UNSUPPORTED_EXT :: 36061
DEPTH_ATTACHMENT_EXT :: 36096
STENCIL_ATTACHMENT_EXT :: 36128
FRAMEBUFFER_EXT :: 36160
RENDERBUFFER_EXT :: 36161
RENDERBUFFER_WIDTH_EXT :: 36162
RENDERBUFFER_HEIGHT_EXT :: 36163
RENDERBUFFER_INTERNAL_FORMAT_EXT :: 36164
STENCIL_INDEX1_EXT :: 36166
STENCIL_INDEX4_EXT :: 36167
STENCIL_INDEX8_EXT :: 36168
STENCIL_INDEX16_EXT :: 36169
RENDERBUFFER_RED_SIZE_EXT :: 36176
RENDERBUFFER_GREEN_SIZE_EXT :: 36177
RENDERBUFFER_BLUE_SIZE_EXT :: 36178
RENDERBUFFER_ALPHA_SIZE_EXT :: 36179
RENDERBUFFER_DEPTH_SIZE_EXT :: 36180
RENDERBUFFER_STENCIL_SIZE_EXT :: 36181
EXT_framebuffer_sRGB :: 1
FRAMEBUFFER_SRGB_EXT :: 36281
FRAMEBUFFER_SRGB_CAPABLE_EXT :: 36282
EXT_geometry_point_size :: 1
GEOMETRY_SHADER_BIT_EXT :: 4
LINES_ADJACENCY_EXT :: 10
LINE_STRIP_ADJACENCY_EXT :: 11
TRIANGLES_ADJACENCY_EXT :: 12
TRIANGLE_STRIP_ADJACENCY_EXT :: 13
LAYER_PROVOKING_VERTEX_EXT :: 33374
UNDEFINED_VERTEX_EXT :: 33376
GEOMETRY_SHADER_INVOCATIONS_EXT :: 34943
GEOMETRY_LINKED_VERTICES_OUT_EXT :: 35094
GEOMETRY_LINKED_INPUT_TYPE_EXT :: 35095
GEOMETRY_LINKED_OUTPUT_TYPE_EXT :: 35096
MAX_GEOMETRY_UNIFORM_BLOCKS_EXT :: 35372
MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT :: 35378
MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT :: 35881
PRIMITIVES_GENERATED_EXT :: 35975
FRAMEBUFFER_ATTACHMENT_LAYERED_EXT :: 36263
FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT :: 36264
GEOMETRY_SHADER_EXT :: 36313
MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT :: 36319
MAX_GEOMETRY_OUTPUT_VERTICES_EXT :: 36320
MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT :: 36321
FIRST_VERTEX_CONVENTION_EXT :: 36429
LAST_VERTEX_CONVENTION_EXT :: 36430
MAX_GEOMETRY_SHADER_INVOCATIONS_EXT :: 36442
MAX_GEOMETRY_IMAGE_UNIFORMS_EXT :: 37069
MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT :: 37079
MAX_GEOMETRY_INPUT_COMPONENTS_EXT :: 37155
MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT :: 37156
MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT :: 37583
MAX_GEOMETRY_ATOMIC_COUNTERS_EXT :: 37589
REFERENCED_BY_GEOMETRY_SHADER_EXT :: 37641
FRAMEBUFFER_DEFAULT_LAYERS_EXT :: 37650
MAX_FRAMEBUFFER_LAYERS_EXT :: 37655
EXT_geometry_shader :: 1
EXT_geometry_shader4 :: 1
PROGRAM_POINT_SIZE_EXT :: 34370
MAX_VARYING_COMPONENTS_EXT :: 35659
FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT :: 36052
FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT :: 36265
GEOMETRY_VERTICES_OUT_EXT :: 36314
GEOMETRY_INPUT_TYPE_EXT :: 36315
GEOMETRY_OUTPUT_TYPE_EXT :: 36316
MAX_GEOMETRY_VARYING_COMPONENTS_EXT :: 36317
MAX_VERTEX_VARYING_COMPONENTS_EXT :: 36318
EXT_gpu_program_parameters :: 1
EXT_gpu_shader4 :: 1
VERTEX_ATTRIB_ARRAY_INTEGER_EXT :: 35069
SAMPLER_1D_ARRAY_EXT :: 36288
SAMPLER_2D_ARRAY_EXT :: 36289
SAMPLER_BUFFER_EXT :: 36290
SAMPLER_1D_ARRAY_SHADOW_EXT :: 36291
SAMPLER_2D_ARRAY_SHADOW_EXT :: 36292
SAMPLER_CUBE_SHADOW_EXT :: 36293
UNSIGNED_INT_VEC2_EXT :: 36294
UNSIGNED_INT_VEC3_EXT :: 36295
UNSIGNED_INT_VEC4_EXT :: 36296
INT_SAMPLER_1D_EXT :: 36297
INT_SAMPLER_2D_EXT :: 36298
INT_SAMPLER_3D_EXT :: 36299
INT_SAMPLER_CUBE_EXT :: 36300
INT_SAMPLER_2D_RECT_EXT :: 36301
INT_SAMPLER_1D_ARRAY_EXT :: 36302
INT_SAMPLER_2D_ARRAY_EXT :: 36303
INT_SAMPLER_BUFFER_EXT :: 36304
UNSIGNED_INT_SAMPLER_1D_EXT :: 36305
UNSIGNED_INT_SAMPLER_2D_EXT :: 36306
UNSIGNED_INT_SAMPLER_3D_EXT :: 36307
UNSIGNED_INT_SAMPLER_CUBE_EXT :: 36308
UNSIGNED_INT_SAMPLER_2D_RECT_EXT :: 36309
UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT :: 36310
UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT :: 36311
UNSIGNED_INT_SAMPLER_BUFFER_EXT :: 36312
EXT_gpu_shader5 :: 1
EXT_histogram :: 1
HISTOGRAM_EXT :: 32804
PROXY_HISTOGRAM_EXT :: 32805
HISTOGRAM_WIDTH_EXT :: 32806
HISTOGRAM_FORMAT_EXT :: 32807
HISTOGRAM_RED_SIZE_EXT :: 32808
HISTOGRAM_GREEN_SIZE_EXT :: 32809
HISTOGRAM_BLUE_SIZE_EXT :: 32810
HISTOGRAM_ALPHA_SIZE_EXT :: 32811
HISTOGRAM_LUMINANCE_SIZE_EXT :: 32812
HISTOGRAM_SINK_EXT :: 32813
MINMAX_EXT :: 32814
MINMAX_FORMAT_EXT :: 32815
MINMAX_SINK_EXT :: 32816
EXT_index_array_formats :: 1
EXT_index_func :: 1
EXT_index_material :: 1
EXT_index_texture :: 1
EXT_instanced_arrays :: 1
VERTEX_ATTRIB_ARRAY_DIVISOR_EXT :: 35070
EXT_light_texture :: 1
FRAGMENT_MATERIAL_EXT :: 33609
FRAGMENT_NORMAL_EXT :: 33610
FRAGMENT_COLOR_EXT :: 33612
ATTENUATION_EXT :: 33613
SHADOW_ATTENUATION_EXT :: 33614
TEXTURE_APPLICATION_MODE_EXT :: 33615
TEXTURE_LIGHT_EXT :: 33616
TEXTURE_MATERIAL_FACE_EXT :: 33617
TEXTURE_MATERIAL_PARAMETER_EXT :: 33618
EXT_map_buffer_range :: 1
MAP_READ_BIT_EXT :: 1
MAP_WRITE_BIT_EXT :: 2
MAP_INVALIDATE_RANGE_BIT_EXT :: 4
MAP_INVALIDATE_BUFFER_BIT_EXT :: 8
MAP_FLUSH_EXPLICIT_BIT_EXT :: 16
MAP_UNSYNCHRONIZED_BIT_EXT :: 32
EXT_memory_object :: 1
UUID_SIZE_EXT :: 16
TEXTURE_TILING_EXT :: 38272
DEDICATED_MEMORY_OBJECT_EXT :: 38273
NUM_TILING_TYPES_EXT :: 38274
TILING_TYPES_EXT :: 38275
OPTIMAL_TILING_EXT :: 38276
LINEAR_TILING_EXT :: 38277
NUM_DEVICE_UUIDS_EXT :: 38294
DEVICE_UUID_EXT :: 38295
DRIVER_UUID_EXT :: 38296
PROTECTED_MEMORY_OBJECT_EXT :: 38299
EXT_memory_object_fd :: 1
HANDLE_TYPE_OPAQUE_FD_EXT :: 38278
EXT_memory_object_win32 :: 1
LUID_SIZE_EXT :: 8
HANDLE_TYPE_OPAQUE_WIN32_EXT :: 38279
HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT :: 38280
HANDLE_TYPE_D3D12_TILEPOOL_EXT :: 38281
HANDLE_TYPE_D3D12_RESOURCE_EXT :: 38282
HANDLE_TYPE_D3D11_IMAGE_EXT :: 38283
HANDLE_TYPE_D3D11_IMAGE_KMT_EXT :: 38284
HANDLE_TYPE_D3D12_FENCE_EXT :: 38292
D3D12_FENCE_VALUE_EXT :: 38293
DEVICE_LUID_EXT :: 38297
DEVICE_NODE_MASK_EXT :: 38298
EXT_misc_attribute :: 1
EXT_multi_draw_arrays :: 1
EXT_multi_draw_indirect :: 1
EXT_multiple_textures :: 1
EXT_multisample :: 1
MULTISAMPLE_EXT :: 32925
SAMPLE_ALPHA_TO_MASK_EXT :: 32926
SAMPLE_ALPHA_TO_ONE_EXT :: 32927
SAMPLE_MASK_EXT :: 32928
GL_1PASS_EXT :: 32929
GL_2PASS_0_EXT :: 32930
GL_2PASS_1_EXT :: 32931
GL_4PASS_0_EXT :: 32932
GL_4PASS_1_EXT :: 32933
GL_4PASS_2_EXT :: 32934
GL_4PASS_3_EXT :: 32935
SAMPLE_BUFFERS_EXT :: 32936
SAMPLES_EXT :: 32937
SAMPLE_MASK_VALUE_EXT :: 32938
SAMPLE_MASK_INVERT_EXT :: 32939
SAMPLE_PATTERN_EXT :: 32940
MULTISAMPLE_BIT_EXT :: 536870912
EXT_multisample_compatibility :: 1
EXT_multisampled_render_to_texture :: 1
FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT :: 36204
EXT_multisampled_render_to_texture2 :: 1
EXT_multiview_draw_buffers :: 1
DRAW_BUFFER_EXT :: 3073
READ_BUFFER_EXT :: 3074
COLOR_ATTACHMENT_EXT :: 37104
MULTIVIEW_EXT :: 37105
MAX_MULTIVIEW_BUFFERS_EXT :: 37106
EXT_multiview_tessellation_geometry_shader :: 1
EXT_multiview_texture_multisample :: 1
EXT_multiview_timer_query :: 1
EXT_occlusion_query_boolean :: 1
ANY_SAMPLES_PASSED_EXT :: 35887
ANY_SAMPLES_PASSED_CONSERVATIVE_EXT :: 36202
EXT_packed_depth_stencil :: 1
DEPTH_STENCIL_EXT :: 34041
UNSIGNED_INT_24_8_EXT :: 34042
DEPTH24_STENCIL8_EXT :: 35056
TEXTURE_STENCIL_SIZE_EXT :: 35057
EXT_packed_float :: 1
R11F_G11F_B10F_EXT :: 35898
UNSIGNED_INT_10F_11F_11F_REV_EXT :: 35899
RGBA_SIGNED_COMPONENTS_EXT :: 35900
EXT_packed_pixels :: 1
UNSIGNED_BYTE_3_3_2_EXT :: 32818
UNSIGNED_SHORT_4_4_4_4_EXT :: 32819
UNSIGNED_SHORT_5_5_5_1_EXT :: 32820
UNSIGNED_INT_8_8_8_8_EXT :: 32821
UNSIGNED_INT_10_10_10_2_EXT :: 32822
EXT_paletted_texture :: 1
COLOR_TABLE_FORMAT_EXT :: 32984
COLOR_TABLE_WIDTH_EXT :: 32985
COLOR_TABLE_RED_SIZE_EXT :: 32986
COLOR_TABLE_GREEN_SIZE_EXT :: 32987
COLOR_TABLE_BLUE_SIZE_EXT :: 32988
COLOR_TABLE_ALPHA_SIZE_EXT :: 32989
COLOR_TABLE_LUMINANCE_SIZE_EXT :: 32990
COLOR_TABLE_INTENSITY_SIZE_EXT :: 32991
TEXTURE_INDEX_SIZE_EXT :: 33005
EXT_pixel_buffer_object :: 1
PIXEL_PACK_BUFFER_EXT :: 35051
PIXEL_UNPACK_BUFFER_EXT :: 35052
PIXEL_PACK_BUFFER_BINDING_EXT :: 35053
PIXEL_UNPACK_BUFFER_BINDING_EXT :: 35055
EXT_pixel_transform :: 1
PIXEL_TRANSFORM_2D_EXT :: 33584
PIXEL_MAG_FILTER_EXT :: 33585
PIXEL_MIN_FILTER_EXT :: 33586
PIXEL_CUBIC_WEIGHT_EXT :: 33587
CUBIC_EXT :: 33588
AVERAGE_EXT :: 33589
PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT :: 33590
MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT :: 33591
PIXEL_TRANSFORM_2D_MATRIX_EXT :: 33592
EXT_pixel_transform_color_table :: 1
EXT_point_parameters :: 1
POINT_SIZE_MIN_EXT :: 33062
POINT_SIZE_MAX_EXT :: 33063
POINT_FADE_THRESHOLD_SIZE_EXT :: 33064
DISTANCE_ATTENUATION_EXT :: 33065
EXT_polygon_offset :: 1
POLYGON_OFFSET_EXT :: 32823
POLYGON_OFFSET_FACTOR_EXT :: 32824
POLYGON_OFFSET_BIAS_EXT :: 32825
EXT_polygon_offset_clamp :: 1
POLYGON_OFFSET_CLAMP_EXT :: 36379
EXT_post_depth_coverage :: 1
EXT_primitive_bounding_box :: 1
PRIMITIVE_BOUNDING_BOX_EXT :: 37566
EXT_protected_textures :: 1
CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT :: 16
TEXTURE_PROTECTED_EXT :: 35834
EXT_provoking_vertex :: 1
QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT :: 36428
PROVOKING_VERTEX_EXT :: 36431
EXT_pvrtc_sRGB :: 1
COMPRESSED_SRGB_PVRTC_2BPPV1_EXT :: 35412
COMPRESSED_SRGB_PVRTC_4BPPV1_EXT :: 35413
COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT :: 35414
COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT :: 35415
EXT_raster_multisample :: 1
COLOR_SAMPLES_NV :: 36384
RASTER_MULTISAMPLE_EXT :: 37671
RASTER_SAMPLES_EXT :: 37672
MAX_RASTER_SAMPLES_EXT :: 37673
RASTER_FIXED_SAMPLE_LOCATIONS_EXT :: 37674
MULTISAMPLE_RASTERIZATION_ALLOWED_EXT :: 37675
EFFECTIVE_RASTER_SAMPLES_EXT :: 37676
DEPTH_SAMPLES_NV :: 37677
STENCIL_SAMPLES_NV :: 37678
MIXED_DEPTH_SAMPLES_SUPPORTED_NV :: 37679
MIXED_STENCIL_SAMPLES_SUPPORTED_NV :: 37680
COVERAGE_MODULATION_TABLE_NV :: 37681
COVERAGE_MODULATION_NV :: 37682
COVERAGE_MODULATION_TABLE_SIZE_NV :: 37683
EXT_read_format_bgra :: 1
UNSIGNED_SHORT_4_4_4_4_REV_EXT :: 33637
UNSIGNED_SHORT_1_5_5_5_REV_EXT :: 33638
EXT_render_snorm :: 1
R16_SNORM_EXT :: 36760
RG16_SNORM_EXT :: 36761
RGBA16_SNORM_EXT :: 36763
EXT_rescale_normal :: 1
RESCALE_NORMAL_EXT :: 32826
EXT_robustness :: 1
LOSE_CONTEXT_ON_RESET_EXT :: 33362
GUILTY_CONTEXT_RESET_EXT :: 33363
INNOCENT_CONTEXT_RESET_EXT :: 33364
UNKNOWN_CONTEXT_RESET_EXT :: 33365
RESET_NOTIFICATION_STRATEGY_EXT :: 33366
NO_RESET_NOTIFICATION_EXT :: 33377
CONTEXT_ROBUST_ACCESS_EXT :: 37107
EXT_sRGB :: 1
FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT :: 33296
SRGB_EXT :: 35904
SRGB_ALPHA_EXT :: 35906
SRGB8_ALPHA8_EXT :: 35907
EXT_sRGB_write_control :: 1
EXT_scene_marker :: 1
EXT_secondary_color :: 1
COLOR_SUM_EXT :: 33880
CURRENT_SECONDARY_COLOR_EXT :: 33881
SECONDARY_COLOR_ARRAY_SIZE_EXT :: 33882
SECONDARY_COLOR_ARRAY_TYPE_EXT :: 33883
SECONDARY_COLOR_ARRAY_STRIDE_EXT :: 33884
SECONDARY_COLOR_ARRAY_POINTER_EXT :: 33885
SECONDARY_COLOR_ARRAY_EXT :: 33886
EXT_semaphore :: 1
LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT :: 38192
LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT :: 38193
LAYOUT_GENERAL_EXT :: 38285
LAYOUT_COLOR_ATTACHMENT_EXT :: 38286
LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT :: 38287
LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT :: 38288
LAYOUT_SHADER_READ_ONLY_EXT :: 38289
LAYOUT_TRANSFER_SRC_EXT :: 38290
LAYOUT_TRANSFER_DST_EXT :: 38291
EXT_semaphore_fd :: 1
EXT_semaphore_win32 :: 1
EXT_separate_depth_stencil :: 1
EXT_separate_shader_objects :: 1
ACTIVE_PROGRAM_EXT :: 35725
EXT_separate_specular_color :: 1
LIGHT_MODEL_COLOR_CONTROL_EXT :: 33272
SINGLE_COLOR_EXT :: 33273
SEPARATE_SPECULAR_COLOR_EXT :: 33274
EXT_shader_framebuffer_fetch :: 1
FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT :: 35410
EXT_shader_framebuffer_fetch_non_coherent :: 1
EXT_shader_group_vote :: 1
EXT_shader_image_load_formatted :: 1
EXT_shader_image_load_store :: 1
VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT :: 1
ELEMENT_ARRAY_BARRIER_BIT_EXT :: 2
UNIFORM_BARRIER_BIT_EXT :: 4
TEXTURE_FETCH_BARRIER_BIT_EXT :: 8
SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT :: 32
COMMAND_BARRIER_BIT_EXT :: 64
PIXEL_BUFFER_BARRIER_BIT_EXT :: 128
TEXTURE_UPDATE_BARRIER_BIT_EXT :: 256
BUFFER_UPDATE_BARRIER_BIT_EXT :: 512
FRAMEBUFFER_BARRIER_BIT_EXT :: 1024
TRANSFORM_FEEDBACK_BARRIER_BIT_EXT :: 2048
ATOMIC_COUNTER_BARRIER_BIT_EXT :: 4096
MAX_IMAGE_UNITS_EXT :: 36664
MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT :: 36665
IMAGE_BINDING_NAME_EXT :: 36666
IMAGE_BINDING_LEVEL_EXT :: 36667
IMAGE_BINDING_LAYERED_EXT :: 36668
IMAGE_BINDING_LAYER_EXT :: 36669
IMAGE_BINDING_ACCESS_EXT :: 36670
IMAGE_1D_EXT :: 36940
IMAGE_2D_EXT :: 36941
IMAGE_3D_EXT :: 36942
IMAGE_2D_RECT_EXT :: 36943
IMAGE_CUBE_EXT :: 36944
IMAGE_BUFFER_EXT :: 36945
IMAGE_1D_ARRAY_EXT :: 36946
IMAGE_2D_ARRAY_EXT :: 36947
IMAGE_CUBE_MAP_ARRAY_EXT :: 36948
IMAGE_2D_MULTISAMPLE_EXT :: 36949
IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: 36950
INT_IMAGE_1D_EXT :: 36951
INT_IMAGE_2D_EXT :: 36952
INT_IMAGE_3D_EXT :: 36953
INT_IMAGE_2D_RECT_EXT :: 36954
INT_IMAGE_CUBE_EXT :: 36955
INT_IMAGE_BUFFER_EXT :: 36956
INT_IMAGE_1D_ARRAY_EXT :: 36957
INT_IMAGE_2D_ARRAY_EXT :: 36958
INT_IMAGE_CUBE_MAP_ARRAY_EXT :: 36959
INT_IMAGE_2D_MULTISAMPLE_EXT :: 36960
INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: 36961
UNSIGNED_INT_IMAGE_1D_EXT :: 36962
UNSIGNED_INT_IMAGE_2D_EXT :: 36963
UNSIGNED_INT_IMAGE_3D_EXT :: 36964
UNSIGNED_INT_IMAGE_2D_RECT_EXT :: 36965
UNSIGNED_INT_IMAGE_CUBE_EXT :: 36966
UNSIGNED_INT_IMAGE_BUFFER_EXT :: 36967
UNSIGNED_INT_IMAGE_1D_ARRAY_EXT :: 36968
UNSIGNED_INT_IMAGE_2D_ARRAY_EXT :: 36969
UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT :: 36970
UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT :: 36971
UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT :: 36972
MAX_IMAGE_SAMPLES_EXT :: 36973
IMAGE_BINDING_FORMAT_EXT :: 36974
ALL_BARRIER_BITS_EXT :: 4294967295
EXT_shader_implicit_conversions :: 1
EXT_shader_integer_mix :: 1
EXT_shader_io_blocks :: 1
EXT_shader_non_constant_global_initializers :: 1
EXT_shader_pixel_local_storage :: 1
MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT :: 36707
SHADER_PIXEL_LOCAL_STORAGE_EXT :: 36708
MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT :: 36711
EXT_shader_pixel_local_storage2 :: 1
MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT :: 38480
MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT :: 38481
FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT :: 38482
EXT_shader_samples_identical :: 1
EXT_shader_texture_lod :: 1
EXT_shadow_funcs :: 1
EXT_shadow_samplers :: 1
TEXTURE_COMPARE_MODE_EXT :: 34892
TEXTURE_COMPARE_FUNC_EXT :: 34893
COMPARE_REF_TO_TEXTURE_EXT :: 34894
SAMPLER_2D_SHADOW_EXT :: 35682
EXT_shared_texture_palette :: 1
SHARED_TEXTURE_PALETTE_EXT :: 33275
EXT_sparse_texture :: 1
TEXTURE_CUBE_MAP_ARRAY_OES :: 36873
VIRTUAL_PAGE_SIZE_X_EXT :: 37269
VIRTUAL_PAGE_SIZE_Y_EXT :: 37270
VIRTUAL_PAGE_SIZE_Z_EXT :: 37271
MAX_SPARSE_TEXTURE_SIZE_EXT :: 37272
MAX_SPARSE_3D_TEXTURE_SIZE_EXT :: 37273
MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT :: 37274
TEXTURE_SPARSE_EXT :: 37286
VIRTUAL_PAGE_SIZE_INDEX_EXT :: 37287
NUM_VIRTUAL_PAGE_SIZES_EXT :: 37288
SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT :: 37289
NUM_SPARSE_LEVELS_EXT :: 37290
EXT_sparse_texture2 :: 1
EXT_static_vertex_array :: 1
EXT_stencil_clear_tag :: 1
STENCIL_TAG_BITS_EXT :: 35058
STENCIL_CLEAR_TAG_VALUE_EXT :: 35059
EXT_stencil_two_side :: 1
STENCIL_TEST_TWO_SIDE_EXT :: 35088
ACTIVE_STENCIL_FACE_EXT :: 35089
EXT_stencil_wrap :: 1
INCR_WRAP_EXT :: 34055
DECR_WRAP_EXT :: 34056
EXT_subtexture :: 1
EXT_tessellation_point_size :: 1
QUADS_EXT :: 7
TESS_CONTROL_SHADER_BIT_EXT :: 8
PATCHES_EXT :: 14
TESS_EVALUATION_SHADER_BIT_EXT :: 16
MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT :: 34924
MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT :: 34925
MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT :: 36382
MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT :: 36383
PATCH_VERTICES_EXT :: 36466
TESS_CONTROL_OUTPUT_VERTICES_EXT :: 36469
TESS_GEN_MODE_EXT :: 36470
TESS_GEN_SPACING_EXT :: 36471
TESS_GEN_VERTEX_ORDER_EXT :: 36472
TESS_GEN_POINT_MODE_EXT :: 36473
ISOLINES_EXT :: 36474
FRACTIONAL_ODD_EXT :: 36475
FRACTIONAL_EVEN_EXT :: 36476
MAX_PATCH_VERTICES_EXT :: 36477
MAX_TESS_GEN_LEVEL_EXT :: 36478
MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT :: 36479
MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT :: 36480
MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT :: 36481
MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT :: 36482
MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT :: 36483
MAX_TESS_PATCH_COMPONENTS_EXT :: 36484
MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT :: 36485
MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT :: 36486
TESS_EVALUATION_SHADER_EXT :: 36487
TESS_CONTROL_SHADER_EXT :: 36488
MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT :: 36489
MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT :: 36490
MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT :: 37067
MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT :: 37068
MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT :: 37080
MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT :: 37081
MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT :: 37581
MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT :: 37582
MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT :: 37587
MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT :: 37588
IS_PER_PATCH_EXT :: 37607
REFERENCED_BY_TESS_CONTROL_SHADER_EXT :: 37639
REFERENCED_BY_TESS_EVALUATION_SHADER_EXT :: 37640
EXT_tessellation_shader :: 1
EXT_texture :: 1
ALPHA4_EXT :: 32827
ALPHA8_EXT :: 32828
ALPHA12_EXT :: 32829
ALPHA16_EXT :: 32830
LUMINANCE4_EXT :: 32831
LUMINANCE8_EXT :: 32832
LUMINANCE12_EXT :: 32833
LUMINANCE16_EXT :: 32834
LUMINANCE4_ALPHA4_EXT :: 32835
LUMINANCE6_ALPHA2_EXT :: 32836
LUMINANCE8_ALPHA8_EXT :: 32837
LUMINANCE12_ALPHA4_EXT :: 32838
LUMINANCE12_ALPHA12_EXT :: 32839
LUMINANCE16_ALPHA16_EXT :: 32840
INTENSITY_EXT :: 32841
INTENSITY4_EXT :: 32842
INTENSITY8_EXT :: 32843
INTENSITY12_EXT :: 32844
INTENSITY16_EXT :: 32845
RGB2_EXT :: 32846
RGB4_EXT :: 32847
RGB5_EXT :: 32848
RGB8_EXT :: 32849
RGB10_EXT :: 32850
RGB12_EXT :: 32851
RGB16_EXT :: 32852
RGBA2_EXT :: 32853
RGBA4_EXT :: 32854
RGB5_A1_EXT :: 32855
RGBA8_EXT :: 32856
RGB10_A2_EXT :: 32857
RGBA12_EXT :: 32858
RGBA16_EXT :: 32859
TEXTURE_RED_SIZE_EXT :: 32860
TEXTURE_GREEN_SIZE_EXT :: 32861
TEXTURE_BLUE_SIZE_EXT :: 32862
TEXTURE_ALPHA_SIZE_EXT :: 32863
TEXTURE_LUMINANCE_SIZE_EXT :: 32864
TEXTURE_INTENSITY_SIZE_EXT :: 32865
REPLACE_EXT :: 32866
PROXY_TEXTURE_1D_EXT :: 32867
PROXY_TEXTURE_2D_EXT :: 32868
EXT_texture3D :: 1
PACK_SKIP_IMAGES_EXT :: 32875
PACK_IMAGE_HEIGHT_EXT :: 32876
UNPACK_SKIP_IMAGES_EXT :: 32877
UNPACK_IMAGE_HEIGHT_EXT :: 32878
TEXTURE_3D_EXT :: 32879
PROXY_TEXTURE_3D_EXT :: 32880
TEXTURE_DEPTH_EXT :: 32881
TEXTURE_WRAP_R_EXT :: 32882
MAX_3D_TEXTURE_SIZE_EXT :: 32883
EXT_texture_array :: 1
COMPARE_REF_DEPTH_TO_TEXTURE_EXT :: 34894
MAX_ARRAY_TEXTURE_LAYERS_EXT :: 35071
TEXTURE_1D_ARRAY_EXT :: 35864
PROXY_TEXTURE_1D_ARRAY_EXT :: 35865
TEXTURE_2D_ARRAY_EXT :: 35866
PROXY_TEXTURE_2D_ARRAY_EXT :: 35867
TEXTURE_BINDING_1D_ARRAY_EXT :: 35868
TEXTURE_BINDING_2D_ARRAY_EXT :: 35869
EXT_texture_border_clamp :: 1
TEXTURE_BORDER_COLOR_EXT :: 4100
CLAMP_TO_BORDER_EXT :: 33069
EXT_texture_buffer :: 1
TEXTURE_BUFFER_BINDING_EXT :: 35882
TEXTURE_BUFFER_EXT :: 35882
MAX_TEXTURE_BUFFER_SIZE_EXT :: 35883
TEXTURE_BINDING_BUFFER_EXT :: 35884
TEXTURE_BUFFER_DATA_STORE_BINDING_EXT :: 35885
TEXTURE_BUFFER_OFFSET_EXT :: 37277
TEXTURE_BUFFER_SIZE_EXT :: 37278
TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT :: 37279
EXT_texture_buffer_object :: 1
TEXTURE_BUFFER_FORMAT_EXT :: 35886
EXT_texture_compression_astc_decode_mode :: 1
TEXTURE_ASTC_DECODE_PRECISION_EXT :: 36713
EXT_texture_compression_astc_decode_mode_rgb9e5 :: 1
EXT_texture_compression_bptc :: 1
COMPRESSED_RGBA_BPTC_UNORM_EXT :: 36492
COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT :: 36493
COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT :: 36494
COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT :: 36495
EXT_texture_compression_dxt1 :: 1
EXT_texture_compression_latc :: 1
COMPRESSED_LUMINANCE_LATC1_EXT :: 35952
COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT :: 35953
COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT :: 35954
COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT :: 35955
EXT_texture_compression_rgtc :: 1
COMPRESSED_RED_RGTC1_EXT :: 36283
COMPRESSED_SIGNED_RED_RGTC1_EXT :: 36284
COMPRESSED_RED_GREEN_RGTC2_EXT :: 36285
COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT :: 36286
EXT_texture_compression_s3tc :: 1
COMPRESSED_RGB_S3TC_DXT1_EXT :: 33776
COMPRESSED_RGBA_S3TC_DXT1_EXT :: 33777
COMPRESSED_RGBA_S3TC_DXT3_EXT :: 33778
COMPRESSED_RGBA_S3TC_DXT5_EXT :: 33779
EXT_texture_compression_s3tc_srgb :: 1
COMPRESSED_SRGB_S3TC_DXT1_EXT :: 35916
COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT :: 35917
COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT :: 35918
COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT :: 35919
EXT_texture_cube_map :: 1
NORMAL_MAP_EXT :: 34065
REFLECTION_MAP_EXT :: 34066
TEXTURE_CUBE_MAP_EXT :: 34067
TEXTURE_BINDING_CUBE_MAP_EXT :: 34068
TEXTURE_CUBE_MAP_POSITIVE_X_EXT :: 34069
TEXTURE_CUBE_MAP_NEGATIVE_X_EXT :: 34070
TEXTURE_CUBE_MAP_POSITIVE_Y_EXT :: 34071
TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT :: 34072
TEXTURE_CUBE_MAP_POSITIVE_Z_EXT :: 34073
TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT :: 34074
PROXY_TEXTURE_CUBE_MAP_EXT :: 34075
MAX_CUBE_MAP_TEXTURE_SIZE_EXT :: 34076
EXT_texture_cube_map_array :: 1
TEXTURE_CUBE_MAP_ARRAY_EXT :: 36873
TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT :: 36874
SAMPLER_CUBE_MAP_ARRAY_EXT :: 36876
SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT :: 36877
INT_SAMPLER_CUBE_MAP_ARRAY_EXT :: 36878
UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT :: 36879
EXT_texture_edge_clamp :: 1
CLAMP_TO_EDGE_EXT :: 33071
EXT_texture_env :: 1
EXT_texture_env_add :: 1
EXT_texture_env_combine :: 1
COMBINE_EXT :: 34160
COMBINE_RGB_EXT :: 34161
COMBINE_ALPHA_EXT :: 34162
RGB_SCALE_EXT :: 34163
ADD_SIGNED_EXT :: 34164
INTERPOLATE_EXT :: 34165
CONSTANT_EXT :: 34166
PRIMARY_COLOR_EXT :: 34167
PREVIOUS_EXT :: 34168
SOURCE0_RGB_EXT :: 34176
SOURCE1_RGB_EXT :: 34177
SOURCE2_RGB_EXT :: 34178
SOURCE0_ALPHA_EXT :: 34184
SOURCE1_ALPHA_EXT :: 34185
SOURCE2_ALPHA_EXT :: 34186
OPERAND0_RGB_EXT :: 34192
OPERAND1_RGB_EXT :: 34193
OPERAND2_RGB_EXT :: 34194
OPERAND0_ALPHA_EXT :: 34200
OPERAND1_ALPHA_EXT :: 34201
OPERAND2_ALPHA_EXT :: 34202
EXT_texture_env_dot3 :: 1
DOT3_RGB_EXT :: 34624
DOT3_RGBA_EXT :: 34625
EXT_texture_filter_anisotropic :: 1
TEXTURE_MAX_ANISOTROPY_EXT :: 34046
MAX_TEXTURE_MAX_ANISOTROPY_EXT :: 34047
EXT_texture_filter_minmax :: 1
TEXTURE_REDUCTION_MODE_EXT :: 37734
WEIGHTED_AVERAGE_EXT :: 37735
EXT_texture_format_BGRA8888 :: 1
EXT_texture_format_sRGB_override :: 1
TEXTURE_FORMAT_SRGB_OVERRIDE_EXT :: 36799
EXT_texture_integer :: 1
RGBA32UI_EXT :: 36208
RGB32UI_EXT :: 36209
ALPHA32UI_EXT :: 36210
INTENSITY32UI_EXT :: 36211
LUMINANCE32UI_EXT :: 36212
LUMINANCE_ALPHA32UI_EXT :: 36213
RGBA16UI_EXT :: 36214
RGB16UI_EXT :: 36215
ALPHA16UI_EXT :: 36216
INTENSITY16UI_EXT :: 36217
LUMINANCE16UI_EXT :: 36218
LUMINANCE_ALPHA16UI_EXT :: 36219
RGBA8UI_EXT :: 36220
RGB8UI_EXT :: 36221
ALPHA8UI_EXT :: 36222
INTENSITY8UI_EXT :: 36223
LUMINANCE8UI_EXT :: 36224
LUMINANCE_ALPHA8UI_EXT :: 36225
RGBA32I_EXT :: 36226
RGB32I_EXT :: 36227
ALPHA32I_EXT :: 36228
INTENSITY32I_EXT :: 36229
LUMINANCE32I_EXT :: 36230
LUMINANCE_ALPHA32I_EXT :: 36231
RGBA16I_EXT :: 36232
RGB16I_EXT :: 36233
ALPHA16I_EXT :: 36234
INTENSITY16I_EXT :: 36235
LUMINANCE16I_EXT :: 36236
LUMINANCE_ALPHA16I_EXT :: 36237
RGBA8I_EXT :: 36238
RGB8I_EXT :: 36239
ALPHA8I_EXT :: 36240
INTENSITY8I_EXT :: 36241
LUMINANCE8I_EXT :: 36242
LUMINANCE_ALPHA8I_EXT :: 36243
RED_INTEGER_EXT :: 36244
GREEN_INTEGER_EXT :: 36245
BLUE_INTEGER_EXT :: 36246
ALPHA_INTEGER_EXT :: 36247
RGB_INTEGER_EXT :: 36248
RGBA_INTEGER_EXT :: 36249
BGR_INTEGER_EXT :: 36250
BGRA_INTEGER_EXT :: 36251
LUMINANCE_INTEGER_EXT :: 36252
LUMINANCE_ALPHA_INTEGER_EXT :: 36253
RGBA_INTEGER_MODE_EXT :: 36254
EXT_texture_lod_bias :: 1
MAX_TEXTURE_LOD_BIAS_EXT :: 34045
TEXTURE_FILTER_CONTROL_EXT :: 34048
TEXTURE_LOD_BIAS_EXT :: 34049
EXT_texture_mirror_clamp :: 1
MIRROR_CLAMP_EXT :: 34626
MIRROR_CLAMP_TO_EDGE_EXT :: 34627
MIRROR_CLAMP_TO_BORDER_EXT :: 35090
EXT_texture_mirror_clamp_to_edge :: 1
EXT_texture_norm16 :: 1
R16_EXT :: 33322
RG16_EXT :: 33324
RGB16_SNORM_EXT :: 36762
EXT_texture_object :: 1
TEXTURE_PRIORITY_EXT :: 32870
TEXTURE_RESIDENT_EXT :: 32871
TEXTURE_1D_BINDING_EXT :: 32872
TEXTURE_2D_BINDING_EXT :: 32873
TEXTURE_3D_BINDING_EXT :: 32874
EXT_texture_perturb_normal :: 1
PERTURB_EXT :: 34222
TEXTURE_NORMAL_EXT :: 34223
EXT_texture_query_lod :: 1
EXT_texture_rectangle :: 1
TEXTURE_RECTANGLE_EXT :: 34037
TEXTURE_BINDING_RECTANGLE_EXT :: 34038
PROXY_TEXTURE_RECTANGLE_EXT :: 34039
MAX_RECTANGLE_TEXTURE_SIZE_EXT :: 34040
EXT_texture_rg :: 1
RED_EXT :: 6403
RG_EXT :: 33319
R8_EXT :: 33321
RG8_EXT :: 33323
EXT_texture_sRGB :: 1
SRGB8_EXT :: 35905
SLUMINANCE_ALPHA_EXT :: 35908
SLUMINANCE8_ALPHA8_EXT :: 35909
SLUMINANCE_EXT :: 35910
SLUMINANCE8_EXT :: 35911
COMPRESSED_SRGB_EXT :: 35912
COMPRESSED_SRGB_ALPHA_EXT :: 35913
COMPRESSED_SLUMINANCE_EXT :: 35914
COMPRESSED_SLUMINANCE_ALPHA_EXT :: 35915
EXT_texture_sRGB_R8 :: 1
SR8_EXT :: 36797
EXT_texture_sRGB_RG8 :: 1
SRG8_EXT :: 36798
EXT_texture_sRGB_decode :: 1
TEXTURE_SRGB_DECODE_EXT :: 35400
DECODE_EXT :: 35401
SKIP_DECODE_EXT :: 35402
EXT_texture_shadow_lod :: 1
EXT_texture_shared_exponent :: 1
RGB9_E5_EXT :: 35901
UNSIGNED_INT_5_9_9_9_REV_EXT :: 35902
TEXTURE_SHARED_SIZE_EXT :: 35903
EXT_texture_snorm :: 1
ALPHA_SNORM :: 36880
LUMINANCE_SNORM :: 36881
LUMINANCE_ALPHA_SNORM :: 36882
INTENSITY_SNORM :: 36883
ALPHA8_SNORM :: 36884
LUMINANCE8_SNORM :: 36885
LUMINANCE8_ALPHA8_SNORM :: 36886
INTENSITY8_SNORM :: 36887
ALPHA16_SNORM :: 36888
LUMINANCE16_SNORM :: 36889
LUMINANCE16_ALPHA16_SNORM :: 36890
INTENSITY16_SNORM :: 36891
EXT_texture_storage :: 1
R32F_EXT :: 33326
RG32F_EXT :: 33328
RGBA32F_EXT :: 34836
RGB32F_EXT :: 34837
ALPHA32F_EXT :: 34838
LUMINANCE32F_EXT :: 34840
LUMINANCE_ALPHA32F_EXT :: 34841
ALPHA16F_EXT :: 34844
LUMINANCE16F_EXT :: 34846
LUMINANCE_ALPHA16F_EXT :: 34847
TEXTURE_IMMUTABLE_FORMAT_EXT :: 37167
EXT_texture_storage_compression :: 1
NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT :: 36718
SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT :: 38596
SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT :: 38597
SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT :: 38598
SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT :: 38599
SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT :: 38600
SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT :: 38601
SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT :: 38602
SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT :: 38603
SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT :: 38604
SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT :: 38605
SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT :: 38606
SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT :: 38607
EXT_texture_swizzle :: 1
TEXTURE_SWIZZLE_R_EXT :: 36418
TEXTURE_SWIZZLE_G_EXT :: 36419
TEXTURE_SWIZZLE_B_EXT :: 36420
TEXTURE_SWIZZLE_A_EXT :: 36421
TEXTURE_SWIZZLE_RGBA_EXT :: 36422
EXT_texture_type_2_10_10_10_REV :: 1
UNSIGNED_INT_2_10_10_10_REV_EXT :: 33640
EXT_texture_view :: 1
TEXTURE_VIEW_MIN_LEVEL_EXT :: 33499
TEXTURE_VIEW_NUM_LEVELS_EXT :: 33500
TEXTURE_VIEW_MIN_LAYER_EXT :: 33501
TEXTURE_VIEW_NUM_LAYERS_EXT :: 33502
EXT_timer_query :: 1
EXT_transform_feedback :: 1
TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT :: 35958
TRANSFORM_FEEDBACK_BUFFER_MODE_EXT :: 35967
MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT :: 35968
TRANSFORM_FEEDBACK_VARYINGS_EXT :: 35971
TRANSFORM_FEEDBACK_BUFFER_START_EXT :: 35972
TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT :: 35973
TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT :: 35976
RASTERIZER_DISCARD_EXT :: 35977
MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT :: 35978
MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT :: 35979
INTERLEAVED_ATTRIBS_EXT :: 35980
SEPARATE_ATTRIBS_EXT :: 35981
TRANSFORM_FEEDBACK_BUFFER_EXT :: 35982
TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT :: 35983
EXT_unpack_subimage :: 1
UNPACK_ROW_LENGTH_EXT :: 3314
UNPACK_SKIP_ROWS_EXT :: 3315
UNPACK_SKIP_PIXELS_EXT :: 3316
EXT_vertex_array :: 1
DOUBLE_EXT :: 5130
VERTEX_ARRAY_EXT :: 32884
NORMAL_ARRAY_EXT :: 32885
COLOR_ARRAY_EXT :: 32886
INDEX_ARRAY_EXT :: 32887
TEXTURE_COORD_ARRAY_EXT :: 32888
EDGE_FLAG_ARRAY_EXT :: 32889
VERTEX_ARRAY_SIZE_EXT :: 32890
VERTEX_ARRAY_TYPE_EXT :: 32891
VERTEX_ARRAY_STRIDE_EXT :: 32892
VERTEX_ARRAY_COUNT_EXT :: 32893
NORMAL_ARRAY_TYPE_EXT :: 32894
NORMAL_ARRAY_STRIDE_EXT :: 32895
NORMAL_ARRAY_COUNT_EXT :: 32896
COLOR_ARRAY_SIZE_EXT :: 32897
COLOR_ARRAY_TYPE_EXT :: 32898
COLOR_ARRAY_STRIDE_EXT :: 32899
COLOR_ARRAY_COUNT_EXT :: 32900
INDEX_ARRAY_TYPE_EXT :: 32901
INDEX_ARRAY_STRIDE_EXT :: 32902
INDEX_ARRAY_COUNT_EXT :: 32903
TEXTURE_COORD_ARRAY_SIZE_EXT :: 32904
TEXTURE_COORD_ARRAY_TYPE_EXT :: 32905
TEXTURE_COORD_ARRAY_STRIDE_EXT :: 32906
TEXTURE_COORD_ARRAY_COUNT_EXT :: 32907
EDGE_FLAG_ARRAY_STRIDE_EXT :: 32908
EDGE_FLAG_ARRAY_COUNT_EXT :: 32909
VERTEX_ARRAY_POINTER_EXT :: 32910
NORMAL_ARRAY_POINTER_EXT :: 32911
COLOR_ARRAY_POINTER_EXT :: 32912
INDEX_ARRAY_POINTER_EXT :: 32913
TEXTURE_COORD_ARRAY_POINTER_EXT :: 32914
EDGE_FLAG_ARRAY_POINTER_EXT :: 32915
EXT_vertex_array_bgra :: 1
EXT_vertex_array_setXXX :: 1
EXT_vertex_attrib_64bit :: 1
DOUBLE_MAT2_EXT :: 36678
DOUBLE_MAT3_EXT :: 36679
DOUBLE_MAT4_EXT :: 36680
DOUBLE_MAT2x3_EXT :: 36681
DOUBLE_MAT2x4_EXT :: 36682
DOUBLE_MAT3x2_EXT :: 36683
DOUBLE_MAT3x4_EXT :: 36684
DOUBLE_MAT4x2_EXT :: 36685
DOUBLE_MAT4x3_EXT :: 36686
DOUBLE_VEC2_EXT :: 36860
DOUBLE_VEC3_EXT :: 36861
DOUBLE_VEC4_EXT :: 36862
EXT_vertex_shader :: 1
VERTEX_SHADER_EXT :: 34688
VERTEX_SHADER_BINDING_EXT :: 34689
OP_INDEX_EXT :: 34690
OP_NEGATE_EXT :: 34691
OP_DOT3_EXT :: 34692
OP_DOT4_EXT :: 34693
OP_MUL_EXT :: 34694
OP_ADD_EXT :: 34695
OP_MADD_EXT :: 34696
OP_FRAC_EXT :: 34697
OP_MAX_EXT :: 34698
OP_MIN_EXT :: 34699
OP_SET_GE_EXT :: 34700
OP_SET_LT_EXT :: 34701
OP_CLAMP_EXT :: 34702
OP_FLOOR_EXT :: 34703
OP_ROUND_EXT :: 34704
OP_EXP_BASE_2_EXT :: 34705
OP_LOG_BASE_2_EXT :: 34706
OP_POWER_EXT :: 34707
OP_RECIP_EXT :: 34708
OP_RECIP_SQRT_EXT :: 34709
OP_SUB_EXT :: 34710
OP_CROSS_PRODUCT_EXT :: 34711
OP_MULTIPLY_MATRIX_EXT :: 34712
OP_MOV_EXT :: 34713
OUTPUT_VERTEX_EXT :: 34714
OUTPUT_COLOR0_EXT :: 34715
OUTPUT_COLOR1_EXT :: 34716
OUTPUT_TEXTURE_COORD0_EXT :: 34717
OUTPUT_TEXTURE_COORD1_EXT :: 34718
OUTPUT_TEXTURE_COORD2_EXT :: 34719
OUTPUT_TEXTURE_COORD3_EXT :: 34720
OUTPUT_TEXTURE_COORD4_EXT :: 34721
OUTPUT_TEXTURE_COORD5_EXT :: 34722
OUTPUT_TEXTURE_COORD6_EXT :: 34723
OUTPUT_TEXTURE_COORD7_EXT :: 34724
OUTPUT_TEXTURE_COORD8_EXT :: 34725
OUTPUT_TEXTURE_COORD9_EXT :: 34726
OUTPUT_TEXTURE_COORD10_EXT :: 34727
OUTPUT_TEXTURE_COORD11_EXT :: 34728
OUTPUT_TEXTURE_COORD12_EXT :: 34729
OUTPUT_TEXTURE_COORD13_EXT :: 34730
OUTPUT_TEXTURE_COORD14_EXT :: 34731
OUTPUT_TEXTURE_COORD15_EXT :: 34732
OUTPUT_TEXTURE_COORD16_EXT :: 34733
OUTPUT_TEXTURE_COORD17_EXT :: 34734
OUTPUT_TEXTURE_COORD18_EXT :: 34735
OUTPUT_TEXTURE_COORD19_EXT :: 34736
OUTPUT_TEXTURE_COORD20_EXT :: 34737
OUTPUT_TEXTURE_COORD21_EXT :: 34738
OUTPUT_TEXTURE_COORD22_EXT :: 34739
OUTPUT_TEXTURE_COORD23_EXT :: 34740
OUTPUT_TEXTURE_COORD24_EXT :: 34741
OUTPUT_TEXTURE_COORD25_EXT :: 34742
OUTPUT_TEXTURE_COORD26_EXT :: 34743
OUTPUT_TEXTURE_COORD27_EXT :: 34744
OUTPUT_TEXTURE_COORD28_EXT :: 34745
OUTPUT_TEXTURE_COORD29_EXT :: 34746
OUTPUT_TEXTURE_COORD30_EXT :: 34747
OUTPUT_TEXTURE_COORD31_EXT :: 34748
OUTPUT_FOG_EXT :: 34749
SCALAR_EXT :: 34750
VECTOR_EXT :: 34751
MATRIX_EXT :: 34752
VARIANT_EXT :: 34753
INVARIANT_EXT :: 34754
LOCAL_CONSTANT_EXT :: 34755
LOCAL_EXT :: 34756
MAX_VERTEX_SHADER_INSTRUCTIONS_EXT :: 34757
MAX_VERTEX_SHADER_VARIANTS_EXT :: 34758
MAX_VERTEX_SHADER_INVARIANTS_EXT :: 34759
MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: 34760
MAX_VERTEX_SHADER_LOCALS_EXT :: 34761
MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT :: 34762
MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT :: 34763
MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT :: 34764
MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: 34765
MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT :: 34766
VERTEX_SHADER_INSTRUCTIONS_EXT :: 34767
VERTEX_SHADER_VARIANTS_EXT :: 34768
VERTEX_SHADER_INVARIANTS_EXT :: 34769
VERTEX_SHADER_LOCAL_CONSTANTS_EXT :: 34770
VERTEX_SHADER_LOCALS_EXT :: 34771
VERTEX_SHADER_OPTIMIZED_EXT :: 34772
X_EXT :: 34773
Y_EXT :: 34774
Z_EXT :: 34775
W_EXT :: 34776
NEGATIVE_X_EXT :: 34777
NEGATIVE_Y_EXT :: 34778
NEGATIVE_Z_EXT :: 34779
NEGATIVE_W_EXT :: 34780
ZERO_EXT :: 34781
ONE_EXT :: 34782
NEGATIVE_ONE_EXT :: 34783
NORMALIZED_RANGE_EXT :: 34784
FULL_RANGE_EXT :: 34785
CURRENT_VERTEX_EXT :: 34786
MVP_MATRIX_EXT :: 34787
VARIANT_VALUE_EXT :: 34788
VARIANT_DATATYPE_EXT :: 34789
VARIANT_ARRAY_STRIDE_EXT :: 34790
VARIANT_ARRAY_TYPE_EXT :: 34791
VARIANT_ARRAY_EXT :: 34792
VARIANT_ARRAY_POINTER_EXT :: 34793
INVARIANT_VALUE_EXT :: 34794
INVARIANT_DATATYPE_EXT :: 34795
LOCAL_CONSTANT_VALUE_EXT :: 34796
LOCAL_CONSTANT_DATATYPE_EXT :: 34797
EXT_vertex_weighting :: 1
MODELVIEW0_STACK_DEPTH_EXT :: 2979
MODELVIEW0_MATRIX_EXT :: 2982
MODELVIEW0_EXT :: 5888
MODELVIEW1_STACK_DEPTH_EXT :: 34050
MODELVIEW1_MATRIX_EXT :: 34054
VERTEX_WEIGHTING_EXT :: 34057
MODELVIEW1_EXT :: 34058
CURRENT_VERTEX_WEIGHT_EXT :: 34059
VERTEX_WEIGHT_ARRAY_EXT :: 34060
VERTEX_WEIGHT_ARRAY_SIZE_EXT :: 34061
VERTEX_WEIGHT_ARRAY_TYPE_EXT :: 34062
VERTEX_WEIGHT_ARRAY_STRIDE_EXT :: 34063
VERTEX_WEIGHT_ARRAY_POINTER_EXT :: 34064
EXT_win32_keyed_mutex :: 1
EXT_window_rectangles :: 1
INCLUSIVE_EXT :: 36624
EXCLUSIVE_EXT :: 36625
WINDOW_RECTANGLE_EXT :: 36626
WINDOW_RECTANGLE_MODE_EXT :: 36627
MAX_WINDOW_RECTANGLES_EXT :: 36628
NUM_WINDOW_RECTANGLES_EXT :: 36629
EXT_x11_sync_object :: 1
SYNC_X11_FENCE_EXT :: 37089
FJ_shader_binary_GCCSO :: 1
GCCSO_SHADER_BINARY_FJ :: 37472
GREMEDY_frame_terminator :: 1
GREMEDY_string_marker :: 1
HP_convolution_border_modes :: 1
HP_image_transform :: 1
HP_occlusion_test :: 1
HP_texture_lighting :: 1
IBM_cull_vertex :: 1
CULL_VERTEX_IBM :: 103050
IBM_multimode_draw_arrays :: 1
IBM_rasterpos_clip :: 1
RASTER_POSITION_UNCLIPPED_IBM :: 103010
IBM_static_data :: 1
ALL_STATIC_DATA_IBM :: 103060
STATIC_VERTEX_ARRAY_IBM :: 103061
IBM_texture_mirrored_repeat :: 1
MIRRORED_REPEAT_IBM :: 33648
IBM_vertex_array_lists :: 1
VERTEX_ARRAY_LIST_IBM :: 103070
NORMAL_ARRAY_LIST_IBM :: 103071
COLOR_ARRAY_LIST_IBM :: 103072
INDEX_ARRAY_LIST_IBM :: 103073
TEXTURE_COORD_ARRAY_LIST_IBM :: 103074
EDGE_FLAG_ARRAY_LIST_IBM :: 103075
FOG_COORDINATE_ARRAY_LIST_IBM :: 103076
SECONDARY_COLOR_ARRAY_LIST_IBM :: 103077
VERTEX_ARRAY_LIST_STRIDE_IBM :: 103080
NORMAL_ARRAY_LIST_STRIDE_IBM :: 103081
COLOR_ARRAY_LIST_STRIDE_IBM :: 103082
INDEX_ARRAY_LIST_STRIDE_IBM :: 103083
TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM :: 103084
EDGE_FLAG_ARRAY_LIST_STRIDE_IBM :: 103085
FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM :: 103086
SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM :: 103087
IMG_bindless_texture :: 1
IMG_framebuffer_downsample :: 1
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG :: 37180
NUM_DOWNSAMPLE_SCALES_IMG :: 37181
DOWNSAMPLE_SCALES_IMG :: 37182
FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG :: 37183
IMG_multisampled_render_to_texture :: 1
RENDERBUFFER_SAMPLES_IMG :: 37171
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG :: 37172
MAX_SAMPLES_IMG :: 37173
TEXTURE_SAMPLES_IMG :: 37174
IMG_program_binary :: 1
SGX_PROGRAM_BINARY_IMG :: 37168
IMG_pvric_end_to_end_signature :: 1
PVRIC_SIGNATURE_MISMATCH_IMG :: 36515
IMG_read_format :: 1
BGRA_IMG :: 32993
UNSIGNED_SHORT_4_4_4_4_REV_IMG :: 33637
IMG_shader_binary :: 1
SGX_BINARY_IMG :: 35850
IMG_texture_compression_pvrtc :: 1
COMPRESSED_RGB_PVRTC_4BPPV1_IMG :: 35840
COMPRESSED_RGB_PVRTC_2BPPV1_IMG :: 35841
COMPRESSED_RGBA_PVRTC_4BPPV1_IMG :: 35842
COMPRESSED_RGBA_PVRTC_2BPPV1_IMG :: 35843
IMG_texture_compression_pvrtc2 :: 1
COMPRESSED_RGBA_PVRTC_2BPPV2_IMG :: 37175
COMPRESSED_RGBA_PVRTC_4BPPV2_IMG :: 37176
IMG_texture_env_enhanced_fixed_function :: 1
DOT3_RGBA_IMG :: 34479
MODULATE_COLOR_IMG :: 35844
RECIP_ADD_SIGNED_ALPHA_IMG :: 35845
TEXTURE_ALPHA_MODULATE_IMG :: 35846
FACTOR_ALPHA_MODULATE_IMG :: 35847
FRAGMENT_ALPHA_MODULATE_IMG :: 35848
ADD_BLEND_IMG :: 35849
IMG_texture_filter_cubic :: 1
CUBIC_IMG :: 37177
CUBIC_MIPMAP_NEAREST_IMG :: 37178
CUBIC_MIPMAP_LINEAR_IMG :: 37179
IMG_tile_region_protection :: 1
TRP_IMG :: 36512
TRP_ERROR_CONTEXT_RESET_IMG :: 36513
TRP_UNSUPPORTED_CONTEXT_IMG :: 36514
INGR_color_clamp :: 1
RED_MIN_CLAMP_INGR :: 34144
GREEN_MIN_CLAMP_INGR :: 34145
BLUE_MIN_CLAMP_INGR :: 34146
ALPHA_MIN_CLAMP_INGR :: 34147
RED_MAX_CLAMP_INGR :: 34148
GREEN_MAX_CLAMP_INGR :: 34149
BLUE_MAX_CLAMP_INGR :: 34150
ALPHA_MAX_CLAMP_INGR :: 34151
INGR_interlace_read :: 1
INTERLACE_READ_INGR :: 34152
INTEL_blackhole_render :: 1
BLACKHOLE_RENDER_INTEL :: 33788
INTEL_conservative_rasterization :: 1
CONSERVATIVE_RASTERIZATION_INTEL :: 33790
INTEL_fragment_shader_ordering :: 1
INTEL_framebuffer_CMAA :: 1
INTEL_map_texture :: 1
LAYOUT_DEFAULT_INTEL :: 0
LAYOUT_LINEAR_INTEL :: 1
LAYOUT_LINEAR_CPU_CACHED_INTEL :: 2
TEXTURE_MEMORY_LAYOUT_INTEL :: 33791
INTEL_parallel_arrays :: 1
PARALLEL_ARRAYS_INTEL :: 33780
VERTEX_ARRAY_PARALLEL_POINTERS_INTEL :: 33781
NORMAL_ARRAY_PARALLEL_POINTERS_INTEL :: 33782
COLOR_ARRAY_PARALLEL_POINTERS_INTEL :: 33783
TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL :: 33784
INTEL_performance_query :: 1
PERFQUERY_SINGLE_CONTEXT_INTEL :: 0
PERFQUERY_GLOBAL_CONTEXT_INTEL :: 1
PERFQUERY_DONOT_FLUSH_INTEL :: 33785
PERFQUERY_FLUSH_INTEL :: 33786
PERFQUERY_WAIT_INTEL :: 33787
PERFQUERY_COUNTER_EVENT_INTEL :: 38128
PERFQUERY_COUNTER_DURATION_NORM_INTEL :: 38129
PERFQUERY_COUNTER_DURATION_RAW_INTEL :: 38130
PERFQUERY_COUNTER_THROUGHPUT_INTEL :: 38131
PERFQUERY_COUNTER_RAW_INTEL :: 38132
PERFQUERY_COUNTER_TIMESTAMP_INTEL :: 38133
PERFQUERY_COUNTER_DATA_UINT32_INTEL :: 38136
PERFQUERY_COUNTER_DATA_UINT64_INTEL :: 38137
PERFQUERY_COUNTER_DATA_FLOAT_INTEL :: 38138
PERFQUERY_COUNTER_DATA_DOUBLE_INTEL :: 38139
PERFQUERY_COUNTER_DATA_BOOL32_INTEL :: 38140
PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL :: 38141
PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL :: 38142
PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL :: 38143
PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL :: 38144
INTEL_shader_integer_functions2 :: 1
INTEL_texture_scissor :: 1
KHR_blend_equation_advanced :: 1
BLEND_ADVANCED_COHERENT_KHR :: 37509
MULTIPLY_KHR :: 37524
SCREEN_KHR :: 37525
OVERLAY_KHR :: 37526
DARKEN_KHR :: 37527
LIGHTEN_KHR :: 37528
COLORDODGE_KHR :: 37529
COLORBURN_KHR :: 37530
HARDLIGHT_KHR :: 37531
SOFTLIGHT_KHR :: 37532
DIFFERENCE_KHR :: 37534
EXCLUSION_KHR :: 37536
HSL_HUE_KHR :: 37549
HSL_SATURATION_KHR :: 37550
HSL_COLOR_KHR :: 37551
HSL_LUMINOSITY_KHR :: 37552
KHR_blend_equation_advanced_coherent :: 1
KHR_context_flush_control :: 1
CONTEXT_RELEASE_BEHAVIOR :: 33531
CONTEXT_RELEASE_BEHAVIOR_FLUSH :: 33532
KHR_debug :: 1
CONTEXT_FLAG_DEBUG_BIT :: 2
DEBUG_OUTPUT_SYNCHRONOUS :: 33346
DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: 33347
DEBUG_CALLBACK_FUNCTION :: 33348
DEBUG_CALLBACK_USER_PARAM :: 33349
DEBUG_SOURCE_API :: 33350
DEBUG_SOURCE_WINDOW_SYSTEM :: 33351
DEBUG_SOURCE_SHADER_COMPILER :: 33352
DEBUG_SOURCE_THIRD_PARTY :: 33353
DEBUG_SOURCE_APPLICATION :: 33354
DEBUG_SOURCE_OTHER :: 33355
DEBUG_TYPE_ERROR :: 33356
DEBUG_TYPE_DEPRECATED_BEHAVIOR :: 33357
DEBUG_TYPE_UNDEFINED_BEHAVIOR :: 33358
DEBUG_TYPE_PORTABILITY :: 33359
DEBUG_TYPE_PERFORMANCE :: 33360
DEBUG_TYPE_OTHER :: 33361
DEBUG_TYPE_MARKER :: 33384
DEBUG_TYPE_PUSH_GROUP :: 33385
DEBUG_TYPE_POP_GROUP :: 33386
DEBUG_SEVERITY_NOTIFICATION :: 33387
MAX_DEBUG_GROUP_STACK_DEPTH :: 33388
DEBUG_GROUP_STACK_DEPTH :: 33389
BUFFER :: 33504
SHADER :: 33505
PROGRAM :: 33506
QUERY :: 33507
PROGRAM_PIPELINE :: 33508
SAMPLER :: 33510
DISPLAY_LIST :: 33511
MAX_LABEL_LENGTH :: 33512
MAX_DEBUG_MESSAGE_LENGTH :: 37187
MAX_DEBUG_LOGGED_MESSAGES :: 37188
DEBUG_LOGGED_MESSAGES :: 37189
DEBUG_SEVERITY_HIGH :: 37190
DEBUG_SEVERITY_MEDIUM :: 37191
DEBUG_SEVERITY_LOW :: 37192
DEBUG_OUTPUT :: 37600
KHR_no_error :: 1
CONTEXT_FLAG_NO_ERROR_BIT_KHR :: 8
KHR_parallel_shader_compile :: 1
MAX_SHADER_COMPILER_THREADS_KHR :: 37296
COMPLETION_STATUS_KHR :: 37297
KHR_robust_buffer_access_behavior :: 1
KHR_robustness :: 1
CONTEXT_LOST :: 1287
LOSE_CONTEXT_ON_RESET :: 33362
GUILTY_CONTEXT_RESET :: 33363
INNOCENT_CONTEXT_RESET :: 33364
UNKNOWN_CONTEXT_RESET :: 33365
RESET_NOTIFICATION_STRATEGY :: 33366
NO_RESET_NOTIFICATION :: 33377
CONTEXT_ROBUST_ACCESS :: 37107
KHR_shader_subgroup :: 1
SUBGROUP_FEATURE_BASIC_BIT_KHR :: 1
SUBGROUP_FEATURE_VOTE_BIT_KHR :: 2
SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR :: 4
SUBGROUP_FEATURE_BALLOT_BIT_KHR :: 8
SUBGROUP_FEATURE_SHUFFLE_BIT_KHR :: 16
SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR :: 32
SUBGROUP_FEATURE_CLUSTERED_BIT_KHR :: 64
SUBGROUP_FEATURE_QUAD_BIT_KHR :: 128
SUBGROUP_SIZE_KHR :: 38194
SUBGROUP_SUPPORTED_STAGES_KHR :: 38195
SUBGROUP_SUPPORTED_FEATURES_KHR :: 38196
SUBGROUP_QUAD_ALL_STAGES_KHR :: 38197
KHR_texture_compression_astc_hdr :: 1
COMPRESSED_RGBA_ASTC_4x4_KHR :: 37808
COMPRESSED_RGBA_ASTC_5x4_KHR :: 37809
COMPRESSED_RGBA_ASTC_5x5_KHR :: 37810
COMPRESSED_RGBA_ASTC_6x5_KHR :: 37811
COMPRESSED_RGBA_ASTC_6x6_KHR :: 37812
COMPRESSED_RGBA_ASTC_8x5_KHR :: 37813
COMPRESSED_RGBA_ASTC_8x6_KHR :: 37814
COMPRESSED_RGBA_ASTC_8x8_KHR :: 37815
COMPRESSED_RGBA_ASTC_10x5_KHR :: 37816
COMPRESSED_RGBA_ASTC_10x6_KHR :: 37817
COMPRESSED_RGBA_ASTC_10x8_KHR :: 37818
COMPRESSED_RGBA_ASTC_10x10_KHR :: 37819
COMPRESSED_RGBA_ASTC_12x10_KHR :: 37820
COMPRESSED_RGBA_ASTC_12x12_KHR :: 37821
COMPRESSED_RGBA_ASTC_3x3x3_OES :: 37824
COMPRESSED_RGBA_ASTC_4x3x3_OES :: 37825
COMPRESSED_RGBA_ASTC_4x4x3_OES :: 37826
COMPRESSED_RGBA_ASTC_4x4x4_OES :: 37827
COMPRESSED_RGBA_ASTC_5x4x4_OES :: 37828
COMPRESSED_RGBA_ASTC_5x5x4_OES :: 37829
COMPRESSED_RGBA_ASTC_5x5x5_OES :: 37830
COMPRESSED_RGBA_ASTC_6x5x5_OES :: 37831
COMPRESSED_RGBA_ASTC_6x6x5_OES :: 37832
COMPRESSED_RGBA_ASTC_6x6x6_OES :: 37833
COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR :: 37840
COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR :: 37841
COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR :: 37842
COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR :: 37843
COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR :: 37844
COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR :: 37845
COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR :: 37846
COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR :: 37847
COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR :: 37848
COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR :: 37849
COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR :: 37850
COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR :: 37851
COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR :: 37852
COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR :: 37853
COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES :: 37856
COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES :: 37857
COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES :: 37858
COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES :: 37859
COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES :: 37860
COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES :: 37861
COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES :: 37862
COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES :: 37863
COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES :: 37864
COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES :: 37865
KHR_texture_compression_astc_ldr :: 1
KHR_texture_compression_astc_sliced_3d :: 1
KTX_buffer_region :: 1
KTX_FRONT_REGION :: 0
KTX_BACK_REGION :: 1
KTX_Z_REGION :: 2
KTX_STENCIL_REGION :: 3
MESAX_texture_stack :: 1
TEXTURE_1D_STACK_MESAX :: 34649
TEXTURE_2D_STACK_MESAX :: 34650
PROXY_TEXTURE_1D_STACK_MESAX :: 34651
PROXY_TEXTURE_2D_STACK_MESAX :: 34652
TEXTURE_1D_STACK_BINDING_MESAX :: 34653
TEXTURE_2D_STACK_BINDING_MESAX :: 34654
MESA_bgra :: 1
MESA_framebuffer_flip_x :: 1
FRAMEBUFFER_FLIP_X_MESA :: 35772
MESA_framebuffer_flip_y :: 1
FRAMEBUFFER_FLIP_Y_MESA :: 35771
MESA_framebuffer_swap_xy :: 1
FRAMEBUFFER_SWAP_XY_MESA :: 35773
MESA_pack_invert :: 1
PACK_INVERT_MESA :: 34648
MESA_program_binary_formats :: 1
PROGRAM_BINARY_FORMAT_MESA :: 34655
MESA_resize_buffers :: 1
MESA_shader_integer_functions :: 1
MESA_tile_raster_order :: 1
MESA_window_pos :: 1
MESA_ycbcr_texture :: 1
UNSIGNED_SHORT_8_8_MESA :: 34234
UNSIGNED_SHORT_8_8_REV_MESA :: 34235
YCBCR_MESA :: 34647
NVX_blend_equation_advanced_multi_draw_buffers :: 1
NVX_conditional_render :: 1
NVX_gpu_memory_info :: 1
GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX :: 36935
GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX :: 36936
GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX :: 36937
GPU_MEMORY_INFO_EVICTION_COUNT_NVX :: 36938
GPU_MEMORY_INFO_EVICTED_MEMORY_NVX :: 36939
NVX_gpu_multicast2 :: 1
UPLOAD_GPU_MASK_NVX :: 38218
NVX_linked_gpu_multicast :: 1
LGPU_SEPARATE_STORAGE_BIT_NVX :: 2048
MAX_LGPU_GPUS_NVX :: 37562
NVX_progress_fence :: 1
NV_3dvision_settings :: 1
GL_3DVISION_STEREO_NV :: 37108
STEREO_SEPARATION_NV :: 37109
STEREO_CONVERGENCE_NV :: 37110
STEREO_CUTOFF_NV :: 37111
STEREO_PROJECTION_NV :: 37112
STEREO_PROJECTION_PERSPECTIVE_NV :: 37113
STEREO_PROJECTION_ORTHO_NV :: 37114
NV_EGL_stream_consumer_external :: 1
TEXTURE_EXTERNAL_OES :: 36197
SAMPLER_EXTERNAL_OES :: 36198
TEXTURE_BINDING_EXTERNAL_OES :: 36199
REQUIRED_TEXTURE_IMAGE_UNITS_OES :: 36200
NV_alpha_to_coverage_dither_control :: 1
ALPHA_TO_COVERAGE_DITHER_MODE_NV :: 37567
ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV :: 37709
ALPHA_TO_COVERAGE_DITHER_ENABLE_NV :: 37710
ALPHA_TO_COVERAGE_DITHER_DISABLE_NV :: 37711
NV_bgr :: 1
BGR_NV :: 32992
NV_bindless_multi_draw_indirect :: 1
NV_bindless_multi_draw_indirect_count :: 1
NV_bindless_texture :: 1
NV_blend_equation_advanced :: 1
XOR_NV :: 5382
RED_NV :: 6403
GREEN_NV :: 6404
BLUE_NV :: 6405
BLEND_PREMULTIPLIED_SRC_NV :: 37504
BLEND_OVERLAP_NV :: 37505
UNCORRELATED_NV :: 37506
DISJOINT_NV :: 37507
CONJOINT_NV :: 37508
BLEND_ADVANCED_COHERENT_NV :: 37509
SRC_NV :: 37510
DST_NV :: 37511
SRC_OVER_NV :: 37512
DST_OVER_NV :: 37513
SRC_IN_NV :: 37514
DST_IN_NV :: 37515
SRC_OUT_NV :: 37516
DST_OUT_NV :: 37517
SRC_ATOP_NV :: 37518
DST_ATOP_NV :: 37519
PLUS_NV :: 37521
PLUS_DARKER_NV :: 37522
MULTIPLY_NV :: 37524
SCREEN_NV :: 37525
OVERLAY_NV :: 37526
DARKEN_NV :: 37527
LIGHTEN_NV :: 37528
COLORDODGE_NV :: 37529
COLORBURN_NV :: 37530
HARDLIGHT_NV :: 37531
SOFTLIGHT_NV :: 37532
DIFFERENCE_NV :: 37534
MINUS_NV :: 37535
EXCLUSION_NV :: 37536
CONTRAST_NV :: 37537
INVERT_RGB_NV :: 37539
LINEARDODGE_NV :: 37540
LINEARBURN_NV :: 37541
VIVIDLIGHT_NV :: 37542
LINEARLIGHT_NV :: 37543
PINLIGHT_NV :: 37544
HARDMIX_NV :: 37545
HSL_HUE_NV :: 37549
HSL_SATURATION_NV :: 37550
HSL_COLOR_NV :: 37551
HSL_LUMINOSITY_NV :: 37552
PLUS_CLAMPED_NV :: 37553
PLUS_CLAMPED_ALPHA_NV :: 37554
MINUS_CLAMPED_NV :: 37555
INVERT_OVG_NV :: 37556
NV_blend_equation_advanced_coherent :: 1
NV_blend_minmax_factor :: 1
NV_blend_square :: 1
NV_clip_space_w_scaling :: 1
VIEWPORT_POSITION_W_SCALE_NV :: 37756
VIEWPORT_POSITION_W_SCALE_X_COEFF_NV :: 37757
VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV :: 37758
NV_command_list :: 1
TERMINATE_SEQUENCE_COMMAND_NV :: 0
NOP_COMMAND_NV :: 1
DRAW_ELEMENTS_COMMAND_NV :: 2
DRAW_ARRAYS_COMMAND_NV :: 3
DRAW_ELEMENTS_STRIP_COMMAND_NV :: 4
DRAW_ARRAYS_STRIP_COMMAND_NV :: 5
DRAW_ELEMENTS_INSTANCED_COMMAND_NV :: 6
DRAW_ARRAYS_INSTANCED_COMMAND_NV :: 7
ELEMENT_ADDRESS_COMMAND_NV :: 8
ATTRIBUTE_ADDRESS_COMMAND_NV :: 9
UNIFORM_ADDRESS_COMMAND_NV :: 10
BLEND_COLOR_COMMAND_NV :: 11
STENCIL_REF_COMMAND_NV :: 12
LINE_WIDTH_COMMAND_NV :: 13
POLYGON_OFFSET_COMMAND_NV :: 14
ALPHA_REF_COMMAND_NV :: 15
VIEWPORT_COMMAND_NV :: 16
SCISSOR_COMMAND_NV :: 17
FRONT_FACE_COMMAND_NV :: 18
NV_compute_program5 :: 1
COMPUTE_PROGRAM_NV :: 37115
COMPUTE_PROGRAM_PARAMETER_BUFFER_NV :: 37116
NV_compute_shader_derivatives :: 1
NV_conditional_render :: 1
QUERY_WAIT_NV :: 36371
QUERY_NO_WAIT_NV :: 36372
QUERY_BY_REGION_WAIT_NV :: 36373
QUERY_BY_REGION_NO_WAIT_NV :: 36374
NV_conservative_raster :: 1
CONSERVATIVE_RASTERIZATION_NV :: 37702
SUBPIXEL_PRECISION_BIAS_X_BITS_NV :: 37703
SUBPIXEL_PRECISION_BIAS_Y_BITS_NV :: 37704
MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV :: 37705
NV_conservative_raster_dilate :: 1
CONSERVATIVE_RASTER_DILATE_NV :: 37753
CONSERVATIVE_RASTER_DILATE_RANGE_NV :: 37754
CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV :: 37755
NV_conservative_raster_pre_snap :: 1
CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV :: 38224
NV_conservative_raster_pre_snap_triangles :: 1
CONSERVATIVE_RASTER_MODE_NV :: 38221
CONSERVATIVE_RASTER_MODE_POST_SNAP_NV :: 38222
CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV :: 38223
NV_conservative_raster_underestimation :: 1
NV_copy_buffer :: 1
COPY_READ_BUFFER_NV :: 36662
COPY_WRITE_BUFFER_NV :: 36663
NV_copy_depth_to_color :: 1
DEPTH_STENCIL_TO_RGBA_NV :: 34926
DEPTH_STENCIL_TO_BGRA_NV :: 34927
NV_copy_image :: 1
NV_deep_texture3D :: 1
MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV :: 37072
MAX_DEEP_3D_TEXTURE_DEPTH_NV :: 37073
NV_depth_buffer_float :: 1
DEPTH_COMPONENT32F_NV :: 36267
DEPTH32F_STENCIL8_NV :: 36268
FLOAT_32_UNSIGNED_INT_24_8_REV_NV :: 36269
DEPTH_BUFFER_FLOAT_MODE_NV :: 36271
NV_depth_clamp :: 1
DEPTH_CLAMP_NV :: 34383
NV_depth_nonlinear :: 1
DEPTH_COMPONENT16_NONLINEAR_NV :: 36396
NV_depth_range_unclamped :: 1
SAMPLE_COUNT_BITS_NV :: 34916
CURRENT_SAMPLE_COUNT_QUERY_NV :: 34917
QUERY_RESULT_NV :: 34918
QUERY_RESULT_AVAILABLE_NV :: 34919
SAMPLE_COUNT_NV :: 35092
NV_draw_buffers :: 1
MAX_DRAW_BUFFERS_NV :: 34852
DRAW_BUFFER0_NV :: 34853
DRAW_BUFFER1_NV :: 34854
DRAW_BUFFER2_NV :: 34855
DRAW_BUFFER3_NV :: 34856
DRAW_BUFFER4_NV :: 34857
DRAW_BUFFER5_NV :: 34858
DRAW_BUFFER6_NV :: 34859
DRAW_BUFFER7_NV :: 34860
DRAW_BUFFER8_NV :: 34861
DRAW_BUFFER9_NV :: 34862
DRAW_BUFFER10_NV :: 34863
DRAW_BUFFER11_NV :: 34864
DRAW_BUFFER12_NV :: 34865
DRAW_BUFFER13_NV :: 34866
DRAW_BUFFER14_NV :: 34867
DRAW_BUFFER15_NV :: 34868
COLOR_ATTACHMENT0_NV :: 36064
COLOR_ATTACHMENT1_NV :: 36065
COLOR_ATTACHMENT2_NV :: 36066
COLOR_ATTACHMENT3_NV :: 36067
COLOR_ATTACHMENT4_NV :: 36068
COLOR_ATTACHMENT5_NV :: 36069
COLOR_ATTACHMENT6_NV :: 36070
COLOR_ATTACHMENT7_NV :: 36071
COLOR_ATTACHMENT8_NV :: 36072
COLOR_ATTACHMENT9_NV :: 36073
COLOR_ATTACHMENT10_NV :: 36074
COLOR_ATTACHMENT11_NV :: 36075
COLOR_ATTACHMENT12_NV :: 36076
COLOR_ATTACHMENT13_NV :: 36077
COLOR_ATTACHMENT14_NV :: 36078
COLOR_ATTACHMENT15_NV :: 36079
NV_draw_instanced :: 1
NV_draw_texture :: 1
NV_draw_vulkan_image :: 1
NV_evaluators :: 1
EVAL_2D_NV :: 34496
EVAL_TRIANGULAR_2D_NV :: 34497
MAP_TESSELLATION_NV :: 34498
MAP_ATTRIB_U_ORDER_NV :: 34499
MAP_ATTRIB_V_ORDER_NV :: 34500
EVAL_FRACTIONAL_TESSELLATION_NV :: 34501
EVAL_VERTEX_ATTRIB0_NV :: 34502
EVAL_VERTEX_ATTRIB1_NV :: 34503
EVAL_VERTEX_ATTRIB2_NV :: 34504
EVAL_VERTEX_ATTRIB3_NV :: 34505
EVAL_VERTEX_ATTRIB4_NV :: 34506
EVAL_VERTEX_ATTRIB5_NV :: 34507
EVAL_VERTEX_ATTRIB6_NV :: 34508
EVAL_VERTEX_ATTRIB7_NV :: 34509
EVAL_VERTEX_ATTRIB8_NV :: 34510
EVAL_VERTEX_ATTRIB9_NV :: 34511
EVAL_VERTEX_ATTRIB10_NV :: 34512
EVAL_VERTEX_ATTRIB11_NV :: 34513
EVAL_VERTEX_ATTRIB12_NV :: 34514
EVAL_VERTEX_ATTRIB13_NV :: 34515
EVAL_VERTEX_ATTRIB14_NV :: 34516
EVAL_VERTEX_ATTRIB15_NV :: 34517
MAX_MAP_TESSELLATION_NV :: 34518
MAX_RATIONAL_EVAL_ORDER_NV :: 34519
NV_explicit_attrib_location :: 1
NV_explicit_multisample :: 1
SAMPLE_POSITION_NV :: 36432
SAMPLE_MASK_NV :: 36433
SAMPLE_MASK_VALUE_NV :: 36434
TEXTURE_BINDING_RENDERBUFFER_NV :: 36435
TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV :: 36436
TEXTURE_RENDERBUFFER_NV :: 36437
SAMPLER_RENDERBUFFER_NV :: 36438
INT_SAMPLER_RENDERBUFFER_NV :: 36439
UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV :: 36440
MAX_SAMPLE_MASK_WORDS_NV :: 36441
NV_fbo_color_attachments :: 1
MAX_COLOR_ATTACHMENTS_NV :: 36063
NV_fence :: 1
ALL_COMPLETED_NV :: 34034
FENCE_STATUS_NV :: 34035
FENCE_CONDITION_NV :: 34036
NV_fill_rectangle :: 1
FILL_RECTANGLE_NV :: 37692
NV_float_buffer :: 1
FLOAT_R_NV :: 34944
FLOAT_RG_NV :: 34945
FLOAT_RGB_NV :: 34946
FLOAT_RGBA_NV :: 34947
FLOAT_R16_NV :: 34948
FLOAT_R32_NV :: 34949
FLOAT_RG16_NV :: 34950
FLOAT_RG32_NV :: 34951
FLOAT_RGB16_NV :: 34952
FLOAT_RGB32_NV :: 34953
FLOAT_RGBA16_NV :: 34954
FLOAT_RGBA32_NV :: 34955
TEXTURE_FLOAT_COMPONENTS_NV :: 34956
FLOAT_CLEAR_COLOR_VALUE_NV :: 34957
FLOAT_RGBA_MODE_NV :: 34958
NV_fog_distance :: 1
FOG_DISTANCE_MODE_NV :: 34138
EYE_RADIAL_NV :: 34139
EYE_PLANE_ABSOLUTE_NV :: 34140
NV_fragment_coverage_to_color :: 1
FRAGMENT_COVERAGE_TO_COLOR_NV :: 37597
FRAGMENT_COVERAGE_COLOR_NV :: 37598
NV_fragment_program :: 1
MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV :: 34920
FRAGMENT_PROGRAM_NV :: 34928
MAX_TEXTURE_COORDS_NV :: 34929
MAX_TEXTURE_IMAGE_UNITS_NV :: 34930
FRAGMENT_PROGRAM_BINDING_NV :: 34931
PROGRAM_ERROR_STRING_NV :: 34932
NV_fragment_program2 :: 1
MAX_PROGRAM_EXEC_INSTRUCTIONS_NV :: 35060
MAX_PROGRAM_CALL_DEPTH_NV :: 35061
MAX_PROGRAM_IF_DEPTH_NV :: 35062
MAX_PROGRAM_LOOP_DEPTH_NV :: 35063
MAX_PROGRAM_LOOP_COUNT_NV :: 35064
NV_fragment_program4 :: 1
NV_fragment_program_option :: 1
NV_fragment_shader_barycentric :: 1
NV_fragment_shader_interlock :: 1
NV_framebuffer_blit :: 1
DRAW_FRAMEBUFFER_BINDING_NV :: 36006
READ_FRAMEBUFFER_NV :: 36008
DRAW_FRAMEBUFFER_NV :: 36009
READ_FRAMEBUFFER_BINDING_NV :: 36010
NV_framebuffer_mixed_samples :: 1
NV_framebuffer_multisample :: 1
RENDERBUFFER_SAMPLES_NV :: 36011
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV :: 36182
MAX_SAMPLES_NV :: 36183
NV_framebuffer_multisample_coverage :: 1
RENDERBUFFER_COVERAGE_SAMPLES_NV :: 36011
RENDERBUFFER_COLOR_SAMPLES_NV :: 36368
MAX_MULTISAMPLE_COVERAGE_MODES_NV :: 36369
MULTISAMPLE_COVERAGE_MODES_NV :: 36370
NV_generate_mipmap_sRGB :: 1
NV_geometry_program4 :: 1
GEOMETRY_PROGRAM_NV :: 35878
MAX_PROGRAM_OUTPUT_VERTICES_NV :: 35879
MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV :: 35880
NV_geometry_shader4 :: 1
NV_geometry_shader_passthrough :: 1
NV_gpu_multicast :: 1
PER_GPU_STORAGE_BIT_NV :: 2048
MULTICAST_GPUS_NV :: 37562
PER_GPU_STORAGE_NV :: 38216
MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV :: 38217
RENDER_GPU_MASK_NV :: 38232
NV_gpu_program4 :: 1
MIN_PROGRAM_TEXEL_OFFSET_NV :: 35076
MAX_PROGRAM_TEXEL_OFFSET_NV :: 35077
PROGRAM_ATTRIB_COMPONENTS_NV :: 35078
PROGRAM_RESULT_COMPONENTS_NV :: 35079
MAX_PROGRAM_ATTRIB_COMPONENTS_NV :: 35080
MAX_PROGRAM_RESULT_COMPONENTS_NV :: 35081
MAX_PROGRAM_GENERIC_ATTRIBS_NV :: 36261
MAX_PROGRAM_GENERIC_RESULTS_NV :: 36262
NV_gpu_program5 :: 1
MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV :: 36442
MIN_FRAGMENT_INTERPOLATION_OFFSET_NV :: 36443
MAX_FRAGMENT_INTERPOLATION_OFFSET_NV :: 36444
FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV :: 36445
MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV :: 36446
MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV :: 36447
NV_gpu_program5_mem_extended :: 1
NV_gpu_program_fp64 :: 1
NV_gpu_shader5 :: 1
INT64_NV :: 5134
UNSIGNED_INT64_NV :: 5135
INT8_NV :: 36832
INT8_VEC2_NV :: 36833
INT8_VEC3_NV :: 36834
INT8_VEC4_NV :: 36835
INT16_NV :: 36836
INT16_VEC2_NV :: 36837
INT16_VEC3_NV :: 36838
INT16_VEC4_NV :: 36839
INT64_VEC2_NV :: 36841
INT64_VEC3_NV :: 36842
INT64_VEC4_NV :: 36843
UNSIGNED_INT8_NV :: 36844
UNSIGNED_INT8_VEC2_NV :: 36845
UNSIGNED_INT8_VEC3_NV :: 36846
UNSIGNED_INT8_VEC4_NV :: 36847
UNSIGNED_INT16_NV :: 36848
UNSIGNED_INT16_VEC2_NV :: 36849
UNSIGNED_INT16_VEC3_NV :: 36850
UNSIGNED_INT16_VEC4_NV :: 36851
UNSIGNED_INT64_VEC2_NV :: 36853
UNSIGNED_INT64_VEC3_NV :: 36854
UNSIGNED_INT64_VEC4_NV :: 36855
NV_half_float :: 1
HALF_FLOAT_NV :: 5131
NV_image_formats :: 1
NV_instanced_arrays :: 1
VERTEX_ATTRIB_ARRAY_DIVISOR_NV :: 35070
NV_internalformat_sample_query :: 1
MULTISAMPLES_NV :: 37745
SUPERSAMPLE_SCALE_X_NV :: 37746
SUPERSAMPLE_SCALE_Y_NV :: 37747
CONFORMANT_NV :: 37748
NV_light_max_exponent :: 1
MAX_SHININESS_NV :: 34052
MAX_SPOT_EXPONENT_NV :: 34053
NV_memory_attachment :: 1
ATTACHED_MEMORY_OBJECT_NV :: 38308
ATTACHED_MEMORY_OFFSET_NV :: 38309
MEMORY_ATTACHABLE_ALIGNMENT_NV :: 38310
MEMORY_ATTACHABLE_SIZE_NV :: 38311
MEMORY_ATTACHABLE_NV :: 38312
DETACHED_MEMORY_INCARNATION_NV :: 38313
DETACHED_TEXTURES_NV :: 38314
DETACHED_BUFFERS_NV :: 38315
MAX_DETACHED_TEXTURES_NV :: 38316
MAX_DETACHED_BUFFERS_NV :: 38317
NV_memory_object_sparse :: 1
NV_mesh_shader :: 1
MESH_SHADER_BIT_NV :: 64
TASK_SHADER_BIT_NV :: 128
MAX_MESH_UNIFORM_BLOCKS_NV :: 36448
MAX_MESH_TEXTURE_IMAGE_UNITS_NV :: 36449
MAX_MESH_IMAGE_UNIFORMS_NV :: 36450
MAX_MESH_UNIFORM_COMPONENTS_NV :: 36451
MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV :: 36452
MAX_MESH_ATOMIC_COUNTERS_NV :: 36453
MAX_MESH_SHADER_STORAGE_BLOCKS_NV :: 36454
MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV :: 36455
MAX_TASK_UNIFORM_BLOCKS_NV :: 36456
MAX_TASK_TEXTURE_IMAGE_UNITS_NV :: 36457
MAX_TASK_IMAGE_UNIFORMS_NV :: 36458
MAX_TASK_UNIFORM_COMPONENTS_NV :: 36459
MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV :: 36460
MAX_TASK_ATOMIC_COUNTERS_NV :: 36461
MAX_TASK_SHADER_STORAGE_BLOCKS_NV :: 36462
MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV :: 36463
MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV :: 37599
MAX_MESH_TOTAL_MEMORY_SIZE_NV :: 38198
MAX_TASK_TOTAL_MEMORY_SIZE_NV :: 38199
MAX_MESH_OUTPUT_VERTICES_NV :: 38200
MAX_MESH_OUTPUT_PRIMITIVES_NV :: 38201
MAX_TASK_OUTPUT_COUNT_NV :: 38202
MAX_MESH_WORK_GROUP_SIZE_NV :: 38203
MAX_TASK_WORK_GROUP_SIZE_NV :: 38204
MAX_DRAW_MESH_TASKS_COUNT_NV :: 38205
MESH_WORK_GROUP_SIZE_NV :: 38206
TASK_WORK_GROUP_SIZE_NV :: 38207
MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV :: 38211
MAX_MESH_VIEWS_NV :: 38231
MESH_SHADER_NV :: 38233
TASK_SHADER_NV :: 38234
MESH_VERTICES_OUT_NV :: 38265
MESH_PRIMITIVES_OUT_NV :: 38266
MESH_OUTPUT_TYPE_NV :: 38267
MESH_SUBROUTINE_NV :: 38268
TASK_SUBROUTINE_NV :: 38269
MESH_SUBROUTINE_UNIFORM_NV :: 38270
TASK_SUBROUTINE_UNIFORM_NV :: 38271
UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV :: 38300
UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV :: 38301
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV :: 38302
ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV :: 38303
REFERENCED_BY_MESH_SHADER_NV :: 38304
REFERENCED_BY_TASK_SHADER_NV :: 38305
MAX_MESH_WORK_GROUP_INVOCATIONS_NV :: 38306
MAX_TASK_WORK_GROUP_INVOCATIONS_NV :: 38307
NV_multisample_coverage :: 1
NV_multisample_filter_hint :: 1
MULTISAMPLE_FILTER_HINT_NV :: 34100
NV_non_square_matrices :: 1
FLOAT_MAT2x3_NV :: 35685
FLOAT_MAT2x4_NV :: 35686
FLOAT_MAT3x2_NV :: 35687
FLOAT_MAT3x4_NV :: 35688
FLOAT_MAT4x2_NV :: 35689
FLOAT_MAT4x3_NV :: 35690
NV_occlusion_query :: 1
PIXEL_COUNTER_BITS_NV :: 34916
CURRENT_OCCLUSION_QUERY_ID_NV :: 34917
PIXEL_COUNT_NV :: 34918
PIXEL_COUNT_AVAILABLE_NV :: 34919
NV_pack_subimage :: 1
PACK_ROW_LENGTH_NV :: 3330
PACK_SKIP_ROWS_NV :: 3331
PACK_SKIP_PIXELS_NV :: 3332
NV_packed_depth_stencil :: 1
DEPTH_STENCIL_NV :: 34041
UNSIGNED_INT_24_8_NV :: 34042
NV_packed_float :: 1
R11F_G11F_B10F_NV :: 35898
UNSIGNED_INT_10F_11F_11F_REV_NV :: 35899
NV_packed_float_linear :: 1
NV_parameter_buffer_object :: 1
MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV :: 36256
MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV :: 36257
VERTEX_PROGRAM_PARAMETER_BUFFER_NV :: 36258
GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV :: 36259
FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV :: 36260
NV_parameter_buffer_object2 :: 1
NV_path_rendering :: 1
CLOSE_PATH_NV :: 0
BOLD_BIT_NV :: 1
YPH_WIDTH_BIT_NV :: 1
YPH_HEIGHT_BIT_NV :: 2
ITALIC_BIT_NV :: 2
MOVE_TO_NV :: 2
RELATIVE_MOVE_TO_NV :: 3
YPH_HORIZONTAL_BEARING_X_BIT_NV :: 4
LINE_TO_NV :: 4
RELATIVE_LINE_TO_NV :: 5
HORIZONTAL_LINE_TO_NV :: 6
RELATIVE_HORIZONTAL_LINE_TO_NV :: 7
YPH_HORIZONTAL_BEARING_Y_BIT_NV :: 8
VERTICAL_LINE_TO_NV :: 8
RELATIVE_VERTICAL_LINE_TO_NV :: 9
QUADRATIC_CURVE_TO_NV :: 10
RELATIVE_QUADRATIC_CURVE_TO_NV :: 11
CUBIC_CURVE_TO_NV :: 12
RELATIVE_CUBIC_CURVE_TO_NV :: 13
SMOOTH_QUADRATIC_CURVE_TO_NV :: 14
RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV :: 15
YPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV :: 16
SMOOTH_CUBIC_CURVE_TO_NV :: 16
RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV :: 17
SMALL_CCW_ARC_TO_NV :: 18
RELATIVE_SMALL_CCW_ARC_TO_NV :: 19
SMALL_CW_ARC_TO_NV :: 20
RELATIVE_SMALL_CW_ARC_TO_NV :: 21
LARGE_CCW_ARC_TO_NV :: 22
RELATIVE_LARGE_CCW_ARC_TO_NV :: 23
LARGE_CW_ARC_TO_NV :: 24
RELATIVE_LARGE_CW_ARC_TO_NV :: 25
CONIC_CURVE_TO_NV :: 26
RELATIVE_CONIC_CURVE_TO_NV :: 27
YPH_VERTICAL_BEARING_X_BIT_NV :: 32
YPH_VERTICAL_BEARING_Y_BIT_NV :: 64
YPH_VERTICAL_BEARING_ADVANCE_BIT_NV :: 128
ROUNDED_RECT_NV :: 232
RELATIVE_ROUNDED_RECT_NV :: 233
ROUNDED_RECT2_NV :: 234
RELATIVE_ROUNDED_RECT2_NV :: 235
ROUNDED_RECT4_NV :: 236
RELATIVE_ROUNDED_RECT4_NV :: 237
ROUNDED_RECT8_NV :: 238
RELATIVE_ROUNDED_RECT8_NV :: 239
RESTART_PATH_NV :: 240
DUP_FIRST_CUBIC_CURVE_TO_NV :: 242
DUP_LAST_CUBIC_CURVE_TO_NV :: 244
RECT_NV :: 246
RELATIVE_RECT_NV :: 247
CIRCULAR_CCW_ARC_TO_NV :: 248
CIRCULAR_CW_ARC_TO_NV :: 250
CIRCULAR_TANGENT_ARC_TO_NV :: 252
ARC_TO_NV :: 254
RELATIVE_ARC_TO_NV :: 255
YPH_HAS_KERNING_BIT_NV :: 256
PRIMARY_COLOR_NV :: 34092
SECONDARY_COLOR_NV :: 34093
PATH_FORMAT_SVG_NV :: 36976
PATH_FORMAT_PS_NV :: 36977
STANDARD_FONT_NAME_NV :: 36978
SYSTEM_FONT_NAME_NV :: 36979
FILE_NAME_NV :: 36980
PATH_STROKE_WIDTH_NV :: 36981
PATH_END_CAPS_NV :: 36982
PATH_INITIAL_END_CAP_NV :: 36983
PATH_TERMINAL_END_CAP_NV :: 36984
PATH_JOIN_STYLE_NV :: 36985
PATH_MITER_LIMIT_NV :: 36986
PATH_DASH_CAPS_NV :: 36987
PATH_INITIAL_DASH_CAP_NV :: 36988
PATH_TERMINAL_DASH_CAP_NV :: 36989
PATH_DASH_OFFSET_NV :: 36990
PATH_CLIENT_LENGTH_NV :: 36991
PATH_FILL_MODE_NV :: 36992
PATH_FILL_MASK_NV :: 36993
PATH_FILL_COVER_MODE_NV :: 36994
PATH_STROKE_COVER_MODE_NV :: 36995
PATH_STROKE_MASK_NV :: 36996
PATH_STROKE_BOUND_NV :: 36998
COUNT_UP_NV :: 37000
COUNT_DOWN_NV :: 37001
PATH_OBJECT_BOUNDING_BOX_NV :: 37002
CONVEX_HULL_NV :: 37003
BOUNDING_BOX_NV :: 37005
TRANSLATE_X_NV :: 37006
TRANSLATE_Y_NV :: 37007
TRANSLATE_2D_NV :: 37008
TRANSLATE_3D_NV :: 37009
AFFINE_2D_NV :: 37010
AFFINE_3D_NV :: 37012
TRANSPOSE_AFFINE_2D_NV :: 37014
TRANSPOSE_AFFINE_3D_NV :: 37016
UTF8_NV :: 37018
UTF16_NV :: 37019
BOUNDING_BOX_OF_BOUNDING_BOXES_NV :: 37020
PATH_COMMAND_COUNT_NV :: 37021
PATH_COORD_COUNT_NV :: 37022
PATH_DASH_ARRAY_COUNT_NV :: 37023
PATH_COMPUTED_LENGTH_NV :: 37024
PATH_FILL_BOUNDING_BOX_NV :: 37025
PATH_STROKE_BOUNDING_BOX_NV :: 37026
SQUARE_NV :: 37027
ROUND_NV :: 37028
TRIANGULAR_NV :: 37029
BEVEL_NV :: 37030
MITER_REVERT_NV :: 37031
MITER_TRUNCATE_NV :: 37032
SKIP_MISSING_GLYPH_NV :: 37033
USE_MISSING_GLYPH_NV :: 37034
PATH_ERROR_POSITION_NV :: 37035
PATH_FOG_GEN_MODE_NV :: 37036
ACCUM_ADJACENT_PAIRS_NV :: 37037
ADJACENT_PAIRS_NV :: 37038
FIRST_TO_REST_NV :: 37039
PATH_GEN_MODE_NV :: 37040
PATH_GEN_COEFF_NV :: 37041
PATH_GEN_COLOR_FORMAT_NV :: 37042
PATH_GEN_COMPONENTS_NV :: 37043
PATH_DASH_OFFSET_RESET_NV :: 37044
MOVE_TO_RESETS_NV :: 37045
MOVE_TO_CONTINUES_NV :: 37046
PATH_STENCIL_FUNC_NV :: 37047
PATH_STENCIL_REF_NV :: 37048
PATH_STENCIL_VALUE_MASK_NV :: 37049
PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV :: 37053
PATH_STENCIL_DEPTH_OFFSET_UNITS_NV :: 37054
PATH_COVER_DEPTH_FUNC_NV :: 37055
FONT_GLYPHS_AVAILABLE_NV :: 37736
FONT_TARGET_UNAVAILABLE_NV :: 37737
FONT_UNAVAILABLE_NV :: 37738
FONT_UNINTELLIGIBLE_NV :: 37739
STANDARD_FONT_FORMAT_NV :: 37740
FRAGMENT_INPUT_NV :: 37741
FONT_X_MIN_BOUNDS_BIT_NV :: 65536
FONT_Y_MIN_BOUNDS_BIT_NV :: 131072
FONT_X_MAX_BOUNDS_BIT_NV :: 262144
FONT_Y_MAX_BOUNDS_BIT_NV :: 524288
FONT_UNITS_PER_EM_BIT_NV :: 1048576
FONT_ASCENDER_BIT_NV :: 2097152
FONT_DESCENDER_BIT_NV :: 4194304
FONT_HEIGHT_BIT_NV :: 8388608
FONT_MAX_ADVANCE_WIDTH_BIT_NV :: 16777216
FONT_MAX_ADVANCE_HEIGHT_BIT_NV :: 33554432
FONT_UNDERLINE_POSITION_BIT_NV :: 67108864
FONT_UNDERLINE_THICKNESS_BIT_NV :: 134217728
FONT_HAS_KERNING_BIT_NV :: 268435456
FONT_NUM_GLYPH_INDICES_BIT_NV :: 536870912
NV_path_rendering_shared_edge :: 1
SHARED_EDGE_NV :: 192
NV_pixel_buffer_object :: 1
PIXEL_PACK_BUFFER_NV :: 35051
PIXEL_UNPACK_BUFFER_NV :: 35052
PIXEL_PACK_BUFFER_BINDING_NV :: 35053
PIXEL_UNPACK_BUFFER_BINDING_NV :: 35055
NV_pixel_data_range :: 1
WRITE_PIXEL_DATA_RANGE_NV :: 34936
READ_PIXEL_DATA_RANGE_NV :: 34937
WRITE_PIXEL_DATA_RANGE_LENGTH_NV :: 34938
READ_PIXEL_DATA_RANGE_LENGTH_NV :: 34939
WRITE_PIXEL_DATA_RANGE_POINTER_NV :: 34940
READ_PIXEL_DATA_RANGE_POINTER_NV :: 34941
NV_platform_binary :: 1
NVIDIA_PLATFORM_BINARY_NV :: 35083
NV_point_sprite :: 1
POINT_SPRITE_NV :: 34913
COORD_REPLACE_NV :: 34914
POINT_SPRITE_R_MODE_NV :: 34915
NV_polygon_mode :: 1
POLYGON_MODE_NV :: 2880
POINT_NV :: 6912
LINE_NV :: 6913
FILL_NV :: 6914
POLYGON_OFFSET_POINT_NV :: 10753
POLYGON_OFFSET_LINE_NV :: 10754
NV_present_video :: 1
FRAME_NV :: 36390
FIELDS_NV :: 36391
CURRENT_TIME_NV :: 36392
NUM_FILL_STREAMS_NV :: 36393
PRESENT_TIME_NV :: 36394
PRESENT_DURATION_NV :: 36395
NV_primitive_restart :: 1
PRIMITIVE_RESTART_NV :: 34136
PRIMITIVE_RESTART_INDEX_NV :: 34137
NV_primitive_shading_rate :: 1
SHADING_RATE_IMAGE_PER_PRIMITIVE_NV :: 38321
SHADING_RATE_IMAGE_PALETTE_COUNT_NV :: 38322
NV_query_resource_tag :: 1
NV_read_buffer :: 1
READ_BUFFER_NV :: 3074
NV_read_buffer_front :: 1
NV_read_depth :: 1
NV_read_depth_stencil :: 1
NV_read_stencil :: 1
NV_register_combiners :: 1
REGISTER_COMBINERS_NV :: 34082
VARIABLE_A_NV :: 34083
VARIABLE_B_NV :: 34084
VARIABLE_C_NV :: 34085
VARIABLE_D_NV :: 34086
VARIABLE_E_NV :: 34087
VARIABLE_F_NV :: 34088
VARIABLE_G_NV :: 34089
CONSTANT_COLOR0_NV :: 34090
CONSTANT_COLOR1_NV :: 34091
SPARE0_NV :: 34094
SPARE1_NV :: 34095
DISCARD_NV :: 34096
E_TIMES_F_NV :: 34097
SPARE0_PLUS_SECONDARY_COLOR_NV :: 34098
UNSIGNED_IDENTITY_NV :: 34102
UNSIGNED_INVERT_NV :: 34103
EXPAND_NORMAL_NV :: 34104
EXPAND_NEGATE_NV :: 34105
HALF_BIAS_NORMAL_NV :: 34106
HALF_BIAS_NEGATE_NV :: 34107
SIGNED_IDENTITY_NV :: 34108
SIGNED_NEGATE_NV :: 34109
SCALE_BY_TWO_NV :: 34110
SCALE_BY_FOUR_NV :: 34111
SCALE_BY_ONE_HALF_NV :: 34112
BIAS_BY_NEGATIVE_ONE_HALF_NV :: 34113
COMBINER_INPUT_NV :: 34114
COMBINER_MAPPING_NV :: 34115
COMBINER_COMPONENT_USAGE_NV :: 34116
COMBINER_AB_DOT_PRODUCT_NV :: 34117
COMBINER_CD_DOT_PRODUCT_NV :: 34118
COMBINER_MUX_SUM_NV :: 34119
COMBINER_SCALE_NV :: 34120
COMBINER_BIAS_NV :: 34121
COMBINER_AB_OUTPUT_NV :: 34122
COMBINER_CD_OUTPUT_NV :: 34123
COMBINER_SUM_OUTPUT_NV :: 34124
MAX_GENERAL_COMBINERS_NV :: 34125
NUM_GENERAL_COMBINERS_NV :: 34126
COLOR_SUM_CLAMP_NV :: 34127
COMBINER0_NV :: 34128
COMBINER1_NV :: 34129
COMBINER2_NV :: 34130
COMBINER3_NV :: 34131
COMBINER4_NV :: 34132
COMBINER5_NV :: 34133
COMBINER6_NV :: 34134
COMBINER7_NV :: 34135
NV_register_combiners2 :: 1
PER_STAGE_CONSTANTS_NV :: 34101
NV_representative_fragment_test :: 1
REPRESENTATIVE_FRAGMENT_TEST_NV :: 37759
NV_robustness_video_memory_purge :: 1
PURGED_CONTEXT_RESET_NV :: 37563
NV_sRGB_formats :: 1
ETC1_SRGB8_NV :: 35054
SRGB8_NV :: 35905
SLUMINANCE_ALPHA_NV :: 35908
SLUMINANCE8_ALPHA8_NV :: 35909
SLUMINANCE_NV :: 35910
SLUMINANCE8_NV :: 35911
COMPRESSED_SRGB_S3TC_DXT1_NV :: 35916
COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV :: 35917
COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV :: 35918
COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV :: 35919
NV_sample_locations :: 1
SAMPLE_LOCATION_NV :: 36432
SAMPLE_LOCATION_SUBPIXEL_BITS_NV :: 37693
SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV :: 37694
SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV :: 37695
PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV :: 37696
PROGRAMMABLE_SAMPLE_LOCATION_NV :: 37697
FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV :: 37698
FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV :: 37699
NV_sample_mask_override_coverage :: 1
NV_scissor_exclusive :: 1
SCISSOR_TEST_EXCLUSIVE_NV :: 38229
SCISSOR_BOX_EXCLUSIVE_NV :: 38230
NV_shader_atomic_counters :: 1
NV_shader_atomic_float :: 1
NV_shader_atomic_float64 :: 1
NV_shader_atomic_fp16_vector :: 1
NV_shader_atomic_int64 :: 1
NV_shader_buffer_load :: 1
BUFFER_GPU_ADDRESS_NV :: 36637
GPU_ADDRESS_NV :: 36660
MAX_SHADER_BUFFER_ADDRESS_NV :: 36661
NV_shader_noperspective_interpolation :: 1
NV_shader_storage_buffer_object :: 1
NV_shader_subgroup_partitioned :: 1
SUBGROUP_FEATURE_PARTITIONED_BIT_NV :: 256
NV_shader_texture_footprint :: 1
NV_shader_thread_group :: 1
WARP_SIZE_NV :: 37689
WARPS_PER_SM_NV :: 37690
SM_COUNT_NV :: 37691
NV_shader_thread_shuffle :: 1
NV_shading_rate_image :: 1
SHADING_RATE_IMAGE_BINDING_NV :: 38235
SHADING_RATE_IMAGE_TEXEL_WIDTH_NV :: 38236
SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV :: 38237
SHADING_RATE_IMAGE_PALETTE_SIZE_NV :: 38238
MAX_COARSE_FRAGMENT_SAMPLES_NV :: 38239
SHADING_RATE_IMAGE_NV :: 38243
SHADING_RATE_NO_INVOCATIONS_NV :: 38244
SHADING_RATE_1_INVOCATION_PER_PIXEL_NV :: 38245
SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV :: 38246
SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV :: 38247
SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV :: 38248
SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV :: 38249
SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV :: 38250
SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV :: 38251
SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV :: 38252
SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV :: 38253
SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV :: 38254
SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV :: 38255
SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV :: 38318
SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV :: 38319
SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV :: 38320
NV_shadow_samplers_array :: 1
SAMPLER_2D_ARRAY_SHADOW_NV :: 36292
NV_shadow_samplers_cube :: 1
SAMPLER_CUBE_SHADOW_NV :: 36293
NV_stereo_view_rendering :: 1
NV_tessellation_program5 :: 1
MAX_PROGRAM_PATCH_ATTRIBS_NV :: 34520
TESS_CONTROL_PROGRAM_NV :: 35102
TESS_EVALUATION_PROGRAM_NV :: 35103
TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV :: 35956
TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV :: 35957
NV_texgen_emboss :: 1
EMBOSS_LIGHT_NV :: 34141
EMBOSS_CONSTANT_NV :: 34142
EMBOSS_MAP_NV :: 34143
NV_texgen_reflection :: 1
NORMAL_MAP_NV :: 34065
REFLECTION_MAP_NV :: 34066
NV_texture_array :: 1
UNPACK_SKIP_IMAGES_NV :: 32877
UNPACK_IMAGE_HEIGHT_NV :: 32878
MAX_ARRAY_TEXTURE_LAYERS_NV :: 35071
TEXTURE_2D_ARRAY_NV :: 35866
TEXTURE_BINDING_2D_ARRAY_NV :: 35869
FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_NV :: 36052
SAMPLER_2D_ARRAY_NV :: 36289
NV_texture_barrier :: 1
NV_texture_border_clamp :: 1
TEXTURE_BORDER_COLOR_NV :: 4100
CLAMP_TO_BORDER_NV :: 33069
NV_texture_compression_latc :: 1
COMPRESSED_LUMINANCE_LATC1_NV :: 35952
COMPRESSED_SIGNED_LUMINANCE_LATC1_NV :: 35953
COMPRESSED_LUMINANCE_ALPHA_LATC2_NV :: 35954
COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_NV :: 35955
NV_texture_compression_s3tc :: 1
COMPRESSED_RGB_S3TC_DXT1_NV :: 33776
COMPRESSED_RGBA_S3TC_DXT1_NV :: 33777
COMPRESSED_RGBA_S3TC_DXT3_NV :: 33778
COMPRESSED_RGBA_S3TC_DXT5_NV :: 33779
NV_texture_compression_s3tc_update :: 1
NV_texture_compression_vtc :: 1
NV_texture_env_combine4 :: 1
COMBINE4_NV :: 34051
SOURCE3_RGB_NV :: 34179
SOURCE3_ALPHA_NV :: 34187
OPERAND3_RGB_NV :: 34195
OPERAND3_ALPHA_NV :: 34203
NV_texture_expand_normal :: 1
TEXTURE_UNSIGNED_REMAP_MODE_NV :: 34959
NV_texture_multisample :: 1
TEXTURE_COVERAGE_SAMPLES_NV :: 36933
TEXTURE_COLOR_SAMPLES_NV :: 36934
NV_texture_npot_2D_mipmap :: 1
NV_texture_rectangle :: 1
TEXTURE_RECTANGLE_NV :: 34037
TEXTURE_BINDING_RECTANGLE_NV :: 34038
PROXY_TEXTURE_RECTANGLE_NV :: 34039
MAX_RECTANGLE_TEXTURE_SIZE_NV :: 34040
NV_texture_rectangle_compressed :: 1
NV_texture_shader :: 1
OFFSET_TEXTURE_RECTANGLE_NV :: 34380
OFFSET_TEXTURE_RECTANGLE_SCALE_NV :: 34381
DOT_PRODUCT_TEXTURE_RECTANGLE_NV :: 34382
RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV :: 34521
UNSIGNED_INT_S8_S8_8_8_NV :: 34522
UNSIGNED_INT_8_8_S8_S8_REV_NV :: 34523
DSDT_MAG_INTENSITY_NV :: 34524
SHADER_CONSISTENT_NV :: 34525
TEXTURE_SHADER_NV :: 34526
SHADER_OPERATION_NV :: 34527
CULL_MODES_NV :: 34528
OFFSET_TEXTURE_2D_MATRIX_NV :: 34529
OFFSET_TEXTURE_MATRIX_NV :: 34529
OFFSET_TEXTURE_2D_SCALE_NV :: 34530
OFFSET_TEXTURE_SCALE_NV :: 34530
OFFSET_TEXTURE_2D_BIAS_NV :: 34531
OFFSET_TEXTURE_BIAS_NV :: 34531
PREVIOUS_TEXTURE_INPUT_NV :: 34532
CONST_EYE_NV :: 34533
PASS_THROUGH_NV :: 34534
CULL_FRAGMENT_NV :: 34535
OFFSET_TEXTURE_2D_NV :: 34536
DEPENDENT_AR_TEXTURE_2D_NV :: 34537
DEPENDENT_GB_TEXTURE_2D_NV :: 34538
DOT_PRODUCT_NV :: 34540
DOT_PRODUCT_DEPTH_REPLACE_NV :: 34541
DOT_PRODUCT_TEXTURE_2D_NV :: 34542
DOT_PRODUCT_TEXTURE_CUBE_MAP_NV :: 34544
DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV :: 34545
DOT_PRODUCT_REFLECT_CUBE_MAP_NV :: 34546
DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV :: 34547
HILO_NV :: 34548
DSDT_NV :: 34549
DSDT_MAG_NV :: 34550
DSDT_MAG_VIB_NV :: 34551
HILO16_NV :: 34552
SIGNED_HILO_NV :: 34553
SIGNED_HILO16_NV :: 34554
SIGNED_RGBA_NV :: 34555
SIGNED_RGBA8_NV :: 34556
SIGNED_RGB_NV :: 34558
SIGNED_RGB8_NV :: 34559
SIGNED_LUMINANCE_NV :: 34561
SIGNED_LUMINANCE8_NV :: 34562
SIGNED_LUMINANCE_ALPHA_NV :: 34563
SIGNED_LUMINANCE8_ALPHA8_NV :: 34564
SIGNED_ALPHA_NV :: 34565
SIGNED_ALPHA8_NV :: 34566
SIGNED_INTENSITY_NV :: 34567
SIGNED_INTENSITY8_NV :: 34568
DSDT8_NV :: 34569
DSDT8_MAG8_NV :: 34570
DSDT8_MAG8_INTENSITY8_NV :: 34571
SIGNED_RGB_UNSIGNED_ALPHA_NV :: 34572
SIGNED_RGB8_UNSIGNED_ALPHA8_NV :: 34573
HI_SCALE_NV :: 34574
LO_SCALE_NV :: 34575
DS_SCALE_NV :: 34576
DT_SCALE_NV :: 34577
MAGNITUDE_SCALE_NV :: 34578
VIBRANCE_SCALE_NV :: 34579
HI_BIAS_NV :: 34580
LO_BIAS_NV :: 34581
DS_BIAS_NV :: 34582
DT_BIAS_NV :: 34583
MAGNITUDE_BIAS_NV :: 34584
VIBRANCE_BIAS_NV :: 34585
TEXTURE_BORDER_VALUES_NV :: 34586
TEXTURE_HI_SIZE_NV :: 34587
TEXTURE_LO_SIZE_NV :: 34588
TEXTURE_DS_SIZE_NV :: 34589
TEXTURE_DT_SIZE_NV :: 34590
TEXTURE_MAG_SIZE_NV :: 34591
NV_texture_shader2 :: 1
DOT_PRODUCT_TEXTURE_3D_NV :: 34543
NV_texture_shader3 :: 1
OFFSET_PROJECTIVE_TEXTURE_2D_NV :: 34896
OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV :: 34897
OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV :: 34898
OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV :: 34899
OFFSET_HILO_TEXTURE_2D_NV :: 34900
OFFSET_HILO_TEXTURE_RECTANGLE_NV :: 34901
OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV :: 34902
OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV :: 34903
DEPENDENT_HILO_TEXTURE_2D_NV :: 34904
DEPENDENT_RGB_TEXTURE_3D_NV :: 34905
DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV :: 34906
DOT_PRODUCT_PASS_THROUGH_NV :: 34907
DOT_PRODUCT_TEXTURE_1D_NV :: 34908
DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV :: 34909
HILO8_NV :: 34910
SIGNED_HILO8_NV :: 34911
FORCE_BLUE_TO_ONE_NV :: 34912
NV_timeline_semaphore :: 1
TIMELINE_SEMAPHORE_VALUE_NV :: 38293
SEMAPHORE_TYPE_NV :: 38323
SEMAPHORE_TYPE_BINARY_NV :: 38324
SEMAPHORE_TYPE_TIMELINE_NV :: 38325
MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV :: 38326
NV_transform_feedback :: 1
BACK_PRIMARY_COLOR_NV :: 35959
BACK_SECONDARY_COLOR_NV :: 35960
TEXTURE_COORD_NV :: 35961
CLIP_DISTANCE_NV :: 35962
VERTEX_ID_NV :: 35963
PRIMITIVE_ID_NV :: 35964
GENERIC_ATTRIB_NV :: 35965
TRANSFORM_FEEDBACK_ATTRIBS_NV :: 35966
TRANSFORM_FEEDBACK_BUFFER_MODE_NV :: 35967
MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV :: 35968
ACTIVE_VARYINGS_NV :: 35969
ACTIVE_VARYING_MAX_LENGTH_NV :: 35970
TRANSFORM_FEEDBACK_VARYINGS_NV :: 35971
TRANSFORM_FEEDBACK_BUFFER_START_NV :: 35972
TRANSFORM_FEEDBACK_BUFFER_SIZE_NV :: 35973
TRANSFORM_FEEDBACK_RECORD_NV :: 35974
PRIMITIVES_GENERATED_NV :: 35975
TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV :: 35976
RASTERIZER_DISCARD_NV :: 35977
MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV :: 35978
MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV :: 35979
INTERLEAVED_ATTRIBS_NV :: 35980
SEPARATE_ATTRIBS_NV :: 35981
TRANSFORM_FEEDBACK_BUFFER_NV :: 35982
TRANSFORM_FEEDBACK_BUFFER_BINDING_NV :: 35983
NV_transform_feedback2 :: 1
TRANSFORM_FEEDBACK_NV :: 36386
TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV :: 36387
TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV :: 36388
TRANSFORM_FEEDBACK_BINDING_NV :: 36389
NV_uniform_buffer_std430_layout :: 1
NV_uniform_buffer_unified_memory :: 1
UNIFORM_BUFFER_UNIFIED_NV :: 37742
UNIFORM_BUFFER_ADDRESS_NV :: 37743
UNIFORM_BUFFER_LENGTH_NV :: 37744
NV_vdpau_interop :: 1
SURFACE_STATE_NV :: 34539
SURFACE_REGISTERED_NV :: 34557
SURFACE_MAPPED_NV :: 34560
WRITE_DISCARD_NV :: 35006
NV_vdpau_interop2 :: 1
NV_vertex_array_range :: 1
VERTEX_ARRAY_RANGE_NV :: 34077
VERTEX_ARRAY_RANGE_LENGTH_NV :: 34078
VERTEX_ARRAY_RANGE_VALID_NV :: 34079
MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV :: 34080
VERTEX_ARRAY_RANGE_POINTER_NV :: 34081
NV_vertex_array_range2 :: 1
VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV :: 34099
NV_vertex_attrib_integer_64bit :: 1
NV_vertex_buffer_unified_memory :: 1
VERTEX_ATTRIB_ARRAY_UNIFIED_NV :: 36638
ELEMENT_ARRAY_UNIFIED_NV :: 36639
VERTEX_ATTRIB_ARRAY_ADDRESS_NV :: 36640
VERTEX_ARRAY_ADDRESS_NV :: 36641
NORMAL_ARRAY_ADDRESS_NV :: 36642
COLOR_ARRAY_ADDRESS_NV :: 36643
INDEX_ARRAY_ADDRESS_NV :: 36644
TEXTURE_COORD_ARRAY_ADDRESS_NV :: 36645
EDGE_FLAG_ARRAY_ADDRESS_NV :: 36646
SECONDARY_COLOR_ARRAY_ADDRESS_NV :: 36647
FOG_COORD_ARRAY_ADDRESS_NV :: 36648
ELEMENT_ARRAY_ADDRESS_NV :: 36649
VERTEX_ATTRIB_ARRAY_LENGTH_NV :: 36650
VERTEX_ARRAY_LENGTH_NV :: 36651
NORMAL_ARRAY_LENGTH_NV :: 36652
COLOR_ARRAY_LENGTH_NV :: 36653
INDEX_ARRAY_LENGTH_NV :: 36654
TEXTURE_COORD_ARRAY_LENGTH_NV :: 36655
EDGE_FLAG_ARRAY_LENGTH_NV :: 36656
SECONDARY_COLOR_ARRAY_LENGTH_NV :: 36657
FOG_COORD_ARRAY_LENGTH_NV :: 36658
ELEMENT_ARRAY_LENGTH_NV :: 36659
DRAW_INDIRECT_UNIFIED_NV :: 36672
DRAW_INDIRECT_ADDRESS_NV :: 36673
DRAW_INDIRECT_LENGTH_NV :: 36674
NV_vertex_program :: 1
VERTEX_PROGRAM_NV :: 34336
VERTEX_STATE_PROGRAM_NV :: 34337
ATTRIB_ARRAY_SIZE_NV :: 34339
ATTRIB_ARRAY_STRIDE_NV :: 34340
ATTRIB_ARRAY_TYPE_NV :: 34341
CURRENT_ATTRIB_NV :: 34342
PROGRAM_LENGTH_NV :: 34343
PROGRAM_STRING_NV :: 34344
MODELVIEW_PROJECTION_NV :: 34345
IDENTITY_NV :: 34346
INVERSE_NV :: 34347
TRANSPOSE_NV :: 34348
INVERSE_TRANSPOSE_NV :: 34349
MAX_TRACK_MATRIX_STACK_DEPTH_NV :: 34350
MAX_TRACK_MATRICES_NV :: 34351
MATRIX0_NV :: 34352
MATRIX1_NV :: 34353
MATRIX2_NV :: 34354
MATRIX3_NV :: 34355
MATRIX4_NV :: 34356
MATRIX5_NV :: 34357
MATRIX6_NV :: 34358
MATRIX7_NV :: 34359
CURRENT_MATRIX_STACK_DEPTH_NV :: 34368
CURRENT_MATRIX_NV :: 34369
VERTEX_PROGRAM_POINT_SIZE_NV :: 34370
VERTEX_PROGRAM_TWO_SIDE_NV :: 34371
PROGRAM_PARAMETER_NV :: 34372
ATTRIB_ARRAY_POINTER_NV :: 34373
PROGRAM_TARGET_NV :: 34374
PROGRAM_RESIDENT_NV :: 34375
TRACK_MATRIX_NV :: 34376
TRACK_MATRIX_TRANSFORM_NV :: 34377
VERTEX_PROGRAM_BINDING_NV :: 34378
PROGRAM_ERROR_POSITION_NV :: 34379
VERTEX_ATTRIB_ARRAY0_NV :: 34384
VERTEX_ATTRIB_ARRAY1_NV :: 34385
VERTEX_ATTRIB_ARRAY2_NV :: 34386
VERTEX_ATTRIB_ARRAY3_NV :: 34387
VERTEX_ATTRIB_ARRAY4_NV :: 34388
VERTEX_ATTRIB_ARRAY5_NV :: 34389
VERTEX_ATTRIB_ARRAY6_NV :: 34390
VERTEX_ATTRIB_ARRAY7_NV :: 34391
VERTEX_ATTRIB_ARRAY8_NV :: 34392
VERTEX_ATTRIB_ARRAY9_NV :: 34393
VERTEX_ATTRIB_ARRAY10_NV :: 34394
VERTEX_ATTRIB_ARRAY11_NV :: 34395
VERTEX_ATTRIB_ARRAY12_NV :: 34396
VERTEX_ATTRIB_ARRAY13_NV :: 34397
VERTEX_ATTRIB_ARRAY14_NV :: 34398
VERTEX_ATTRIB_ARRAY15_NV :: 34399
MAP1_VERTEX_ATTRIB0_4_NV :: 34400
MAP1_VERTEX_ATTRIB1_4_NV :: 34401
MAP1_VERTEX_ATTRIB2_4_NV :: 34402
MAP1_VERTEX_ATTRIB3_4_NV :: 34403
MAP1_VERTEX_ATTRIB4_4_NV :: 34404
MAP1_VERTEX_ATTRIB5_4_NV :: 34405
MAP1_VERTEX_ATTRIB6_4_NV :: 34406
MAP1_VERTEX_ATTRIB7_4_NV :: 34407
MAP1_VERTEX_ATTRIB8_4_NV :: 34408
MAP1_VERTEX_ATTRIB9_4_NV :: 34409
MAP1_VERTEX_ATTRIB10_4_NV :: 34410
MAP1_VERTEX_ATTRIB11_4_NV :: 34411
MAP1_VERTEX_ATTRIB12_4_NV :: 34412
MAP1_VERTEX_ATTRIB13_4_NV :: 34413
MAP1_VERTEX_ATTRIB14_4_NV :: 34414
MAP1_VERTEX_ATTRIB15_4_NV :: 34415
MAP2_VERTEX_ATTRIB0_4_NV :: 34416
MAP2_VERTEX_ATTRIB1_4_NV :: 34417
MAP2_VERTEX_ATTRIB2_4_NV :: 34418
MAP2_VERTEX_ATTRIB3_4_NV :: 34419
MAP2_VERTEX_ATTRIB4_4_NV :: 34420
MAP2_VERTEX_ATTRIB5_4_NV :: 34421
MAP2_VERTEX_ATTRIB6_4_NV :: 34422
MAP2_VERTEX_ATTRIB7_4_NV :: 34423
MAP2_VERTEX_ATTRIB8_4_NV :: 34424
MAP2_VERTEX_ATTRIB9_4_NV :: 34425
MAP2_VERTEX_ATTRIB10_4_NV :: 34426
MAP2_VERTEX_ATTRIB11_4_NV :: 34427
MAP2_VERTEX_ATTRIB12_4_NV :: 34428
MAP2_VERTEX_ATTRIB13_4_NV :: 34429
MAP2_VERTEX_ATTRIB14_4_NV :: 34430
MAP2_VERTEX_ATTRIB15_4_NV :: 34431
NV_vertex_program1_1 :: 1
NV_vertex_program2 :: 1
NV_vertex_program2_option :: 1
NV_vertex_program3 :: 1
NV_vertex_program4 :: 1
VERTEX_ATTRIB_ARRAY_INTEGER_NV :: 35069
NV_video_capture :: 1
VIDEO_BUFFER_NV :: 36896
VIDEO_BUFFER_BINDING_NV :: 36897
FIELD_UPPER_NV :: 36898
FIELD_LOWER_NV :: 36899
NUM_VIDEO_CAPTURE_STREAMS_NV :: 36900
NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV :: 36901
VIDEO_CAPTURE_TO_422_SUPPORTED_NV :: 36902
LAST_VIDEO_CAPTURE_STATUS_NV :: 36903
VIDEO_BUFFER_PITCH_NV :: 36904
VIDEO_COLOR_CONVERSION_MATRIX_NV :: 36905
VIDEO_COLOR_CONVERSION_MAX_NV :: 36906
VIDEO_COLOR_CONVERSION_MIN_NV :: 36907
VIDEO_COLOR_CONVERSION_OFFSET_NV :: 36908
VIDEO_BUFFER_INTERNAL_FORMAT_NV :: 36909
PARTIAL_SUCCESS_NV :: 36910
SUCCESS_NV :: 36911
FAILURE_NV :: 36912
YCBYCR8_422_NV :: 36913
YCBAYCR8A_4224_NV :: 36914
Z6Y10Z6CB10Z6Y10Z6CR10_422_NV :: 36915
Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV :: 36916
Z4Y12Z4CB12Z4Y12Z4CR12_422_NV :: 36917
Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV :: 36918
Z4Y12Z4CB12Z4CR12_444_NV :: 36919
VIDEO_CAPTURE_FRAME_WIDTH_NV :: 36920
VIDEO_CAPTURE_FRAME_HEIGHT_NV :: 36921
VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV :: 36922
VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV :: 36923
VIDEO_CAPTURE_SURFACE_ORIGIN_NV :: 36924
NV_viewport_array :: 1
MAX_VIEWPORTS_NV :: 33371
VIEWPORT_SUBPIXEL_BITS_NV :: 33372
VIEWPORT_BOUNDS_RANGE_NV :: 33373
VIEWPORT_INDEX_PROVOKING_VERTEX_NV :: 33375
NV_viewport_array2 :: 1
NV_viewport_swizzle :: 1
VIEWPORT_SWIZZLE_POSITIVE_X_NV :: 37712
VIEWPORT_SWIZZLE_NEGATIVE_X_NV :: 37713
VIEWPORT_SWIZZLE_POSITIVE_Y_NV :: 37714
VIEWPORT_SWIZZLE_NEGATIVE_Y_NV :: 37715
VIEWPORT_SWIZZLE_POSITIVE_Z_NV :: 37716
VIEWPORT_SWIZZLE_NEGATIVE_Z_NV :: 37717
VIEWPORT_SWIZZLE_POSITIVE_W_NV :: 37718
VIEWPORT_SWIZZLE_NEGATIVE_W_NV :: 37719
VIEWPORT_SWIZZLE_X_NV :: 37720
VIEWPORT_SWIZZLE_Y_NV :: 37721
VIEWPORT_SWIZZLE_Z_NV :: 37722
VIEWPORT_SWIZZLE_W_NV :: 37723
OES_EGL_image :: 1
OES_EGL_image_external :: 1
OES_EGL_image_external_essl3 :: 1
OES_blend_equation_separate :: 1
BLEND_EQUATION_RGB_OES :: 32777
BLEND_EQUATION_ALPHA_OES :: 34877
OES_blend_func_separate :: 1
BLEND_DST_RGB_OES :: 32968
BLEND_SRC_RGB_OES :: 32969
BLEND_DST_ALPHA_OES :: 32970
BLEND_SRC_ALPHA_OES :: 32971
OES_blend_subtract :: 1
FUNC_ADD_OES :: 32774
BLEND_EQUATION_OES :: 32777
FUNC_SUBTRACT_OES :: 32778
FUNC_REVERSE_SUBTRACT_OES :: 32779
OES_byte_coordinates :: 1
OES_compressed_ETC1_RGB8_texture :: 1
ETC1_RGB8_OES :: 36196
OES_compressed_paletted_texture :: 1
PALETTE4_RGB8_OES :: 35728
PALETTE4_RGBA8_OES :: 35729
PALETTE4_R5_G6_B5_OES :: 35730
PALETTE4_RGBA4_OES :: 35731
PALETTE4_RGB5_A1_OES :: 35732
PALETTE8_RGB8_OES :: 35733
PALETTE8_RGBA8_OES :: 35734
PALETTE8_R5_G6_B5_OES :: 35735
PALETTE8_RGBA4_OES :: 35736
PALETTE8_RGB5_A1_OES :: 35737
OES_copy_image :: 1
OES_depth24 :: 1
DEPTH_COMPONENT24_OES :: 33190
OES_depth32 :: 1
DEPTH_COMPONENT32_OES :: 33191
OES_depth_texture :: 1
OES_depth_texture_cube_map :: 1
DEPTH_STENCIL_OES :: 34041
DEPTH24_STENCIL8_OES :: 35056
OES_draw_buffers_indexed :: 1
OES_draw_texture :: 1
TEXTURE_CROP_RECT_OES :: 35741
OES_element_index_uint :: 1
OES_extended_matrix_palette :: 1
OES_fbo_render_mipmap :: 1
OES_fragment_precision_high :: 1
OES_framebuffer_object :: 1
NONE_OES :: 0
INVALID_FRAMEBUFFER_OPERATION_OES :: 1286
RGBA4_OES :: 32854
RGB5_A1_OES :: 32855
DEPTH_COMPONENT16_OES :: 33189
MAX_RENDERBUFFER_SIZE_OES :: 34024
FRAMEBUFFER_BINDING_OES :: 36006
RENDERBUFFER_BINDING_OES :: 36007
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES :: 36048
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES :: 36049
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES :: 36050
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES :: 36051
FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES :: 36052
FRAMEBUFFER_COMPLETE_OES :: 36053
FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES :: 36054
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES :: 36055
FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES :: 36057
FRAMEBUFFER_INCOMPLETE_FORMATS_OES :: 36058
FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES :: 36059
FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES :: 36060
FRAMEBUFFER_UNSUPPORTED_OES :: 36061
COLOR_ATTACHMENT0_OES :: 36064
DEPTH_ATTACHMENT_OES :: 36096
STENCIL_ATTACHMENT_OES :: 36128
FRAMEBUFFER_OES :: 36160
RENDERBUFFER_OES :: 36161
RENDERBUFFER_WIDTH_OES :: 36162
RENDERBUFFER_HEIGHT_OES :: 36163
RENDERBUFFER_INTERNAL_FORMAT_OES :: 36164
STENCIL_INDEX1_OES :: 36166
STENCIL_INDEX4_OES :: 36167
STENCIL_INDEX8_OES :: 36168
RENDERBUFFER_RED_SIZE_OES :: 36176
RENDERBUFFER_GREEN_SIZE_OES :: 36177
RENDERBUFFER_BLUE_SIZE_OES :: 36178
RENDERBUFFER_ALPHA_SIZE_OES :: 36179
RENDERBUFFER_DEPTH_SIZE_OES :: 36180
RENDERBUFFER_STENCIL_SIZE_OES :: 36181
RGB565_OES :: 36194
OES_geometry_point_size :: 1
GEOMETRY_SHADER_BIT_OES :: 4
LINES_ADJACENCY_OES :: 10
LINE_STRIP_ADJACENCY_OES :: 11
TRIANGLES_ADJACENCY_OES :: 12
TRIANGLE_STRIP_ADJACENCY_OES :: 13
LAYER_PROVOKING_VERTEX_OES :: 33374
UNDEFINED_VERTEX_OES :: 33376
GEOMETRY_SHADER_INVOCATIONS_OES :: 34943
GEOMETRY_LINKED_VERTICES_OUT_OES :: 35094
GEOMETRY_LINKED_INPUT_TYPE_OES :: 35095
GEOMETRY_LINKED_OUTPUT_TYPE_OES :: 35096
MAX_GEOMETRY_UNIFORM_BLOCKS_OES :: 35372
MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES :: 35378
MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES :: 35881
PRIMITIVES_GENERATED_OES :: 35975
FRAMEBUFFER_ATTACHMENT_LAYERED_OES :: 36263
FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES :: 36264
GEOMETRY_SHADER_OES :: 36313
MAX_GEOMETRY_UNIFORM_COMPONENTS_OES :: 36319
MAX_GEOMETRY_OUTPUT_VERTICES_OES :: 36320
MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES :: 36321
FIRST_VERTEX_CONVENTION_OES :: 36429
LAST_VERTEX_CONVENTION_OES :: 36430
MAX_GEOMETRY_SHADER_INVOCATIONS_OES :: 36442
MAX_GEOMETRY_IMAGE_UNIFORMS_OES :: 37069
MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES :: 37079
MAX_GEOMETRY_INPUT_COMPONENTS_OES :: 37155
MAX_GEOMETRY_OUTPUT_COMPONENTS_OES :: 37156
MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES :: 37583
MAX_GEOMETRY_ATOMIC_COUNTERS_OES :: 37589
REFERENCED_BY_GEOMETRY_SHADER_OES :: 37641
FRAMEBUFFER_DEFAULT_LAYERS_OES :: 37650
MAX_FRAMEBUFFER_LAYERS_OES :: 37655
OES_geometry_shader :: 1
OES_get_program_binary :: 1
PROGRAM_BINARY_LENGTH_OES :: 34625
NUM_PROGRAM_BINARY_FORMATS_OES :: 34814
PROGRAM_BINARY_FORMATS_OES :: 34815
OES_gpu_shader5 :: 1
OES_mapbuffer :: 1
WRITE_ONLY_OES :: 35001
BUFFER_ACCESS_OES :: 35003
BUFFER_MAPPED_OES :: 35004
BUFFER_MAP_POINTER_OES :: 35005
OES_matrix_get :: 1
MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES :: 35213
PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES :: 35214
TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES :: 35215
OES_matrix_palette :: 1
MAX_VERTEX_UNITS_OES :: 34468
WEIGHT_ARRAY_TYPE_OES :: 34473
WEIGHT_ARRAY_STRIDE_OES :: 34474
WEIGHT_ARRAY_SIZE_OES :: 34475
WEIGHT_ARRAY_POINTER_OES :: 34476
WEIGHT_ARRAY_OES :: 34477
MATRIX_PALETTE_OES :: 34880
MAX_PALETTE_MATRICES_OES :: 34882
CURRENT_PALETTE_MATRIX_OES :: 34883
MATRIX_INDEX_ARRAY_OES :: 34884
MATRIX_INDEX_ARRAY_SIZE_OES :: 34886
MATRIX_INDEX_ARRAY_TYPE_OES :: 34887
MATRIX_INDEX_ARRAY_STRIDE_OES :: 34888
MATRIX_INDEX_ARRAY_POINTER_OES :: 34889
WEIGHT_ARRAY_BUFFER_BINDING_OES :: 34974
MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES :: 35742
OES_packed_depth_stencil :: 1
UNSIGNED_INT_24_8_OES :: 34042
OES_point_size_array :: 1
POINT_SIZE_ARRAY_TYPE_OES :: 35210
POINT_SIZE_ARRAY_STRIDE_OES :: 35211
POINT_SIZE_ARRAY_POINTER_OES :: 35212
POINT_SIZE_ARRAY_OES :: 35740
POINT_SIZE_ARRAY_BUFFER_BINDING_OES :: 35743
OES_point_sprite :: 1
POINT_SPRITE_OES :: 34913
COORD_REPLACE_OES :: 34914
OES_read_format :: 1
IMPLEMENTATION_COLOR_READ_TYPE_OES :: 35738
IMPLEMENTATION_COLOR_READ_FORMAT_OES :: 35739
OES_required_internalformat :: 1
ALPHA8_OES :: 32828
LUMINANCE8_OES :: 32832
LUMINANCE4_ALPHA4_OES :: 32835
LUMINANCE8_ALPHA8_OES :: 32837
RGB8_OES :: 32849
OES_rgb8_rgba8 :: 1
OES_sample_shading :: 1
SAMPLE_SHADING_OES :: 35894
MIN_SAMPLE_SHADING_VALUE_OES :: 35895
OES_sample_variables :: 1
OES_shader_image_atomic :: 1
OES_shader_io_blocks :: 1
OES_shader_multisample_interpolation :: 1
MIN_FRAGMENT_INTERPOLATION_OFFSET_OES :: 36443
MAX_FRAGMENT_INTERPOLATION_OFFSET_OES :: 36444
FRAGMENT_INTERPOLATION_OFFSET_BITS_OES :: 36445
OES_single_precision :: 1
OES_standard_derivatives :: 1
FRAGMENT_SHADER_DERIVATIVE_HINT_OES :: 35723
OES_stencil1 :: 1
OES_stencil4 :: 1
OES_stencil8 :: 1
OES_surfaceless_context :: 1
FRAMEBUFFER_UNDEFINED_OES :: 33305
OES_tessellation_point_size :: 1
QUADS_OES :: 7
TESS_CONTROL_SHADER_BIT_OES :: 8
PATCHES_OES :: 14
TESS_EVALUATION_SHADER_BIT_OES :: 16
PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES :: 33313
MAX_TESS_CONTROL_INPUT_COMPONENTS_OES :: 34924
MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES :: 34925
MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES :: 36382
MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES :: 36383
PATCH_VERTICES_OES :: 36466
TESS_CONTROL_OUTPUT_VERTICES_OES :: 36469
TESS_GEN_MODE_OES :: 36470
TESS_GEN_SPACING_OES :: 36471
TESS_GEN_VERTEX_ORDER_OES :: 36472
TESS_GEN_POINT_MODE_OES :: 36473
ISOLINES_OES :: 36474
FRACTIONAL_ODD_OES :: 36475
FRACTIONAL_EVEN_OES :: 36476
MAX_PATCH_VERTICES_OES :: 36477
MAX_TESS_GEN_LEVEL_OES :: 36478
MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES :: 36479
MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES :: 36480
MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES :: 36481
MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES :: 36482
MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES :: 36483
MAX_TESS_PATCH_COMPONENTS_OES :: 36484
MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES :: 36485
MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES :: 36486
TESS_EVALUATION_SHADER_OES :: 36487
TESS_CONTROL_SHADER_OES :: 36488
MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES :: 36489
MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES :: 36490
MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES :: 37067
MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES :: 37068
MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES :: 37080
MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES :: 37081
MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES :: 37581
MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES :: 37582
MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES :: 37587
MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES :: 37588
IS_PER_PATCH_OES :: 37607
REFERENCED_BY_TESS_CONTROL_SHADER_OES :: 37639
REFERENCED_BY_TESS_EVALUATION_SHADER_OES :: 37640
OES_tessellation_shader :: 1
OES_texture_3D :: 1
TEXTURE_BINDING_3D_OES :: 32874
TEXTURE_3D_OES :: 32879
TEXTURE_WRAP_R_OES :: 32882
MAX_3D_TEXTURE_SIZE_OES :: 32883
OES_texture_border_clamp :: 1
TEXTURE_BORDER_COLOR_OES :: 4100
CLAMP_TO_BORDER_OES :: 33069
OES_texture_buffer :: 1
TEXTURE_BUFFER_BINDING_OES :: 35882
TEXTURE_BUFFER_OES :: 35882
MAX_TEXTURE_BUFFER_SIZE_OES :: 35883
TEXTURE_BINDING_BUFFER_OES :: 35884
TEXTURE_BUFFER_DATA_STORE_BINDING_OES :: 35885
SAMPLER_BUFFER_OES :: 36290
INT_SAMPLER_BUFFER_OES :: 36304
UNSIGNED_INT_SAMPLER_BUFFER_OES :: 36312
IMAGE_BUFFER_OES :: 36945
INT_IMAGE_BUFFER_OES :: 36956
UNSIGNED_INT_IMAGE_BUFFER_OES :: 36967
TEXTURE_BUFFER_OFFSET_OES :: 37277
TEXTURE_BUFFER_SIZE_OES :: 37278
TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES :: 37279
OES_texture_compression_astc :: 1
OES_texture_cube_map :: 1
TEXTURE_GEN_MODE_OES :: 9472
NORMAL_MAP_OES :: 34065
REFLECTION_MAP_OES :: 34066
TEXTURE_CUBE_MAP_OES :: 34067
TEXTURE_BINDING_CUBE_MAP_OES :: 34068
TEXTURE_CUBE_MAP_POSITIVE_X_OES :: 34069
TEXTURE_CUBE_MAP_NEGATIVE_X_OES :: 34070
TEXTURE_CUBE_MAP_POSITIVE_Y_OES :: 34071
TEXTURE_CUBE_MAP_NEGATIVE_Y_OES :: 34072
TEXTURE_CUBE_MAP_POSITIVE_Z_OES :: 34073
TEXTURE_CUBE_MAP_NEGATIVE_Z_OES :: 34074
MAX_CUBE_MAP_TEXTURE_SIZE_OES :: 34076
TEXTURE_GEN_STR_OES :: 36192
OES_texture_cube_map_array :: 1
TEXTURE_BINDING_CUBE_MAP_ARRAY_OES :: 36874
SAMPLER_CUBE_MAP_ARRAY_OES :: 36876
SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES :: 36877
INT_SAMPLER_CUBE_MAP_ARRAY_OES :: 36878
UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES :: 36879
IMAGE_CUBE_MAP_ARRAY_OES :: 36948
INT_IMAGE_CUBE_MAP_ARRAY_OES :: 36959
UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES :: 36970
OES_texture_env_crossbar :: 1
OES_texture_mirrored_repeat :: 1
OES_texture_npot :: 1
OES_texture_stencil8 :: 1
OES_texture_storage_multisample_2d_array :: 1
TEXTURE_2D_MULTISAMPLE_ARRAY_OES :: 37122
TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES :: 37125
SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: 37131
INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: 37132
UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES :: 37133
OES_texture_view :: 1
TEXTURE_VIEW_MIN_LEVEL_OES :: 33499
TEXTURE_VIEW_NUM_LEVELS_OES :: 33500
TEXTURE_VIEW_MIN_LAYER_OES :: 33501
TEXTURE_VIEW_NUM_LAYERS_OES :: 33502
OES_vertex_array_object :: 1
VERTEX_ARRAY_BINDING_OES :: 34229
OES_vertex_half_float :: 1
HALF_FLOAT_OES :: 36193
OES_vertex_type_10_10_10_2 :: 1
UNSIGNED_INT_10_10_10_2_OES :: 36342
INT_10_10_10_2_OES :: 36343
OML_interlace :: 1
INTERLACE_OML :: 35200
INTERLACE_READ_OML :: 35201
OML_resample :: 1
PACK_RESAMPLE_OML :: 35204
UNPACK_RESAMPLE_OML :: 35205
RESAMPLE_REPLICATE_OML :: 35206
RESAMPLE_ZERO_FILL_OML :: 35207
RESAMPLE_AVERAGE_OML :: 35208
RESAMPLE_DECIMATE_OML :: 35209
OML_subsample :: 1
FORMAT_SUBSAMPLE_24_24_OML :: 35202
FORMAT_SUBSAMPLE_244_244_OML :: 35203
OVR_multiview :: 1
FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR :: 38448
MAX_VIEWS_OVR :: 38449
FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR :: 38450
FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR :: 38451
OVR_multiview2 :: 1
OVR_multiview_multisampled_render_to_texture :: 1
PGI_misc_hints :: 1
PREFER_DOUBLEBUFFER_HINT_PGI :: 107000
CONSERVE_MEMORY_HINT_PGI :: 107005
RECLAIM_MEMORY_HINT_PGI :: 107006
NATIVE_GRAPHICS_HANDLE_PGI :: 107010
NATIVE_GRAPHICS_BEGIN_HINT_PGI :: 107011
NATIVE_GRAPHICS_END_HINT_PGI :: 107012
ALWAYS_FAST_HINT_PGI :: 107020
ALWAYS_SOFT_HINT_PGI :: 107021
ALLOW_DRAW_OBJ_HINT_PGI :: 107022
ALLOW_DRAW_WIN_HINT_PGI :: 107023
ALLOW_DRAW_FRG_HINT_PGI :: 107024
ALLOW_DRAW_MEM_HINT_PGI :: 107025
STRICT_DEPTHFUNC_HINT_PGI :: 107030
STRICT_LIGHTING_HINT_PGI :: 107031
STRICT_SCISSOR_HINT_PGI :: 107032
FULL_STIPPLE_HINT_PGI :: 107033
CLIP_NEAR_HINT_PGI :: 107040
CLIP_FAR_HINT_PGI :: 107041
WIDE_LINE_HINT_PGI :: 107042
BACK_NORMALS_HINT_PGI :: 107043
PGI_vertex_hints :: 1
VERTEX23_BIT_PGI :: 4
VERTEX4_BIT_PGI :: 8
COLOR3_BIT_PGI :: 65536
COLOR4_BIT_PGI :: 131072
EDGEFLAG_BIT_PGI :: 262144
INDEX_BIT_PGI :: 524288
MAT_AMBIENT_BIT_PGI :: 1048576
VERTEX_DATA_HINT_PGI :: 107050
VERTEX_CONSISTENT_HINT_PGI :: 107051
MATERIAL_SIDE_HINT_PGI :: 107052
MAX_VERTEX_HINT_PGI :: 107053
MAT_AMBIENT_AND_DIFFUSE_BIT_PGI :: 2097152
MAT_DIFFUSE_BIT_PGI :: 4194304
MAT_EMISSION_BIT_PGI :: 8388608
MAT_COLOR_INDEXES_BIT_PGI :: 16777216
MAT_SHININESS_BIT_PGI :: 33554432
MAT_SPECULAR_BIT_PGI :: 67108864
NORMAL_BIT_PGI :: 134217728
TEXCOORD1_BIT_PGI :: 268435456
TEXCOORD2_BIT_PGI :: 536870912
TEXCOORD3_BIT_PGI :: 1073741824
TEXCOORD4_BIT_PGI :: 2147483648
QCOM_YUV_texture_gather :: 1
QCOM_alpha_test :: 1
ALPHA_TEST_QCOM :: 3008
ALPHA_TEST_FUNC_QCOM :: 3009
ALPHA_TEST_REF_QCOM :: 3010
QCOM_binning_control :: 1
BINNING_CONTROL_HINT_QCOM :: 36784
CPU_OPTIMIZED_QCOM :: 36785
GPU_OPTIMIZED_QCOM :: 36786
RENDER_DIRECT_TO_FRAMEBUFFER_QCOM :: 36787
QCOM_driver_control :: 1
QCOM_extended_get :: 1
TEXTURE_WIDTH_QCOM :: 35794
TEXTURE_HEIGHT_QCOM :: 35795
TEXTURE_DEPTH_QCOM :: 35796
TEXTURE_INTERNAL_FORMAT_QCOM :: 35797
TEXTURE_FORMAT_QCOM :: 35798
TEXTURE_TYPE_QCOM :: 35799
TEXTURE_IMAGE_VALID_QCOM :: 35800
TEXTURE_NUM_LEVELS_QCOM :: 35801
TEXTURE_TARGET_QCOM :: 35802
TEXTURE_OBJECT_VALID_QCOM :: 35803
STATE_RESTORE :: 35804
QCOM_extended_get2 :: 1
QCOM_frame_extrapolation :: 1
QCOM_framebuffer_foveated :: 1
FOVEATION_ENABLE_BIT_QCOM :: 1
FOVEATION_SCALED_BIN_METHOD_BIT_QCOM :: 2
QCOM_motion_estimation :: 1
MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM :: 35984
MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM :: 35985
QCOM_perfmon_global_mode :: 1
PERFMON_GLOBAL_MODE_QCOM :: 36768
QCOM_render_sRGB_R8_RG8 :: 1
QCOM_render_shared_exponent :: 1
QCOM_shader_framebuffer_fetch_noncoherent :: 1
FRAMEBUFFER_FETCH_NONCOHERENT_QCOM :: 38562
QCOM_shader_framebuffer_fetch_rate :: 1
QCOM_shading_rate :: 1
SHADING_RATE_QCOM :: 38564
SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM :: 38565
SHADING_RATE_1X1_PIXELS_QCOM :: 38566
SHADING_RATE_1X2_PIXELS_QCOM :: 38567
SHADING_RATE_2X1_PIXELS_QCOM :: 38568
SHADING_RATE_2X2_PIXELS_QCOM :: 38569
SHADING_RATE_4X2_PIXELS_QCOM :: 38572
SHADING_RATE_4X4_PIXELS_QCOM :: 38574
QCOM_texture_foveated :: 1
TEXTURE_FOVEATED_FEATURE_BITS_QCOM :: 35835
TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM :: 35836
TEXTURE_FOVEATED_FEATURE_QUERY_QCOM :: 35837
TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM :: 35838
FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM :: 35839
QCOM_texture_foveated2 :: 1
TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM :: 38560
QCOM_texture_foveated_subsampled_layout :: 1
FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM :: 4
MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM :: 36769
QCOM_texture_lod_bias :: 1
TEXTURE_LOD_BIAS_QCOM :: 35990
QCOM_tiled_rendering :: 1
COLOR_BUFFER_BIT0_QCOM :: 1
COLOR_BUFFER_BIT1_QCOM :: 2
COLOR_BUFFER_BIT2_QCOM :: 4
COLOR_BUFFER_BIT3_QCOM :: 8
COLOR_BUFFER_BIT4_QCOM :: 16
COLOR_BUFFER_BIT5_QCOM :: 32
COLOR_BUFFER_BIT6_QCOM :: 64
COLOR_BUFFER_BIT7_QCOM :: 128
DEPTH_BUFFER_BIT0_QCOM :: 256
DEPTH_BUFFER_BIT1_QCOM :: 512
DEPTH_BUFFER_BIT2_QCOM :: 1024
DEPTH_BUFFER_BIT3_QCOM :: 2048
DEPTH_BUFFER_BIT4_QCOM :: 4096
DEPTH_BUFFER_BIT5_QCOM :: 8192
DEPTH_BUFFER_BIT6_QCOM :: 16384
DEPTH_BUFFER_BIT7_QCOM :: 32768
STENCIL_BUFFER_BIT0_QCOM :: 65536
STENCIL_BUFFER_BIT1_QCOM :: 131072
STENCIL_BUFFER_BIT2_QCOM :: 262144
STENCIL_BUFFER_BIT3_QCOM :: 524288
STENCIL_BUFFER_BIT4_QCOM :: 1048576
STENCIL_BUFFER_BIT5_QCOM :: 2097152
STENCIL_BUFFER_BIT6_QCOM :: 4194304
STENCIL_BUFFER_BIT7_QCOM :: 8388608
MULTISAMPLE_BUFFER_BIT0_QCOM :: 16777216
MULTISAMPLE_BUFFER_BIT1_QCOM :: 33554432
MULTISAMPLE_BUFFER_BIT2_QCOM :: 67108864
MULTISAMPLE_BUFFER_BIT3_QCOM :: 134217728
MULTISAMPLE_BUFFER_BIT4_QCOM :: 268435456
MULTISAMPLE_BUFFER_BIT5_QCOM :: 536870912
MULTISAMPLE_BUFFER_BIT6_QCOM :: 1073741824
MULTISAMPLE_BUFFER_BIT7_QCOM :: 2147483648
QCOM_writeonly_rendering :: 1
WRITEONLY_RENDERING_QCOM :: 34851
QCOM_ycbcr_degamma :: 1
TEXTURE_Y_DEGAMMA_QCOM :: 38672
TEXTURE_CBCR_DEGAMMA_QCOM :: 38673
REGAL_ES1_0_compatibility :: 1
REGAL_ES1_1_compatibility :: 1
REGAL_enable :: 1
ERROR_REGAL :: 37666
DEBUG_REGAL :: 37667
LOG_REGAL :: 37668
EMULATION_REGAL :: 37669
DRIVER_REGAL :: 37670
MISSING_REGAL :: 37728
TRACE_REGAL :: 37729
CACHE_REGAL :: 37730
CODE_REGAL :: 37731
STATISTICS_REGAL :: 37732
REGAL_error_string :: 1
REGAL_extension_query :: 1
REGAL_log :: 1
LOG_ERROR_REGAL :: 37657
LOG_WARNING_REGAL :: 37658
LOG_INFO_REGAL :: 37659
LOG_APP_REGAL :: 37660
LOG_DRIVER_REGAL :: 37661
LOG_INTERNAL_REGAL :: 37662
LOG_DEBUG_REGAL :: 37663
LOG_STATUS_REGAL :: 37664
LOG_HTTP_REGAL :: 37665
REGAL_proc_address :: 1
REND_screen_coordinates :: 1
SCREEN_COORDINATES_REND :: 33936
INVERTED_SCREEN_W_REND :: 33937
S3_s3tc :: 1
RGB_S3TC :: 33696
RGB4_S3TC :: 33697
RGBA_S3TC :: 33698
RGBA4_S3TC :: 33699
RGBA_DXT5_S3TC :: 33700
RGBA4_DXT5_S3TC :: 33701
SGIS_clip_band_hint :: 1
SGIS_color_range :: 1
EXTENDED_RANGE_SGIS :: 34213
MIN_RED_SGIS :: 34214
MAX_RED_SGIS :: 34215
MIN_GREEN_SGIS :: 34216
MAX_GREEN_SGIS :: 34217
MIN_BLUE_SGIS :: 34218
MAX_BLUE_SGIS :: 34219
MIN_ALPHA_SGIS :: 34220
MAX_ALPHA_SGIS :: 34221
SGIS_detail_texture :: 1
SGIS_fog_function :: 1
SGIS_generate_mipmap :: 1
GENERATE_MIPMAP_SGIS :: 33169
GENERATE_MIPMAP_HINT_SGIS :: 33170
SGIS_line_texgen :: 1
SGIS_multisample :: 1
MULTISAMPLE_SGIS :: 32925
SAMPLE_ALPHA_TO_MASK_SGIS :: 32926
SAMPLE_ALPHA_TO_ONE_SGIS :: 32927
SAMPLE_MASK_SGIS :: 32928
GL_1PASS_SGIS :: 32929
GL_2PASS_0_SGIS :: 32930
GL_2PASS_1_SGIS :: 32931
GL_4PASS_0_SGIS :: 32932
GL_4PASS_1_SGIS :: 32933
GL_4PASS_2_SGIS :: 32934
GL_4PASS_3_SGIS :: 32935
SAMPLE_BUFFERS_SGIS :: 32936
SAMPLES_SGIS :: 32937
SAMPLE_MASK_VALUE_SGIS :: 32938
SAMPLE_MASK_INVERT_SGIS :: 32939
SAMPLE_PATTERN_SGIS :: 32940
SGIS_multitexture :: 1
SELECTED_TEXTURE_SGIS :: 33728
SELECTED_TEXTURE_COORD_SET_SGIS :: 33729
SELECTED_TEXTURE_TRANSFORM_SGIS :: 33730
MAX_TEXTURES_SGIS :: 33731
MAX_TEXTURE_COORD_SETS_SGIS :: 33732
TEXTURE_COORD_SET_INTERLEAVE_FACTOR_SGIS :: 33733
TEXTURE_ENV_COORD_SET_SGIS :: 33734
TEXTURE0_SGIS :: 33735
TEXTURE1_SGIS :: 33736
TEXTURE2_SGIS :: 33737
TEXTURE3_SGIS :: 33738
SGIS_pixel_texture :: 1
SGIS_point_line_texgen :: 1
EYE_DISTANCE_TO_POINT_SGIS :: 33264
OBJECT_DISTANCE_TO_POINT_SGIS :: 33265
EYE_DISTANCE_TO_LINE_SGIS :: 33266
OBJECT_DISTANCE_TO_LINE_SGIS :: 33267
EYE_POINT_SGIS :: 33268
OBJECT_POINT_SGIS :: 33269
EYE_LINE_SGIS :: 33270
OBJECT_LINE_SGIS :: 33271
SGIS_shared_multisample :: 1
SGIS_sharpen_texture :: 1
SGIS_texture4D :: 1
SGIS_texture_border_clamp :: 1
CLAMP_TO_BORDER_SGIS :: 33069
SGIS_texture_edge_clamp :: 1
CLAMP_TO_EDGE_SGIS :: 33071
SGIS_texture_filter4 :: 1
SGIS_texture_lod :: 1
TEXTURE_MIN_LOD_SGIS :: 33082
TEXTURE_MAX_LOD_SGIS :: 33083
TEXTURE_BASE_LEVEL_SGIS :: 33084
TEXTURE_MAX_LEVEL_SGIS :: 33085
SGIS_texture_select :: 1
SGIX_async :: 1
ASYNC_MARKER_SGIX :: 33577
SGIX_async_histogram :: 1
ASYNC_HISTOGRAM_SGIX :: 33580
MAX_ASYNC_HISTOGRAM_SGIX :: 33581
SGIX_async_pixel :: 1
ASYNC_TEX_IMAGE_SGIX :: 33628
ASYNC_DRAW_PIXELS_SGIX :: 33629
ASYNC_READ_PIXELS_SGIX :: 33630
MAX_ASYNC_TEX_IMAGE_SGIX :: 33631
MAX_ASYNC_DRAW_PIXELS_SGIX :: 33632
MAX_ASYNC_READ_PIXELS_SGIX :: 33633
SGIX_bali_g_instruments :: 1
BALI_NUM_TRIS_CULLED_INSTRUMENT :: 24704
BALI_NUM_PRIMS_CLIPPED_INSTRUMENT :: 24705
BALI_NUM_PRIMS_REJECT_INSTRUMENT :: 24706
BALI_NUM_PRIMS_CLIP_RESULT_INSTRUMENT :: 24707
SGIX_bali_r_instruments :: 1
BALI_FRAGMENTS_GENERATED_INSTRUMENT :: 24720
BALI_DEPTH_PASS_INSTRUMENT :: 24721
BALI_R_CHIP_COUNT :: 24722
SGIX_bali_timer_instruments :: 1
SGIX_blend_alpha_minmax :: 1
ALPHA_MIN_SGIX :: 33568
ALPHA_MAX_SGIX :: 33569
SGIX_blend_cadd :: 1
FUNC_COMPLEX_ADD_EXT :: 24604
SGIX_blend_cmultiply :: 1
FUNC_COMPLEX_MULTIPLY_EXT :: 24603
SGIX_calligraphic_fragment :: 1
SGIX_clipmap :: 1
SGIX_color_matrix_accuracy :: 1
COLOR_MATRIX_HINT :: 33559
SGIX_color_table_index_mode :: 1
SGIX_complex_polar :: 1
SGIX_convolution_accuracy :: 1
CONVOLUTION_HINT_SGIX :: 33558
SGIX_cube_map :: 1
ENV_MAP_SGIX :: 33600
CUBE_MAP_SGIX :: 33601
CUBE_MAP_ZP_SGIX :: 33602
CUBE_MAP_ZN_SGIX :: 33603
CUBE_MAP_XN_SGIX :: 33604
CUBE_MAP_XP_SGIX :: 33605
CUBE_MAP_YN_SGIX :: 33606
CUBE_MAP_YP_SGIX :: 33607
CUBE_MAP_BINDING_SGIX :: 33608
SGIX_cylinder_texgen :: 1
SGIX_datapipe :: 1
GEOMETRY_BIT :: 1
IMAGE_BIT :: 2
SGIX_decimation :: 1
SGIX_depth_pass_instrument :: 1
DEPTH_PASS_INSTRUMENT_SGIX :: 33552
DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX :: 33553
DEPTH_PASS_INSTRUMENT_MAX_SGIX :: 33554
SGIX_depth_texture :: 1
DEPTH_COMPONENT16_SGIX :: 33189
DEPTH_COMPONENT24_SGIX :: 33190
DEPTH_COMPONENT32_SGIX :: 33191
SGIX_dvc :: 1
SGIX_flush_raster :: 1
SGIX_fog_blend :: 1
FOG_BLEND_ALPHA_SGIX :: 33278
FOG_BLEND_COLOR_SGIX :: 33279
SGIX_fog_factor_to_alpha :: 1
SGIX_fog_layers :: 1
FOG_TYPE_SGIX :: 33571
UNIFORM_SGIX :: 33572
LAYERED_SGIX :: 33573
FOG_GROUND_PLANE_SGIX :: 33574
FOG_LAYERS_POINTS_SGIX :: 33575
MAX_FOG_LAYERS_POINTS_SGIX :: 33576
SGIX_fog_offset :: 1
FOG_OFFSET_SGIX :: 33176
FOG_OFFSET_VALUE_SGIX :: 33177
SGIX_fog_patchy :: 1
SGIX_fog_scale :: 1
FOG_SCALE_SGIX :: 33276
FOG_SCALE_VALUE_SGIX :: 33277
SGIX_fog_texture :: 1
SGIX_fragment_lighting_space :: 1
EYE_SPACE_SGIX :: 33846
TANGENT_SPACE_SGIX :: 33847
OBJECT_SPACE_SGIX :: 33848
FRAGMENT_LIGHT_SPACE_SGIX :: 33853
SGIX_fragment_specular_lighting :: 1
SGIX_fragments_instrument :: 1
FRAGMENTS_INSTRUMENT_SGIX :: 33555
FRAGMENTS_INSTRUMENT_COUNTERS_SGIX :: 33556
FRAGMENTS_INSTRUMENT_MAX_SGIX :: 33557
SGIX_framezoom :: 1
SGIX_icc_texture :: 1
RGB_ICC_SGIX :: 33888
RGBA_ICC_SGIX :: 33889
ALPHA_ICC_SGIX :: 33890
LUMINANCE_ICC_SGIX :: 33891
INTENSITY_ICC_SGIX :: 33892
LUMINANCE_ALPHA_ICC_SGIX :: 33893
R5_G6_B5_ICC_SGIX :: 33894
R5_G6_B5_A8_ICC_SGIX :: 33895
ALPHA16_ICC_SGIX :: 33896
LUMINANCE16_ICC_SGIX :: 33897
INTENSITY16_ICC_SGIX :: 33898
LUMINANCE16_ALPHA8_ICC_SGIX :: 33899
SGIX_igloo_interface :: 1
IGLOO_FULLSCREEN_SGIX :: 33182
IGLOO_VIEWPORT_OFFSET_SGIX :: 33183
IGLOO_SWAPTMESH_SGIX :: 33184
IGLOO_COLORNORMAL_SGIX :: 33185
IGLOO_IRISGL_MODE_SGIX :: 33186
IGLOO_LMC_COLOR_SGIX :: 33187
IGLOO_TMESHMODE_SGIX :: 33188
LIGHT31 :: 48813
SGIX_image_compression :: 1
SGIX_impact_pixel_texture :: 1
SGIX_instrument_error :: 1
SGIX_interlace :: 1
INTERLACE_SGIX :: 32916
SGIX_ir_instrument1 :: 1
SGIX_line_quality_hint :: 1
LINE_QUALITY_HINT_SGIX :: 33627
SGIX_list_priority :: 1
SGIX_mpeg1 :: 1
SGIX_mpeg2 :: 1
SGIX_nonlinear_lighting_pervertex :: 1
SGIX_nurbs_eval :: 1
MAP1_VERTEX_3_NURBS_SGIX :: 33227
MAP1_VERTEX_4_NURBS_SGIX :: 33228
MAP1_INDEX_NURBS_SGIX :: 33229
MAP1_COLOR_4_NURBS_SGIX :: 33230
MAP1_NORMAL_NURBS_SGIX :: 33231
MAP1_TEXTURE_COORD_1_NURBS_SGIX :: 33248
MAP1_TEXTURE_COORD_2_NURBS_SGIX :: 33249
MAP1_TEXTURE_COORD_3_NURBS_SGIX :: 33250
MAP1_TEXTURE_COORD_4_NURBS_SGIX :: 33251
MAP2_VERTEX_3_NURBS_SGIX :: 33252
MAP2_VERTEX_4_NURBS_SGIX :: 33253
MAP2_INDEX_NURBS_SGIX :: 33254
MAP2_COLOR_4_NURBS_SGIX :: 33255
MAP2_NORMAL_NURBS_SGIX :: 33256
MAP2_TEXTURE_COORD_1_NURBS_SGIX :: 33257
MAP2_TEXTURE_COORD_2_NURBS_SGIX :: 33258
MAP2_TEXTURE_COORD_3_NURBS_SGIX :: 33259
MAP2_TEXTURE_COORD_4_NURBS_SGIX :: 33260
NURBS_KNOT_COUNT_SGIX :: 33261
NURBS_KNOT_VECTOR_SGIX :: 33262
SGIX_occlusion_instrument :: 1
OCCLUSION_INSTRUMENT_SGIX :: 24672
SGIX_packed_6bytes :: 1
SGIX_pixel_texture :: 1
SGIX_pixel_texture_bits :: 1
SGIX_pixel_texture_lod :: 1
SGIX_pixel_tiles :: 1
SGIX_polynomial_ffd :: 1
TEXTURE_DEFORMATION_BIT_SGIX :: 1
GEOMETRY_DEFORMATION_BIT_SGIX :: 2
SGIX_quad_mesh :: 1
SGIX_reference_plane :: 1
SGIX_resample :: 1
PACK_RESAMPLE_SGIX :: 33838
UNPACK_RESAMPLE_SGIX :: 33839
RESAMPLE_DECIMATE_SGIX :: 33840
RESAMPLE_REPLICATE_SGIX :: 33843
RESAMPLE_ZERO_FILL_SGIX :: 33844
SGIX_scalebias_hint :: 1
SCALEBIAS_HINT_SGIX :: 33570
SGIX_shadow :: 1
TEXTURE_COMPARE_SGIX :: 33178
TEXTURE_COMPARE_OPERATOR_SGIX :: 33179
TEXTURE_LEQUAL_R_SGIX :: 33180
TEXTURE_GEQUAL_R_SGIX :: 33181
SGIX_shadow_ambient :: 1
SHADOW_AMBIENT_SGIX :: 32959
SGIX_slim :: 1
PACK_MAX_COMPRESSED_SIZE_SGIX :: 33563
SLIM8U_SGIX :: 33565
SLIM10U_SGIX :: 33566
SLIM12S_SGIX :: 33567
SGIX_spotlight_cutoff :: 1
SPOT_CUTOFF_DELTA_SGIX :: 33171
SGIX_sprite :: 1
SGIX_subdiv_patch :: 1
SGIX_subsample :: 1
PACK_SUBSAMPLE_RATE_SGIX :: 34208
UNPACK_SUBSAMPLE_RATE_SGIX :: 34209
PIXEL_SUBSAMPLE_4444_SGIX :: 34210
PIXEL_SUBSAMPLE_2424_SGIX :: 34211
PIXEL_SUBSAMPLE_4242_SGIX :: 34212
SGIX_tag_sample_buffer :: 1
SGIX_texture_add_env :: 1
SGIX_texture_coordinate_clamp :: 1
TEXTURE_MAX_CLAMP_S_SGIX :: 33641
TEXTURE_MAX_CLAMP_T_SGIX :: 33642
TEXTURE_MAX_CLAMP_R_SGIX :: 33643
SGIX_texture_lod_bias :: 1
SGIX_texture_mipmap_anisotropic :: 1
TEXTURE_MIPMAP_ANISOTROPY_SGIX :: 33582
MAX_MIPMAP_ANISOTROPY_SGIX :: 33583
SGIX_texture_multi_buffer :: 1
TEXTURE_MULTI_BUFFER_HINT_SGIX :: 33070
SGIX_texture_phase :: 1
PHASE_SGIX :: 33578
SGIX_texture_range :: 1
RGB_SIGNED_SGIX :: 34272
RGBA_SIGNED_SGIX :: 34273
ALPHA_SIGNED_SGIX :: 34274
LUMINANCE_SIGNED_SGIX :: 34275
INTENSITY_SIGNED_SGIX :: 34276
LUMINANCE_ALPHA_SIGNED_SGIX :: 34277
RGB16_SIGNED_SGIX :: 34278
RGBA16_SIGNED_SGIX :: 34279
ALPHA16_SIGNED_SGIX :: 34280
LUMINANCE16_SIGNED_SGIX :: 34281
INTENSITY16_SIGNED_SGIX :: 34282
LUMINANCE16_ALPHA16_SIGNED_SGIX :: 34283
RGB_EXTENDED_RANGE_SGIX :: 34284
RGBA_EXTENDED_RANGE_SGIX :: 34285
ALPHA_EXTENDED_RANGE_SGIX :: 34286
LUMINANCE_EXTENDED_RANGE_SGIX :: 34287
INTENSITY_EXTENDED_RANGE_SGIX :: 34288
LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX :: 34289
RGB16_EXTENDED_RANGE_SGIX :: 34290
RGBA16_EXTENDED_RANGE_SGIX :: 34291
ALPHA16_EXTENDED_RANGE_SGIX :: 34292
LUMINANCE16_EXTENDED_RANGE_SGIX :: 34293
INTENSITY16_EXTENDED_RANGE_SGIX :: 34294
LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX :: 34295
MIN_LUMINANCE_SGIS :: 34296
MAX_LUMINANCE_SGIS :: 34297
MIN_INTENSITY_SGIS :: 34298
MAX_INTENSITY_SGIS :: 34299
SGIX_texture_scale_bias :: 1
POST_TEXTURE_FILTER_BIAS_SGIX :: 33145
POST_TEXTURE_FILTER_SCALE_SGIX :: 33146
POST_TEXTURE_FILTER_BIAS_RANGE_SGIX :: 33147
POST_TEXTURE_FILTER_SCALE_RANGE_SGIX :: 33148
SGIX_texture_supersample :: 1
SGIX_vector_ops :: 1
SGIX_vertex_array_object :: 1
SGIX_vertex_preclip :: 1
VERTEX_PRECLIP_SGIX :: 33774
VERTEX_PRECLIP_HINT_SGIX :: 33775
SGIX_vertex_preclip_hint :: 1
SGIX_ycrcb :: 1
SGIX_ycrcb_subsample :: 1
SGIX_ycrcba :: 1
YCRCB_SGIX :: 33560
YCRCBA_SGIX :: 33561
SGI_color_matrix :: 1
COLOR_MATRIX_SGI :: 32945
COLOR_MATRIX_STACK_DEPTH_SGI :: 32946
MAX_COLOR_MATRIX_STACK_DEPTH_SGI :: 32947
POST_COLOR_MATRIX_RED_SCALE_SGI :: 32948
POST_COLOR_MATRIX_GREEN_SCALE_SGI :: 32949
POST_COLOR_MATRIX_BLUE_SCALE_SGI :: 32950
POST_COLOR_MATRIX_ALPHA_SCALE_SGI :: 32951
POST_COLOR_MATRIX_RED_BIAS_SGI :: 32952
POST_COLOR_MATRIX_GREEN_BIAS_SGI :: 32953
POST_COLOR_MATRIX_BLUE_BIAS_SGI :: 32954
POST_COLOR_MATRIX_ALPHA_BIAS_SGI :: 32955
SGI_color_table :: 1
COLOR_TABLE_SGI :: 32976
POST_CONVOLUTION_COLOR_TABLE_SGI :: 32977
POST_COLOR_MATRIX_COLOR_TABLE_SGI :: 32978
PROXY_COLOR_TABLE_SGI :: 32979
PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI :: 32980
PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI :: 32981
COLOR_TABLE_SCALE_SGI :: 32982
COLOR_TABLE_BIAS_SGI :: 32983
COLOR_TABLE_FORMAT_SGI :: 32984
COLOR_TABLE_WIDTH_SGI :: 32985
COLOR_TABLE_RED_SIZE_SGI :: 32986
COLOR_TABLE_GREEN_SIZE_SGI :: 32987
COLOR_TABLE_BLUE_SIZE_SGI :: 32988
COLOR_TABLE_ALPHA_SIZE_SGI :: 32989
COLOR_TABLE_LUMINANCE_SIZE_SGI :: 32990
COLOR_TABLE_INTENSITY_SIZE_SGI :: 32991
SGI_complex :: 1
SGI_complex_type :: 1
COMPLEX_UNSIGNED_BYTE_SGI :: 33213
COMPLEX_BYTE_SGI :: 33214
COMPLEX_UNSIGNED_SHORT_SGI :: 33215
COMPLEX_SHORT_SGI :: 33216
COMPLEX_UNSIGNED_INT_SGI :: 33217
COMPLEX_INT_SGI :: 33218
COMPLEX_FLOAT_SGI :: 33219
SGI_fft :: 1
PIXEL_TRANSFORM_OPERATOR_SGI :: 33220
CONVOLUTION_SGI :: 33221
FFT_1D_SGI :: 33222
PIXEL_TRANSFORM_SGI :: 33223
MAX_FFT_WIDTH_SGI :: 33224
SGI_texture_color_table :: 1
TEXTURE_COLOR_TABLE_SGI :: 32956
PROXY_TEXTURE_COLOR_TABLE_SGI :: 32957
SUNX_constant_data :: 1
UNPACK_CONSTANT_DATA_SUNX :: 33237
TEXTURE_CONSTANT_DATA_SUNX :: 33238
SUN_convolution_border_modes :: 1
WRAP_BORDER_SUN :: 33236
SUN_global_alpha :: 1
OBAL_ALPHA_SUN :: 33241
OBAL_ALPHA_FACTOR_SUN :: 33242
SUN_mesh_array :: 1
QUAD_MESH_SUN :: 34324
TRIANGLE_MESH_SUN :: 34325
SUN_read_video_pixels :: 1
SUN_slice_accum :: 1
SLICE_ACCUM_SUN :: 34252
SUN_triangle_list :: 1
RESTART_SUN :: 1
REPLACE_MIDDLE_SUN :: 2
REPLACE_OLDEST_SUN :: 3
TRIANGLE_LIST_SUN :: 33239
REPLACEMENT_CODE_SUN :: 33240
REPLACEMENT_CODE_ARRAY_SUN :: 34240
REPLACEMENT_CODE_ARRAY_TYPE_SUN :: 34241
REPLACEMENT_CODE_ARRAY_STRIDE_SUN :: 34242
REPLACEMENT_CODE_ARRAY_POINTER_SUN :: 34243
R1UI_V3F_SUN :: 34244
R1UI_C4UB_V3F_SUN :: 34245
R1UI_C3F_V3F_SUN :: 34246
R1UI_N3F_V3F_SUN :: 34247
R1UI_C4F_N3F_V3F_SUN :: 34248
R1UI_T2F_V3F_SUN :: 34249
R1UI_T2F_N3F_V3F_SUN :: 34250
R1UI_T2F_C4F_N3F_V3F_SUN :: 34251
SUN_vertex :: 1
VIV_shader_binary :: 1
SHADER_BINARY_VIV :: 36804
WIN_phong_shading :: 1
PHONG_WIN :: 33002
PHONG_HINT_WIN :: 33003
WIN_scene_markerXXX :: 1
WIN_specular_fog :: 1
FOG_SPECULAR_TEXTURE_WIN :: 33004
WIN_swap_hint :: 1
EW_OK :: 0
EW_NO_ERROR :: 0
EW_ERROR_NO_GL_VERSION :: 1
EW_ERROR_GL_VERSION_10_ONLY :: 2
EW_ERROR_GLX_VERSION_11_ONLY :: 3
EW_ERROR_NO_GLX_DISPLAY :: 4
EW_VERSION :: 1
EW_VERSION_MAJOR :: 2
EW_VERSION_MINOR :: 3
EW_VERSION_MICRO :: 4

GLenum :: u32
GLbitfield :: u32
GLuint :: u32
GLint :: i32
GLsizei :: i32
GLboolean :: u8
GLbyte :: i8
GLshort :: i16
GLubyte :: u8
GLushort :: u16
GLfloat :: f32
GLclampf :: f32
GLdouble :: f64
GLclampd :: f64
GLint64EXT :: i64
GLuint64EXT :: u64
GLint64 :: GLint64EXT
GLuint64 :: GLuint64EXT
GLsync :: rawptr
GLchar :: i8
GLeglImageOES :: rawptr
PFNGLCOPYTEXSUBIMAGE3DPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLDRAWRANGEELEMENTSPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr)
PFNGLTEXIMAGE3DPROC :: #type proc "c" (target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE3DPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLACTIVETEXTUREPROC :: #type proc "c" (texture: GLenum)
PFNGLCLIENTACTIVETEXTUREPROC :: #type proc "c" (texture: GLenum)
PFNGLCOMPRESSEDTEXIMAGE1DPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXIMAGE2DPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXIMAGE3DPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLGETCOMPRESSEDTEXIMAGEPROC :: #type proc "c" (target: GLenum, lod: GLint, img: rawptr)
PFNGLLOADTRANSPOSEMATRIXDPROC :: #type proc "c" (m: [16]GLdouble)
PFNGLLOADTRANSPOSEMATRIXFPROC :: #type proc "c" (m: [16]GLfloat)
PFNGLMULTTRANSPOSEMATRIXDPROC :: #type proc "c" (m: [16]GLdouble)
PFNGLMULTTRANSPOSEMATRIXFPROC :: #type proc "c" (m: [16]GLfloat)
PFNGLMULTITEXCOORD1DPROC :: #type proc "c" (target: GLenum, s: GLdouble)
PFNGLMULTITEXCOORD1DVPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD1FPROC :: #type proc "c" (target: GLenum, s: GLfloat)
PFNGLMULTITEXCOORD1FVPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD1IPROC :: #type proc "c" (target: GLenum, s: GLint)
PFNGLMULTITEXCOORD1IVPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD1SPROC :: #type proc "c" (target: GLenum, s: GLshort)
PFNGLMULTITEXCOORD1SVPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD2DPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble)
PFNGLMULTITEXCOORD2DVPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD2FPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat)
PFNGLMULTITEXCOORD2FVPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD2IPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint)
PFNGLMULTITEXCOORD2IVPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD2SPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort)
PFNGLMULTITEXCOORD2SVPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD3DPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble)
PFNGLMULTITEXCOORD3DVPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD3FPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat)
PFNGLMULTITEXCOORD3FVPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD3IPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint, r: GLint)
PFNGLMULTITEXCOORD3IVPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD3SPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort, r: GLshort)
PFNGLMULTITEXCOORD3SVPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD4DPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble)
PFNGLMULTITEXCOORD4DVPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD4FPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat)
PFNGLMULTITEXCOORD4FVPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD4IPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint)
PFNGLMULTITEXCOORD4IVPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD4SPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort)
PFNGLMULTITEXCOORD4SVPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLSAMPLECOVERAGEPROC :: #type proc "c" (value: GLclampf, invert: GLboolean)
PFNGLBLENDCOLORPROC :: #type proc "c" (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf)
PFNGLBLENDEQUATIONPROC :: #type proc "c" (mode: GLenum)
PFNGLBLENDFUNCSEPARATEPROC :: #type proc "c" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)
PFNGLFOGCOORDPOINTERPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLFOGCOORDDPROC :: #type proc "c" (coord: GLdouble)
PFNGLFOGCOORDDVPROC :: #type proc "c" (coord: ^GLdouble)
PFNGLFOGCOORDFPROC :: #type proc "c" (coord: GLfloat)
PFNGLFOGCOORDFVPROC :: #type proc "c" (coord: ^GLfloat)
PFNGLMULTIDRAWARRAYSPROC :: #type proc "c" (mode: GLenum, first: ^GLint, count: ^GLsizei, drawcount: GLsizei)
PFNGLMULTIDRAWELEMENTSPROC :: #type proc "c" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei)
PFNGLPOINTPARAMETERFPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLPOINTPARAMETERFVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLPOINTPARAMETERIPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLPOINTPARAMETERIVPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLSECONDARYCOLOR3BPROC :: #type proc "c" (red: GLbyte, green: GLbyte, blue: GLbyte)
PFNGLSECONDARYCOLOR3BVPROC :: #type proc "c" (v: ^GLbyte)
PFNGLSECONDARYCOLOR3DPROC :: #type proc "c" (red: GLdouble, green: GLdouble, blue: GLdouble)
PFNGLSECONDARYCOLOR3DVPROC :: #type proc "c" (v: ^GLdouble)
PFNGLSECONDARYCOLOR3FPROC :: #type proc "c" (red: GLfloat, green: GLfloat, blue: GLfloat)
PFNGLSECONDARYCOLOR3FVPROC :: #type proc "c" (v: ^GLfloat)
PFNGLSECONDARYCOLOR3IPROC :: #type proc "c" (red: GLint, green: GLint, blue: GLint)
PFNGLSECONDARYCOLOR3IVPROC :: #type proc "c" (v: ^GLint)
PFNGLSECONDARYCOLOR3SPROC :: #type proc "c" (red: GLshort, green: GLshort, blue: GLshort)
PFNGLSECONDARYCOLOR3SVPROC :: #type proc "c" (v: ^GLshort)
PFNGLSECONDARYCOLOR3UBPROC :: #type proc "c" (red: GLubyte, green: GLubyte, blue: GLubyte)
PFNGLSECONDARYCOLOR3UBVPROC :: #type proc "c" (v: ^GLubyte)
PFNGLSECONDARYCOLOR3UIPROC :: #type proc "c" (red: GLuint, green: GLuint, blue: GLuint)
PFNGLSECONDARYCOLOR3UIVPROC :: #type proc "c" (v: ^GLuint)
PFNGLSECONDARYCOLOR3USPROC :: #type proc "c" (red: GLushort, green: GLushort, blue: GLushort)
PFNGLSECONDARYCOLOR3USVPROC :: #type proc "c" (v: ^GLushort)
PFNGLSECONDARYCOLORPOINTERPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLWINDOWPOS2DPROC :: #type proc "c" (x: GLdouble, y: GLdouble)
PFNGLWINDOWPOS2DVPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS2FPROC :: #type proc "c" (x: GLfloat, y: GLfloat)
PFNGLWINDOWPOS2FVPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS2IPROC :: #type proc "c" (x: GLint, y: GLint)
PFNGLWINDOWPOS2IVPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS2SPROC :: #type proc "c" (x: GLshort, y: GLshort)
PFNGLWINDOWPOS2SVPROC :: #type proc "c" (p: ^GLshort)
PFNGLWINDOWPOS3DPROC :: #type proc "c" (x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLWINDOWPOS3DVPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS3FPROC :: #type proc "c" (x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLWINDOWPOS3FVPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS3IPROC :: #type proc "c" (x: GLint, y: GLint, z: GLint)
PFNGLWINDOWPOS3IVPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS3SPROC :: #type proc "c" (x: GLshort, y: GLshort, z: GLshort)
PFNGLWINDOWPOS3SVPROC :: #type proc "c" (p: ^GLshort)
GLintptr :: ptrdiff_t
GLsizeiptr :: ptrdiff_t
PFNGLBEGINQUERYPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLBINDBUFFERPROC :: #type proc "c" (target: GLenum, buffer: GLuint)
PFNGLBUFFERDATAPROC :: #type proc "c" (target: GLenum, size: GLsizeiptr, data: rawptr, usage: GLenum)
PFNGLBUFFERSUBDATAPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLDELETEBUFFERSPROC :: #type proc "c" (n: GLsizei, buffers: [^]GLuint)
PFNGLDELETEQUERIESPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLENDQUERYPROC :: #type proc "c" (target: GLenum)
PFNGLGENBUFFERSPROC :: #type proc "c" (n: GLsizei, buffers: [^]GLuint)
PFNGLGENQUERIESPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETBUFFERPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETBUFFERPOINTERVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]rawptr)
PFNGLGETBUFFERSUBDATAPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLGETQUERYOBJECTIVPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETQUERYOBJECTUIVPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETQUERYIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISBUFFERPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLISQUERYPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLMAPBUFFERPROC :: #type proc "c" (target: GLenum, access: GLenum) -> rawptr
PFNGLUNMAPBUFFERPROC :: #type proc "c" (target: GLenum) -> GLboolean
PFNGLATTACHSHADERPROC :: #type proc "c" (program: GLuint, shader: GLuint)
PFNGLBINDATTRIBLOCATIONPROC :: #type proc "c" (program: GLuint, index: GLuint, name: ^GLchar)
PFNGLBLENDEQUATIONSEPARATEPROC :: #type proc "c" (modeRGB: GLenum, modeAlpha: GLenum)
PFNGLCOMPILESHADERPROC :: #type proc "c" (shader: GLuint)
PFNGLCREATEPROGRAMPROC :: #type proc "c" () -> GLuint
PFNGLCREATESHADERPROC :: #type proc "c" (type: GLenum) -> GLuint
PFNGLDELETEPROGRAMPROC :: #type proc "c" (program: GLuint)
PFNGLDELETESHADERPROC :: #type proc "c" (shader: GLuint)
PFNGLDETACHSHADERPROC :: #type proc "c" (program: GLuint, shader: GLuint)
PFNGLDISABLEVERTEXATTRIBARRAYPROC :: #type proc "c" (index: GLuint)
PFNGLDRAWBUFFERSPROC :: #type proc "c" (n: GLsizei, bufs: [^]GLenum)
PFNGLENABLEVERTEXATTRIBARRAYPROC :: #type proc "c" (index: GLuint)
PFNGLGETACTIVEATTRIBPROC :: #type proc "c" (program: GLuint, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar)
PFNGLGETACTIVEUNIFORMPROC :: #type proc "c" (program: GLuint, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar)
PFNGLGETATTACHEDSHADERSPROC :: #type proc "c" (program: GLuint, maxCount: GLsizei, count: ^GLsizei, shaders: [^]GLuint)
PFNGLGETATTRIBLOCATIONPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLGETPROGRAMINFOLOGPROC :: #type proc "c" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)
PFNGLGETPROGRAMIVPROC :: #type proc "c" (program: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETSHADERINFOLOGPROC :: #type proc "c" (shader: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)
PFNGLGETSHADERSOURCEPROC :: #type proc "c" (obj: GLuint, maxLength: GLsizei, length: ^GLsizei, source: ^GLchar)
PFNGLGETSHADERIVPROC :: #type proc "c" (shader: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETUNIFORMLOCATIONPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLGETUNIFORMFVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLfloat)
PFNGLGETUNIFORMIVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLint)
PFNGLGETVERTEXATTRIBPOINTERVPROC :: #type proc "c" (index: GLuint, pname: GLenum, pointer: ^rawptr)
PFNGLGETVERTEXATTRIBDVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLGETVERTEXATTRIBFVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVERTEXATTRIBIVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISPROGRAMPROC :: #type proc "c" (program: GLuint) -> GLboolean
PFNGLISSHADERPROC :: #type proc "c" (shader: GLuint) -> GLboolean
PFNGLLINKPROGRAMPROC :: #type proc "c" (program: GLuint)
PFNGLSHADERSOURCEPROC :: #type proc "c" (shader: GLuint, count: GLsizei, string_: ^^GLchar, length: ^GLint)
PFNGLSTENCILFUNCSEPARATEPROC :: #type proc "c" (face: GLenum, func: GLenum, ref: GLint, mask: GLuint)
PFNGLSTENCILMASKSEPARATEPROC :: #type proc "c" (face: GLenum, mask: GLuint)
PFNGLSTENCILOPSEPARATEPROC :: #type proc "c" (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum)
PFNGLUNIFORM1FPROC :: #type proc "c" (location: GLint, v0: GLfloat)
PFNGLUNIFORM1FVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM1IPROC :: #type proc "c" (location: GLint, v0: GLint)
PFNGLUNIFORM1IVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM2FPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat)
PFNGLUNIFORM2FVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM2IPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint)
PFNGLUNIFORM2IVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM3FPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
PFNGLUNIFORM3FVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM3IPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint, v2: GLint)
PFNGLUNIFORM3IVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM4FPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
PFNGLUNIFORM4FVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM4IPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
PFNGLUNIFORM4IVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORMMATRIX2FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUSEPROGRAMPROC :: #type proc "c" (program: GLuint)
PFNGLVALIDATEPROGRAMPROC :: #type proc "c" (program: GLuint)
PFNGLVERTEXATTRIB1DPROC :: #type proc "c" (index: GLuint, x: GLdouble)
PFNGLVERTEXATTRIB1DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB1FPROC :: #type proc "c" (index: GLuint, x: GLfloat)
PFNGLVERTEXATTRIB1FVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB1SPROC :: #type proc "c" (index: GLuint, x: GLshort)
PFNGLVERTEXATTRIB1SVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB2DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble)
PFNGLVERTEXATTRIB2DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB2FPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat)
PFNGLVERTEXATTRIB2FVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB2SPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort)
PFNGLVERTEXATTRIB2SVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB3DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXATTRIB3DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB3FPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLVERTEXATTRIB3FVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB3SPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort)
PFNGLVERTEXATTRIB3SVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4NBVPROC :: #type proc "c" (index: GLuint, v: ^GLbyte)
PFNGLVERTEXATTRIB4NIVPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIB4NSVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4NUBPROC :: #type proc "c" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte)
PFNGLVERTEXATTRIB4NUBVPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIB4NUIVPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIB4NUSVPROC :: #type proc "c" (index: GLuint, v: ^GLushort)
PFNGLVERTEXATTRIB4BVPROC :: #type proc "c" (index: GLuint, v: ^GLbyte)
PFNGLVERTEXATTRIB4DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXATTRIB4DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB4FPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLVERTEXATTRIB4FVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB4IVPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIB4SPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort)
PFNGLVERTEXATTRIB4SVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4UBVPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIB4UIVPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIB4USVPROC :: #type proc "c" (index: GLuint, v: ^GLushort)
PFNGLVERTEXATTRIBPOINTERPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: rawptr)
PFNGLUNIFORMMATRIX2X3FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX2X4FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3X2FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3X4FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4X2FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4X3FVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLBEGINCONDITIONALRENDERPROC :: #type proc "c" (id: GLuint, mode: GLenum)
PFNGLBEGINTRANSFORMFEEDBACKPROC :: #type proc "c" (primitiveMode: GLenum)
PFNGLBINDFRAGDATALOCATIONPROC :: #type proc "c" (program: GLuint, colorNumber: GLuint, name: ^GLchar)
PFNGLCLAMPCOLORPROC :: #type proc "c" (target: GLenum, clamp: GLenum)
PFNGLCLEARBUFFERFIPROC :: #type proc "c" (buffer: GLenum, drawBuffer: GLint, depth: GLfloat, stencil: GLint)
PFNGLCLEARBUFFERFVPROC :: #type proc "c" (buffer: GLenum, drawBuffer: GLint, value: ^GLfloat)
PFNGLCLEARBUFFERIVPROC :: #type proc "c" (buffer: GLenum, drawBuffer: GLint, value: ^GLint)
PFNGLCLEARBUFFERUIVPROC :: #type proc "c" (buffer: GLenum, drawBuffer: GLint, value: ^GLuint)
PFNGLCOLORMASKIPROC :: #type proc "c" (buf: GLuint, red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean)
PFNGLDISABLEIPROC :: #type proc "c" (cap: GLenum, index: GLuint)
PFNGLENABLEIPROC :: #type proc "c" (cap: GLenum, index: GLuint)
PFNGLENDCONDITIONALRENDERPROC :: #type proc "c" ()
PFNGLENDTRANSFORMFEEDBACKPROC :: #type proc "c" ()
PFNGLGETBOOLEANI_VPROC :: #type proc "c" (pname: GLenum, index: GLuint, data: ^GLboolean)
PFNGLGETFRAGDATALOCATIONPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLGETSTRINGIPROC :: #type proc "c" (name: GLenum, index: GLuint) -> ^GLubyte
PFNGLGETTEXPARAMETERIIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETTEXPARAMETERIUIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC :: #type proc "c" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar)
PFNGLGETUNIFORMUIVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLuint)
PFNGLGETVERTEXATTRIBIIVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVERTEXATTRIBIUIVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLISENABLEDIPROC :: #type proc "c" (cap: GLenum, index: GLuint) -> GLboolean
PFNGLTEXPARAMETERIIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLTEXPARAMETERIUIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC :: #type proc "c" (program: GLuint, count: GLsizei, varyings: ^[^]GLchar, bufferMode: GLenum)
PFNGLUNIFORM1UIPROC :: #type proc "c" (location: GLint, v0: GLuint)
PFNGLUNIFORM1UIVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM2UIPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint)
PFNGLUNIFORM2UIVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM3UIPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
PFNGLUNIFORM3UIVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM4UIPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
PFNGLUNIFORM4UIVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLVERTEXATTRIBI1IPROC :: #type proc "c" (index: GLuint, v0: GLint)
PFNGLVERTEXATTRIBI1IVPROC :: #type proc "c" (index: GLuint, v0: ^GLint)
PFNGLVERTEXATTRIBI1UIPROC :: #type proc "c" (index: GLuint, v0: GLuint)
PFNGLVERTEXATTRIBI1UIVPROC :: #type proc "c" (index: GLuint, v0: ^GLuint)
PFNGLVERTEXATTRIBI2IPROC :: #type proc "c" (index: GLuint, v0: GLint, v1: GLint)
PFNGLVERTEXATTRIBI2IVPROC :: #type proc "c" (index: GLuint, v0: ^GLint)
PFNGLVERTEXATTRIBI2UIPROC :: #type proc "c" (index: GLuint, v0: GLuint, v1: GLuint)
PFNGLVERTEXATTRIBI2UIVPROC :: #type proc "c" (index: GLuint, v0: ^GLuint)
PFNGLVERTEXATTRIBI3IPROC :: #type proc "c" (index: GLuint, v0: GLint, v1: GLint, v2: GLint)
PFNGLVERTEXATTRIBI3IVPROC :: #type proc "c" (index: GLuint, v0: ^GLint)
PFNGLVERTEXATTRIBI3UIPROC :: #type proc "c" (index: GLuint, v0: GLuint, v1: GLuint, v2: GLuint)
PFNGLVERTEXATTRIBI3UIVPROC :: #type proc "c" (index: GLuint, v0: ^GLuint)
PFNGLVERTEXATTRIBI4BVPROC :: #type proc "c" (index: GLuint, v0: ^GLbyte)
PFNGLVERTEXATTRIBI4IPROC :: #type proc "c" (index: GLuint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
PFNGLVERTEXATTRIBI4IVPROC :: #type proc "c" (index: GLuint, v0: ^GLint)
PFNGLVERTEXATTRIBI4SVPROC :: #type proc "c" (index: GLuint, v0: ^GLshort)
PFNGLVERTEXATTRIBI4UBVPROC :: #type proc "c" (index: GLuint, v0: ^GLubyte)
PFNGLVERTEXATTRIBI4UIPROC :: #type proc "c" (index: GLuint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
PFNGLVERTEXATTRIBI4UIVPROC :: #type proc "c" (index: GLuint, v0: ^GLuint)
PFNGLVERTEXATTRIBI4USVPROC :: #type proc "c" (index: GLuint, v0: ^GLushort)
PFNGLVERTEXATTRIBIPOINTERPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLDRAWARRAYSINSTANCEDPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei)
PFNGLDRAWELEMENTSINSTANCEDPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei)
PFNGLPRIMITIVERESTARTINDEXPROC :: #type proc "c" (buffer: GLuint)
PFNGLTEXBUFFERPROC :: #type proc "c" (target: GLenum, internalFormat: GLenum, buffer: GLuint)
PFNGLFRAMEBUFFERTEXTUREPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)
PFNGLGETBUFFERPARAMETERI64VPROC :: #type proc "c" (target: GLenum, value: GLenum, data: ^GLint64)
PFNGLGETINTEGER64I_VPROC :: #type proc "c" (pname: GLenum, index: GLuint, data: ^GLint64)
PFNGLVERTEXATTRIBDIVISORPROC :: #type proc "c" (index: GLuint, divisor: GLuint)
PFNGLBLENDEQUATIONSEPARATEIPROC :: #type proc "c" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDEQUATIONIPROC :: #type proc "c" (buf: GLuint, mode: GLenum)
PFNGLBLENDFUNCSEPARATEIPROC :: #type proc "c" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
PFNGLBLENDFUNCIPROC :: #type proc "c" (buf: GLuint, src: GLenum, dst: GLenum)
PFNGLMINSAMPLESHADINGPROC :: #type proc "c" (value: GLclampf)
PFNGLGETGRAPHICSRESETSTATUSPROC :: #type proc "c" () -> GLenum
PFNGLGETNCOMPRESSEDTEXIMAGEPROC :: #type proc "c" (target: GLenum, lod: GLint, bufSize: GLsizei, pixels: rawptr)
PFNGLGETNTEXIMAGEPROC :: #type proc "c" (tex: GLenum, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr)
PFNGLGETNUNIFORMDVPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLdouble)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
PFNGLSPECIALIZESHADERPROC :: #type proc "c" (shader: GLuint, pEntryPoint: ^GLchar, numSpecializationConstants: GLuint, pConstantIndex: ^GLuint, pConstantValue: ^GLuint)
PFNGLTBUFFERMASK3DFXPROC :: #type proc "c" (mask: GLuint)
GLDEBUGPROCAMD :: #type proc "c" (id: GLuint, category: GLenum, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: rawptr)
PFNGLDEBUGMESSAGECALLBACKAMDPROC :: #type proc "c" (callback: GLDEBUGPROCAMD, userParam: rawptr)
PFNGLDEBUGMESSAGEENABLEAMDPROC :: #type proc "c" (category: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean)
PFNGLDEBUGMESSAGEINSERTAMDPROC :: #type proc "c" (category: GLenum, severity: GLenum, id: GLuint, length: GLsizei, buf: ^GLchar)
PFNGLGETDEBUGMESSAGELOGAMDPROC :: #type proc "c" (count: GLuint, bufsize: GLsizei, categories: [^]GLenum, severities: [^]GLenum, ids: [^]GLuint, lengths: [^]GLsizei, message: ^GLchar) -> GLuint
PFNGLBLENDEQUATIONINDEXEDAMDPROC :: #type proc "c" (buf: GLuint, mode: GLenum)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC :: #type proc "c" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDFUNCINDEXEDAMDPROC :: #type proc "c" (buf: GLuint, src: GLenum, dst: GLenum)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC :: #type proc "c" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC :: #type proc "c" (renderbuffer: GLuint, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC :: #type proc "c" (target: GLenum, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC :: #type proc "c" (target: GLenum, numsamples: GLuint, pixelindex: GLuint, values: [^]GLfloat)
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC :: #type proc "c" (target: GLenum, pname: GLenum, numsamples: GLuint, pixelindex: GLuint, size: GLsizei, values: [^]GLfloat)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, numsamples: GLuint, pixelindex: GLuint, size: GLsizei, values: [^]GLfloat)
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC :: #type proc "c" (framebuffer: GLuint, numsamples: GLuint, pixelindex: GLuint, values: [^]GLfloat)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC :: #type proc "c" (index: GLuint, pname: GLenum, param: GLint)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei)
PFNGLDELETENAMESAMDPROC :: #type proc "c" (identifier: GLenum, num: GLuint, names: [^]GLuint)
PFNGLGENNAMESAMDPROC :: #type proc "c" (identifier: GLenum, num: GLuint, names: [^]GLuint)
PFNGLISNAMEAMDPROC :: #type proc "c" (identifier: GLenum, name: GLuint) -> GLboolean
PFNGLQUERYOBJECTPARAMETERUIAMDPROC :: #type proc "c" (target: GLenum, id: GLuint, pname: GLenum, param: GLuint)
PFNGLBEGINPERFMONITORAMDPROC :: #type proc "c" (monitor: GLuint)
PFNGLDELETEPERFMONITORSAMDPROC :: #type proc "c" (n: GLsizei, monitors: [^]GLuint)
PFNGLENDPERFMONITORAMDPROC :: #type proc "c" (monitor: GLuint)
PFNGLGENPERFMONITORSAMDPROC :: #type proc "c" (n: GLsizei, monitors: [^]GLuint)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC :: #type proc "c" (monitor: GLuint, pname: GLenum, dataSize: GLsizei, data: ^GLuint, bytesWritten: ^GLint)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC :: #type proc "c" (group: GLuint, counter: GLuint, pname: GLenum, data: rawptr)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC :: #type proc "c" (group: GLuint, counter: GLuint, bufSize: GLsizei, length: ^GLsizei, counterString: ^GLchar)
PFNGLGETPERFMONITORCOUNTERSAMDPROC :: #type proc "c" (group: GLuint, numCounters: [^]GLint, maxActiveCounters: [^]GLint, countersSize: GLsizei, counters: [^]GLuint)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC :: #type proc "c" (group: GLuint, bufSize: GLsizei, length: ^GLsizei, groupString: ^GLchar)
PFNGLGETPERFMONITORGROUPSAMDPROC :: #type proc "c" (numGroups: [^]GLint, groupsSize: GLsizei, groups: [^]GLuint)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC :: #type proc "c" (monitor: GLuint, enable: GLboolean, group: GLuint, numCounters: GLint, counterList: ^GLuint)
PFNGLSETMULTISAMPLEFVAMDPROC :: #type proc "c" (pname: GLenum, index: GLuint, val: ^GLfloat)
PFNGLTEXSTORAGESPARSEAMDPROC :: #type proc "c" (target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield)
PFNGLTEXTURESTORAGESPARSEAMDPROC :: #type proc "c" (texture: GLuint, target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield)
PFNGLSTENCILOPVALUEAMDPROC :: #type proc "c" (face: GLenum, value: GLuint)
PFNGLTESSELLATIONFACTORAMDPROC :: #type proc "c" (factor: GLfloat)
PFNGLTESSELLATIONMODEAMDPROC :: #type proc "c" (mode: GLenum)
PFNGLBLITFRAMEBUFFERANGLEPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLDRAWARRAYSINSTANCEDANGLEPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei)
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei)
PFNGLVERTEXATTRIBDIVISORANGLEPROC :: #type proc "c" (index: GLuint, divisor: GLuint)
PFNGLBEGINQUERYANGLEPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETEQUERIESANGLEPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLENDQUERYANGLEPROC :: #type proc "c" (target: GLenum)
PFNGLGENQUERIESANGLEPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETQUERYOBJECTI64VANGLEPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint64)
PFNGLGETQUERYOBJECTIVANGLEPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETQUERYOBJECTUI64VANGLEPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint64)
PFNGLGETQUERYOBJECTUIVANGLEPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETQUERYIVANGLEPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISQUERYANGLEPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLQUERYCOUNTERANGLEPROC :: #type proc "c" (id: GLuint, target: GLenum)
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC :: #type proc "c" (shader: GLuint, bufsize: GLsizei, length: ^GLsizei, source: ^GLchar)
PFNGLCOPYTEXTURELEVELSAPPLEPROC :: #type proc "c" (destinationTexture: GLuint, sourceTexture: GLuint, sourceBaseLevel: GLint, sourceLevelCount: GLsizei)
PFNGLDRAWELEMENTARRAYAPPLEPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, first: GLint, count: GLsizei)
PFNGLELEMENTPOINTERAPPLEPROC :: #type proc "c" (type: GLenum, pointer: rawptr)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC :: #type proc "c" (mode: GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, first: ^GLint, count: ^GLsizei, primcount: GLsizei)
PFNGLDELETEFENCESAPPLEPROC :: #type proc "c" (n: GLsizei, fences: [^]GLuint)
PFNGLFINISHFENCEAPPLEPROC :: #type proc "c" (fence: GLuint)
PFNGLFINISHOBJECTAPPLEPROC :: #type proc "c" (object: GLenum, name: GLint)
PFNGLGENFENCESAPPLEPROC :: #type proc "c" (n: GLsizei, fences: [^]GLuint)
PFNGLISFENCEAPPLEPROC :: #type proc "c" (fence: GLuint) -> GLboolean
PFNGLSETFENCEAPPLEPROC :: #type proc "c" (fence: GLuint)
PFNGLTESTFENCEAPPLEPROC :: #type proc "c" (fence: GLuint) -> GLboolean
PFNGLTESTOBJECTAPPLEPROC :: #type proc "c" (object: GLenum, name: GLuint) -> GLboolean
PFNGLBUFFERPARAMETERIAPPLEPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC :: #type proc "c" ()
PFNGLGETOBJECTPARAMETERIVAPPLEPROC :: #type proc "c" (objectType: GLenum, name: GLuint, pname: GLenum, params: [^]GLint)
PFNGLOBJECTPURGEABLEAPPLEPROC :: #type proc "c" (objectType: GLenum, name: GLuint, option: GLenum) -> GLenum
PFNGLOBJECTUNPURGEABLEAPPLEPROC :: #type proc "c" (objectType: GLenum, name: GLuint, option: GLenum) -> GLenum
PFNGLCLIENTWAITSYNCAPPLEPROC :: #type proc "c" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum
PFNGLDELETESYNCAPPLEPROC :: #type proc "c" (GLsync: GLsync)
PFNGLFENCESYNCAPPLEPROC :: #type proc "c" (condition: GLenum, flags: GLbitfield) -> GLsync
PFNGLGETINTEGER64VAPPLEPROC :: #type proc "c" (pname: GLenum, params: [^]GLint64)
PFNGLGETSYNCIVAPPLEPROC :: #type proc "c" (GLsync: GLsync, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint)
PFNGLISSYNCAPPLEPROC :: #type proc "c" (GLsync: GLsync) -> GLboolean
PFNGLWAITSYNCAPPLEPROC :: #type proc "c" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]rawptr)
PFNGLTEXTURERANGEAPPLEPROC :: #type proc "c" (target: GLenum, length: GLsizei, pointer: rawptr)
PFNGLBINDVERTEXARRAYAPPLEPROC :: #type proc "c" (array: GLuint)
PFNGLDELETEVERTEXARRAYSAPPLEPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLGENVERTEXARRAYSAPPLEPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLISVERTEXARRAYAPPLEPROC :: #type proc "c" (array: GLuint) -> GLboolean
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC :: #type proc "c" (length: GLsizei, pointer: rawptr)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLVERTEXARRAYRANGEAPPLEPROC :: #type proc "c" (length: GLsizei, pointer: rawptr)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC :: #type proc "c" (index: GLuint, pname: GLenum)
PFNGLENABLEVERTEXATTRIBAPPLEPROC :: #type proc "c" (index: GLuint, pname: GLenum)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC :: #type proc "c" (index: GLuint, pname: GLenum) -> GLboolean
PFNGLMAPVERTEXATTRIB1DAPPLEPROC :: #type proc "c" (index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: [^]GLdouble)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC :: #type proc "c" (index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: [^]GLfloat)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC :: #type proc "c" (index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: [^]GLdouble)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC :: #type proc "c" (index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: [^]GLfloat)
GLfixed :: i32
PFNGLCLEARDEPTHFPROC :: #type proc "c" (d: GLclampf)
PFNGLDEPTHRANGEFPROC :: #type proc "c" (n: GLclampf, f: GLclampf)
PFNGLGETSHADERPRECISIONFORMATPROC :: #type proc "c" (shadertype: GLenum, precisiontype: GLenum, range: ^GLint, precision: ^GLint)
PFNGLRELEASESHADERCOMPILERPROC :: #type proc "c" ()
PFNGLSHADERBINARYPROC :: #type proc "c" (count: GLsizei, shaders: [^]GLuint, binaryformat: GLenum, binary: rawptr, length: GLsizei)
PFNGLMEMORYBARRIERBYREGIONPROC :: #type proc "c" (barriers: GLbitfield)
PFNGLPRIMITIVEBOUNDINGBOXARBPROC :: #type proc "c" (minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei, baseinstance: GLuint)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei, baseinstance: GLuint)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei, basevertex: GLint, baseinstance: GLuint)
PFNGLGETIMAGEHANDLEARBPROC :: #type proc "c" (texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64
PFNGLGETTEXTUREHANDLEARBPROC :: #type proc "c" (texture: GLuint) -> GLuint64
PFNGLGETTEXTURESAMPLERHANDLEARBPROC :: #type proc "c" (texture: GLuint, sampler: GLuint) -> GLuint64
PFNGLGETVERTEXATTRIBLUI64VARBPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLuint64EXT)
PFNGLISIMAGEHANDLERESIDENTARBPROC :: #type proc "c" (handle: GLuint64) -> GLboolean
PFNGLISTEXTUREHANDLERESIDENTARBPROC :: #type proc "c" (handle: GLuint64) -> GLboolean
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC :: #type proc "c" (handle: GLuint64)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC :: #type proc "c" (handle: GLuint64, access: GLenum)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC :: #type proc "c" (handle: GLuint64)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC :: #type proc "c" (handle: GLuint64)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, value: GLuint64)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64)
PFNGLUNIFORMHANDLEUI64ARBPROC :: #type proc "c" (location: GLint, value: GLuint64)
PFNGLUNIFORMHANDLEUI64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLVERTEXATTRIBL1UI64ARBPROC :: #type proc "c" (index: GLuint, x: GLuint64EXT)
PFNGLVERTEXATTRIBL1UI64VARBPROC :: #type proc "c" (index: GLuint, v: ^GLuint64EXT)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC :: #type proc "c" (program: GLuint, colorNumber: GLuint, index: GLuint, name: ^GLchar)
PFNGLGETFRAGDATAINDEXPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLBUFFERSTORAGEPROC :: #type proc "c" (target: GLenum, size: GLsizeiptr, data: rawptr, flags: GLbitfield)
cl_context :: rawptr
cl_event :: rawptr
PFNGLCREATESYNCFROMCLEVENTARBPROC :: #type proc "c" (context_: cl_context, event: cl_event, flags: GLbitfield) -> GLsync
PFNGLCLEARBUFFERDATAPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARBUFFERSUBDATAPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC :: #type proc "c" (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC :: #type proc "c" (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARTEXIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARTEXSUBIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLIPCONTROLPROC :: #type proc "c" (origin: GLenum, depth: GLenum)
PFNGLCLAMPCOLORARBPROC :: #type proc "c" (target: GLenum, clamp: GLenum)
PFNGLDISPATCHCOMPUTEPROC :: #type proc "c" (num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint)
PFNGLDISPATCHCOMPUTEINDIRECTPROC :: #type proc "c" (indirect: GLintptr)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC :: #type proc "c" (num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, group_size_x: GLuint, group_size_y: GLuint, group_size_z: GLuint)
PFNGLCOPYBUFFERSUBDATAPROC :: #type proc "c" (readtarget: GLenum, writetarget: GLenum, readoffset: GLintptr, writeoffset: GLintptr, size: GLsizeiptr)
PFNGLCOPYIMAGESUBDATAPROC :: #type proc "c" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei)
GLDEBUGPROCARB :: #type proc "c" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: rawptr)
PFNGLDEBUGMESSAGECALLBACKARBPROC :: #type proc "c" (callback: GLDEBUGPROCARB, userParam: rawptr)
PFNGLDEBUGMESSAGECONTROLARBPROC :: #type proc "c" (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean)
PFNGLDEBUGMESSAGEINSERTARBPROC :: #type proc "c" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: ^GLchar)
PFNGLGETDEBUGMESSAGELOGARBPROC :: #type proc "c" (count: GLuint, bufSize: GLsizei, sources: [^]GLenum, types: [^]GLenum, ids: [^]GLuint, severities: [^]GLenum, lengths: [^]GLsizei, messageLog: ^GLchar) -> GLuint
PFNGLBINDTEXTUREUNITPROC :: #type proc "c" (unit: GLuint, texture: GLuint)
PFNGLBLITNAMEDFRAMEBUFFERPROC :: #type proc "c" (readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC :: #type proc "c" (framebuffer: GLuint, target: GLenum) -> GLenum
PFNGLCLEARNAMEDBUFFERDATAPROC :: #type proc "c" (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARNAMEDBUFFERSUBDATAPROC :: #type proc "c" (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC :: #type proc "c" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint)
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC :: #type proc "c" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLfloat)
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC :: #type proc "c" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLint)
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC :: #type proc "c" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLuint)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOPYNAMEDBUFFERSUBDATAPROC :: #type proc "c" (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
PFNGLCOPYTEXTURESUBIMAGE1DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYTEXTURESUBIMAGE2DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCOPYTEXTURESUBIMAGE3DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCREATEBUFFERSPROC :: #type proc "c" (n: GLsizei, buffers: [^]GLuint)
PFNGLCREATEFRAMEBUFFERSPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLCREATEPROGRAMPIPELINESPROC :: #type proc "c" (n: GLsizei, pipelines: [^]GLuint)
PFNGLCREATEQUERIESPROC :: #type proc "c" (target: GLenum, n: GLsizei, ids: [^]GLuint)
PFNGLCREATERENDERBUFFERSPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLCREATESAMPLERSPROC :: #type proc "c" (n: GLsizei, samplers: [^]GLuint)
PFNGLCREATETEXTURESPROC :: #type proc "c" (target: GLenum, n: GLsizei, textures: [^]GLuint)
PFNGLCREATETRANSFORMFEEDBACKSPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLCREATEVERTEXARRAYSPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLDISABLEVERTEXARRAYATTRIBPROC :: #type proc "c" (vaobj: GLuint, index: GLuint)
PFNGLENABLEVERTEXARRAYATTRIBPROC :: #type proc "c" (vaobj: GLuint, index: GLuint)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
PFNGLGENERATETEXTUREMIPMAPPROC :: #type proc "c" (texture: GLuint)
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, bufSize: GLsizei, pixels: rawptr)
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLint64)
PFNGLGETNAMEDBUFFERPARAMETERIVPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDBUFFERPOINTERVPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]rawptr)
PFNGLGETNAMEDBUFFERSUBDATAPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC :: #type proc "c" (renderbuffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETQUERYBUFFEROBJECTI64VPROC :: #type proc "c" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
PFNGLGETQUERYBUFFEROBJECTIVPROC :: #type proc "c" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
PFNGLGETQUERYBUFFEROBJECTUI64VPROC :: #type proc "c" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
PFNGLGETQUERYBUFFEROBJECTUIVPROC :: #type proc "c" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
PFNGLGETTEXTUREIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr)
PFNGLGETTEXTURELEVELPARAMETERFVPROC :: #type proc "c" (texture: GLuint, level: GLint, pname: GLenum, params: [^]GLfloat)
PFNGLGETTEXTURELEVELPARAMETERIVPROC :: #type proc "c" (texture: GLuint, level: GLint, pname: GLenum, params: [^]GLint)
PFNGLGETTEXTUREPARAMETERIIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETTEXTUREPARAMETERIUIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETTEXTUREPARAMETERFVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETTEXTUREPARAMETERIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETTRANSFORMFEEDBACKI64_VPROC :: #type proc "c" (xfb: GLuint, pname: GLenum, index: GLuint, param: ^GLint64)
PFNGLGETTRANSFORMFEEDBACKI_VPROC :: #type proc "c" (xfb: GLuint, pname: GLenum, index: GLuint, param: ^GLint)
PFNGLGETTRANSFORMFEEDBACKIVPROC :: #type proc "c" (xfb: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETVERTEXARRAYINDEXED64IVPROC :: #type proc "c" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint64)
PFNGLGETVERTEXARRAYINDEXEDIVPROC :: #type proc "c" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETVERTEXARRAYIVPROC :: #type proc "c" (vaobj: GLuint, pname: GLenum, param: ^GLint)
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC :: #type proc "c" (framebuffer: GLuint, numAttachments: GLsizei, attachments: [^]GLenum)
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC :: #type proc "c" (framebuffer: GLuint, numAttachments: GLsizei, attachments: [^]GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLMAPNAMEDBUFFERPROC :: #type proc "c" (buffer: GLuint, access: GLenum) -> rawptr
PFNGLMAPNAMEDBUFFERRANGEPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr
PFNGLNAMEDBUFFERDATAPROC :: #type proc "c" (buffer: GLuint, size: GLsizeiptr, data: rawptr, usage: GLenum)
PFNGLNAMEDBUFFERSTORAGEPROC :: #type proc "c" (buffer: GLuint, size: GLsizeiptr, data: rawptr, flags: GLbitfield)
PFNGLNAMEDBUFFERSUBDATAPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC :: #type proc "c" (framebuffer: GLuint, mode: GLenum)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC :: #type proc "c" (framebuffer: GLuint, n: GLsizei, bufs: [^]GLenum)
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, param: GLint)
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC :: #type proc "c" (framebuffer: GLuint, mode: GLenum)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLNAMEDRENDERBUFFERSTORAGEPROC :: #type proc "c" (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC :: #type proc "c" (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLTEXTUREBUFFERPROC :: #type proc "c" (texture: GLuint, internalformat: GLenum, buffer: GLuint)
PFNGLTEXTUREBUFFERRANGEPROC :: #type proc "c" (texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLTEXTUREPARAMETERIIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLint)
PFNGLTEXTUREPARAMETERIUIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLTEXTUREPARAMETERFPROC :: #type proc "c" (texture: GLuint, pname: GLenum, param: GLfloat)
PFNGLTEXTUREPARAMETERFVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, param: ^GLfloat)
PFNGLTEXTUREPARAMETERIPROC :: #type proc "c" (texture: GLuint, pname: GLenum, param: GLint)
PFNGLTEXTUREPARAMETERIVPROC :: #type proc "c" (texture: GLuint, pname: GLenum, param: ^GLint)
PFNGLTEXTURESTORAGE1DPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei)
PFNGLTEXTURESTORAGE2DPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC :: #type proc "c" (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTURESTORAGE3DPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC :: #type proc "c" (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTURESUBIMAGE1DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTURESUBIMAGE2DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTURESUBIMAGE3DPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC :: #type proc "c" (xfb: GLuint, index: GLuint, buffer: GLuint)
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC :: #type proc "c" (xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLUNMAPNAMEDBUFFERPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLVERTEXARRAYATTRIBBINDINGPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint)
PFNGLVERTEXARRAYATTRIBFORMATPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint)
PFNGLVERTEXARRAYATTRIBIFORMATPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXARRAYATTRIBLFORMATPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXARRAYBINDINGDIVISORPROC :: #type proc "c" (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint)
PFNGLVERTEXARRAYELEMENTBUFFERPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint)
PFNGLVERTEXARRAYVERTEXBUFFERPROC :: #type proc "c" (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
PFNGLVERTEXARRAYVERTEXBUFFERSPROC :: #type proc "c" (vaobj: GLuint, first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, strides: [^]GLsizei)
PFNGLDRAWBUFFERSARBPROC :: #type proc "c" (n: GLsizei, bufs: [^]GLenum)
PFNGLBLENDEQUATIONSEPARATEIARBPROC :: #type proc "c" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDEQUATIONIARBPROC :: #type proc "c" (buf: GLuint, mode: GLenum)
PFNGLBLENDFUNCSEPARATEIARBPROC :: #type proc "c" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
PFNGLBLENDFUNCIARBPROC :: #type proc "c" (buf: GLuint, src: GLenum, dst: GLenum)
PFNGLDRAWELEMENTSBASEVERTEXPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC :: #type proc "c" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei, basevertex: ^GLint)
PFNGLDRAWARRAYSINDIRECTPROC :: #type proc "c" (mode: GLenum, indirect: rawptr)
PFNGLDRAWELEMENTSINDIRECTPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr)
PFNGLFRAMEBUFFERPARAMETERIPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, param: GLint)
PFNGLBINDFRAMEBUFFERPROC :: #type proc "c" (target: GLenum, framebuffer: GLuint)
PFNGLBINDRENDERBUFFERPROC :: #type proc "c" (target: GLenum, renderbuffer: GLuint)
PFNGLBLITFRAMEBUFFERPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLCHECKFRAMEBUFFERSTATUSPROC :: #type proc "c" (target: GLenum) -> GLenum
PFNGLDELETEFRAMEBUFFERSPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLDELETERENDERBUFFERSPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLFRAMEBUFFERRENDERBUFFERPROC :: #type proc "c" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
PFNGLFRAMEBUFFERTEXTURE1DPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTURE2DPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTURE3DPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLFRAMEBUFFERTEXTURELAYERPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLGENFRAMEBUFFERSPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLGENRENDERBUFFERSPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLGENERATEMIPMAPPROC :: #type proc "c" (target: GLenum)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC :: #type proc "c" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETRENDERBUFFERPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISFRAMEBUFFERPROC :: #type proc "c" (framebuffer: GLuint) -> GLboolean
PFNGLISRENDERBUFFERPROC :: #type proc "c" (renderbuffer: GLuint) -> GLboolean
PFNGLRENDERBUFFERSTORAGEPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERTEXTUREARBPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLPROGRAMPARAMETERIARBPROC :: #type proc "c" (program: GLuint, pname: GLenum, value: GLint)
PFNGLGETPROGRAMBINARYPROC :: #type proc "c" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, binaryFormat: ^GLenum, binary: rawptr)
PFNGLPROGRAMBINARYPROC :: #type proc "c" (program: GLuint, binaryFormat: GLenum, binary: rawptr, length: GLsizei)
PFNGLPROGRAMPARAMETERIPROC :: #type proc "c" (program: GLuint, pname: GLenum, value: GLint)
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, bufSize: GLsizei, pixels: rawptr)
PFNGLGETTEXTURESUBIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr)
PFNGLSPECIALIZESHADERARBPROC :: #type proc "c" (shader: GLuint, pEntryPoint: ^GLchar, numSpecializationConstants: GLuint, pConstantIndex: ^GLuint, pConstantValue: ^GLuint)
PFNGLGETUNIFORMDVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLdouble)
PFNGLUNIFORM1DPROC :: #type proc "c" (location: GLint, x: GLdouble)
PFNGLUNIFORM1DVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLUNIFORM2DPROC :: #type proc "c" (location: GLint, x: GLdouble, y: GLdouble)
PFNGLUNIFORM2DVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLUNIFORM3DPROC :: #type proc "c" (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLUNIFORM3DVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLUNIFORM4DPROC :: #type proc "c" (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLUNIFORM4DVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLUNIFORMMATRIX2DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX2X3DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX2X4DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX3DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX3X2DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX3X4DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX4DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX4X2DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLUNIFORMMATRIX4X3DVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLGETUNIFORMI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLint64)
PFNGLGETUNIFORMUI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLuint64)
PFNGLGETNUNIFORMI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint64)
PFNGLGETNUNIFORMUI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint64)
PFNGLPROGRAMUNIFORM1I64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64)
PFNGLPROGRAMUNIFORM1I64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64)
PFNGLPROGRAMUNIFORM1UI64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64)
PFNGLPROGRAMUNIFORM1UI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLPROGRAMUNIFORM2I64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64, y: GLint64)
PFNGLPROGRAMUNIFORM2I64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64)
PFNGLPROGRAMUNIFORM2UI64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64)
PFNGLPROGRAMUNIFORM2UI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLPROGRAMUNIFORM3I64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64)
PFNGLPROGRAMUNIFORM3I64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64)
PFNGLPROGRAMUNIFORM3UI64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64)
PFNGLPROGRAMUNIFORM3UI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLPROGRAMUNIFORM4I64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64)
PFNGLPROGRAMUNIFORM4I64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64)
PFNGLPROGRAMUNIFORM4UI64ARBPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64)
PFNGLPROGRAMUNIFORM4UI64VARBPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLUNIFORM1I64ARBPROC :: #type proc "c" (location: GLint, x: GLint64)
PFNGLUNIFORM1I64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64)
PFNGLUNIFORM1UI64ARBPROC :: #type proc "c" (location: GLint, x: GLuint64)
PFNGLUNIFORM1UI64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLUNIFORM2I64ARBPROC :: #type proc "c" (location: GLint, x: GLint64, y: GLint64)
PFNGLUNIFORM2I64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64)
PFNGLUNIFORM2UI64ARBPROC :: #type proc "c" (location: GLint, x: GLuint64, y: GLuint64)
PFNGLUNIFORM2UI64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLUNIFORM3I64ARBPROC :: #type proc "c" (location: GLint, x: GLint64, y: GLint64, z: GLint64)
PFNGLUNIFORM3I64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64)
PFNGLUNIFORM3UI64ARBPROC :: #type proc "c" (location: GLint, x: GLuint64, y: GLuint64, z: GLuint64)
PFNGLUNIFORM3UI64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLUNIFORM4I64ARBPROC :: #type proc "c" (location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64)
PFNGLUNIFORM4I64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64)
PFNGLUNIFORM4UI64ARBPROC :: #type proc "c" (location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64)
PFNGLUNIFORM4UI64VARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLCOLORSUBTABLEPROC :: #type proc "c" (target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type: GLenum, data: rawptr)
PFNGLCOLORTABLEPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, table: rawptr)
PFNGLCOLORTABLEPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLCOLORTABLEPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLCONVOLUTIONFILTER1DPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, image: rawptr)
PFNGLCONVOLUTIONFILTER2DPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, image: rawptr)
PFNGLCONVOLUTIONPARAMETERFPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: GLfloat)
PFNGLCONVOLUTIONPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLCONVOLUTIONPARAMETERIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: GLint)
PFNGLCONVOLUTIONPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLCOPYCOLORSUBTABLEPROC :: #type proc "c" (target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYCOLORTABLEPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYCONVOLUTIONFILTER1DPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYCONVOLUTIONFILTER2DPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLGETCOLORTABLEPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, table: rawptr)
PFNGLGETCOLORTABLEPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOLORTABLEPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETCONVOLUTIONFILTERPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, image: rawptr)
PFNGLGETCONVOLUTIONPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCONVOLUTIONPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETHISTOGRAMPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr)
PFNGLGETHISTOGRAMPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETHISTOGRAMPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMINMAXPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, types: GLenum, values: rawptr)
PFNGLGETMINMAXPARAMETERFVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMINMAXPARAMETERIVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETSEPARABLEFILTERPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, row: rawptr, column: rawptr, span: rawptr)
PFNGLHISTOGRAMPROC :: #type proc "c" (target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean)
PFNGLMINMAXPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, sink: GLboolean)
PFNGLRESETHISTOGRAMPROC :: #type proc "c" (target: GLenum)
PFNGLRESETMINMAXPROC :: #type proc "c" (target: GLenum)
PFNGLSEPARABLEFILTER2DPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, row: rawptr, column: rawptr)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
PFNGLDRAWARRAYSINSTANCEDARBPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei)
PFNGLDRAWELEMENTSINSTANCEDARBPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei)
PFNGLVERTEXATTRIBDIVISORARBPROC :: #type proc "c" (index: GLuint, divisor: GLuint)
PFNGLGETINTERNALFORMATIVPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: [^]GLint)
PFNGLGETINTERNALFORMATI64VPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: [^]GLint64)
PFNGLINVALIDATEBUFFERDATAPROC :: #type proc "c" (buffer: GLuint)
PFNGLINVALIDATEBUFFERSUBDATAPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
PFNGLINVALIDATEFRAMEBUFFERPROC :: #type proc "c" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum)
PFNGLINVALIDATESUBFRAMEBUFFERPROC :: #type proc "c" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLINVALIDATETEXIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint)
PFNGLINVALIDATETEXSUBIMAGEPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC :: #type proc "c" (target: GLenum, offset: GLintptr, length: GLsizeiptr)
PFNGLMAPBUFFERRANGEPROC :: #type proc "c" (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr
PFNGLCURRENTPALETTEMATRIXARBPROC :: #type proc "c" (index: GLint)
PFNGLMATRIXINDEXPOINTERARBPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLMATRIXINDEXUBVARBPROC :: #type proc "c" (size: GLint, indices: [^]GLubyte)
PFNGLMATRIXINDEXUIVARBPROC :: #type proc "c" (size: GLint, indices: [^]GLuint)
PFNGLMATRIXINDEXUSVARBPROC :: #type proc "c" (size: GLint, indices: [^]GLushort)
PFNGLBINDBUFFERSBASEPROC :: #type proc "c" (target: GLenum, first: GLuint, count: GLsizei, buffers: [^]GLuint)
PFNGLBINDBUFFERSRANGEPROC :: #type proc "c" (target: GLenum, first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, sizes: [^]GLsizeiptr)
PFNGLBINDIMAGETEXTURESPROC :: #type proc "c" (first: GLuint, count: GLsizei, textures: [^]GLuint)
PFNGLBINDSAMPLERSPROC :: #type proc "c" (first: GLuint, count: GLsizei, samplers: [^]GLuint)
PFNGLBINDTEXTURESPROC :: #type proc "c" (first: GLuint, count: GLsizei, textures: [^]GLuint)
PFNGLBINDVERTEXBUFFERSPROC :: #type proc "c" (first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, strides: [^]GLsizei)
PFNGLMULTIDRAWARRAYSINDIRECTPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei)
PFNGLSAMPLECOVERAGEARBPROC :: #type proc "c" (value: GLclampf, invert: GLboolean)
PFNGLACTIVETEXTUREARBPROC :: #type proc "c" (texture: GLenum)
PFNGLCLIENTACTIVETEXTUREARBPROC :: #type proc "c" (texture: GLenum)
PFNGLMULTITEXCOORD1DARBPROC :: #type proc "c" (target: GLenum, s: GLdouble)
PFNGLMULTITEXCOORD1DVARBPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD1FARBPROC :: #type proc "c" (target: GLenum, s: GLfloat)
PFNGLMULTITEXCOORD1FVARBPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD1IARBPROC :: #type proc "c" (target: GLenum, s: GLint)
PFNGLMULTITEXCOORD1IVARBPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD1SARBPROC :: #type proc "c" (target: GLenum, s: GLshort)
PFNGLMULTITEXCOORD1SVARBPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD2DARBPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble)
PFNGLMULTITEXCOORD2DVARBPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD2FARBPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat)
PFNGLMULTITEXCOORD2FVARBPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD2IARBPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint)
PFNGLMULTITEXCOORD2IVARBPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD2SARBPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort)
PFNGLMULTITEXCOORD2SVARBPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD3DARBPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble)
PFNGLMULTITEXCOORD3DVARBPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD3FARBPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat)
PFNGLMULTITEXCOORD3FVARBPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD3IARBPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint, r: GLint)
PFNGLMULTITEXCOORD3IVARBPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD3SARBPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort, r: GLshort)
PFNGLMULTITEXCOORD3SVARBPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLMULTITEXCOORD4DARBPROC :: #type proc "c" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble)
PFNGLMULTITEXCOORD4DVARBPROC :: #type proc "c" (target: GLenum, v: ^GLdouble)
PFNGLMULTITEXCOORD4FARBPROC :: #type proc "c" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat)
PFNGLMULTITEXCOORD4FVARBPROC :: #type proc "c" (target: GLenum, v: ^GLfloat)
PFNGLMULTITEXCOORD4IARBPROC :: #type proc "c" (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint)
PFNGLMULTITEXCOORD4IVARBPROC :: #type proc "c" (target: GLenum, v: ^GLint)
PFNGLMULTITEXCOORD4SARBPROC :: #type proc "c" (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort)
PFNGLMULTITEXCOORD4SVARBPROC :: #type proc "c" (target: GLenum, v: ^GLshort)
PFNGLBEGINQUERYARBPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETEQUERIESARBPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLENDQUERYARBPROC :: #type proc "c" (target: GLenum)
PFNGLGENQUERIESARBPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETQUERYOBJECTIVARBPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETQUERYOBJECTUIVARBPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETQUERYIVARBPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISQUERYARBPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLMAXSHADERCOMPILERTHREADSARBPROC :: #type proc "c" (count: GLuint)
PFNGLPOINTPARAMETERFARBPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLPOINTPARAMETERFVARBPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLPOLYGONOFFSETCLAMPPROC :: #type proc "c" (factor: GLfloat, units: GLfloat, clamp: GLfloat)
PFNGLGETPROGRAMINTERFACEIVPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETPROGRAMRESOURCEINDEXPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLuint
PFNGLGETPROGRAMRESOURCELOCATIONPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint
PFNGLGETPROGRAMRESOURCENAMEPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: ^GLsizei, name: ^GLchar)
PFNGLGETPROGRAMRESOURCEIVPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: [^]GLenum, bufSize: GLsizei, length: ^GLsizei, params: [^]GLint)
PFNGLPROVOKINGVERTEXPROC :: #type proc "c" (mode: GLenum)
PFNGLGETGRAPHICSRESETSTATUSARBPROC :: #type proc "c" () -> GLenum
PFNGLGETNCOLORTABLEARBPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, table: rawptr)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC :: #type proc "c" (target: GLenum, lod: GLint, bufSize: GLsizei, img: rawptr)
PFNGLGETNCONVOLUTIONFILTERARBPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, image: rawptr)
PFNGLGETNHISTOGRAMARBPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: rawptr)
PFNGLGETNMAPDVARBPROC :: #type proc "c" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLdouble)
PFNGLGETNMAPFVARBPROC :: #type proc "c" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLfloat)
PFNGLGETNMAPIVARBPROC :: #type proc "c" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLint)
PFNGLGETNMINMAXARBPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: rawptr)
PFNGLGETNPIXELMAPFVARBPROC :: #type proc "c" (map_: GLenum, bufSize: GLsizei, values: [^]GLfloat)
PFNGLGETNPIXELMAPUIVARBPROC :: #type proc "c" (map_: GLenum, bufSize: GLsizei, values: [^]GLuint)
PFNGLGETNPIXELMAPUSVARBPROC :: #type proc "c" (map_: GLenum, bufSize: GLsizei, values: [^]GLushort)
PFNGLGETNPOLYGONSTIPPLEARBPROC :: #type proc "c" (bufSize: GLsizei, pattern: ^GLubyte)
PFNGLGETNSEPARABLEFILTERARBPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, rowBufSize: GLsizei, row: rawptr, columnBufSize: GLsizei, column: rawptr, span: rawptr)
PFNGLGETNTEXIMAGEARBPROC :: #type proc "c" (target: GLenum, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, img: rawptr)
PFNGLGETNUNIFORMDVARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLdouble)
PFNGLGETNUNIFORMFVARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat)
PFNGLGETNUNIFORMIVARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint)
PFNGLGETNUNIFORMUIVARBPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint)
PFNGLREADNPIXELSARBPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr)
PFNGLEVALUATEDEPTHVALUESARBPROC :: #type proc "c" ()
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC :: #type proc "c" (target: GLenum, start: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC :: #type proc "c" (framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLMINSAMPLESHADINGARBPROC :: #type proc "c" (value: GLclampf)
PFNGLBINDSAMPLERPROC :: #type proc "c" (unit: GLuint, sampler: GLuint)
PFNGLDELETESAMPLERSPROC :: #type proc "c" (count: GLsizei, samplers: [^]GLuint)
PFNGLGENSAMPLERSPROC :: #type proc "c" (count: GLsizei, samplers: [^]GLuint)
PFNGLGETSAMPLERPARAMETERIIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETSAMPLERPARAMETERIUIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETSAMPLERPARAMETERFVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETSAMPLERPARAMETERIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISSAMPLERPROC :: #type proc "c" (sampler: GLuint) -> GLboolean
PFNGLSAMPLERPARAMETERIIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLSAMPLERPARAMETERIUIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLSAMPLERPARAMETERFPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, param: GLfloat)
PFNGLSAMPLERPARAMETERFVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLSAMPLERPARAMETERIPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, param: GLint)
PFNGLSAMPLERPARAMETERIVPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLACTIVESHADERPROGRAMPROC :: #type proc "c" (pipeline: GLuint, program: GLuint)
PFNGLBINDPROGRAMPIPELINEPROC :: #type proc "c" (pipeline: GLuint)
PFNGLCREATESHADERPROGRAMVPROC :: #type proc "c" (type: GLenum, count: GLsizei, strings: ^[^]GLchar) -> GLuint
PFNGLDELETEPROGRAMPIPELINESPROC :: #type proc "c" (n: GLsizei, pipelines: [^]GLuint)
PFNGLGENPROGRAMPIPELINESPROC :: #type proc "c" (n: GLsizei, pipelines: [^]GLuint)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC :: #type proc "c" (pipeline: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)
PFNGLGETPROGRAMPIPELINEIVPROC :: #type proc "c" (pipeline: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISPROGRAMPIPELINEPROC :: #type proc "c" (pipeline: GLuint) -> GLboolean
PFNGLPROGRAMUNIFORM1DPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLdouble)
PFNGLPROGRAMUNIFORM1DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLPROGRAMUNIFORM1FPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLfloat)
PFNGLPROGRAMUNIFORM1FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM1IPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint)
PFNGLPROGRAMUNIFORM1IVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM1UIPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint)
PFNGLPROGRAMUNIFORM1UIVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM2DPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble)
PFNGLPROGRAMUNIFORM2DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLPROGRAMUNIFORM2FPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat)
PFNGLPROGRAMUNIFORM2FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM2IPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint, y: GLint)
PFNGLPROGRAMUNIFORM2IVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM2UIPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint, y: GLuint)
PFNGLPROGRAMUNIFORM2UIVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM3DPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLPROGRAMUNIFORM3DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLPROGRAMUNIFORM3FPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLPROGRAMUNIFORM3FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM3IPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint, y: GLint, z: GLint)
PFNGLPROGRAMUNIFORM3IVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM3UIPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint, y: GLuint, z: GLuint)
PFNGLPROGRAMUNIFORM3UIVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM4DPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLPROGRAMUNIFORM4DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble)
PFNGLPROGRAMUNIFORM4FPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLPROGRAMUNIFORM4FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM4IPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLPROGRAMUNIFORM4IVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM4UIPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)
PFNGLPROGRAMUNIFORM4UIVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUSEPROGRAMSTAGESPROC :: #type proc "c" (pipeline: GLuint, stages: GLbitfield, program: GLuint)
PFNGLVALIDATEPROGRAMPIPELINEPROC :: #type proc "c" (pipeline: GLuint)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC :: #type proc "c" (program: GLuint, bufferIndex: GLuint, pname: GLenum, params: [^]GLint)
PFNGLBINDIMAGETEXTUREPROC :: #type proc "c" (unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum)
PFNGLMEMORYBARRIERPROC :: #type proc "c" (barriers: GLbitfield)
GLcharARB :: i8
GLhandleARB :: u32
PFNGLATTACHOBJECTARBPROC :: #type proc "c" (containerObj: GLhandleARB, obj: GLhandleARB)
PFNGLCOMPILESHADERARBPROC :: #type proc "c" (shaderObj: GLhandleARB)
PFNGLCREATEPROGRAMOBJECTARBPROC :: #type proc "c" () -> GLhandleARB
PFNGLCREATESHADEROBJECTARBPROC :: #type proc "c" (shaderType: GLenum) -> GLhandleARB
PFNGLDELETEOBJECTARBPROC :: #type proc "c" (obj: GLhandleARB)
PFNGLDETACHOBJECTARBPROC :: #type proc "c" (containerObj: GLhandleARB, attachedObj: GLhandleARB)
PFNGLGETACTIVEUNIFORMARBPROC :: #type proc "c" (programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLcharARB)
PFNGLGETATTACHEDOBJECTSARBPROC :: #type proc "c" (containerObj: GLhandleARB, maxCount: GLsizei, count: ^GLsizei, obj: ^GLhandleARB)
PFNGLGETHANDLEARBPROC :: #type proc "c" (pname: GLenum) -> GLhandleARB
PFNGLGETINFOLOGARBPROC :: #type proc "c" (obj: GLhandleARB, maxLength: GLsizei, length: ^GLsizei, infoLog: ^GLcharARB)
PFNGLGETOBJECTPARAMETERFVARBPROC :: #type proc "c" (obj: GLhandleARB, pname: GLenum, params: [^]GLfloat)
PFNGLGETOBJECTPARAMETERIVARBPROC :: #type proc "c" (obj: GLhandleARB, pname: GLenum, params: [^]GLint)
PFNGLGETSHADERSOURCEARBPROC :: #type proc "c" (obj: GLhandleARB, maxLength: GLsizei, length: ^GLsizei, source: ^GLcharARB)
PFNGLGETUNIFORMLOCATIONARBPROC :: #type proc "c" (programObj: GLhandleARB, name: ^GLcharARB) -> GLint
PFNGLGETUNIFORMFVARBPROC :: #type proc "c" (programObj: GLhandleARB, location: GLint, params: [^]GLfloat)
PFNGLGETUNIFORMIVARBPROC :: #type proc "c" (programObj: GLhandleARB, location: GLint, params: [^]GLint)
PFNGLLINKPROGRAMARBPROC :: #type proc "c" (programObj: GLhandleARB)
PFNGLSHADERSOURCEARBPROC :: #type proc "c" (shaderObj: GLhandleARB, count: GLsizei, string_: ^^GLcharARB, length: ^GLint)
PFNGLUNIFORM1FARBPROC :: #type proc "c" (location: GLint, v0: GLfloat)
PFNGLUNIFORM1FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM1IARBPROC :: #type proc "c" (location: GLint, v0: GLint)
PFNGLUNIFORM1IVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM2FARBPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat)
PFNGLUNIFORM2FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM2IARBPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint)
PFNGLUNIFORM2IVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM3FARBPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
PFNGLUNIFORM3FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM3IARBPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint, v2: GLint)
PFNGLUNIFORM3IVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORM4FARBPROC :: #type proc "c" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
PFNGLUNIFORM4FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLUNIFORM4IARBPROC :: #type proc "c" (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
PFNGLUNIFORM4IVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint)
PFNGLUNIFORMMATRIX2FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4FVARBPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUSEPROGRAMOBJECTARBPROC :: #type proc "c" (programObj: GLhandleARB)
PFNGLVALIDATEPROGRAMARBPROC :: #type proc "c" (programObj: GLhandleARB)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC :: #type proc "c" (program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint)
PFNGLGETACTIVESUBROUTINENAMEPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: ^GLsizei, name: ^GLchar)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: ^GLsizei, name: ^GLchar)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: [^]GLint)
PFNGLGETPROGRAMSTAGEIVPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, pname: GLenum, values: [^]GLint)
PFNGLGETSUBROUTINEINDEXPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, name: ^GLchar) -> GLuint
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, name: ^GLchar) -> GLint
PFNGLGETUNIFORMSUBROUTINEUIVPROC :: #type proc "c" (shadertype: GLenum, location: GLint, params: [^]GLuint)
PFNGLUNIFORMSUBROUTINESUIVPROC :: #type proc "c" (shadertype: GLenum, count: GLsizei, indices: [^]GLuint)
PFNGLCOMPILESHADERINCLUDEARBPROC :: #type proc "c" (shader: GLuint, count: GLsizei, path: ^^GLchar, length: ^GLint)
PFNGLDELETENAMEDSTRINGARBPROC :: #type proc "c" (namelen: GLint, name: ^GLchar)
PFNGLGETNAMEDSTRINGARBPROC :: #type proc "c" (namelen: GLint, name: ^GLchar, bufSize: GLsizei, stringlen: ^GLint, string_: ^GLchar)
PFNGLGETNAMEDSTRINGIVARBPROC :: #type proc "c" (namelen: GLint, name: ^GLchar, pname: GLenum, params: [^]GLint)
PFNGLISNAMEDSTRINGARBPROC :: #type proc "c" (namelen: GLint, name: ^GLchar) -> GLboolean
PFNGLNAMEDSTRINGARBPROC :: #type proc "c" (type: GLenum, namelen: GLint, name: ^GLchar, stringlen: GLint, string_: ^GLchar)
PFNGLBUFFERPAGECOMMITMENTARBPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr, commit: GLboolean)
PFNGLTEXPAGECOMMITMENTARBPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean)
PFNGLCLIENTWAITSYNCPROC :: #type proc "c" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum
PFNGLDELETESYNCPROC :: #type proc "c" (GLsync: GLsync)
PFNGLFENCESYNCPROC :: #type proc "c" (condition: GLenum, flags: GLbitfield) -> GLsync
PFNGLGETINTEGER64VPROC :: #type proc "c" (pname: GLenum, params: [^]GLint64)
PFNGLGETSYNCIVPROC :: #type proc "c" (GLsync: GLsync, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint)
PFNGLISSYNCPROC :: #type proc "c" (GLsync: GLsync) -> GLboolean
PFNGLWAITSYNCPROC :: #type proc "c" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64)
PFNGLPATCHPARAMETERFVPROC :: #type proc "c" (pname: GLenum, values: [^]GLfloat)
PFNGLPATCHPARAMETERIPROC :: #type proc "c" (pname: GLenum, value: GLint)
PFNGLTEXTUREBARRIERPROC :: #type proc "c" ()
PFNGLTEXBUFFERARBPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, buffer: GLuint)
PFNGLTEXBUFFERRANGEPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLTEXTUREBUFFERRANGEEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC :: #type proc "c" (target: GLenum, lod: GLint, img: rawptr)
PFNGLGETMULTISAMPLEFVPROC :: #type proc "c" (pname: GLenum, index: GLuint, val: ^GLfloat)
PFNGLSAMPLEMASKIPROC :: #type proc "c" (index: GLuint, mask: GLbitfield)
PFNGLTEXIMAGE2DMULTISAMPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXIMAGE3DMULTISAMPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXSTORAGE1DPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
PFNGLTEXSTORAGE2DPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLTEXSTORAGE3DPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTUREVIEWPROC :: #type proc "c" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint)
PFNGLGETQUERYOBJECTI64VPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint64)
PFNGLGETQUERYOBJECTUI64VPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint64)
PFNGLQUERYCOUNTERPROC :: #type proc "c" (id: GLuint, target: GLenum)
PFNGLBINDTRANSFORMFEEDBACKPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETETRANSFORMFEEDBACKSPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLDRAWTRANSFORMFEEDBACKPROC :: #type proc "c" (mode: GLenum, id: GLuint)
PFNGLGENTRANSFORMFEEDBACKSPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLISTRANSFORMFEEDBACKPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLPAUSETRANSFORMFEEDBACKPROC :: #type proc "c" ()
PFNGLRESUMETRANSFORMFEEDBACKPROC :: #type proc "c" ()
PFNGLBEGINQUERYINDEXEDPROC :: #type proc "c" (target: GLenum, index: GLuint, id: GLuint)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC :: #type proc "c" (mode: GLenum, id: GLuint, stream: GLuint)
PFNGLENDQUERYINDEXEDPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLGETQUERYINDEXEDIVPROC :: #type proc "c" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC :: #type proc "c" (mode: GLenum, id: GLuint, primcount: GLsizei)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC :: #type proc "c" (mode: GLenum, id: GLuint, stream: GLuint, primcount: GLsizei)
PFNGLLOADTRANSPOSEMATRIXDARBPROC :: #type proc "c" (m: [16]GLdouble)
PFNGLLOADTRANSPOSEMATRIXFARBPROC :: #type proc "c" (m: [16]GLfloat)
PFNGLMULTTRANSPOSEMATRIXDARBPROC :: #type proc "c" (m: [16]GLdouble)
PFNGLMULTTRANSPOSEMATRIXFARBPROC :: #type proc "c" (m: [16]GLfloat)
PFNGLBINDBUFFERBASEPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint)
PFNGLBINDBUFFERRANGEPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC :: #type proc "c" (program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformBlockName: ^GLchar)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC :: #type proc "c" (program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETACTIVEUNIFORMNAMEPROC :: #type proc "c" (program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformName: ^GLchar)
PFNGLGETACTIVEUNIFORMSIVPROC :: #type proc "c" (program: GLuint, uniformCount: GLsizei, uniformIndices: [^]GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETINTEGERI_VPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLint)
PFNGLGETUNIFORMBLOCKINDEXPROC :: #type proc "c" (program: GLuint, uniformBlockName: ^GLchar) -> GLuint
PFNGLGETUNIFORMINDICESPROC :: #type proc "c" (program: GLuint, uniformCount: GLsizei, uniformNames: ^[^]GLchar, uniformIndices: [^]GLuint)
PFNGLUNIFORMBLOCKBINDINGPROC :: #type proc "c" (program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint)
PFNGLBINDVERTEXARRAYPROC :: #type proc "c" (array: GLuint)
PFNGLDELETEVERTEXARRAYSPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLGENVERTEXARRAYSPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLISVERTEXARRAYPROC :: #type proc "c" (array: GLuint) -> GLboolean
PFNGLGETVERTEXATTRIBLDVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLVERTEXATTRIBL1DPROC :: #type proc "c" (index: GLuint, x: GLdouble)
PFNGLVERTEXATTRIBL1DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL2DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble)
PFNGLVERTEXATTRIBL2DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL3DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXATTRIBL3DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL4DPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXATTRIBL4DVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBLPOINTERPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLBINDVERTEXBUFFERPROC :: #type proc "c" (bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC :: #type proc "c" (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC :: #type proc "c" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC :: #type proc "c" (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint)
PFNGLVERTEXATTRIBBINDINGPROC :: #type proc "c" (attribindex: GLuint, bindingindex: GLuint)
PFNGLVERTEXATTRIBFORMATPROC :: #type proc "c" (attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint)
PFNGLVERTEXATTRIBIFORMATPROC :: #type proc "c" (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXATTRIBLFORMATPROC :: #type proc "c" (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint)
PFNGLVERTEXBINDINGDIVISORPROC :: #type proc "c" (bindingindex: GLuint, divisor: GLuint)
PFNGLVERTEXBLENDARBPROC :: #type proc "c" (count: GLint)
PFNGLWEIGHTPOINTERARBPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLWEIGHTBVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLbyte)
PFNGLWEIGHTDVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLdouble)
PFNGLWEIGHTFVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLfloat)
PFNGLWEIGHTIVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLint)
PFNGLWEIGHTSVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLshort)
PFNGLWEIGHTUBVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLubyte)
PFNGLWEIGHTUIVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLuint)
PFNGLWEIGHTUSVARBPROC :: #type proc "c" (size: GLint, weights: [^]GLushort)
GLintptrARB :: ptrdiff_t
GLsizeiptrARB :: ptrdiff_t
PFNGLBINDBUFFERARBPROC :: #type proc "c" (target: GLenum, buffer: GLuint)
PFNGLBUFFERDATAARBPROC :: #type proc "c" (target: GLenum, size: GLsizeiptrARB, data: rawptr, usage: GLenum)
PFNGLBUFFERSUBDATAARBPROC :: #type proc "c" (target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: rawptr)
PFNGLDELETEBUFFERSARBPROC :: #type proc "c" (n: GLsizei, buffers: [^]GLuint)
PFNGLGENBUFFERSARBPROC :: #type proc "c" (n: GLsizei, buffers: [^]GLuint)
PFNGLGETBUFFERPARAMETERIVARBPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETBUFFERPOINTERVARBPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]rawptr)
PFNGLGETBUFFERSUBDATAARBPROC :: #type proc "c" (target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: rawptr)
PFNGLISBUFFERARBPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLMAPBUFFERARBPROC :: #type proc "c" (target: GLenum, access: GLenum) -> rawptr
PFNGLUNMAPBUFFERARBPROC :: #type proc "c" (target: GLenum) -> GLboolean
PFNGLBINDPROGRAMARBPROC :: #type proc "c" (target: GLenum, program: GLuint)
PFNGLDELETEPROGRAMSARBPROC :: #type proc "c" (n: GLsizei, programs: [^]GLuint)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC :: #type proc "c" (index: GLuint)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC :: #type proc "c" (index: GLuint)
PFNGLGENPROGRAMSARBPROC :: #type proc "c" (n: GLsizei, programs: [^]GLuint)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLGETPROGRAMSTRINGARBPROC :: #type proc "c" (target: GLenum, pname: GLenum, string_: rawptr)
PFNGLGETPROGRAMIVARBPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC :: #type proc "c" (index: GLuint, pname: GLenum, pointer: ^rawptr)
PFNGLGETVERTEXATTRIBDVARBPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLGETVERTEXATTRIBFVARBPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVERTEXATTRIBIVARBPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISPROGRAMARBPROC :: #type proc "c" (program: GLuint) -> GLboolean
PFNGLPROGRAMENVPARAMETER4DARBPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLPROGRAMENVPARAMETER4DVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLPROGRAMENVPARAMETER4FARBPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLPROGRAMENVPARAMETER4FVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLPROGRAMSTRINGARBPROC :: #type proc "c" (target: GLenum, format: GLenum, len: GLsizei, string_: rawptr)
PFNGLVERTEXATTRIB1DARBPROC :: #type proc "c" (index: GLuint, x: GLdouble)
PFNGLVERTEXATTRIB1DVARBPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB1FARBPROC :: #type proc "c" (index: GLuint, x: GLfloat)
PFNGLVERTEXATTRIB1FVARBPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB1SARBPROC :: #type proc "c" (index: GLuint, x: GLshort)
PFNGLVERTEXATTRIB1SVARBPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB2DARBPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble)
PFNGLVERTEXATTRIB2DVARBPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB2FARBPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat)
PFNGLVERTEXATTRIB2FVARBPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB2SARBPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort)
PFNGLVERTEXATTRIB2SVARBPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB3DARBPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXATTRIB3DVARBPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB3FARBPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLVERTEXATTRIB3FVARBPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB3SARBPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort)
PFNGLVERTEXATTRIB3SVARBPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4NBVARBPROC :: #type proc "c" (index: GLuint, v: ^GLbyte)
PFNGLVERTEXATTRIB4NIVARBPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIB4NSVARBPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4NUBARBPROC :: #type proc "c" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte)
PFNGLVERTEXATTRIB4NUBVARBPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIB4NUIVARBPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIB4NUSVARBPROC :: #type proc "c" (index: GLuint, v: ^GLushort)
PFNGLVERTEXATTRIB4BVARBPROC :: #type proc "c" (index: GLuint, v: ^GLbyte)
PFNGLVERTEXATTRIB4DARBPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXATTRIB4DVARBPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB4FARBPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLVERTEXATTRIB4FVARBPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB4IVARBPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIB4SARBPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort)
PFNGLVERTEXATTRIB4SVARBPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4UBVARBPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIB4UIVARBPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIB4USVARBPROC :: #type proc "c" (index: GLuint, v: ^GLushort)
PFNGLVERTEXATTRIBPOINTERARBPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: rawptr)
PFNGLBINDATTRIBLOCATIONARBPROC :: #type proc "c" (programObj: GLhandleARB, index: GLuint, name: ^GLcharARB)
PFNGLGETACTIVEATTRIBARBPROC :: #type proc "c" (programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLcharARB)
PFNGLGETATTRIBLOCATIONARBPROC :: #type proc "c" (programObj: GLhandleARB, name: ^GLcharARB) -> GLint
PFNGLCOLORP3UIPROC :: #type proc "c" (type: GLenum, color: GLuint)
PFNGLCOLORP3UIVPROC :: #type proc "c" (type: GLenum, color: ^GLuint)
PFNGLCOLORP4UIPROC :: #type proc "c" (type: GLenum, color: GLuint)
PFNGLCOLORP4UIVPROC :: #type proc "c" (type: GLenum, color: ^GLuint)
PFNGLMULTITEXCOORDP1UIPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: GLuint)
PFNGLMULTITEXCOORDP1UIVPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: [^]GLuint)
PFNGLMULTITEXCOORDP2UIPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: GLuint)
PFNGLMULTITEXCOORDP2UIVPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: [^]GLuint)
PFNGLMULTITEXCOORDP3UIPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: GLuint)
PFNGLMULTITEXCOORDP3UIVPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: [^]GLuint)
PFNGLMULTITEXCOORDP4UIPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: GLuint)
PFNGLMULTITEXCOORDP4UIVPROC :: #type proc "c" (texture: GLenum, type: GLenum, coords: [^]GLuint)
PFNGLNORMALP3UIPROC :: #type proc "c" (type: GLenum, coords: GLuint)
PFNGLNORMALP3UIVPROC :: #type proc "c" (type: GLenum, coords: [^]GLuint)
PFNGLSECONDARYCOLORP3UIPROC :: #type proc "c" (type: GLenum, color: GLuint)
PFNGLSECONDARYCOLORP3UIVPROC :: #type proc "c" (type: GLenum, color: ^GLuint)
PFNGLTEXCOORDP1UIPROC :: #type proc "c" (type: GLenum, coords: GLuint)
PFNGLTEXCOORDP1UIVPROC :: #type proc "c" (type: GLenum, coords: [^]GLuint)
PFNGLTEXCOORDP2UIPROC :: #type proc "c" (type: GLenum, coords: GLuint)
PFNGLTEXCOORDP2UIVPROC :: #type proc "c" (type: GLenum, coords: [^]GLuint)
PFNGLTEXCOORDP3UIPROC :: #type proc "c" (type: GLenum, coords: GLuint)
PFNGLTEXCOORDP3UIVPROC :: #type proc "c" (type: GLenum, coords: [^]GLuint)
PFNGLTEXCOORDP4UIPROC :: #type proc "c" (type: GLenum, coords: GLuint)
PFNGLTEXCOORDP4UIVPROC :: #type proc "c" (type: GLenum, coords: [^]GLuint)
PFNGLVERTEXATTRIBP1UIPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)
PFNGLVERTEXATTRIBP1UIVPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)
PFNGLVERTEXATTRIBP2UIPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)
PFNGLVERTEXATTRIBP2UIVPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)
PFNGLVERTEXATTRIBP3UIPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)
PFNGLVERTEXATTRIBP3UIVPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)
PFNGLVERTEXATTRIBP4UIPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)
PFNGLVERTEXATTRIBP4UIVPROC :: #type proc "c" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)
PFNGLVERTEXP2UIPROC :: #type proc "c" (type: GLenum, value: GLuint)
PFNGLVERTEXP2UIVPROC :: #type proc "c" (type: GLenum, value: ^GLuint)
PFNGLVERTEXP3UIPROC :: #type proc "c" (type: GLenum, value: GLuint)
PFNGLVERTEXP3UIVPROC :: #type proc "c" (type: GLenum, value: ^GLuint)
PFNGLVERTEXP4UIPROC :: #type proc "c" (type: GLenum, value: GLuint)
PFNGLVERTEXP4UIVPROC :: #type proc "c" (type: GLenum, value: ^GLuint)
PFNGLDEPTHRANGEARRAYVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLclampd)
PFNGLDEPTHRANGEINDEXEDPROC :: #type proc "c" (index: GLuint, n: GLclampd, f: GLclampd)
PFNGLGETDOUBLEI_VPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLdouble)
PFNGLGETFLOATI_VPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLfloat)
PFNGLSCISSORARRAYVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLint)
PFNGLSCISSORINDEXEDPROC :: #type proc "c" (index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei)
PFNGLSCISSORINDEXEDVPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVIEWPORTARRAYVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLVIEWPORTINDEXEDFPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat)
PFNGLVIEWPORTINDEXEDFVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLWINDOWPOS2DARBPROC :: #type proc "c" (x: GLdouble, y: GLdouble)
PFNGLWINDOWPOS2DVARBPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS2FARBPROC :: #type proc "c" (x: GLfloat, y: GLfloat)
PFNGLWINDOWPOS2FVARBPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS2IARBPROC :: #type proc "c" (x: GLint, y: GLint)
PFNGLWINDOWPOS2IVARBPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS2SARBPROC :: #type proc "c" (x: GLshort, y: GLshort)
PFNGLWINDOWPOS2SVARBPROC :: #type proc "c" (p: ^GLshort)
PFNGLWINDOWPOS3DARBPROC :: #type proc "c" (x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLWINDOWPOS3DVARBPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS3FARBPROC :: #type proc "c" (x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLWINDOWPOS3FVARBPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS3IARBPROC :: #type proc "c" (x: GLint, y: GLint, z: GLint)
PFNGLWINDOWPOS3IVARBPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS3SARBPROC :: #type proc "c" (x: GLshort, y: GLshort, z: GLshort)
PFNGLWINDOWPOS3SVARBPROC :: #type proc "c" (p: ^GLshort)
PFNGLMAXACTIVESHADERCORESARMPROC :: #type proc "c" (count: GLuint)
PFNGLDRAWBUFFERSATIPROC :: #type proc "c" (n: GLsizei, bufs: [^]GLenum)
PFNGLDRAWELEMENTARRAYATIPROC :: #type proc "c" (mode: GLenum, count: GLsizei)
PFNGLDRAWRANGEELEMENTARRAYATIPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei)
PFNGLELEMENTPOINTERATIPROC :: #type proc "c" (type: GLenum, pointer: rawptr)
PFNGLGETTEXBUMPPARAMETERFVATIPROC :: #type proc "c" (pname: GLenum, param: ^GLfloat)
PFNGLGETTEXBUMPPARAMETERIVATIPROC :: #type proc "c" (pname: GLenum, param: ^GLint)
PFNGLTEXBUMPPARAMETERFVATIPROC :: #type proc "c" (pname: GLenum, param: ^GLfloat)
PFNGLTEXBUMPPARAMETERIVATIPROC :: #type proc "c" (pname: GLenum, param: ^GLint)
PFNGLALPHAFRAGMENTOP1ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint)
PFNGLALPHAFRAGMENTOP2ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint)
PFNGLALPHAFRAGMENTOP3ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint)
PFNGLBEGINFRAGMENTSHADERATIPROC :: #type proc "c" ()
PFNGLBINDFRAGMENTSHADERATIPROC :: #type proc "c" (id: GLuint)
PFNGLCOLORFRAGMENTOP1ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint)
PFNGLCOLORFRAGMENTOP2ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint)
PFNGLCOLORFRAGMENTOP3ATIPROC :: #type proc "c" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint)
PFNGLDELETEFRAGMENTSHADERATIPROC :: #type proc "c" (id: GLuint)
PFNGLENDFRAGMENTSHADERATIPROC :: #type proc "c" ()
PFNGLGENFRAGMENTSHADERSATIPROC :: #type proc "c" (range: GLuint) -> GLuint
PFNGLPASSTEXCOORDATIPROC :: #type proc "c" (dst: GLuint, coord: GLuint, swizzle: GLenum)
PFNGLSAMPLEMAPATIPROC :: #type proc "c" (dst: GLuint, interp: GLuint, swizzle: GLenum)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC :: #type proc "c" (dst: GLuint, value: ^GLfloat)
PFNGLMAPOBJECTBUFFERATIPROC :: #type proc "c" (buffer: GLuint) -> rawptr
PFNGLUNMAPOBJECTBUFFERATIPROC :: #type proc "c" (buffer: GLuint)
PFNGLPNTRIANGLESFATIPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLPNTRIANGLESIATIPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLSTENCILFUNCSEPARATEATIPROC :: #type proc "c" (frontfunc: GLenum, backfunc: GLenum, ref: GLint, mask: GLuint)
PFNGLSTENCILOPSEPARATEATIPROC :: #type proc "c" (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum)
PFNGLARRAYOBJECTATIPROC :: #type proc "c" (array: GLenum, size: GLint, type: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint)
PFNGLFREEOBJECTBUFFERATIPROC :: #type proc "c" (buffer: GLuint)
PFNGLGETARRAYOBJECTFVATIPROC :: #type proc "c" (array: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETARRAYOBJECTIVATIPROC :: #type proc "c" (array: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETOBJECTBUFFERFVATIPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETOBJECTBUFFERIVATIPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISOBJECTBUFFERATIPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLNEWOBJECTBUFFERATIPROC :: #type proc "c" (size: GLsizei, pointer: rawptr, usage: GLenum) -> GLuint
PFNGLUPDATEOBJECTBUFFERATIPROC :: #type proc "c" (buffer: GLuint, offset: GLuint, size: GLsizei, pointer: rawptr, preserve: GLenum)
PFNGLVARIANTARRAYOBJECTATIPROC :: #type proc "c" (id: GLuint, type: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, buffer: GLuint, offset: GLuint)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC :: #type proc "c" (stream: GLenum)
PFNGLNORMALSTREAM3BATIPROC :: #type proc "c" (stream: GLenum, x: GLbyte, y: GLbyte, z: GLbyte)
PFNGLNORMALSTREAM3BVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLbyte)
PFNGLNORMALSTREAM3DATIPROC :: #type proc "c" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLNORMALSTREAM3DVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLdouble)
PFNGLNORMALSTREAM3FATIPROC :: #type proc "c" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLNORMALSTREAM3FVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLfloat)
PFNGLNORMALSTREAM3IATIPROC :: #type proc "c" (stream: GLenum, x: GLint, y: GLint, z: GLint)
PFNGLNORMALSTREAM3IVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLint)
PFNGLNORMALSTREAM3SATIPROC :: #type proc "c" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort)
PFNGLNORMALSTREAM3SVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLshort)
PFNGLVERTEXBLENDENVFATIPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLVERTEXBLENDENVIATIPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLVERTEXSTREAM1DATIPROC :: #type proc "c" (stream: GLenum, x: GLdouble)
PFNGLVERTEXSTREAM1DVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLdouble)
PFNGLVERTEXSTREAM1FATIPROC :: #type proc "c" (stream: GLenum, x: GLfloat)
PFNGLVERTEXSTREAM1FVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLfloat)
PFNGLVERTEXSTREAM1IATIPROC :: #type proc "c" (stream: GLenum, x: GLint)
PFNGLVERTEXSTREAM1IVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLint)
PFNGLVERTEXSTREAM1SATIPROC :: #type proc "c" (stream: GLenum, x: GLshort)
PFNGLVERTEXSTREAM1SVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLshort)
PFNGLVERTEXSTREAM2DATIPROC :: #type proc "c" (stream: GLenum, x: GLdouble, y: GLdouble)
PFNGLVERTEXSTREAM2DVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLdouble)
PFNGLVERTEXSTREAM2FATIPROC :: #type proc "c" (stream: GLenum, x: GLfloat, y: GLfloat)
PFNGLVERTEXSTREAM2FVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLfloat)
PFNGLVERTEXSTREAM2IATIPROC :: #type proc "c" (stream: GLenum, x: GLint, y: GLint)
PFNGLVERTEXSTREAM2IVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLint)
PFNGLVERTEXSTREAM2SATIPROC :: #type proc "c" (stream: GLenum, x: GLshort, y: GLshort)
PFNGLVERTEXSTREAM2SVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLshort)
PFNGLVERTEXSTREAM3DATIPROC :: #type proc "c" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXSTREAM3DVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLdouble)
PFNGLVERTEXSTREAM3FATIPROC :: #type proc "c" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLVERTEXSTREAM3FVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLfloat)
PFNGLVERTEXSTREAM3IATIPROC :: #type proc "c" (stream: GLenum, x: GLint, y: GLint, z: GLint)
PFNGLVERTEXSTREAM3IVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLint)
PFNGLVERTEXSTREAM3SATIPROC :: #type proc "c" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort)
PFNGLVERTEXSTREAM3SVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLshort)
PFNGLVERTEXSTREAM4DATIPROC :: #type proc "c" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXSTREAM4DVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLdouble)
PFNGLVERTEXSTREAM4FATIPROC :: #type proc "c" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLVERTEXSTREAM4FVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLfloat)
PFNGLVERTEXSTREAM4IATIPROC :: #type proc "c" (stream: GLenum, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLVERTEXSTREAM4IVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLint)
PFNGLVERTEXSTREAM4SATIPROC :: #type proc "c" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort, w: GLshort)
PFNGLVERTEXSTREAM4SVATIPROC :: #type proc "c" (stream: GLenum, coords: [^]GLshort)
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC :: #type proc "c" (target: GLenum, image: GLeglImageOES, attrib_list: ^GLint)
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC :: #type proc "c" (texture: GLuint, image: GLeglImageOES, attrib_list: ^GLint)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, baseinstance: GLuint)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC :: #type proc "c" (program: GLuint, location: GLint) -> GLint
PFNGLGETUNIFORMOFFSETEXTPROC :: #type proc "c" (program: GLuint, location: GLint) -> GLintptr
PFNGLUNIFORMBUFFEREXTPROC :: #type proc "c" (program: GLuint, location: GLint, buffer: GLuint)
PFNGLBLENDCOLOREXTPROC :: #type proc "c" (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf)
PFNGLBLENDEQUATIONSEPARATEEXTPROC :: #type proc "c" (modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC :: #type proc "c" (program: GLuint, colorNumber: GLuint, index: GLuint, name: ^GLchar)
PFNGLGETFRAGDATAINDEXEXTPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint
PFNGLBLENDFUNCSEPARATEEXTPROC :: #type proc "c" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)
PFNGLBLENDEQUATIONEXTPROC :: #type proc "c" (mode: GLenum)
PFNGLBUFFERSTORAGEEXTPROC :: #type proc "c" (target: GLenum, size: GLsizeiptr, data: rawptr, flags: GLbitfield)
PFNGLNAMEDBUFFERSTORAGEEXTPROC :: #type proc "c" (buffer: GLuint, size: GLsizeiptr, data: rawptr, flags: GLbitfield)
PFNGLCLEARTEXIMAGEEXTPROC :: #type proc "c" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLEARTEXSUBIMAGEEXTPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, data: rawptr)
PFNGLCLIPCONTROLEXTPROC :: #type proc "c" (origin: GLenum, depth: GLenum)
PFNGLCOLORSUBTABLEEXTPROC :: #type proc "c" (target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type: GLenum, data: rawptr)
PFNGLCOPYCOLORSUBTABLEEXTPROC :: #type proc "c" (target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei)
PFNGLLOCKARRAYSEXTPROC :: #type proc "c" (first: GLint, count: GLsizei)
PFNGLUNLOCKARRAYSEXTPROC :: #type proc "c" ()
PFNGLCONVOLUTIONFILTER1DEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, image: rawptr)
PFNGLCONVOLUTIONFILTER2DEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, image: rawptr)
PFNGLCONVOLUTIONPARAMETERFEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfloat)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLCONVOLUTIONPARAMETERIEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLGETCONVOLUTIONFILTEREXTPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, image: rawptr)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETSEPARABLEFILTEREXTPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, row: rawptr, column: rawptr, span: rawptr)
PFNGLSEPARABLEFILTER2DEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, row: rawptr, column: rawptr)
PFNGLBINORMALPOINTEREXTPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLTANGENTPOINTEREXTPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLCOPYIMAGESUBDATAEXTPROC :: #type proc "c" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei)
PFNGLCOPYTEXIMAGE1DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
PFNGLCOPYTEXIMAGE2DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCULLPARAMETERDVEXTPROC :: #type proc "c" (pname: GLenum, params: [^]GLdouble)
PFNGLCULLPARAMETERFVEXTPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLGETOBJECTLABELEXTPROC :: #type proc "c" (type: GLenum, object: GLuint, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar)
PFNGLLABELOBJECTEXTPROC :: #type proc "c" (type: GLenum, object: GLuint, length: GLsizei, label: ^GLchar)
PFNGLINSERTEVENTMARKEREXTPROC :: #type proc "c" (length: GLsizei, marker: ^GLchar)
PFNGLPOPGROUPMARKEREXTPROC :: #type proc "c" ()
PFNGLPUSHGROUPMARKEREXTPROC :: #type proc "c" (length: GLsizei, marker: ^GLchar)
PFNGLDEPTHBOUNDSEXTPROC :: #type proc "c" (zmin: GLclampd, zmax: GLclampd)
PFNGLBINDMULTITEXTUREEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, texture: GLuint)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC :: #type proc "c" (framebuffer: GLuint, target: GLenum) -> GLenum
PFNGLCLIENTATTRIBDEFAULTEXTPROC :: #type proc "c" (mask: GLbitfield)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC :: #type proc "c" (array: GLenum, index: GLuint)
PFNGLDISABLECLIENTSTATEIEXTPROC :: #type proc "c" (array: GLenum, index: GLuint)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC :: #type proc "c" (vaobj: GLuint, index: GLuint)
PFNGLDISABLEVERTEXARRAYEXTPROC :: #type proc "c" (vaobj: GLuint, array: GLenum)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC :: #type proc "c" (array: GLenum, index: GLuint)
PFNGLENABLECLIENTSTATEIEXTPROC :: #type proc "c" (array: GLenum, index: GLuint)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC :: #type proc "c" (vaobj: GLuint, index: GLuint)
PFNGLENABLEVERTEXARRAYEXTPROC :: #type proc "c" (vaobj: GLuint, array: GLenum)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC :: #type proc "c" (framebuffer: GLuint, mode: GLenum)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC :: #type proc "c" (framebuffer: GLuint, n: GLsizei, bufs: [^]GLenum)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC :: #type proc "c" (framebuffer: GLuint, mode: GLenum)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum)
PFNGLGENERATETEXTUREMIPMAPEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, img: rawptr)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, img: rawptr)
PFNGLGETDOUBLEINDEXEDVEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLGETDOUBLEI_VEXTPROC :: #type proc "c" (pname: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLGETFLOATINDEXEDVEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLGETFLOATI_VEXTPROC :: #type proc "c" (pname: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC :: #type proc "c" (framebuffer: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETMULTITEXENVFVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMULTITEXENVIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMULTITEXGENDVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLdouble)
PFNGLGETMULTITEXGENFVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMULTITEXGENIVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMULTITEXIMAGEEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: [^]GLfloat)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: [^]GLint)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLGETMULTITEXPARAMETERFVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMULTITEXPARAMETERIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]rawptr)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLint)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLuint)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, pname: GLenum, string_: rawptr)
PFNGLGETNAMEDPROGRAMIVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC :: #type proc "c" (renderbuffer: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETPOINTERINDEXEDVEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]rawptr)
PFNGLGETPOINTERI_VEXTPROC :: #type proc "c" (pname: GLenum, index: GLuint, params: [^]rawptr)
PFNGLGETTEXTUREIMAGEEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: [^]GLfloat)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: [^]GLint)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLGETTEXTUREPARAMETERFVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETTEXTUREPARAMETERIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC :: #type proc "c" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC :: #type proc "c" (vaobj: GLuint, pname: GLenum, param: ^GLint)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC :: #type proc "c" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^rawptr)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC :: #type proc "c" (vaobj: GLuint, pname: GLenum, param: ^rawptr)
PFNGLMAPNAMEDBUFFEREXTPROC :: #type proc "c" (buffer: GLuint, access: GLenum) -> rawptr
PFNGLMAPNAMEDBUFFERRANGEEXTPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr
PFNGLMATRIXFRUSTUMEXTPROC :: #type proc "c" (matrixMode: GLenum, l: GLdouble, r: GLdouble, b: GLdouble, t: GLdouble, n: GLdouble, f: GLdouble)
PFNGLMATRIXLOADIDENTITYEXTPROC :: #type proc "c" (matrixMode: GLenum)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLdouble)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXLOADDEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLdouble)
PFNGLMATRIXLOADFEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLdouble)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXMULTDEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLdouble)
PFNGLMATRIXMULTFEXTPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXORTHOEXTPROC :: #type proc "c" (matrixMode: GLenum, l: GLdouble, r: GLdouble, b: GLdouble, t: GLdouble, n: GLdouble, f: GLdouble)
PFNGLMATRIXPOPEXTPROC :: #type proc "c" (matrixMode: GLenum)
PFNGLMATRIXPUSHEXTPROC :: #type proc "c" (matrixMode: GLenum)
PFNGLMATRIXROTATEDEXTPROC :: #type proc "c" (matrixMode: GLenum, angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLMATRIXROTATEFEXTPROC :: #type proc "c" (matrixMode: GLenum, angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLMATRIXSCALEDEXTPROC :: #type proc "c" (matrixMode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLMATRIXSCALEFEXTPROC :: #type proc "c" (matrixMode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLMATRIXTRANSLATEDEXTPROC :: #type proc "c" (matrixMode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLMATRIXTRANSLATEFEXTPROC :: #type proc "c" (matrixMode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLMULTITEXBUFFEREXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, internalformat: GLenum, buffer: GLuint)
PFNGLMULTITEXCOORDPOINTEREXTPROC :: #type proc "c" (texunit: GLenum, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLMULTITEXENVFEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat)
PFNGLMULTITEXENVFVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLMULTITEXENVIEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLint)
PFNGLMULTITEXENVIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLMULTITEXGENDEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLdouble)
PFNGLMULTITEXGENDVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLdouble)
PFNGLMULTITEXGENFEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLfloat)
PFNGLMULTITEXGENFVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLMULTITEXGENIEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLint)
PFNGLMULTITEXGENIVEXTPROC :: #type proc "c" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLint)
PFNGLMULTITEXIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMULTITEXIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMULTITEXIMAGE3DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMULTITEXPARAMETERIIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLMULTITEXPARAMETERIUIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLMULTITEXPARAMETERFEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat)
PFNGLMULTITEXPARAMETERFVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: ^GLfloat)
PFNGLMULTITEXPARAMETERIEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLint)
PFNGLMULTITEXPARAMETERIVEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, pname: GLenum, param: ^GLint)
PFNGLMULTITEXRENDERBUFFEREXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, renderbuffer: GLuint)
PFNGLMULTITEXSUBIMAGE1DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMULTITEXSUBIMAGE2DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMULTITEXSUBIMAGE3DEXTPROC :: #type proc "c" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLNAMEDBUFFERDATAEXTPROC :: #type proc "c" (buffer: GLuint, size: GLsizeiptr, data: rawptr, usage: GLenum)
PFNGLNAMEDBUFFERSUBDATAEXTPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC :: #type proc "c" (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLint)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLuint)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint)
PFNGLNAMEDPROGRAMSTRINGEXTPROC :: #type proc "c" (program: GLuint, target: GLenum, format: GLenum, len: GLsizei, string_: rawptr)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC :: #type proc "c" (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC :: #type proc "c" (renderbuffer: GLuint, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC :: #type proc "c" (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLPROGRAMUNIFORM1FEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLfloat)
PFNGLPROGRAMUNIFORM1FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM1IEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLint)
PFNGLPROGRAMUNIFORM1IVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM1UIEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLuint)
PFNGLPROGRAMUNIFORM1UIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM2FEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat)
PFNGLPROGRAMUNIFORM2FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM2IEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLint, v1: GLint)
PFNGLPROGRAMUNIFORM2IVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM2UIEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint)
PFNGLPROGRAMUNIFORM2UIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM3FEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
PFNGLPROGRAMUNIFORM3FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM3IEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint)
PFNGLPROGRAMUNIFORM3IVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM3UIEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
PFNGLPROGRAMUNIFORM3UIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORM4FEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
PFNGLPROGRAMUNIFORM4FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat)
PFNGLPROGRAMUNIFORM4IEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
PFNGLPROGRAMUNIFORM4IVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint)
PFNGLPROGRAMUNIFORM4UIEXTPROC :: #type proc "c" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
PFNGLPROGRAMUNIFORM4UIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC :: #type proc "c" (mask: GLbitfield)
PFNGLTEXTUREBUFFEREXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint)
PFNGLTEXTUREIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTUREIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTUREIMAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTUREPARAMETERIIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLTEXTUREPARAMETERIUIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLTEXTUREPARAMETERFEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, param: GLfloat)
PFNGLTEXTUREPARAMETERFVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, param: ^GLfloat)
PFNGLTEXTUREPARAMETERIEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, param: GLint)
PFNGLTEXTUREPARAMETERIVEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, pname: GLenum, param: ^GLint)
PFNGLTEXTURERENDERBUFFEREXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, renderbuffer: GLuint)
PFNGLTEXTURESUBIMAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTURESUBIMAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTURESUBIMAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLUNMAPNAMEDBUFFEREXTPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, texunit: GLenum, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC :: #type proc "c" (vaobj: GLuint, index: GLuint, divisor: GLuint)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLDISCARDFRAMEBUFFEREXTPROC :: #type proc "c" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum)
PFNGLBEGINQUERYEXTPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETEQUERIESEXTPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLENDQUERYEXTPROC :: #type proc "c" (target: GLenum)
PFNGLGENQUERIESEXTPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETINTEGER64VEXTPROC :: #type proc "c" (pname: GLenum, data: ^GLint64)
PFNGLGETQUERYOBJECTIVEXTPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETQUERYOBJECTUIVEXTPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETQUERYIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISQUERYEXTPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLQUERYCOUNTEREXTPROC :: #type proc "c" (id: GLuint, target: GLenum)
PFNGLDRAWBUFFERSEXTPROC :: #type proc "c" (n: GLsizei, bufs: [^]GLenum)
PFNGLCOLORMASKINDEXEDEXTPROC :: #type proc "c" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean)
PFNGLDISABLEINDEXEDEXTPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLENABLEINDEXEDEXTPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLGETBOOLEANINDEXEDVEXTPROC :: #type proc "c" (value: GLenum, index: GLuint, data: ^GLboolean)
PFNGLGETINTEGERINDEXEDVEXTPROC :: #type proc "c" (value: GLenum, index: GLuint, data: ^GLint)
PFNGLISENABLEDINDEXEDEXTPROC :: #type proc "c" (target: GLenum, index: GLuint) -> GLboolean
PFNGLBLENDEQUATIONSEPARATEIEXTPROC :: #type proc "c" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDEQUATIONIEXTPROC :: #type proc "c" (buf: GLuint, mode: GLenum)
PFNGLBLENDFUNCSEPARATEIEXTPROC :: #type proc "c" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
PFNGLBLENDFUNCIEXTPROC :: #type proc "c" (buf: GLuint, src: GLenum, dst: GLenum)
PFNGLCOLORMASKIEXTPROC :: #type proc "c" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean)
PFNGLDISABLEIEXTPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLENABLEIEXTPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLISENABLEDIEXTPROC :: #type proc "c" (target: GLenum, index: GLuint) -> GLboolean
PFNGLDRAWELEMENTSBASEVERTEXEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint)
PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint)
PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC :: #type proc "c" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei, basevertex: ^GLint)
PFNGLDRAWARRAYSINSTANCEDEXTPROC :: #type proc "c" (mode: GLenum, start: GLint, count: GLsizei, primcount: GLsizei)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei)
PFNGLDRAWRANGEELEMENTSEXTPROC :: #type proc "c" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr)
PFNGLDRAWTRANSFORMFEEDBACKEXTPROC :: #type proc "c" (mode: GLenum, id: GLuint)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC :: #type proc "c" (mode: GLenum, id: GLuint, instancecount: GLsizei)
GLeglClientBufferEXT :: rawptr
PFNGLBUFFERSTORAGEEXTERNALEXTPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr, clientBuffer: GLeglClientBufferEXT, flags: GLbitfield)
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, clientBuffer: GLeglClientBufferEXT, flags: GLbitfield)
PFNGLFOGCOORDPOINTEREXTPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLFOGCOORDDEXTPROC :: #type proc "c" (coord: GLdouble)
PFNGLFOGCOORDDVEXTPROC :: #type proc "c" (coord: ^GLdouble)
PFNGLFOGCOORDFEXTPROC :: #type proc "c" (coord: GLfloat)
PFNGLFOGCOORDFVEXTPROC :: #type proc "c" (coord: ^GLfloat)
PFNGLFRAGMENTCOLORMATERIALEXTPROC :: #type proc "c" (face: GLenum, mode: GLenum)
PFNGLFRAGMENTLIGHTMODELFEXTPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLFRAGMENTLIGHTMODELFVEXTPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTLIGHTMODELIEXTPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLFRAGMENTLIGHTMODELIVEXTPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLFRAGMENTLIGHTFEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, param: GLfloat)
PFNGLFRAGMENTLIGHTFVEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTLIGHTIEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, param: GLint)
PFNGLFRAGMENTLIGHTIVEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLint)
PFNGLFRAGMENTMATERIALFEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, param: GLfloat)
PFNGLFRAGMENTMATERIALFVEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTMATERIALIEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, param: GLint)
PFNGLFRAGMENTMATERIALIVEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETFRAGMENTLIGHTFVEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETFRAGMENTLIGHTIVEXTPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETFRAGMENTMATERIALFVEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETFRAGMENTMATERIALIVEXTPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLint)
PFNGLLIGHTENVIEXTPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLBLITFRAMEBUFFEREXTPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLBLITFRAMEBUFFERLAYEREXTPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, srcLayer: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, dstLayer: GLint, mask: GLbitfield, filter: GLenum)
PFNGLBLITFRAMEBUFFERLAYERSEXTPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLBINDFRAMEBUFFEREXTPROC :: #type proc "c" (target: GLenum, framebuffer: GLuint)
PFNGLBINDRENDERBUFFEREXTPROC :: #type proc "c" (target: GLenum, renderbuffer: GLuint)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC :: #type proc "c" (target: GLenum) -> GLenum
PFNGLDELETEFRAMEBUFFERSEXTPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLDELETERENDERBUFFERSEXTPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)
PFNGLGENFRAMEBUFFERSEXTPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLGENRENDERBUFFERSEXTPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLGENERATEMIPMAPEXTPROC :: #type proc "c" (target: GLenum)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISFRAMEBUFFEREXTPROC :: #type proc "c" (framebuffer: GLuint) -> GLboolean
PFNGLISRENDERBUFFEREXTPROC :: #type proc "c" (renderbuffer: GLuint) -> GLboolean
PFNGLRENDERBUFFERSTORAGEEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERTEXTUREEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum)
PFNGLPROGRAMPARAMETERIEXTPROC :: #type proc "c" (program: GLuint, pname: GLenum, value: GLint)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat)
PFNGLBINDFRAGDATALOCATIONEXTPROC :: #type proc "c" (program: GLuint, color: GLuint, name: ^GLchar)
PFNGLGETFRAGDATALOCATIONEXTPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLGETUNIFORMUIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLuint)
PFNGLGETVERTEXATTRIBIIVEXTPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVERTEXATTRIBIUIVEXTPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLUNIFORM1UIEXTPROC :: #type proc "c" (location: GLint, v0: GLuint)
PFNGLUNIFORM1UIVEXTPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM2UIEXTPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint)
PFNGLUNIFORM2UIVEXTPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM3UIEXTPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
PFNGLUNIFORM3UIVEXTPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLUNIFORM4UIEXTPROC :: #type proc "c" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
PFNGLUNIFORM4UIVEXTPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint)
PFNGLVERTEXATTRIBI1IEXTPROC :: #type proc "c" (index: GLuint, x: GLint)
PFNGLVERTEXATTRIBI1IVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIBI1UIEXTPROC :: #type proc "c" (index: GLuint, x: GLuint)
PFNGLVERTEXATTRIBI1UIVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIBI2IEXTPROC :: #type proc "c" (index: GLuint, x: GLint, y: GLint)
PFNGLVERTEXATTRIBI2IVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIBI2UIEXTPROC :: #type proc "c" (index: GLuint, x: GLuint, y: GLuint)
PFNGLVERTEXATTRIBI2UIVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIBI3IEXTPROC :: #type proc "c" (index: GLuint, x: GLint, y: GLint, z: GLint)
PFNGLVERTEXATTRIBI3IVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIBI3UIEXTPROC :: #type proc "c" (index: GLuint, x: GLuint, y: GLuint, z: GLuint)
PFNGLVERTEXATTRIBI3UIVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIBI4BVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLbyte)
PFNGLVERTEXATTRIBI4IEXTPROC :: #type proc "c" (index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLVERTEXATTRIBI4IVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVERTEXATTRIBI4SVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIBI4UBVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIBI4UIEXTPROC :: #type proc "c" (index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)
PFNGLVERTEXATTRIBI4UIVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLuint)
PFNGLVERTEXATTRIBI4USVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLushort)
PFNGLVERTEXATTRIBIPOINTEREXTPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLGETHISTOGRAMEXTPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMINMAXEXTPROC :: #type proc "c" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr)
PFNGLGETMINMAXPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMINMAXPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLHISTOGRAMEXTPROC :: #type proc "c" (target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean)
PFNGLMINMAXEXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, sink: GLboolean)
PFNGLRESETHISTOGRAMEXTPROC :: #type proc "c" (target: GLenum)
PFNGLRESETMINMAXEXTPROC :: #type proc "c" (target: GLenum)
PFNGLINDEXFUNCEXTPROC :: #type proc "c" (func: GLenum, ref: GLfloat)
PFNGLINDEXMATERIALEXTPROC :: #type proc "c" (face: GLenum, mode: GLenum)
PFNGLVERTEXATTRIBDIVISOREXTPROC :: #type proc "c" (index: GLuint, divisor: GLuint)
PFNGLAPPLYTEXTUREEXTPROC :: #type proc "c" (mode: GLenum)
PFNGLTEXTURELIGHTEXTPROC :: #type proc "c" (pname: GLenum)
PFNGLTEXTUREMATERIALEXTPROC :: #type proc "c" (face: GLenum, mode: GLenum)
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC :: #type proc "c" (target: GLenum, offset: GLintptr, length: GLsizeiptr)
PFNGLMAPBUFFERRANGEEXTPROC :: #type proc "c" (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr
PFNGLBUFFERSTORAGEMEMEXTPROC :: #type proc "c" (target: GLenum, size: GLsizeiptr, memory: GLuint, offset: GLuint64)
PFNGLCREATEMEMORYOBJECTSEXTPROC :: #type proc "c" (n: GLsizei, memoryObjects: [^]GLuint)
PFNGLDELETEMEMORYOBJECTSEXTPROC :: #type proc "c" (n: GLsizei, memoryObjects: [^]GLuint)
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC :: #type proc "c" (memoryObject: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETUNSIGNEDBYTEI_VEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLubyte)
PFNGLGETUNSIGNEDBYTEVEXTPROC :: #type proc "c" (pname: GLenum, data: ^GLubyte)
PFNGLISMEMORYOBJECTEXTPROC :: #type proc "c" (memoryObject: GLuint) -> GLboolean
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC :: #type proc "c" (memoryObject: GLuint, pname: GLenum, params: [^]GLint)
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC :: #type proc "c" (buffer: GLuint, size: GLsizeiptr, memory: GLuint, offset: GLuint64)
PFNGLTEXSTORAGEMEM1DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXSTORAGEMEM2DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64)
PFNGLTEXSTORAGEMEM3DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64)
PFNGLTEXTURESTORAGEMEM1DEXTPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXTURESTORAGEMEM2DEXTPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC :: #type proc "c" (texture: GLuint, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64)
PFNGLTEXTURESTORAGEMEM3DEXTPROC :: #type proc "c" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64)
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC :: #type proc "c" (texture: GLuint, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64)
PFNGLIMPORTMEMORYFDEXTPROC :: #type proc "c" (memory: GLuint, size: GLuint64, handleType: GLenum, fd: GLint)
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC :: #type proc "c" (memory: GLuint, size: GLuint64, handleType: GLenum, handle: rawptr)
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC :: #type proc "c" (memory: GLuint, size: GLuint64, handleType: GLenum, name: rawptr)
PFNGLMULTIDRAWARRAYSEXTPROC :: #type proc "c" (mode: GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei)
PFNGLMULTIDRAWELEMENTSEXTPROC :: #type proc "c" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, primcount: GLsizei)
PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, drawcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLsizei, stride: GLsizei)
PFNGLSAMPLEMASKEXTPROC :: #type proc "c" (value: GLclampf, invert: GLboolean)
PFNGLSAMPLEPATTERNEXTPROC :: #type proc "c" (pattern: GLenum)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei)
PFNGLDRAWBUFFERSINDEXEDEXTPROC :: #type proc "c" (n: GLint, location: ^GLenum, indices: [^]GLint)
PFNGLGETINTEGERI_VEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLint)
PFNGLREADBUFFERINDEXEDEXTPROC :: #type proc "c" (src: GLenum, index: GLint)
PFNGLCOLORTABLEEXTPROC :: #type proc "c" (target: GLenum, internalFormat: GLenum, width: GLsizei, format: GLenum, type: GLenum, data: rawptr)
PFNGLGETCOLORTABLEEXTPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, data: rawptr)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfloat)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLPOINTPARAMETERFEXTPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLPOINTPARAMETERFVEXTPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLPOLYGONOFFSETEXTPROC :: #type proc "c" (factor: GLfloat, bias: GLfloat)
PFNGLPOLYGONOFFSETCLAMPEXTPROC :: #type proc "c" (factor: GLfloat, units: GLfloat, clamp: GLfloat)
PFNGLPRIMITIVEBOUNDINGBOXEXTPROC :: #type proc "c" (minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat)
PFNGLPROVOKINGVERTEXEXTPROC :: #type proc "c" (mode: GLenum)
PFNGLCOVERAGEMODULATIONNVPROC :: #type proc "c" (components: GLenum)
PFNGLCOVERAGEMODULATIONTABLENVPROC :: #type proc "c" (n: GLsizei, v: ^GLfloat)
PFNGLGETCOVERAGEMODULATIONTABLENVPROC :: #type proc "c" (bufsize: GLsizei, v: ^GLfloat)
PFNGLRASTERSAMPLESEXTPROC :: #type proc "c" (samples: GLuint, fixedsamplelocations: GLboolean)
PFNGLGETGRAPHICSRESETSTATUSEXTPROC :: #type proc "c" () -> GLenum
PFNGLGETNUNIFORMFVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat)
PFNGLGETNUNIFORMIVEXTPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint)
PFNGLREADNPIXELSEXTPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr)
PFNGLBEGINSCENEEXTPROC :: #type proc "c" ()
PFNGLENDSCENEEXTPROC :: #type proc "c" ()
PFNGLSECONDARYCOLOR3BEXTPROC :: #type proc "c" (red: GLbyte, green: GLbyte, blue: GLbyte)
PFNGLSECONDARYCOLOR3BVEXTPROC :: #type proc "c" (v: ^GLbyte)
PFNGLSECONDARYCOLOR3DEXTPROC :: #type proc "c" (red: GLdouble, green: GLdouble, blue: GLdouble)
PFNGLSECONDARYCOLOR3DVEXTPROC :: #type proc "c" (v: ^GLdouble)
PFNGLSECONDARYCOLOR3FEXTPROC :: #type proc "c" (red: GLfloat, green: GLfloat, blue: GLfloat)
PFNGLSECONDARYCOLOR3FVEXTPROC :: #type proc "c" (v: ^GLfloat)
PFNGLSECONDARYCOLOR3IEXTPROC :: #type proc "c" (red: GLint, green: GLint, blue: GLint)
PFNGLSECONDARYCOLOR3IVEXTPROC :: #type proc "c" (v: ^GLint)
PFNGLSECONDARYCOLOR3SEXTPROC :: #type proc "c" (red: GLshort, green: GLshort, blue: GLshort)
PFNGLSECONDARYCOLOR3SVEXTPROC :: #type proc "c" (v: ^GLshort)
PFNGLSECONDARYCOLOR3UBEXTPROC :: #type proc "c" (red: GLubyte, green: GLubyte, blue: GLubyte)
PFNGLSECONDARYCOLOR3UBVEXTPROC :: #type proc "c" (v: ^GLubyte)
PFNGLSECONDARYCOLOR3UIEXTPROC :: #type proc "c" (red: GLuint, green: GLuint, blue: GLuint)
PFNGLSECONDARYCOLOR3UIVEXTPROC :: #type proc "c" (v: ^GLuint)
PFNGLSECONDARYCOLOR3USEXTPROC :: #type proc "c" (red: GLushort, green: GLushort, blue: GLushort)
PFNGLSECONDARYCOLOR3USVEXTPROC :: #type proc "c" (v: ^GLushort)
PFNGLSECONDARYCOLORPOINTEREXTPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLDELETESEMAPHORESEXTPROC :: #type proc "c" (n: GLsizei, semaphores: [^]GLuint)
PFNGLGENSEMAPHORESEXTPROC :: #type proc "c" (n: GLsizei, semaphores: [^]GLuint)
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC :: #type proc "c" (semaphore: GLuint, pname: GLenum, params: [^]GLuint64)
PFNGLISSEMAPHOREEXTPROC :: #type proc "c" (semaphore: GLuint) -> GLboolean
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC :: #type proc "c" (semaphore: GLuint, pname: GLenum, params: [^]GLuint64)
PFNGLSIGNALSEMAPHOREEXTPROC :: #type proc "c" (semaphore: GLuint, numBufferBarriers: GLuint, buffers: [^]GLuint, numTextureBarriers: GLuint, textures: [^]GLuint, dstLayouts: [^]GLenum)
PFNGLWAITSEMAPHOREEXTPROC :: #type proc "c" (semaphore: GLuint, numBufferBarriers: GLuint, buffers: [^]GLuint, numTextureBarriers: GLuint, textures: [^]GLuint, srcLayouts: [^]GLenum)
PFNGLIMPORTSEMAPHOREFDEXTPROC :: #type proc "c" (semaphore: GLuint, handleType: GLenum, fd: GLint)
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC :: #type proc "c" (semaphore: GLuint, handleType: GLenum, handle: rawptr)
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC :: #type proc "c" (semaphore: GLuint, handleType: GLenum, name: rawptr)
PFNGLACTIVEPROGRAMEXTPROC :: #type proc "c" (program: GLuint)
PFNGLCREATESHADERPROGRAMEXTPROC :: #type proc "c" (type: GLenum, string_: ^GLchar) -> GLuint
PFNGLUSESHADERPROGRAMEXTPROC :: #type proc "c" (type: GLenum, program: GLuint)
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC :: #type proc "c" ()
PFNGLBINDIMAGETEXTUREEXTPROC :: #type proc "c" (index: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLint)
PFNGLMEMORYBARRIEREXTPROC :: #type proc "c" (barriers: GLbitfield)
PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC :: #type proc "c" (offset: GLsizei, n: GLsizei, values: [^]GLuint)
PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC :: #type proc "c" (target: GLuint, size: GLsizei)
PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC :: #type proc "c" (target: GLuint) -> GLsizei
PFNGLTEXPAGECOMMITMENTEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC :: #type proc "c" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean)
PFNGLACTIVESTENCILFACEEXTPROC :: #type proc "c" (face: GLenum)
PFNGLTEXSUBIMAGE1DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE2DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE3DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLPATCHPARAMETERIEXTPROC :: #type proc "c" (pname: GLenum, value: GLint)
PFNGLTEXIMAGE3DEXTPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLGETSAMPLERPARAMETERIIVEXTPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETSAMPLERPARAMETERIUIVEXTPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLSAMPLERPARAMETERIIVEXTPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLSAMPLERPARAMETERIUIVEXTPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLTEXBUFFEREXTPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, buffer: GLuint)
PFNGLCLEARCOLORIIEXTPROC :: #type proc "c" (red: GLint, green: GLint, blue: GLint, alpha: GLint)
PFNGLCLEARCOLORIUIEXTPROC :: #type proc "c" (red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint)
PFNGLGETTEXPARAMETERIIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETTEXPARAMETERIUIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLTEXPARAMETERIIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLTEXPARAMETERIUIVEXTPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLARETEXTURESRESIDENTEXTPROC :: #type proc "c" (n: GLsizei, textures: [^]GLuint, residences: [^]GLboolean) -> GLboolean
PFNGLBINDTEXTUREEXTPROC :: #type proc "c" (target: GLenum, texture: GLuint)
PFNGLDELETETEXTURESEXTPROC :: #type proc "c" (n: GLsizei, textures: [^]GLuint)
PFNGLGENTEXTURESEXTPROC :: #type proc "c" (n: GLsizei, textures: [^]GLuint)
PFNGLISTEXTUREEXTPROC :: #type proc "c" (texture: GLuint) -> GLboolean
PFNGLPRIORITIZETEXTURESEXTPROC :: #type proc "c" (n: GLsizei, textures: [^]GLuint, priorities: [^]GLclampf)
PFNGLTEXTURENORMALEXTPROC :: #type proc "c" (mode: GLenum)
PFNGLTEXSTORAGE1DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
PFNGLTEXSTORAGE2DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLTEXSTORAGE3DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLTEXTURESTORAGE1DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
PFNGLTEXTURESTORAGE2DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLTEXTURESTORAGE3DEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLTEXSTORAGEATTRIBS2DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, attrib_list: ^GLint)
PFNGLTEXSTORAGEATTRIBS3DEXTPROC :: #type proc "c" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, attrib_list: ^GLint)
PFNGLTEXTUREVIEWEXTPROC :: #type proc "c" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint)
PFNGLGETQUERYOBJECTI64VEXTPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint64EXT)
PFNGLGETQUERYOBJECTUI64VEXTPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint64EXT)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC :: #type proc "c" (primitiveMode: GLenum)
PFNGLBINDBUFFERBASEEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint)
PFNGLBINDBUFFEROFFSETEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr)
PFNGLBINDBUFFERRANGEEXTPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLENDTRANSFORMFEEDBACKEXTPROC :: #type proc "c" ()
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC :: #type proc "c" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC :: #type proc "c" (program: GLuint, count: GLsizei, varyings: ^[^]GLchar, bufferMode: GLenum)
PFNGLARRAYELEMENTEXTPROC :: #type proc "c" (i: GLint)
PFNGLCOLORPOINTEREXTPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr)
PFNGLDRAWARRAYSEXTPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei)
PFNGLEDGEFLAGPOINTEREXTPROC :: #type proc "c" (stride: GLsizei, count: GLsizei, pointer: ^GLboolean)
PFNGLINDEXPOINTEREXTPROC :: #type proc "c" (type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr)
PFNGLNORMALPOINTEREXTPROC :: #type proc "c" (type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr)
PFNGLTEXCOORDPOINTEREXTPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr)
PFNGLVERTEXPOINTEREXTPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr)
PFNGLBINDARRAYSETEXTPROC :: #type proc "c" (arrayset: rawptr)
PFNGLCREATEARRAYSETEXTPROC :: #type proc "c" () -> rawptr
PFNGLDELETEARRAYSETSEXTPROC :: #type proc "c" (n: GLsizei, arrayset: [^]rawptr)
PFNGLGETVERTEXATTRIBLDVEXTPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC :: #type proc "c" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr)
PFNGLVERTEXATTRIBL1DEXTPROC :: #type proc "c" (index: GLuint, x: GLdouble)
PFNGLVERTEXATTRIBL1DVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL2DEXTPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble)
PFNGLVERTEXATTRIBL2DVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL3DEXTPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXATTRIBL3DVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBL4DEXTPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXATTRIBL4DVEXTPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIBLPOINTEREXTPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLBEGINVERTEXSHADEREXTPROC :: #type proc "c" ()
PFNGLBINDLIGHTPARAMETEREXTPROC :: #type proc "c" (light: GLenum, value: GLenum) -> GLuint
PFNGLBINDMATERIALPARAMETEREXTPROC :: #type proc "c" (face: GLenum, value: GLenum) -> GLuint
PFNGLBINDPARAMETEREXTPROC :: #type proc "c" (value: GLenum) -> GLuint
PFNGLBINDTEXGENPARAMETEREXTPROC :: #type proc "c" (unit: GLenum, coord: GLenum, value: GLenum) -> GLuint
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC :: #type proc "c" (unit: GLenum, value: GLenum) -> GLuint
PFNGLBINDVERTEXSHADEREXTPROC :: #type proc "c" (id: GLuint)
PFNGLDELETEVERTEXSHADEREXTPROC :: #type proc "c" (id: GLuint)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC :: #type proc "c" (id: GLuint)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC :: #type proc "c" (id: GLuint)
PFNGLENDVERTEXSHADEREXTPROC :: #type proc "c" ()
PFNGLEXTRACTCOMPONENTEXTPROC :: #type proc "c" (res: GLuint, src: GLuint, num: GLuint)
PFNGLGENSYMBOLSEXTPROC :: #type proc "c" (dataType: GLenum, storageType: GLenum, range: GLenum, components: GLuint) -> GLuint
PFNGLGENVERTEXSHADERSEXTPROC :: #type proc "c" (range: GLuint) -> GLuint
PFNGLGETINVARIANTBOOLEANVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLboolean)
PFNGLGETINVARIANTFLOATVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLfloat)
PFNGLGETINVARIANTINTEGERVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLint)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLboolean)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLfloat)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLint)
PFNGLGETVARIANTBOOLEANVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLboolean)
PFNGLGETVARIANTFLOATVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLfloat)
PFNGLGETVARIANTINTEGERVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^GLint)
PFNGLGETVARIANTPOINTERVEXTPROC :: #type proc "c" (id: GLuint, value: GLenum, data: ^rawptr)
PFNGLINSERTCOMPONENTEXTPROC :: #type proc "c" (res: GLuint, src: GLuint, num: GLuint)
PFNGLISVARIANTENABLEDEXTPROC :: #type proc "c" (id: GLuint, cap: GLenum) -> GLboolean
PFNGLSETINVARIANTEXTPROC :: #type proc "c" (id: GLuint, type: GLenum, addr: rawptr)
PFNGLSETLOCALCONSTANTEXTPROC :: #type proc "c" (id: GLuint, type: GLenum, addr: rawptr)
PFNGLSHADEROP1EXTPROC :: #type proc "c" (op: GLenum, res: GLuint, arg1: GLuint)
PFNGLSHADEROP2EXTPROC :: #type proc "c" (op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint)
PFNGLSHADEROP3EXTPROC :: #type proc "c" (op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint, arg3: GLuint)
PFNGLSWIZZLEEXTPROC :: #type proc "c" (res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum)
PFNGLVARIANTPOINTEREXTPROC :: #type proc "c" (id: GLuint, type: GLenum, stride: GLuint, addr: rawptr)
PFNGLVARIANTBVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLbyte)
PFNGLVARIANTDVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLdouble)
PFNGLVARIANTFVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLfloat)
PFNGLVARIANTIVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLint)
PFNGLVARIANTSVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLshort)
PFNGLVARIANTUBVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLubyte)
PFNGLVARIANTUIVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLuint)
PFNGLVARIANTUSVEXTPROC :: #type proc "c" (id: GLuint, addr: ^GLushort)
PFNGLWRITEMASKEXTPROC :: #type proc "c" (res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum)
PFNGLVERTEXWEIGHTPOINTEREXTPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLVERTEXWEIGHTFEXTPROC :: #type proc "c" (weight: GLfloat)
PFNGLVERTEXWEIGHTFVEXTPROC :: #type proc "c" (weight: ^GLfloat)
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC :: #type proc "c" (memory: GLuint, key: GLuint64, timeout: GLuint) -> GLboolean
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC :: #type proc "c" (memory: GLuint, key: GLuint64) -> GLboolean
PFNGLWINDOWRECTANGLESEXTPROC :: #type proc "c" (mode: GLenum, count: GLsizei, box: [^]GLint)
PFNGLIMPORTSYNCEXTPROC :: #type proc "c" (external_sync_type: GLenum, external_sync: GLintptr, flags: GLbitfield) -> GLsync
PFNGLFRAMETERMINATORGREMEDYPROC :: #type proc "c" ()
PFNGLSTRINGMARKERGREMEDYPROC :: #type proc "c" (len: GLsizei, string_: rawptr)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfloat)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLMULTIMODEDRAWARRAYSIBMPROC :: #type proc "c" (mode: ^GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei, modestride: GLint)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC :: #type proc "c" (mode: ^GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, primcount: GLsizei, modestride: GLint)
PFNGLCOLORPOINTERLISTIBMPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLEDGEFLAGPOINTERLISTIBMPROC :: #type proc "c" (stride: GLint, pointer: ^^GLboolean, ptrstride: GLint)
PFNGLFOGCOORDPOINTERLISTIBMPROC :: #type proc "c" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLINDEXPOINTERLISTIBMPROC :: #type proc "c" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLNORMALPOINTERLISTIBMPROC :: #type proc "c" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLTEXCOORDPOINTERLISTIBMPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLVERTEXPOINTERLISTIBMPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint)
PFNGLGETTEXTUREHANDLEIMGPROC :: #type proc "c" (texture: GLuint) -> GLuint64
PFNGLGETTEXTURESAMPLERHANDLEIMGPROC :: #type proc "c" (texture: GLuint, sampler: GLuint) -> GLuint64
PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC :: #type proc "c" (program: GLuint, location: GLint, value: GLuint64)
PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64)
PFNGLUNIFORMHANDLEUI64IMGPROC :: #type proc "c" (location: GLint, value: GLuint64)
PFNGLUNIFORMHANDLEUI64VIMGPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, xscale: GLint, yscale: GLint)
PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint, xscale: GLint, yscale: GLint)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC :: #type proc "c" ()
PFNGLMAPTEXTURE2DINTELPROC :: #type proc "c" (texture: GLuint, level: GLint, access: GLbitfield, stride: ^GLint, layout: ^GLenum) -> rawptr
PFNGLSYNCTEXTUREINTELPROC :: #type proc "c" (texture: GLuint)
PFNGLUNMAPTEXTURE2DINTELPROC :: #type proc "c" (texture: GLuint, level: GLint)
PFNGLCOLORPOINTERVINTELPROC :: #type proc "c" (size: GLint, type: GLenum, pointer: ^rawptr)
PFNGLNORMALPOINTERVINTELPROC :: #type proc "c" (type: GLenum, pointer: ^rawptr)
PFNGLTEXCOORDPOINTERVINTELPROC :: #type proc "c" (size: GLint, type: GLenum, pointer: ^rawptr)
PFNGLVERTEXPOINTERVINTELPROC :: #type proc "c" (size: GLint, type: GLenum, pointer: ^rawptr)
PFNGLBEGINPERFQUERYINTELPROC :: #type proc "c" (queryHandle: GLuint)
PFNGLCREATEPERFQUERYINTELPROC :: #type proc "c" (queryId: GLuint, queryHandle: ^GLuint)
PFNGLDELETEPERFQUERYINTELPROC :: #type proc "c" (queryHandle: GLuint)
PFNGLENDPERFQUERYINTELPROC :: #type proc "c" (queryHandle: GLuint)
PFNGLGETFIRSTPERFQUERYIDINTELPROC :: #type proc "c" (queryId: ^GLuint)
PFNGLGETNEXTPERFQUERYIDINTELPROC :: #type proc "c" (queryId: GLuint, nextQueryId: ^GLuint)
PFNGLGETPERFCOUNTERINFOINTELPROC :: #type proc "c" (queryId: GLuint, counterId: GLuint, counterNameLength: GLuint, counterName: ^GLchar, counterDescLength: GLuint, counterDesc: ^GLchar, counterOffset: ^GLuint, counterDataSize: ^GLuint, counterTypeEnum: ^GLuint, counterDataTypeEnum: ^GLuint, rawCounterMaxValue: ^GLuint64)
PFNGLGETPERFQUERYDATAINTELPROC :: #type proc "c" (queryHandle: GLuint, flags: GLuint, dataSize: GLsizei, data: rawptr, bytesWritten: ^GLuint)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC :: #type proc "c" (queryName: ^GLchar, queryId: ^GLuint)
PFNGLGETPERFQUERYINFOINTELPROC :: #type proc "c" (queryId: GLuint, queryNameLength: GLuint, queryName: ^GLchar, dataSize: ^GLuint, noCounters: [^]GLuint, noInstances: [^]GLuint, capsMask: ^GLuint)
PFNGLTEXSCISSORFUNCINTELPROC :: #type proc "c" (target: GLenum, lfunc: GLenum, hfunc: GLenum)
PFNGLTEXSCISSORINTELPROC :: #type proc "c" (target: GLenum, tlow: GLclampf, thigh: GLclampf)
PFNGLBLENDBARRIERKHRPROC :: #type proc "c" ()
GLDEBUGPROC :: #type proc "c" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: rawptr)
PFNGLDEBUGMESSAGECALLBACKPROC :: #type proc "c" (callback: GLDEBUGPROC, userParam: rawptr)
PFNGLDEBUGMESSAGECONTROLPROC :: #type proc "c" (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean)
PFNGLDEBUGMESSAGEINSERTPROC :: #type proc "c" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: ^GLchar)
PFNGLGETDEBUGMESSAGELOGPROC :: #type proc "c" (count: GLuint, bufSize: GLsizei, sources: [^]GLenum, types: [^]GLenum, ids: [^]GLuint, severities: [^]GLenum, lengths: [^]GLsizei, messageLog: ^GLchar) -> GLuint
PFNGLGETOBJECTLABELPROC :: #type proc "c" (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar)
PFNGLGETOBJECTPTRLABELPROC :: #type proc "c" (ptr: rawptr, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar)
PFNGLOBJECTLABELPROC :: #type proc "c" (identifier: GLenum, name: GLuint, length: GLsizei, label: ^GLchar)
PFNGLOBJECTPTRLABELPROC :: #type proc "c" (ptr: rawptr, length: GLsizei, label: ^GLchar)
PFNGLPOPDEBUGGROUPPROC :: #type proc "c" ()
PFNGLPUSHDEBUGGROUPPROC :: #type proc "c" (source: GLenum, id: GLuint, length: GLsizei, message: ^GLchar)
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC :: #type proc "c" (count: GLuint)
PFNGLGETNUNIFORMFVPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat)
PFNGLGETNUNIFORMIVPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint)
PFNGLGETNUNIFORMUIVPROC :: #type proc "c" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint)
PFNGLREADNPIXELSPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr)
PFNGLBUFFERREGIONENABLEDPROC :: #type proc "c" () -> GLuint
PFNGLDELETEBUFFERREGIONPROC :: #type proc "c" (region: GLenum)
PFNGLDRAWBUFFERREGIONPROC :: #type proc "c" (region: GLuint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, xDest: GLint, yDest: GLint)
PFNGLNEWBUFFERREGIONPROC :: #type proc "c" (region: GLenum) -> GLuint
PFNGLREADBUFFERREGIONPROC :: #type proc "c" (region: GLuint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERPARAMETERIMESAPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLRESIZEBUFFERSMESAPROC :: #type proc "c" ()
PFNGLWINDOWPOS2DMESAPROC :: #type proc "c" (x: GLdouble, y: GLdouble)
PFNGLWINDOWPOS2DVMESAPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS2FMESAPROC :: #type proc "c" (x: GLfloat, y: GLfloat)
PFNGLWINDOWPOS2FVMESAPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS2IMESAPROC :: #type proc "c" (x: GLint, y: GLint)
PFNGLWINDOWPOS2IVMESAPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS2SMESAPROC :: #type proc "c" (x: GLshort, y: GLshort)
PFNGLWINDOWPOS2SVMESAPROC :: #type proc "c" (p: ^GLshort)
PFNGLWINDOWPOS3DMESAPROC :: #type proc "c" (x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLWINDOWPOS3DVMESAPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS3FMESAPROC :: #type proc "c" (x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLWINDOWPOS3FVMESAPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS3IMESAPROC :: #type proc "c" (x: GLint, y: GLint, z: GLint)
PFNGLWINDOWPOS3IVMESAPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS3SMESAPROC :: #type proc "c" (x: GLshort, y: GLshort, z: GLshort)
PFNGLWINDOWPOS3SVMESAPROC :: #type proc "c" (p: ^GLshort)
PFNGLWINDOWPOS4DMESAPROC :: #type proc "c" (x: GLdouble, y: GLdouble, z: GLdouble, param3: GLdouble)
PFNGLWINDOWPOS4DVMESAPROC :: #type proc "c" (p: ^GLdouble)
PFNGLWINDOWPOS4FMESAPROC :: #type proc "c" (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLWINDOWPOS4FVMESAPROC :: #type proc "c" (p: ^GLfloat)
PFNGLWINDOWPOS4IMESAPROC :: #type proc "c" (x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLWINDOWPOS4IVMESAPROC :: #type proc "c" (p: ^GLint)
PFNGLWINDOWPOS4SMESAPROC :: #type proc "c" (x: GLshort, y: GLshort, z: GLshort, w: GLshort)
PFNGLWINDOWPOS4SVMESAPROC :: #type proc "c" (p: ^GLshort)
PFNGLBEGINCONDITIONALRENDERNVXPROC :: #type proc "c" (id: GLuint)
PFNGLENDCONDITIONALRENDERNVXPROC :: #type proc "c" ()
PFNGLASYNCCOPYBUFFERSUBDATANVXPROC :: #type proc "c" (waitSemaphoreCount: GLsizei, waitSemaphoreArray: ^GLuint, fenceValueArray: ^GLuint64, readGpu: GLuint, writeGpuMask: GLbitfield, readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr, signalSemaphoreCount: GLsizei, signalSemaphoreArray: ^GLuint, signalValueArray: ^GLuint64) -> GLsync
PFNGLASYNCCOPYIMAGESUBDATANVXPROC :: #type proc "c" (waitSemaphoreCount: GLsizei, waitSemaphoreArray: ^GLuint, waitValueArray: ^GLuint64, srcGpu: GLuint, dstGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei, signalSemaphoreCount: GLsizei, signalSemaphoreArray: ^GLuint, signalValueArray: ^GLuint64) -> GLuint
PFNGLMULTICASTSCISSORARRAYVNVXPROC :: #type proc "c" (gpu: GLuint, first: GLuint, count: GLsizei, v: ^GLint)
PFNGLMULTICASTVIEWPORTARRAYVNVXPROC :: #type proc "c" (gpu: GLuint, first: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC :: #type proc "c" (gpu: GLuint, index: GLuint, xcoeff: GLfloat, ycoeff: GLfloat)
PFNGLUPLOADGPUMASKNVXPROC :: #type proc "c" (mask: GLbitfield)
PFNGLLGPUCOPYIMAGESUBDATANVXPROC :: #type proc "c" (sourceGpu: GLuint, destinationGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srxY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLLGPUINTERLOCKNVXPROC :: #type proc "c" ()
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC :: #type proc "c" (gpuMask: GLbitfield, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC :: #type proc "c" (fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64)
PFNGLCREATEPROGRESSFENCENVXPROC :: #type proc "c" () -> GLuint
PFNGLSIGNALSEMAPHOREUI64NVXPROC :: #type proc "c" (signalGpu: GLuint, fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64)
PFNGLWAITSEMAPHOREUI64NVXPROC :: #type proc "c" (waitGpu: GLuint, fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64)
PFNGLSTEREOPARAMETERFNVPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLSTEREOPARAMETERINVPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC :: #type proc "c" (mode: GLenum)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC :: #type proc "c" (mode: GLenum, indirect: rawptr, drawCount: GLintptr, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC :: #type proc "c" (mode: GLenum, type: GLenum, indirect: rawptr, drawCount: GLintptr, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
PFNGLGETIMAGEHANDLENVPROC :: #type proc "c" (texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64
PFNGLGETTEXTUREHANDLENVPROC :: #type proc "c" (texture: GLuint) -> GLuint64
PFNGLGETTEXTURESAMPLERHANDLENVPROC :: #type proc "c" (texture: GLuint, sampler: GLuint) -> GLuint64
PFNGLISIMAGEHANDLERESIDENTNVPROC :: #type proc "c" (handle: GLuint64) -> GLboolean
PFNGLISTEXTUREHANDLERESIDENTNVPROC :: #type proc "c" (handle: GLuint64) -> GLboolean
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC :: #type proc "c" (handle: GLuint64)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC :: #type proc "c" (handle: GLuint64, access: GLenum)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC :: #type proc "c" (handle: GLuint64)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC :: #type proc "c" (handle: GLuint64)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, value: GLuint64)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64)
PFNGLUNIFORMHANDLEUI64NVPROC :: #type proc "c" (location: GLint, value: GLuint64)
PFNGLUNIFORMHANDLEUI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64)
PFNGLBLENDBARRIERNVPROC :: #type proc "c" ()
PFNGLBLENDPARAMETERINVPROC :: #type proc "c" (pname: GLenum, value: GLint)
PFNGLVIEWPORTPOSITIONWSCALENVPROC :: #type proc "c" (index: GLuint, xcoeff: GLfloat, ycoeff: GLfloat)
PFNGLCALLCOMMANDLISTNVPROC :: #type proc "c" (list: GLuint)
PFNGLCOMMANDLISTSEGMENTSNVPROC :: #type proc "c" (list: GLuint, segments: GLuint)
PFNGLCOMPILECOMMANDLISTNVPROC :: #type proc "c" (list: GLuint)
PFNGLCREATECOMMANDLISTSNVPROC :: #type proc "c" (n: GLsizei, lists: [^]GLuint)
PFNGLCREATESTATESNVPROC :: #type proc "c" (n: GLsizei, states: [^]GLuint)
PFNGLDELETECOMMANDLISTSNVPROC :: #type proc "c" (n: GLsizei, lists: [^]GLuint)
PFNGLDELETESTATESNVPROC :: #type proc "c" (n: GLsizei, states: [^]GLuint)
PFNGLDRAWCOMMANDSADDRESSNVPROC :: #type proc "c" (primitiveMode: GLenum, indirects: [^]GLuint64, sizes: [^]GLsizei, count: GLuint)
PFNGLDRAWCOMMANDSNVPROC :: #type proc "c" (primitiveMode: GLenum, buffer: GLuint, indirects: [^]GLintptr, sizes: [^]GLsizei, count: GLuint)
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC :: #type proc "c" (indirects: [^]GLuint64, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint)
PFNGLDRAWCOMMANDSSTATESNVPROC :: #type proc "c" (buffer: GLuint, indirects: [^]GLintptr, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint)
PFNGLGETCOMMANDHEADERNVPROC :: #type proc "c" (tokenID: GLenum, size: GLuint) -> GLuint
PFNGLGETSTAGEINDEXNVPROC :: #type proc "c" (shadertype: GLenum) -> GLushort
PFNGLISCOMMANDLISTNVPROC :: #type proc "c" (list: GLuint) -> GLboolean
PFNGLISSTATENVPROC :: #type proc "c" (state: GLuint) -> GLboolean
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC :: #type proc "c" (list: GLuint, segment: GLuint, indirects: [^]rawptr, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint)
PFNGLSTATECAPTURENVPROC :: #type proc "c" (state: GLuint, mode: GLenum)
PFNGLBEGINCONDITIONALRENDERNVPROC :: #type proc "c" (id: GLuint, mode: GLenum)
PFNGLENDCONDITIONALRENDERNVPROC :: #type proc "c" ()
PFNGLSUBPIXELPRECISIONBIASNVPROC :: #type proc "c" (xbits: GLuint, ybits: GLuint)
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC :: #type proc "c" (pname: GLenum, value: GLfloat)
PFNGLCONSERVATIVERASTERPARAMETERINVPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLCOPYBUFFERSUBDATANVPROC :: #type proc "c" (readtarget: GLenum, writetarget: GLenum, readoffset: GLintptr, writeoffset: GLintptr, size: GLsizeiptr)
PFNGLCOPYIMAGESUBDATANVPROC :: #type proc "c" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei)
PFNGLCLEARDEPTHDNVPROC :: #type proc "c" (depth: GLdouble)
PFNGLDEPTHBOUNDSDNVPROC :: #type proc "c" (zmin: GLdouble, zmax: GLdouble)
PFNGLDEPTHRANGEDNVPROC :: #type proc "c" (zNear: GLdouble, zFar: GLdouble)
PFNGLDRAWBUFFERSNVPROC :: #type proc "c" (n: GLsizei, bufs: [^]GLenum)
PFNGLDRAWARRAYSINSTANCEDNVPROC :: #type proc "c" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei)
PFNGLDRAWELEMENTSINSTANCEDNVPROC :: #type proc "c" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei)
PFNGLDRAWTEXTURENVPROC :: #type proc "c" (texture: GLuint, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat)
GLVULKANPROCNV :: #type proc "c" ()
PFNGLDRAWVKIMAGENVPROC :: #type proc "c" (vkImage: GLuint64, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat)
PFNGLGETVKPROCADDRNVPROC :: #type proc "c" (name: ^GLchar) -> GLVULKANPROCNV
PFNGLSIGNALVKFENCENVPROC :: #type proc "c" (vkFence: GLuint64)
PFNGLSIGNALVKSEMAPHORENVPROC :: #type proc "c" (vkSemaphore: GLuint64)
PFNGLWAITVKSEMAPHORENVPROC :: #type proc "c" (vkSemaphore: GLuint64)
PFNGLEVALMAPSNVPROC :: #type proc "c" (target: GLenum, mode: GLenum)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETMAPCONTROLPOINTSNVPROC :: #type proc "c" (target: GLenum, index: GLuint, type: GLenum, ustride: GLsizei, vstride: GLsizei, packed: GLboolean, points: rawptr)
PFNGLGETMAPPARAMETERFVNVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMAPPARAMETERIVNVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLMAPCONTROLPOINTSNVPROC :: #type proc "c" (target: GLenum, index: GLuint, type: GLenum, ustride: GLsizei, vstride: GLsizei, uorder: GLint, vorder: GLint, packed: GLboolean, points: rawptr)
PFNGLMAPPARAMETERFVNVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLMAPPARAMETERIVNVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMULTISAMPLEFVNVPROC :: #type proc "c" (pname: GLenum, index: GLuint, val: ^GLfloat)
PFNGLSAMPLEMASKINDEXEDNVPROC :: #type proc "c" (index: GLuint, mask: GLbitfield)
PFNGLTEXRENDERBUFFERNVPROC :: #type proc "c" (target: GLenum, renderbuffer: GLuint)
PFNGLDELETEFENCESNVPROC :: #type proc "c" (n: GLsizei, fences: [^]GLuint)
PFNGLFINISHFENCENVPROC :: #type proc "c" (fence: GLuint)
PFNGLGENFENCESNVPROC :: #type proc "c" (n: GLsizei, fences: [^]GLuint)
PFNGLGETFENCEIVNVPROC :: #type proc "c" (fence: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISFENCENVPROC :: #type proc "c" (fence: GLuint) -> GLboolean
PFNGLSETFENCENVPROC :: #type proc "c" (fence: GLuint, condition: GLenum)
PFNGLTESTFENCENVPROC :: #type proc "c" (fence: GLuint) -> GLboolean
PFNGLFRAGMENTCOVERAGECOLORNVPROC :: #type proc "c" (color: GLuint)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, params: [^]GLdouble)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, params: [^]GLfloat)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, v: [^]GLdouble)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC :: #type proc "c" (id: GLuint, len: GLsizei, name: ^GLubyte, v: [^]GLfloat)
PFNGLBLITFRAMEBUFFERNVPROC :: #type proc "c" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC :: #type proc "c" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLPROGRAMVERTEXLIMITNVPROC :: #type proc "c" (target: GLenum, limit: GLint)
PFNGLMULTICASTBARRIERNVPROC :: #type proc "c" ()
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC :: #type proc "c" (srcGpu: GLuint, dstGpu: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
PFNGLMULTICASTBUFFERSUBDATANVPROC :: #type proc "c" (gpuMask: GLbitfield, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr)
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC :: #type proc "c" (readGpu: GLuint, writeGpuMask: GLbitfield, readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC :: #type proc "c" (srcGpu: GLuint, dstGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei)
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC :: #type proc "c" (gpu: GLuint, framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC :: #type proc "c" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLint64)
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC :: #type proc "c" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC :: #type proc "c" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLuint64)
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC :: #type proc "c" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLMULTICASTWAITSYNCNVPROC :: #type proc "c" (signalGpu: GLuint, waitGpuMask: GLbitfield)
PFNGLRENDERGPUMASKNVPROC :: #type proc "c" (mask: GLbitfield)
PFNGLPROGRAMENVPARAMETERI4INVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLint)
PFNGLPROGRAMENVPARAMETERI4UINVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLuint)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLint)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLuint)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint)
PFNGLGETUNIFORMI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLint64EXT)
PFNGLGETUNIFORMUI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, params: [^]GLuint64EXT)
PFNGLPROGRAMUNIFORM1I64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64EXT)
PFNGLPROGRAMUNIFORM1I64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLPROGRAMUNIFORM1UI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64EXT)
PFNGLPROGRAMUNIFORM1UI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLPROGRAMUNIFORM2I64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT)
PFNGLPROGRAMUNIFORM2I64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLPROGRAMUNIFORM2UI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT)
PFNGLPROGRAMUNIFORM2UI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLPROGRAMUNIFORM3I64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
PFNGLPROGRAMUNIFORM3I64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLPROGRAMUNIFORM3UI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
PFNGLPROGRAMUNIFORM3UI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLPROGRAMUNIFORM4I64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
PFNGLPROGRAMUNIFORM4I64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLPROGRAMUNIFORM4UI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
PFNGLPROGRAMUNIFORM4UI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLUNIFORM1I64NVPROC :: #type proc "c" (location: GLint, x: GLint64EXT)
PFNGLUNIFORM1I64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLUNIFORM1UI64NVPROC :: #type proc "c" (location: GLint, x: GLuint64EXT)
PFNGLUNIFORM1UI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLUNIFORM2I64NVPROC :: #type proc "c" (location: GLint, x: GLint64EXT, y: GLint64EXT)
PFNGLUNIFORM2I64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLUNIFORM2UI64NVPROC :: #type proc "c" (location: GLint, x: GLuint64EXT, y: GLuint64EXT)
PFNGLUNIFORM2UI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLUNIFORM3I64NVPROC :: #type proc "c" (location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
PFNGLUNIFORM3I64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLUNIFORM3UI64NVPROC :: #type proc "c" (location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
PFNGLUNIFORM3UI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLUNIFORM4I64NVPROC :: #type proc "c" (location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
PFNGLUNIFORM4I64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLint64EXT)
PFNGLUNIFORM4UI64NVPROC :: #type proc "c" (location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
PFNGLUNIFORM4UI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64EXT)
GLhalf :: u16
PFNGLCOLOR3HNVPROC :: #type proc "c" (red: GLhalf, green: GLhalf, blue: GLhalf)
PFNGLCOLOR3HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLCOLOR4HNVPROC :: #type proc "c" (red: GLhalf, green: GLhalf, blue: GLhalf, alpha: GLhalf)
PFNGLCOLOR4HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLFOGCOORDHNVPROC :: #type proc "c" (fog: GLhalf)
PFNGLFOGCOORDHVNVPROC :: #type proc "c" (fog: ^GLhalf)
PFNGLMULTITEXCOORD1HNVPROC :: #type proc "c" (target: GLenum, s: GLhalf)
PFNGLMULTITEXCOORD1HVNVPROC :: #type proc "c" (target: GLenum, v: ^GLhalf)
PFNGLMULTITEXCOORD2HNVPROC :: #type proc "c" (target: GLenum, s: GLhalf, t: GLhalf)
PFNGLMULTITEXCOORD2HVNVPROC :: #type proc "c" (target: GLenum, v: ^GLhalf)
PFNGLMULTITEXCOORD3HNVPROC :: #type proc "c" (target: GLenum, s: GLhalf, t: GLhalf, r: GLhalf)
PFNGLMULTITEXCOORD3HVNVPROC :: #type proc "c" (target: GLenum, v: ^GLhalf)
PFNGLMULTITEXCOORD4HNVPROC :: #type proc "c" (target: GLenum, s: GLhalf, t: GLhalf, r: GLhalf, q: GLhalf)
PFNGLMULTITEXCOORD4HVNVPROC :: #type proc "c" (target: GLenum, v: ^GLhalf)
PFNGLNORMAL3HNVPROC :: #type proc "c" (nx: GLhalf, ny: GLhalf, nz: GLhalf)
PFNGLNORMAL3HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLSECONDARYCOLOR3HNVPROC :: #type proc "c" (red: GLhalf, green: GLhalf, blue: GLhalf)
PFNGLSECONDARYCOLOR3HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLTEXCOORD1HNVPROC :: #type proc "c" (s: GLhalf)
PFNGLTEXCOORD1HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLTEXCOORD2HNVPROC :: #type proc "c" (s: GLhalf, t: GLhalf)
PFNGLTEXCOORD2HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLTEXCOORD3HNVPROC :: #type proc "c" (s: GLhalf, t: GLhalf, r: GLhalf)
PFNGLTEXCOORD3HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLTEXCOORD4HNVPROC :: #type proc "c" (s: GLhalf, t: GLhalf, r: GLhalf, q: GLhalf)
PFNGLTEXCOORD4HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLVERTEX2HNVPROC :: #type proc "c" (x: GLhalf, y: GLhalf)
PFNGLVERTEX2HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLVERTEX3HNVPROC :: #type proc "c" (x: GLhalf, y: GLhalf, z: GLhalf)
PFNGLVERTEX3HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLVERTEX4HNVPROC :: #type proc "c" (x: GLhalf, y: GLhalf, z: GLhalf, w: GLhalf)
PFNGLVERTEX4HVNVPROC :: #type proc "c" (v: ^GLhalf)
PFNGLVERTEXATTRIB1HNVPROC :: #type proc "c" (index: GLuint, x: GLhalf)
PFNGLVERTEXATTRIB1HVNVPROC :: #type proc "c" (index: GLuint, v: ^GLhalf)
PFNGLVERTEXATTRIB2HNVPROC :: #type proc "c" (index: GLuint, x: GLhalf, y: GLhalf)
PFNGLVERTEXATTRIB2HVNVPROC :: #type proc "c" (index: GLuint, v: ^GLhalf)
PFNGLVERTEXATTRIB3HNVPROC :: #type proc "c" (index: GLuint, x: GLhalf, y: GLhalf, z: GLhalf)
PFNGLVERTEXATTRIB3HVNVPROC :: #type proc "c" (index: GLuint, v: ^GLhalf)
PFNGLVERTEXATTRIB4HNVPROC :: #type proc "c" (index: GLuint, x: GLhalf, y: GLhalf, z: GLhalf, w: GLhalf)
PFNGLVERTEXATTRIB4HVNVPROC :: #type proc "c" (index: GLuint, v: ^GLhalf)
PFNGLVERTEXATTRIBS1HVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLhalf)
PFNGLVERTEXATTRIBS2HVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLhalf)
PFNGLVERTEXATTRIBS3HVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLhalf)
PFNGLVERTEXATTRIBS4HVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLhalf)
PFNGLVERTEXWEIGHTHNVPROC :: #type proc "c" (weight: GLhalf)
PFNGLVERTEXWEIGHTHVNVPROC :: #type proc "c" (weight: ^GLhalf)
PFNGLVERTEXATTRIBDIVISORNVPROC :: #type proc "c" (index: GLuint, divisor: GLuint)
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, samples: GLsizei, pname: GLenum, bufSize: GLsizei, params: [^]GLint)
PFNGLBUFFERATTACHMEMORYNVPROC :: #type proc "c" (target: GLenum, memory: GLuint, offset: GLuint64)
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC :: #type proc "c" (memory: GLuint, pname: GLenum, first: GLint, count: GLsizei, params: [^]GLuint)
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC :: #type proc "c" (buffer: GLuint, memory: GLuint, offset: GLuint64)
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC :: #type proc "c" (memory: GLuint, pname: GLenum)
PFNGLTEXATTACHMEMORYNVPROC :: #type proc "c" (target: GLenum, memory: GLuint, offset: GLuint64)
PFNGLTEXTUREATTACHMEMORYNVPROC :: #type proc "c" (texture: GLuint, memory: GLuint, offset: GLuint64)
PFNGLBUFFERPAGECOMMITMENTMEMNVPROC :: #type proc "c" (target: GLenum, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean)
PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC :: #type proc "c" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean)
PFNGLTEXPAGECOMMITMENTMEMNVPROC :: #type proc "c" (target: GLenum, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean)
PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC :: #type proc "c" (texture: GLuint, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean)
PFNGLDRAWMESHTASKSINDIRECTNVPROC :: #type proc "c" (indirect: GLintptr)
PFNGLDRAWMESHTASKSNVPROC :: #type proc "c" (first: GLuint, count: GLuint)
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC :: #type proc "c" (indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC :: #type proc "c" (indirect: GLintptr, drawcount: GLsizei, stride: GLsizei)
PFNGLUNIFORMMATRIX2X3FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX2X4FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3X2FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX3X4FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4X2FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLUNIFORMMATRIX4X3FVNVPROC :: #type proc "c" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)
PFNGLBEGINOCCLUSIONQUERYNVPROC :: #type proc "c" (id: GLuint)
PFNGLDELETEOCCLUSIONQUERIESNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLENDOCCLUSIONQUERYNVPROC :: #type proc "c" ()
PFNGLGENOCCLUSIONQUERIESNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETOCCLUSIONQUERYIVNVPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETOCCLUSIONQUERYUIVNVPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLISOCCLUSIONQUERYNVPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC :: #type proc "c" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLint)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC :: #type proc "c" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLuint)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC :: #type proc "c" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLfloat)
PFNGLCOPYPATHNVPROC :: #type proc "c" (resultPath: GLuint, srcPath: GLuint)
PFNGLCOVERFILLPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLCOVERFILLPATHNVPROC :: #type proc "c" (path: GLuint, coverMode: GLenum)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLCOVERSTROKEPATHNVPROC :: #type proc "c" (path: GLuint, coverMode: GLenum)
PFNGLDELETEPATHSNVPROC :: #type proc "c" (path: GLuint, range: GLsizei)
PFNGLGENPATHSNVPROC :: #type proc "c" (range: GLsizei) -> GLuint
PFNGLGETPATHCOLORGENFVNVPROC :: #type proc "c" (color: GLenum, pname: GLenum, value: ^GLfloat)
PFNGLGETPATHCOLORGENIVNVPROC :: #type proc "c" (color: GLenum, pname: GLenum, value: ^GLint)
PFNGLGETPATHCOMMANDSNVPROC :: #type proc "c" (path: GLuint, commands: [^]GLubyte)
PFNGLGETPATHCOORDSNVPROC :: #type proc "c" (path: GLuint, coords: [^]GLfloat)
PFNGLGETPATHDASHARRAYNVPROC :: #type proc "c" (path: GLuint, dashArray: ^GLfloat)
PFNGLGETPATHLENGTHNVPROC :: #type proc "c" (path: GLuint, startSegment: GLsizei, numSegments: GLsizei) -> GLfloat
PFNGLGETPATHMETRICRANGENVPROC :: #type proc "c" (metricQueryMask: GLbitfield, firstPathName: GLuint, numPaths: GLsizei, stride: GLsizei, metrics: [^]GLfloat)
PFNGLGETPATHMETRICSNVPROC :: #type proc "c" (metricQueryMask: GLbitfield, numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, stride: GLsizei, metrics: [^]GLfloat)
PFNGLGETPATHPARAMETERFVNVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: ^GLfloat)
PFNGLGETPATHPARAMETERIVNVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: ^GLint)
PFNGLGETPATHSPACINGNVPROC :: #type proc "c" (pathListMode: GLenum, numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, advanceScale: GLfloat, kerningScale: GLfloat, transformType: GLenum, returnedSpacing: ^GLfloat)
PFNGLGETPATHTEXGENFVNVPROC :: #type proc "c" (texCoordSet: GLenum, pname: GLenum, value: ^GLfloat)
PFNGLGETPATHTEXGENIVNVPROC :: #type proc "c" (texCoordSet: GLenum, pname: GLenum, value: ^GLint)
PFNGLGETPROGRAMRESOURCEFVNVPROC :: #type proc "c" (program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: [^]GLenum, bufSize: GLsizei, length: ^GLsizei, params: [^]GLfloat)
PFNGLINTERPOLATEPATHSNVPROC :: #type proc "c" (resultPath: GLuint, pathA: GLuint, pathB: GLuint, weight: GLfloat)
PFNGLISPATHNVPROC :: #type proc "c" (path: GLuint) -> GLboolean
PFNGLISPOINTINFILLPATHNVPROC :: #type proc "c" (path: GLuint, mask: GLuint, x: GLfloat, y: GLfloat) -> GLboolean
PFNGLISPOINTINSTROKEPATHNVPROC :: #type proc "c" (path: GLuint, x: GLfloat, y: GLfloat) -> GLboolean
PFNGLMATRIXLOAD3X2FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXLOAD3X3FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXMULT3X2FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXMULT3X3FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC :: #type proc "c" (matrixMode: GLenum, m: ^GLfloat)
PFNGLPATHCOLORGENNVPROC :: #type proc "c" (color: GLenum, genMode: GLenum, colorFormat: GLenum, coeffs: [^]GLfloat)
PFNGLPATHCOMMANDSNVPROC :: #type proc "c" (path: GLuint, numCommands: GLsizei, commands: [^]GLubyte, numCoords: GLsizei, coordType: GLenum, coords: rawptr)
PFNGLPATHCOORDSNVPROC :: #type proc "c" (path: GLuint, numCoords: GLsizei, coordType: GLenum, coords: rawptr)
PFNGLPATHCOVERDEPTHFUNCNVPROC :: #type proc "c" (zfunc: GLenum)
PFNGLPATHDASHARRAYNVPROC :: #type proc "c" (path: GLuint, dashCount: GLsizei, dashArray: ^GLfloat)
PFNGLPATHFOGGENNVPROC :: #type proc "c" (genMode: GLenum)
PFNGLPATHGLYPHINDEXARRAYNVPROC :: #type proc "c" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat) -> GLenum
PFNGLPATHGLYPHINDEXRANGENVPROC :: #type proc "c" (fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, pathParameterTemplate: GLuint, emScale: GLfloat, baseAndCount: ^GLuint) -> GLenum
PFNGLPATHGLYPHRANGENVPROC :: #type proc "c" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, firstGlyph: GLuint, numGlyphs: GLsizei, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat)
PFNGLPATHGLYPHSNVPROC :: #type proc "c" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, numGlyphs: GLsizei, type: GLenum, charcodes: rawptr, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat)
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC :: #type proc "c" (firstPathName: GLuint, fontTarget: GLenum, fontSize: GLsizeiptr, fontData: rawptr, faceIndex: GLsizei, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat) -> GLenum
PFNGLPATHPARAMETERFNVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: GLfloat)
PFNGLPATHPARAMETERFVNVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: ^GLfloat)
PFNGLPATHPARAMETERINVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: GLint)
PFNGLPATHPARAMETERIVNVPROC :: #type proc "c" (path: GLuint, pname: GLenum, value: ^GLint)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC :: #type proc "c" (factor: GLfloat, units: GLfloat)
PFNGLPATHSTENCILFUNCNVPROC :: #type proc "c" (func: GLenum, ref: GLint, mask: GLuint)
PFNGLPATHSTRINGNVPROC :: #type proc "c" (path: GLuint, format: GLenum, length: GLsizei, pathString: rawptr)
PFNGLPATHSUBCOMMANDSNVPROC :: #type proc "c" (path: GLuint, commandStart: GLsizei, commandsToDelete: GLsizei, numCommands: GLsizei, commands: [^]GLubyte, numCoords: GLsizei, coordType: GLenum, coords: rawptr)
PFNGLPATHSUBCOORDSNVPROC :: #type proc "c" (path: GLuint, coordStart: GLsizei, numCoords: GLsizei, coordType: GLenum, coords: rawptr)
PFNGLPATHTEXGENNVPROC :: #type proc "c" (texCoordSet: GLenum, genMode: GLenum, components: GLint, coeffs: [^]GLfloat)
PFNGLPOINTALONGPATHNVPROC :: #type proc "c" (path: GLuint, startSegment: GLsizei, numSegments: GLsizei, distance: GLfloat, x: ^GLfloat, y: ^GLfloat, tangentX: ^GLfloat, tangentY: ^GLfloat) -> GLboolean
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC :: #type proc "c" (program: GLuint, location: GLint, genMode: GLenum, components: GLint, coeffs: [^]GLfloat)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, fillMode: GLenum, mask: GLuint, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLSTENCILFILLPATHNVPROC :: #type proc "c" (path: GLuint, fillMode: GLenum, mask: GLuint)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, reference: GLint, mask: GLuint, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLSTENCILSTROKEPATHNVPROC :: #type proc "c" (path: GLuint, reference: GLint, mask: GLuint)
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLSTENCILTHENCOVERFILLPATHNVPROC :: #type proc "c" (path: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum)
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC :: #type proc "c" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC :: #type proc "c" (path: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum)
PFNGLTRANSFORMPATHNVPROC :: #type proc "c" (resultPath: GLuint, srcPath: GLuint, transformType: GLenum, transformValues: [^]GLfloat)
PFNGLWEIGHTPATHSNVPROC :: #type proc "c" (resultPath: GLuint, numPaths: GLsizei, paths: [^]GLuint, weights: [^]GLfloat)
PFNGLFLUSHPIXELDATARANGENVPROC :: #type proc "c" (target: GLenum)
PFNGLPIXELDATARANGENVPROC :: #type proc "c" (target: GLenum, length: GLsizei, pointer: rawptr)
PFNGLPOINTPARAMETERINVPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLPOINTPARAMETERIVNVPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLPOLYGONMODENVPROC :: #type proc "c" (face: GLenum, mode: GLenum)
PFNGLGETVIDEOI64VNVPROC :: #type proc "c" (video_slot: GLuint, pname: GLenum, params: [^]GLint64EXT)
PFNGLGETVIDEOIVNVPROC :: #type proc "c" (video_slot: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVIDEOUI64VNVPROC :: #type proc "c" (video_slot: GLuint, pname: GLenum, params: [^]GLuint64EXT)
PFNGLGETVIDEOUIVNVPROC :: #type proc "c" (video_slot: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLPRESENTFRAMEDUALFILLNVPROC :: #type proc "c" (video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type: GLenum, target0: GLenum, fill0: GLuint, target1: GLenum, fill1: GLuint, target2: GLenum, fill2: GLuint, target3: GLenum, fill3: GLuint)
PFNGLPRESENTFRAMEKEYEDNVPROC :: #type proc "c" (video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type: GLenum, target0: GLenum, fill0: GLuint, key0: GLuint, target1: GLenum, fill1: GLuint, key1: GLuint)
PFNGLPRIMITIVERESTARTINDEXNVPROC :: #type proc "c" (index: GLuint)
PFNGLPRIMITIVERESTARTNVPROC :: #type proc "c" ()
PFNGLREADBUFFERNVPROC :: #type proc "c" (mode: GLenum)
PFNGLCOMBINERINPUTNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum)
PFNGLCOMBINEROUTPUTNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, abOutput: GLenum, cdOutput: GLenum, sumOutput: GLenum, scale: GLenum, bias: GLenum, abDotProduct: GLboolean, cdDotProduct: GLboolean, muxSum: GLboolean)
PFNGLCOMBINERPARAMETERFNVPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLCOMBINERPARAMETERFVNVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLCOMBINERPARAMETERINVPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLCOMBINERPARAMETERIVNVPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLFINALCOMBINERINPUTNVPROC :: #type proc "c" (variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC :: #type proc "c" (stage: GLenum, portion: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC :: #type proc "c" (variable: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC :: #type proc "c" (variable: GLenum, pname: GLenum, params: [^]GLint)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC :: #type proc "c" (stage: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC :: #type proc "c" (stage: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC :: #type proc "c" (target: GLenum, start: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC :: #type proc "c" (framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLRESOLVEDEPTHVALUESNVPROC :: #type proc "c" ()
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLint)
PFNGLSCISSOREXCLUSIVENVPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLGETBUFFERPARAMETERUI64VNVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint64EXT)
PFNGLGETINTEGERUI64VNVPROC :: #type proc "c" (value: GLenum, result: ^GLuint64EXT)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC :: #type proc "c" (buffer: GLuint, pname: GLenum, params: [^]GLuint64EXT)
PFNGLISBUFFERRESIDENTNVPROC :: #type proc "c" (target: GLenum) -> GLboolean
PFNGLISNAMEDBUFFERRESIDENTNVPROC :: #type proc "c" (buffer: GLuint) -> GLboolean
PFNGLMAKEBUFFERNONRESIDENTNVPROC :: #type proc "c" (target: GLenum)
PFNGLMAKEBUFFERRESIDENTNVPROC :: #type proc "c" (target: GLenum, access: GLenum)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC :: #type proc "c" (buffer: GLuint)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC :: #type proc "c" (buffer: GLuint, access: GLenum)
PFNGLPROGRAMUNIFORMUI64NVPROC :: #type proc "c" (program: GLuint, location: GLint, value: GLuint64EXT)
PFNGLPROGRAMUNIFORMUI64VNVPROC :: #type proc "c" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLUNIFORMUI64NVPROC :: #type proc "c" (location: GLint, value: GLuint64EXT)
PFNGLUNIFORMUI64VNVPROC :: #type proc "c" (location: GLint, count: GLsizei, value: ^GLuint64EXT)
PFNGLBINDSHADINGRATEIMAGENVPROC :: #type proc "c" (texture: GLuint)
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC :: #type proc "c" (viewport: GLuint, entry: GLuint, rate: ^GLenum)
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC :: #type proc "c" (rate: GLenum, samples: GLuint, index: GLuint, location: ^GLint)
PFNGLSHADINGRATEIMAGEBARRIERNVPROC :: #type proc "c" (synchronize: GLboolean)
PFNGLSHADINGRATEIMAGEPALETTENVPROC :: #type proc "c" (viewport: GLuint, first: GLuint, count: GLsizei, rates: [^]GLenum)
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC :: #type proc "c" (rate: GLenum, samples: GLuint, locations: [^]GLint)
PFNGLSHADINGRATESAMPLEORDERNVPROC :: #type proc "c" (order: GLenum)
PFNGLCOMPRESSEDTEXIMAGE3DNVPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOPYTEXSUBIMAGE3DNVPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERTEXTURELAYERNVPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
PFNGLTEXIMAGE3DNVPROC :: #type proc "c" (target: GLenum, level: GLint, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE3DNVPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXTUREBARRIERNVPROC :: #type proc "c" ()
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC :: #type proc "c" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC :: #type proc "c" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC :: #type proc "c" (texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC :: #type proc "c" (texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC :: #type proc "c" (texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC :: #type proc "c" (texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean)
PFNGLCREATESEMAPHORESNVPROC :: #type proc "c" (n: GLsizei, semaphores: [^]GLuint)
PFNGLGETSEMAPHOREPARAMETERIVNVPROC :: #type proc "c" (semaphore: GLuint, pname: GLenum, params: [^]GLint)
PFNGLSEMAPHOREPARAMETERIVNVPROC :: #type proc "c" (semaphore: GLuint, pname: GLenum, params: [^]GLint)
PFNGLACTIVEVARYINGNVPROC :: #type proc "c" (program: GLuint, name: ^GLchar)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC :: #type proc "c" (primitiveMode: GLenum)
PFNGLBINDBUFFERBASENVPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint)
PFNGLBINDBUFFEROFFSETNVPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr)
PFNGLBINDBUFFERRANGENVPROC :: #type proc "c" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLENDTRANSFORMFEEDBACKNVPROC :: #type proc "c" ()
PFNGLGETACTIVEVARYINGNVPROC :: #type proc "c" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC :: #type proc "c" (program: GLuint, index: GLuint, location: ^GLint)
PFNGLGETVARYINGLOCATIONNVPROC :: #type proc "c" (program: GLuint, name: ^GLchar) -> GLint
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC :: #type proc "c" (count: GLuint, attribs: [^]GLint, bufferMode: GLenum)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC :: #type proc "c" (program: GLuint, count: GLsizei, locations: [^]GLint, bufferMode: GLenum)
PFNGLBINDTRANSFORMFEEDBACKNVPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC :: #type proc "c" (mode: GLenum, id: GLuint)
PFNGLGENTRANSFORMFEEDBACKSNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLISTRANSFORMFEEDBACKNVPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLPAUSETRANSFORMFEEDBACKNVPROC :: #type proc "c" ()
PFNGLRESUMETRANSFORMFEEDBACKNVPROC :: #type proc "c" ()
GLvdpauSurfaceNV :: GLintptr
PFNGLVDPAUFININVPROC :: #type proc "c" ()
PFNGLVDPAUGETSURFACEIVNVPROC :: #type proc "c" (surface: GLvdpauSurfaceNV, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint)
PFNGLVDPAUINITNVPROC :: #type proc "c" (vdpDevice: rawptr, getProcAddress: rawptr)
PFNGLVDPAUISSURFACENVPROC :: #type proc "c" (surface: GLvdpauSurfaceNV)
PFNGLVDPAUMAPSURFACESNVPROC :: #type proc "c" (numSurfaces: GLsizei, surfaces: [^]GLvdpauSurfaceNV)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC :: #type proc "c" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint) -> GLvdpauSurfaceNV
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC :: #type proc "c" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint) -> GLvdpauSurfaceNV
PFNGLVDPAUSURFACEACCESSNVPROC :: #type proc "c" (surface: GLvdpauSurfaceNV, access: GLenum)
PFNGLVDPAUUNMAPSURFACESNVPROC :: #type proc "c" (numSurface: GLsizei, surfaces: [^]GLvdpauSurfaceNV)
PFNGLVDPAUUNREGISTERSURFACENVPROC :: #type proc "c" (surface: GLvdpauSurfaceNV)
PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC :: #type proc "c" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint, isFrameStructure: GLboolean) -> GLvdpauSurfaceNV
PFNGLFLUSHVERTEXARRAYRANGENVPROC :: #type proc "c" ()
PFNGLVERTEXARRAYRANGENVPROC :: #type proc "c" (length: GLsizei, pointer: rawptr)
PFNGLGETVERTEXATTRIBLI64VNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint64EXT)
PFNGLGETVERTEXATTRIBLUI64VNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLuint64EXT)
PFNGLVERTEXATTRIBL1I64NVPROC :: #type proc "c" (index: GLuint, x: GLint64EXT)
PFNGLVERTEXATTRIBL1I64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLint64EXT)
PFNGLVERTEXATTRIBL1UI64NVPROC :: #type proc "c" (index: GLuint, x: GLuint64EXT)
PFNGLVERTEXATTRIBL1UI64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLuint64EXT)
PFNGLVERTEXATTRIBL2I64NVPROC :: #type proc "c" (index: GLuint, x: GLint64EXT, y: GLint64EXT)
PFNGLVERTEXATTRIBL2I64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLint64EXT)
PFNGLVERTEXATTRIBL2UI64NVPROC :: #type proc "c" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT)
PFNGLVERTEXATTRIBL2UI64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLuint64EXT)
PFNGLVERTEXATTRIBL3I64NVPROC :: #type proc "c" (index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
PFNGLVERTEXATTRIBL3I64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLint64EXT)
PFNGLVERTEXATTRIBL3UI64NVPROC :: #type proc "c" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
PFNGLVERTEXATTRIBL3UI64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLuint64EXT)
PFNGLVERTEXATTRIBL4I64NVPROC :: #type proc "c" (index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
PFNGLVERTEXATTRIBL4I64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLint64EXT)
PFNGLVERTEXATTRIBL4UI64NVPROC :: #type proc "c" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
PFNGLVERTEXATTRIBL4UI64VNVPROC :: #type proc "c" (index: GLuint, v: ^GLuint64EXT)
PFNGLVERTEXATTRIBLFORMATNVPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei)
PFNGLBUFFERADDRESSRANGENVPROC :: #type proc "c" (pname: GLenum, index: GLuint, address: GLuint64EXT, length: GLsizeiptr)
PFNGLCOLORFORMATNVPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei)
PFNGLEDGEFLAGFORMATNVPROC :: #type proc "c" (stride: GLsizei)
PFNGLFOGCOORDFORMATNVPROC :: #type proc "c" (type: GLenum, stride: GLsizei)
PFNGLGETINTEGERUI64I_VNVPROC :: #type proc "c" (value: GLenum, index: GLuint, result: [^]GLuint64EXT)
PFNGLINDEXFORMATNVPROC :: #type proc "c" (type: GLenum, stride: GLsizei)
PFNGLNORMALFORMATNVPROC :: #type proc "c" (type: GLenum, stride: GLsizei)
PFNGLSECONDARYCOLORFORMATNVPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei)
PFNGLTEXCOORDFORMATNVPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei)
PFNGLVERTEXATTRIBFORMATNVPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei)
PFNGLVERTEXATTRIBIFORMATNVPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei)
PFNGLVERTEXFORMATNVPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei)
PFNGLAREPROGRAMSRESIDENTNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint, residences: [^]GLboolean) -> GLboolean
PFNGLBINDPROGRAMNVPROC :: #type proc "c" (target: GLenum, id: GLuint)
PFNGLDELETEPROGRAMSNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLEXECUTEPROGRAMNVPROC :: #type proc "c" (target: GLenum, id: GLuint, params: [^]GLfloat)
PFNGLGENPROGRAMSNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLGETPROGRAMPARAMETERDVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLGETPROGRAMPARAMETERFVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETPROGRAMSTRINGNVPROC :: #type proc "c" (id: GLuint, pname: GLenum, program: ^GLubyte)
PFNGLGETPROGRAMIVNVPROC :: #type proc "c" (id: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETTRACKMATRIXIVNVPROC :: #type proc "c" (target: GLenum, address: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, pointer: ^rawptr)
PFNGLGETVERTEXATTRIBDVNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLGETVERTEXATTRIBFVNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVERTEXATTRIBIVNVPROC :: #type proc "c" (index: GLuint, pname: GLenum, params: [^]GLint)
PFNGLISPROGRAMNVPROC :: #type proc "c" (id: GLuint) -> GLboolean
PFNGLLOADPROGRAMNVPROC :: #type proc "c" (target: GLenum, id: GLuint, len: GLsizei, program: ^GLubyte)
PFNGLPROGRAMPARAMETER4DNVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLPROGRAMPARAMETER4DVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLdouble)
PFNGLPROGRAMPARAMETER4FNVPROC :: #type proc "c" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLPROGRAMPARAMETER4FVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, params: [^]GLfloat)
PFNGLPROGRAMPARAMETERS4DVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, num: GLsizei, params: [^]GLdouble)
PFNGLPROGRAMPARAMETERS4FVNVPROC :: #type proc "c" (target: GLenum, index: GLuint, num: GLsizei, params: [^]GLfloat)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC :: #type proc "c" (n: GLsizei, ids: [^]GLuint)
PFNGLTRACKMATRIXNVPROC :: #type proc "c" (target: GLenum, address: GLuint, matrix_: GLenum, transform: GLenum)
PFNGLVERTEXATTRIB1DNVPROC :: #type proc "c" (index: GLuint, x: GLdouble)
PFNGLVERTEXATTRIB1DVNVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB1FNVPROC :: #type proc "c" (index: GLuint, x: GLfloat)
PFNGLVERTEXATTRIB1FVNVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB1SNVPROC :: #type proc "c" (index: GLuint, x: GLshort)
PFNGLVERTEXATTRIB1SVNVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB2DNVPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble)
PFNGLVERTEXATTRIB2DVNVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB2FNVPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat)
PFNGLVERTEXATTRIB2FVNVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB2SNVPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort)
PFNGLVERTEXATTRIB2SVNVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB3DNVPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)
PFNGLVERTEXATTRIB3DVNVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB3FNVPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLVERTEXATTRIB3FVNVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB3SNVPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort)
PFNGLVERTEXATTRIB3SVNVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4DNVPROC :: #type proc "c" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
PFNGLVERTEXATTRIB4DVNVPROC :: #type proc "c" (index: GLuint, v: ^GLdouble)
PFNGLVERTEXATTRIB4FNVPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLVERTEXATTRIB4FVNVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVERTEXATTRIB4SNVPROC :: #type proc "c" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort)
PFNGLVERTEXATTRIB4SVNVPROC :: #type proc "c" (index: GLuint, v: ^GLshort)
PFNGLVERTEXATTRIB4UBNVPROC :: #type proc "c" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte)
PFNGLVERTEXATTRIB4UBVNVPROC :: #type proc "c" (index: GLuint, v: ^GLubyte)
PFNGLVERTEXATTRIBPOINTERNVPROC :: #type proc "c" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLVERTEXATTRIBS1DVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLdouble)
PFNGLVERTEXATTRIBS1FVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLfloat)
PFNGLVERTEXATTRIBS1SVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLshort)
PFNGLVERTEXATTRIBS2DVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLdouble)
PFNGLVERTEXATTRIBS2FVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLfloat)
PFNGLVERTEXATTRIBS2SVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLshort)
PFNGLVERTEXATTRIBS3DVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLdouble)
PFNGLVERTEXATTRIBS3FVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLfloat)
PFNGLVERTEXATTRIBS3SVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLshort)
PFNGLVERTEXATTRIBS4DVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLdouble)
PFNGLVERTEXATTRIBS4FVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLfloat)
PFNGLVERTEXATTRIBS4SVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLshort)
PFNGLVERTEXATTRIBS4UBVNVPROC :: #type proc "c" (index: GLuint, n: GLsizei, v: ^GLubyte)
PFNGLBEGINVIDEOCAPTURENVPROC :: #type proc "c" (video_capture_slot: GLuint)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, offset: GLintptrARB)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, target: GLenum, texture: GLuint)
PFNGLENDVIDEOCAPTURENVPROC :: #type proc "c" (video_capture_slot: GLuint)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETVIDEOCAPTUREIVNVPROC :: #type proc "c" (video_capture_slot: GLuint, pname: GLenum, params: [^]GLint)
PFNGLVIDEOCAPTURENVPROC :: #type proc "c" (video_capture_slot: GLuint, sequence_num: ^GLuint, capture_time: ^GLuint64EXT) -> GLenum
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLdouble)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLfloat)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC :: #type proc "c" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLint)
PFNGLDEPTHRANGEARRAYFVNVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLDEPTHRANGEINDEXEDFNVPROC :: #type proc "c" (index: GLuint, n: GLfloat, f: GLfloat)
PFNGLDISABLEINVPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLENABLEINVPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLGETFLOATI_VNVPROC :: #type proc "c" (target: GLenum, index: GLuint, data: ^GLfloat)
PFNGLISENABLEDINVPROC :: #type proc "c" (target: GLenum, index: GLuint) -> GLboolean
PFNGLSCISSORARRAYVNVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLint)
PFNGLSCISSORINDEXEDNVPROC :: #type proc "c" (index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei)
PFNGLSCISSORINDEXEDVNVPROC :: #type proc "c" (index: GLuint, v: ^GLint)
PFNGLVIEWPORTARRAYVNVPROC :: #type proc "c" (first: GLuint, count: GLsizei, v: ^GLfloat)
PFNGLVIEWPORTINDEXEDFNVPROC :: #type proc "c" (index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat)
PFNGLVIEWPORTINDEXEDFVNVPROC :: #type proc "c" (index: GLuint, v: ^GLfloat)
PFNGLVIEWPORTSWIZZLENVPROC :: #type proc "c" (index: GLuint, swizzlex: GLenum, swizzley: GLenum, swizzlez: GLenum, swizzlew: GLenum)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC :: #type proc "c" (target: GLenum, image: GLeglImageOES)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC :: #type proc "c" (target: GLenum, image: GLeglImageOES)
PFNGLBLENDEQUATIONSEPARATEOESPROC :: #type proc "c" (modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDFUNCSEPARATEOESPROC :: #type proc "c" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)
PFNGLBLENDEQUATIONOESPROC :: #type proc "c" (mode: GLenum)
PFNGLCOPYIMAGESUBDATAOESPROC :: #type proc "c" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei)
PFNGLBLENDEQUATIONSEPARATEIOESPROC :: #type proc "c" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
PFNGLBLENDEQUATIONIOESPROC :: #type proc "c" (buf: GLuint, mode: GLenum)
PFNGLBLENDFUNCSEPARATEIOESPROC :: #type proc "c" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
PFNGLBLENDFUNCIOESPROC :: #type proc "c" (buf: GLuint, src: GLenum, dst: GLenum)
PFNGLCOLORMASKIOESPROC :: #type proc "c" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean)
PFNGLDISABLEIOESPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLENABLEIOESPROC :: #type proc "c" (target: GLenum, index: GLuint)
PFNGLISENABLEDIOESPROC :: #type proc "c" (target: GLenum, index: GLuint) -> GLboolean
PFNGLBINDFRAMEBUFFEROESPROC :: #type proc "c" (target: GLenum, framebuffer: GLuint)
PFNGLBINDRENDERBUFFEROESPROC :: #type proc "c" (target: GLenum, renderbuffer: GLuint)
PFNGLCHECKFRAMEBUFFERSTATUSOESPROC :: #type proc "c" (target: GLenum) -> GLenum
PFNGLDELETEFRAMEBUFFERSOESPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLDELETERENDERBUFFERSOESPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLFRAMEBUFFERRENDERBUFFEROESPROC :: #type proc "c" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
PFNGLFRAMEBUFFERTEXTURE2DOESPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
PFNGLGENFRAMEBUFFERSOESPROC :: #type proc "c" (n: GLsizei, framebuffers: [^]GLuint)
PFNGLGENRENDERBUFFERSOESPROC :: #type proc "c" (n: GLsizei, renderbuffers: [^]GLuint)
PFNGLGENERATEMIPMAPOESPROC :: #type proc "c" (target: GLenum)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC :: #type proc "c" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETRENDERBUFFERPARAMETERIVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLISFRAMEBUFFEROESPROC :: #type proc "c" (framebuffer: GLuint) -> GLboolean
PFNGLISRENDERBUFFEROESPROC :: #type proc "c" (renderbuffer: GLuint) -> GLboolean
PFNGLRENDERBUFFERSTORAGEOESPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)
PFNGLGETPROGRAMBINARYOESPROC :: #type proc "c" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, binaryFormat: ^GLenum, binary: rawptr)
PFNGLPROGRAMBINARYOESPROC :: #type proc "c" (program: GLuint, binaryFormat: GLenum, binary: rawptr, length: GLint)
PFNGLGETBUFFERPOINTERVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]rawptr)
PFNGLMAPBUFFEROESPROC :: #type proc "c" (target: GLenum, access: GLenum) -> rawptr
PFNGLUNMAPBUFFEROESPROC :: #type proc "c" (target: GLenum) -> GLboolean
PFNGLCURRENTPALETTEMATRIXOESPROC :: #type proc "c" (index: GLuint)
PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC :: #type proc "c" ()
PFNGLMATRIXINDEXPOINTEROESPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLWEIGHTPOINTEROESPROC :: #type proc "c" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLMINSAMPLESHADINGOESPROC :: #type proc "c" (value: GLfloat)
PFNGLCLEARDEPTHFOESPROC :: #type proc "c" (depth: GLclampf)
PFNGLCLIPPLANEFOESPROC :: #type proc "c" (plane: GLenum, equation: ^GLfloat)
PFNGLDEPTHRANGEFOESPROC :: #type proc "c" (n: GLclampf, f: GLclampf)
PFNGLFRUSTUMFOESPROC :: #type proc "c" (l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat)
PFNGLGETCLIPPLANEFOESPROC :: #type proc "c" (plane: GLenum, equation: ^GLfloat)
PFNGLORTHOFOESPROC :: #type proc "c" (l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat)
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr)
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr)
PFNGLCOPYTEXSUBIMAGE3DOESPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
PFNGLFRAMEBUFFERTEXTURE3DOESPROC :: #type proc "c" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)
PFNGLTEXIMAGE3DOESPROC :: #type proc "c" (target: GLenum, level: GLint, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE3DOESPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLGETSAMPLERPARAMETERIIVOESPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLGETSAMPLERPARAMETERIUIVOESPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLGETTEXPARAMETERIIVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETTEXPARAMETERIUIVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLSAMPLERPARAMETERIIVOESPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLint)
PFNGLSAMPLERPARAMETERIUIVOESPROC :: #type proc "c" (sampler: GLuint, pname: GLenum, params: [^]GLuint)
PFNGLTEXPARAMETERIIVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLTEXPARAMETERIUIVOESPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLuint)
PFNGLTEXBUFFEROESPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, buffer: GLuint)
PFNGLTEXBUFFERRANGEOESPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
PFNGLGETTEXGENFVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETTEXGENIVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETTEXGENXVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLTEXGENFOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, param: GLfloat)
PFNGLTEXGENFVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLTEXGENIOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, param: GLint)
PFNGLTEXGENIVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLint)
PFNGLTEXGENXOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, param: GLfixed)
PFNGLTEXGENXVOESPROC :: #type proc "c" (coord: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC :: #type proc "c" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
PFNGLTEXTUREVIEWOESPROC :: #type proc "c" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint)
PFNGLBINDVERTEXARRAYOESPROC :: #type proc "c" (array: GLuint)
PFNGLDELETEVERTEXARRAYSOESPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLGENVERTEXARRAYSOESPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLISVERTEXARRAYOESPROC :: #type proc "c" (array: GLuint) -> GLboolean
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, baseViewIndex: GLint, numViews: GLsizei)
PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC :: #type proc "c" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, baseViewIndex: GLint, numViews: GLsizei)
PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC :: #type proc "c" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, samples: GLsizei, baseViewIndex: GLint, numViews: GLsizei)
PFNGLALPHAFUNCQCOMPROC :: #type proc "c" (func: GLenum, ref: GLclampf)
PFNGLDISABLEDRIVERCONTROLQCOMPROC :: #type proc "c" (driverControl: GLuint)
PFNGLENABLEDRIVERCONTROLQCOMPROC :: #type proc "c" (driverControl: GLuint)
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC :: #type proc "c" (driverControl: GLuint, bufSize: GLsizei, length: ^GLsizei, driverControlString: ^GLchar)
PFNGLGETDRIVERCONTROLSQCOMPROC :: #type proc "c" (num: ^GLint, size: GLsizei, driverControls: [^]GLuint)
PFNGLEXTGETBUFFERPOINTERVQCOMPROC :: #type proc "c" (target: GLenum, params: [^]rawptr)
PFNGLEXTGETBUFFERSQCOMPROC :: #type proc "c" (buffers: [^]GLuint, maxBuffers: GLint, numBuffers: [^]GLint)
PFNGLEXTGETFRAMEBUFFERSQCOMPROC :: #type proc "c" (framebuffers: [^]GLuint, maxFramebuffers: GLint, numFramebuffers: [^]GLint)
PFNGLEXTGETRENDERBUFFERSQCOMPROC :: #type proc "c" (renderbuffers: [^]GLuint, maxRenderbuffers: GLint, numRenderbuffers: [^]GLint)
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC :: #type proc "c" (texture: GLuint, face: GLenum, level: GLint, pname: GLenum, params: [^]GLint)
PFNGLEXTGETTEXSUBIMAGEQCOMPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, texels: rawptr)
PFNGLEXTGETTEXTURESQCOMPROC :: #type proc "c" (textures: [^]GLuint, maxTextures: GLint, numTextures: [^]GLint)
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC :: #type proc "c" (program: GLuint, shadertype: GLenum, source: ^GLchar, length: ^GLint)
PFNGLEXTGETPROGRAMSQCOMPROC :: #type proc "c" (programs: [^]GLuint, maxPrograms: GLint, numPrograms: [^]GLint)
PFNGLEXTGETSHADERSQCOMPROC :: #type proc "c" (shaders: [^]GLuint, maxShaders: GLint, numShaders: [^]GLint)
PFNGLEXTISPROGRAMBINARYQCOMPROC :: #type proc "c" (program: GLuint) -> GLboolean
PFNGLEXTRAPOLATETEX2DQCOMPROC :: #type proc "c" (src1: GLuint, src2: GLuint, output: GLuint, scaleFactor: GLfloat)
PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC :: #type proc "c" (fbo: GLuint, numLayers: GLuint, focalPointsPerLayer: GLuint, requestedFeatures: GLuint, providedFeatures: [^]GLuint)
PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC :: #type proc "c" (fbo: GLuint, layer: GLuint, focalPoint: GLuint, focalX: GLfloat, focalY: GLfloat, gainX: GLfloat, gainY: GLfloat, foveaArea: GLfloat)
PFNGLTEXESTIMATEMOTIONQCOMPROC :: #type proc "c" (ref: GLuint, target: GLuint, output: GLuint)
PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC :: #type proc "c" (ref: GLuint, target: GLuint, output: GLuint, mask: GLuint)
PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC :: #type proc "c" ()
PFNGLSHADINGRATEQCOMPROC :: #type proc "c" (rate: GLenum)
PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC :: #type proc "c" (texture: GLuint, layer: GLuint, focalPoint: GLuint, focalX: GLfloat, focalY: GLfloat, gainX: GLfloat, gainY: GLfloat, foveaArea: GLfloat)
PFNGLENDTILINGQCOMPROC :: #type proc "c" (preserveMask: GLbitfield)
PFNGLSTARTTILINGQCOMPROC :: #type proc "c" (x: GLuint, y: GLuint, width: GLuint, height: GLuint, preserveMask: GLbitfield)
GLclampx :: i32
PFNGLALPHAFUNCXPROC :: #type proc "c" (func: GLenum, ref: GLclampx)
PFNGLCLEARCOLORXPROC :: #type proc "c" (red: GLclampx, green: GLclampx, blue: GLclampx, alpha: GLclampx)
PFNGLCLEARDEPTHXPROC :: #type proc "c" (depth: GLclampx)
PFNGLCOLOR4XPROC :: #type proc "c" (red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed)
PFNGLDEPTHRANGEXPROC :: #type proc "c" (zNear: GLclampx, zFar: GLclampx)
PFNGLFOGXPROC :: #type proc "c" (pname: GLenum, param: GLfixed)
PFNGLFOGXVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfixed)
PFNGLFRUSTUMFPROC :: #type proc "c" (left: GLfloat, right: GLfloat, bottom: GLfloat, top: GLfloat, zNear: GLfloat, zFar: GLfloat)
PFNGLFRUSTUMXPROC :: #type proc "c" (left: GLfixed, right: GLfixed, bottom: GLfixed, top: GLfixed, zNear: GLfixed, zFar: GLfixed)
PFNGLLIGHTMODELXPROC :: #type proc "c" (pname: GLenum, param: GLfixed)
PFNGLLIGHTMODELXVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfixed)
PFNGLLIGHTXPROC :: #type proc "c" (light: GLenum, pname: GLenum, param: GLfixed)
PFNGLLIGHTXVPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLLINEWIDTHXPROC :: #type proc "c" (width: GLfixed)
PFNGLLOADMATRIXXPROC :: #type proc "c" (m: ^GLfixed)
PFNGLMATERIALXPROC :: #type proc "c" (face: GLenum, pname: GLenum, param: GLfixed)
PFNGLMATERIALXVPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLMULTMATRIXXPROC :: #type proc "c" (m: ^GLfixed)
PFNGLMULTITEXCOORD4XPROC :: #type proc "c" (target: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed)
PFNGLNORMAL3XPROC :: #type proc "c" (nx: GLfixed, ny: GLfixed, nz: GLfixed)
PFNGLORTHOFPROC :: #type proc "c" (left: GLfloat, right: GLfloat, bottom: GLfloat, top: GLfloat, zNear: GLfloat, zFar: GLfloat)
PFNGLORTHOXPROC :: #type proc "c" (left: GLfixed, right: GLfixed, bottom: GLfixed, top: GLfixed, zNear: GLfixed, zFar: GLfixed)
PFNGLPOINTSIZEXPROC :: #type proc "c" (size: GLfixed)
PFNGLPOLYGONOFFSETXPROC :: #type proc "c" (factor: GLfixed, units: GLfixed)
PFNGLROTATEXPROC :: #type proc "c" (angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed)
PFNGLSAMPLECOVERAGEXPROC :: #type proc "c" (value: GLclampx, invert: GLboolean)
PFNGLSCALEXPROC :: #type proc "c" (x: GLfixed, y: GLfixed, z: GLfixed)
PFNGLTEXENVXPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfixed)
PFNGLTEXENVXVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLTEXPARAMETERXPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfixed)
PFNGLTRANSLATEXPROC :: #type proc "c" (x: GLfixed, y: GLfixed, z: GLfixed)
PFNGLCLIPPLANEFPROC :: #type proc "c" (plane: GLenum, equation: ^GLfloat)
PFNGLCLIPPLANEXPROC :: #type proc "c" (plane: GLenum, equation: ^GLfixed)
PFNGLGETCLIPPLANEFPROC :: #type proc "c" (pname: GLenum, eqn: [4]GLfloat)
PFNGLGETCLIPPLANEXPROC :: #type proc "c" (pname: GLenum, eqn: [4]GLfixed)
PFNGLGETFIXEDVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfixed)
PFNGLGETLIGHTXVPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLGETMATERIALXVPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLGETTEXENVXVPROC :: #type proc "c" (env: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLGETTEXPARAMETERXVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLPOINTPARAMETERXPROC :: #type proc "c" (pname: GLenum, param: GLfixed)
PFNGLPOINTPARAMETERXVPROC :: #type proc "c" (pname: GLenum, params: [^]GLfixed)
PFNGLPOINTSIZEPOINTEROESPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLTEXPARAMETERXVPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfixed)
PFNGLERRORSTRINGREGALPROC :: #type proc "c" (error: GLenum) -> ^GLchar
PFNGLGETEXTENSIONREGALPROC :: #type proc "c" (ext: ^GLchar) -> GLboolean
PFNGLISSUPPORTEDREGALPROC :: #type proc "c" (ext: ^GLchar) -> GLboolean
GLLOGPROCREGAL :: #type proc "c" (stream: GLenum, length: GLsizei, message: ^GLchar, context_: rawptr)
PFNGLLOGMESSAGECALLBACKREGALPROC :: #type proc "c" (callback: GLLOGPROCREGAL)
PFNGLGETPROCADDRESSREGALPROC :: #type proc "c" (name: ^GLchar) -> rawptr
PFNGLDETAILTEXFUNCSGISPROC :: #type proc "c" (target: GLenum, n: GLsizei, points: [^]GLfloat)
PFNGLGETDETAILTEXFUNCSGISPROC :: #type proc "c" (target: GLenum, points: [^]GLfloat)
PFNGLFOGFUNCSGISPROC :: #type proc "c" (n: GLsizei, points: [^]GLfloat)
PFNGLGETFOGFUNCSGISPROC :: #type proc "c" (points: [^]GLfloat)
PFNGLSAMPLEMASKSGISPROC :: #type proc "c" (value: GLclampf, invert: GLboolean)
PFNGLSAMPLEPATTERNSGISPROC :: #type proc "c" (pattern: GLenum)
PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC :: #type proc "c" (factor: GLint)
PFNGLSELECTTEXTURECOORDSETSGISPROC :: #type proc "c" (target: GLenum)
PFNGLSELECTTEXTURESGISPROC :: #type proc "c" (target: GLenum)
PFNGLSELECTTEXTURETRANSFORMSGISPROC :: #type proc "c" (target: GLenum)
PFNGLMULTISAMPLESUBRECTPOSSGISPROC :: #type proc "c" (x: GLint, y: GLint)
PFNGLGETSHARPENTEXFUNCSGISPROC :: #type proc "c" (target: GLenum, points: [^]GLfloat)
PFNGLSHARPENTEXFUNCSGISPROC :: #type proc "c" (target: GLenum, n: GLsizei, points: [^]GLfloat)
PFNGLTEXIMAGE4DSGISPROC :: #type proc "c" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, extent: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLTEXSUBIMAGE4DSGISPROC :: #type proc "c" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, woffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, extent: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLGETTEXFILTERFUNCSGISPROC :: #type proc "c" (target: GLenum, filter: GLenum, weights: [^]GLfloat)
PFNGLTEXFILTERFUNCSGISPROC :: #type proc "c" (target: GLenum, filter: GLenum, n: GLsizei, weights: [^]GLfloat)
PFNGLASYNCMARKERSGIXPROC :: #type proc "c" (marker: GLuint)
PFNGLDELETEASYNCMARKERSSGIXPROC :: #type proc "c" (marker: GLuint, range: GLsizei)
PFNGLFINISHASYNCSGIXPROC :: #type proc "c" (markerp: ^GLuint) -> GLint
PFNGLGENASYNCMARKERSSGIXPROC :: #type proc "c" (range: GLsizei) -> GLuint
PFNGLISASYNCMARKERSGIXPROC :: #type proc "c" (marker: GLuint) -> GLboolean
PFNGLPOLLASYNCSGIXPROC :: #type proc "c" (markerp: ^GLuint) -> GLint
PFNGLADDRESSSPACEPROC :: #type proc "c" (space: GLenum, mask: GLbitfield)
PFNGLDATAPIPEPROC :: #type proc "c" (space: GLenum) -> GLint
PFNGLFLUSHRASTERSGIXPROC :: #type proc "c" ()
PFNGLFOGLAYERSSGIXPROC :: #type proc "c" (n: GLsizei, points: [^]GLfloat)
PFNGLGETFOGLAYERSSGIXPROC :: #type proc "c" (points: [^]GLfloat)
PFNGLTEXTUREFOGSGIXPROC :: #type proc "c" (pname: GLenum)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC :: #type proc "c" (face: GLenum, mode: GLenum)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTLIGHTMODELISGIXPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLFRAGMENTLIGHTFSGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, param: GLfloat)
PFNGLFRAGMENTLIGHTFVSGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTLIGHTISGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, param: GLint)
PFNGLFRAGMENTLIGHTIVSGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, params: [^]GLint)
PFNGLFRAGMENTMATERIALFSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, param: GLfloat)
PFNGLFRAGMENTMATERIALFVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLFRAGMENTMATERIALISGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, param: GLint)
PFNGLFRAGMENTMATERIALIVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC :: #type proc "c" (light: GLenum, value: GLenum, data: ^GLfloat)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC :: #type proc "c" (light: GLenum, value: GLenum, data: ^GLint)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, data: ^GLfloat)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, data: ^GLint)
PFNGLFRAMEZOOMSGIXPROC :: #type proc "c" (factor: GLint)
PFNGLIGLOOINTERFACESGIXPROC :: #type proc "c" (pname: GLenum, param: rawptr)
PFNGLALLOCMPEGPREDICTORSSGIXPROC :: #type proc "c" (width: GLsizei, height: GLsizei, n: GLsizei, predictors: [^]GLuint)
PFNGLDELETEMPEGPREDICTORSSGIXPROC :: #type proc "c" (n: GLsizei, predictors: [^]GLuint)
PFNGLGENMPEGPREDICTORSSGIXPROC :: #type proc "c" (n: GLsizei, predictors: [^]GLuint)
PFNGLGETMPEGPARAMETERFVSGIXPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETMPEGPARAMETERIVSGIXPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETMPEGPREDICTORSGIXPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLGETMPEGQUANTTABLEUBVPROC :: #type proc "c" (target: GLenum, values: [^]GLubyte)
PFNGLISMPEGPREDICTORSGIXPROC :: #type proc "c" (predictor: GLuint) -> GLboolean
PFNGLMPEGPREDICTORSGIXPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLMPEGQUANTTABLEUBVPROC :: #type proc "c" (target: GLenum, values: [^]GLubyte)
PFNGLSWAPMPEGPREDICTORSSGIXPROC :: #type proc "c" (target0: GLenum, target1: GLenum)
PFNGLGETNONLINLIGHTFVSGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, terms: [^]GLint, data: ^GLfloat)
PFNGLGETNONLINMATERIALFVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, terms: [^]GLint, data: ^GLfloat)
PFNGLNONLINLIGHTFVSGIXPROC :: #type proc "c" (light: GLenum, pname: GLenum, terms: GLint, params: [^]GLfloat)
PFNGLNONLINMATERIALFVSGIXPROC :: #type proc "c" (face: GLenum, pname: GLenum, terms: GLint, params: [^]GLfloat)
PFNGLPIXELTEXGENSGIXPROC :: #type proc "c" (mode: GLenum)
PFNGLDEFORMSGIXPROC :: #type proc "c" (mask: GLbitfield)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC :: #type proc "c" (mask: GLbitfield)
PFNGLMESHBREADTHSGIXPROC :: #type proc "c" (breadth: GLint)
PFNGLMESHSTRIDESGIXPROC :: #type proc "c" (stride: GLint)
PFNGLREFERENCEPLANESGIXPROC :: #type proc "c" (equation: ^GLdouble)
PFNGLSPRITEPARAMETERFSGIXPROC :: #type proc "c" (pname: GLenum, param: GLfloat)
PFNGLSPRITEPARAMETERFVSGIXPROC :: #type proc "c" (pname: GLenum, params: [^]GLfloat)
PFNGLSPRITEPARAMETERISGIXPROC :: #type proc "c" (pname: GLenum, param: GLint)
PFNGLSPRITEPARAMETERIVSGIXPROC :: #type proc "c" (pname: GLenum, params: [^]GLint)
PFNGLTAGSAMPLEBUFFERSGIXPROC :: #type proc "c" ()
PFNGLGETVECTOROPERATIONSGIXPROC :: #type proc "c" (operation: GLenum)
PFNGLVECTOROPERATIONSGIXPROC :: #type proc "c" (operation: GLenum)
PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint, residences: [^]GLboolean) -> GLboolean
PFNGLBINDVERTEXARRAYSGIXPROC :: #type proc "c" (array: GLuint)
PFNGLDELETEVERTEXARRAYSSGIXPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLGENVERTEXARRAYSSGIXPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint)
PFNGLISVERTEXARRAYSGIXPROC :: #type proc "c" (array: GLuint) -> GLboolean
PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC :: #type proc "c" (n: GLsizei, arrays: [^]GLuint, priorities: [^]GLclampf)
PFNGLCOLORTABLEPARAMETERFVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLCOLORTABLEPARAMETERIVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLCOLORTABLESGIPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, table: rawptr)
PFNGLCOPYCOLORTABLESGIPROC :: #type proc "c" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLGETCOLORTABLESGIPROC :: #type proc "c" (target: GLenum, format: GLenum, type: GLenum, table: rawptr)
PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLPIXELTRANSFORMPARAMETERFSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLfloat)
PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLfloat)
PFNGLPIXELTRANSFORMPARAMETERISGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, param: GLint)
PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC :: #type proc "c" (target: GLenum, pname: GLenum, params: [^]GLint)
PFNGLPIXELTRANSFORMSGIPROC :: #type proc "c" (target: GLenum)
PFNGLFINISHTEXTURESUNXPROC :: #type proc "c" ()
PFNGLGLOBALALPHAFACTORBSUNPROC :: #type proc "c" (factor: GLbyte)
PFNGLGLOBALALPHAFACTORDSUNPROC :: #type proc "c" (factor: GLdouble)
PFNGLGLOBALALPHAFACTORFSUNPROC :: #type proc "c" (factor: GLfloat)
PFNGLGLOBALALPHAFACTORISUNPROC :: #type proc "c" (factor: GLint)
PFNGLGLOBALALPHAFACTORSSUNPROC :: #type proc "c" (factor: GLshort)
PFNGLGLOBALALPHAFACTORUBSUNPROC :: #type proc "c" (factor: GLubyte)
PFNGLGLOBALALPHAFACTORUISUNPROC :: #type proc "c" (factor: GLuint)
PFNGLGLOBALALPHAFACTORUSSUNPROC :: #type proc "c" (factor: GLushort)
PFNGLREADVIDEOPIXELSSUNPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr)
PFNGLREPLACEMENTCODEPOINTERSUNPROC :: #type proc "c" (type: GLenum, stride: GLsizei, pointer: rawptr)
PFNGLREPLACEMENTCODEUBSUNPROC :: #type proc "c" (code: GLubyte)
PFNGLREPLACEMENTCODEUBVSUNPROC :: #type proc "c" (code: ^GLubyte)
PFNGLREPLACEMENTCODEUISUNPROC :: #type proc "c" (code: GLuint)
PFNGLREPLACEMENTCODEUIVSUNPROC :: #type proc "c" (code: ^GLuint)
PFNGLREPLACEMENTCODEUSSUNPROC :: #type proc "c" (code: GLushort)
PFNGLREPLACEMENTCODEUSVSUNPROC :: #type proc "c" (code: ^GLushort)
PFNGLCOLOR3FVERTEX3FSUNPROC :: #type proc "c" (r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLCOLOR3FVERTEX3FVSUNPROC :: #type proc "c" (c: ^GLfloat, v: ^GLfloat)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (c: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLCOLOR4UBVERTEX2FSUNPROC :: #type proc "c" (r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat)
PFNGLCOLOR4UBVERTEX2FVSUNPROC :: #type proc "c" (c: ^GLubyte, v: ^GLfloat)
PFNGLCOLOR4UBVERTEX3FSUNPROC :: #type proc "c" (r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLCOLOR4UBVERTEX3FVSUNPROC :: #type proc "c" (c: ^GLubyte, v: ^GLfloat)
PFNGLNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (n: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, c: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, c: ^GLubyte, v: ^GLfloat)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, n: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, tc: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, tc: ^GLfloat, v: ^GLfloat)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC :: #type proc "c" (rc: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC :: #type proc "c" (rc: ^GLuint, v: ^GLfloat)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC :: #type proc "c" (tc: ^GLfloat, c: ^GLfloat, v: ^GLfloat)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC :: #type proc "c" (tc: ^GLfloat, c: ^GLubyte, v: ^GLfloat)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC :: #type proc "c" (tc: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLTEXCOORD2FVERTEX3FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC :: #type proc "c" (tc: ^GLfloat, v: ^GLfloat)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC :: #type proc "c" (tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat)
PFNGLTEXCOORD4FVERTEX4FSUNPROC :: #type proc "c" (s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC :: #type proc "c" (tc: ^GLfloat, v: ^GLfloat)
PFNGLADDSWAPHINTRECTWINPROC :: #type proc "c" (x: GLint, y: GLint, width: GLsizei, height: GLsizei)
ptrdiff_t :: i64

@(default_calling_convention = "c")
foreign gl_runic {
    @(link_name = "__glewCopyTexSubImage3D")
    __glewCopyTexSubImage3D: PFNGLCOPYTEXSUBIMAGE3DPROC

    @(link_name = "__glewDrawRangeElements")
    __glewDrawRangeElements: PFNGLDRAWRANGEELEMENTSPROC

    @(link_name = "__glewTexImage3D")
    __glewTexImage3D: PFNGLTEXIMAGE3DPROC

    @(link_name = "__glewTexSubImage3D")
    __glewTexSubImage3D: PFNGLTEXSUBIMAGE3DPROC

    @(link_name = "__glewActiveTexture")
    __glewActiveTexture: PFNGLACTIVETEXTUREPROC

    @(link_name = "__glewClientActiveTexture")
    __glewClientActiveTexture: PFNGLCLIENTACTIVETEXTUREPROC

    @(link_name = "__glewCompressedTexImage1D")
    __glewCompressedTexImage1D: PFNGLCOMPRESSEDTEXIMAGE1DPROC

    @(link_name = "__glewCompressedTexImage2D")
    __glewCompressedTexImage2D: PFNGLCOMPRESSEDTEXIMAGE2DPROC

    @(link_name = "__glewCompressedTexImage3D")
    __glewCompressedTexImage3D: PFNGLCOMPRESSEDTEXIMAGE3DPROC

    @(link_name = "__glewCompressedTexSubImage1D")
    __glewCompressedTexSubImage1D: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC

    @(link_name = "__glewCompressedTexSubImage2D")
    __glewCompressedTexSubImage2D: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC

    @(link_name = "__glewCompressedTexSubImage3D")
    __glewCompressedTexSubImage3D: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC

    @(link_name = "__glewGetCompressedTexImage")
    __glewGetCompressedTexImage: PFNGLGETCOMPRESSEDTEXIMAGEPROC

    @(link_name = "__glewLoadTransposeMatrixd")
    __glewLoadTransposeMatrixd: PFNGLLOADTRANSPOSEMATRIXDPROC

    @(link_name = "__glewLoadTransposeMatrixf")
    __glewLoadTransposeMatrixf: PFNGLLOADTRANSPOSEMATRIXFPROC

    @(link_name = "__glewMultTransposeMatrixd")
    __glewMultTransposeMatrixd: PFNGLMULTTRANSPOSEMATRIXDPROC

    @(link_name = "__glewMultTransposeMatrixf")
    __glewMultTransposeMatrixf: PFNGLMULTTRANSPOSEMATRIXFPROC

    @(link_name = "__glewMultiTexCoord1d")
    __glewMultiTexCoord1d: PFNGLMULTITEXCOORD1DPROC

    @(link_name = "__glewMultiTexCoord1dv")
    __glewMultiTexCoord1dv: PFNGLMULTITEXCOORD1DVPROC

    @(link_name = "__glewMultiTexCoord1f")
    __glewMultiTexCoord1f: PFNGLMULTITEXCOORD1FPROC

    @(link_name = "__glewMultiTexCoord1fv")
    __glewMultiTexCoord1fv: PFNGLMULTITEXCOORD1FVPROC

    @(link_name = "__glewMultiTexCoord1i")
    __glewMultiTexCoord1i: PFNGLMULTITEXCOORD1IPROC

    @(link_name = "__glewMultiTexCoord1iv")
    __glewMultiTexCoord1iv: PFNGLMULTITEXCOORD1IVPROC

    @(link_name = "__glewMultiTexCoord1s")
    __glewMultiTexCoord1s: PFNGLMULTITEXCOORD1SPROC

    @(link_name = "__glewMultiTexCoord1sv")
    __glewMultiTexCoord1sv: PFNGLMULTITEXCOORD1SVPROC

    @(link_name = "__glewMultiTexCoord2d")
    __glewMultiTexCoord2d: PFNGLMULTITEXCOORD2DPROC

    @(link_name = "__glewMultiTexCoord2dv")
    __glewMultiTexCoord2dv: PFNGLMULTITEXCOORD2DVPROC

    @(link_name = "__glewMultiTexCoord2f")
    __glewMultiTexCoord2f: PFNGLMULTITEXCOORD2FPROC

    @(link_name = "__glewMultiTexCoord2fv")
    __glewMultiTexCoord2fv: PFNGLMULTITEXCOORD2FVPROC

    @(link_name = "__glewMultiTexCoord2i")
    __glewMultiTexCoord2i: PFNGLMULTITEXCOORD2IPROC

    @(link_name = "__glewMultiTexCoord2iv")
    __glewMultiTexCoord2iv: PFNGLMULTITEXCOORD2IVPROC

    @(link_name = "__glewMultiTexCoord2s")
    __glewMultiTexCoord2s: PFNGLMULTITEXCOORD2SPROC

    @(link_name = "__glewMultiTexCoord2sv")
    __glewMultiTexCoord2sv: PFNGLMULTITEXCOORD2SVPROC

    @(link_name = "__glewMultiTexCoord3d")
    __glewMultiTexCoord3d: PFNGLMULTITEXCOORD3DPROC

    @(link_name = "__glewMultiTexCoord3dv")
    __glewMultiTexCoord3dv: PFNGLMULTITEXCOORD3DVPROC

    @(link_name = "__glewMultiTexCoord3f")
    __glewMultiTexCoord3f: PFNGLMULTITEXCOORD3FPROC

    @(link_name = "__glewMultiTexCoord3fv")
    __glewMultiTexCoord3fv: PFNGLMULTITEXCOORD3FVPROC

    @(link_name = "__glewMultiTexCoord3i")
    __glewMultiTexCoord3i: PFNGLMULTITEXCOORD3IPROC

    @(link_name = "__glewMultiTexCoord3iv")
    __glewMultiTexCoord3iv: PFNGLMULTITEXCOORD3IVPROC

    @(link_name = "__glewMultiTexCoord3s")
    __glewMultiTexCoord3s: PFNGLMULTITEXCOORD3SPROC

    @(link_name = "__glewMultiTexCoord3sv")
    __glewMultiTexCoord3sv: PFNGLMULTITEXCOORD3SVPROC

    @(link_name = "__glewMultiTexCoord4d")
    __glewMultiTexCoord4d: PFNGLMULTITEXCOORD4DPROC

    @(link_name = "__glewMultiTexCoord4dv")
    __glewMultiTexCoord4dv: PFNGLMULTITEXCOORD4DVPROC

    @(link_name = "__glewMultiTexCoord4f")
    __glewMultiTexCoord4f: PFNGLMULTITEXCOORD4FPROC

    @(link_name = "__glewMultiTexCoord4fv")
    __glewMultiTexCoord4fv: PFNGLMULTITEXCOORD4FVPROC

    @(link_name = "__glewMultiTexCoord4i")
    __glewMultiTexCoord4i: PFNGLMULTITEXCOORD4IPROC

    @(link_name = "__glewMultiTexCoord4iv")
    __glewMultiTexCoord4iv: PFNGLMULTITEXCOORD4IVPROC

    @(link_name = "__glewMultiTexCoord4s")
    __glewMultiTexCoord4s: PFNGLMULTITEXCOORD4SPROC

    @(link_name = "__glewMultiTexCoord4sv")
    __glewMultiTexCoord4sv: PFNGLMULTITEXCOORD4SVPROC

    @(link_name = "__glewSampleCoverage")
    __glewSampleCoverage: PFNGLSAMPLECOVERAGEPROC

    @(link_name = "__glewBlendColor")
    __glewBlendColor: PFNGLBLENDCOLORPROC

    @(link_name = "__glewBlendEquation")
    __glewBlendEquation: PFNGLBLENDEQUATIONPROC

    @(link_name = "__glewBlendFuncSeparate")
    __glewBlendFuncSeparate: PFNGLBLENDFUNCSEPARATEPROC

    @(link_name = "__glewFogCoordPointer")
    __glewFogCoordPointer: PFNGLFOGCOORDPOINTERPROC

    @(link_name = "__glewFogCoordd")
    __glewFogCoordd: PFNGLFOGCOORDDPROC

    @(link_name = "__glewFogCoorddv")
    __glewFogCoorddv: PFNGLFOGCOORDDVPROC

    @(link_name = "__glewFogCoordf")
    __glewFogCoordf: PFNGLFOGCOORDFPROC

    @(link_name = "__glewFogCoordfv")
    __glewFogCoordfv: PFNGLFOGCOORDFVPROC

    @(link_name = "__glewMultiDrawArrays")
    __glewMultiDrawArrays: PFNGLMULTIDRAWARRAYSPROC

    @(link_name = "__glewMultiDrawElements")
    __glewMultiDrawElements: PFNGLMULTIDRAWELEMENTSPROC

    @(link_name = "__glewPointParameterf")
    __glewPointParameterf: PFNGLPOINTPARAMETERFPROC

    @(link_name = "__glewPointParameterfv")
    __glewPointParameterfv: PFNGLPOINTPARAMETERFVPROC

    @(link_name = "__glewPointParameteri")
    __glewPointParameteri: PFNGLPOINTPARAMETERIPROC

    @(link_name = "__glewPointParameteriv")
    __glewPointParameteriv: PFNGLPOINTPARAMETERIVPROC

    @(link_name = "__glewSecondaryColor3b")
    __glewSecondaryColor3b: PFNGLSECONDARYCOLOR3BPROC

    @(link_name = "__glewSecondaryColor3bv")
    __glewSecondaryColor3bv: PFNGLSECONDARYCOLOR3BVPROC

    @(link_name = "__glewSecondaryColor3d")
    __glewSecondaryColor3d: PFNGLSECONDARYCOLOR3DPROC

    @(link_name = "__glewSecondaryColor3dv")
    __glewSecondaryColor3dv: PFNGLSECONDARYCOLOR3DVPROC

    @(link_name = "__glewSecondaryColor3f")
    __glewSecondaryColor3f: PFNGLSECONDARYCOLOR3FPROC

    @(link_name = "__glewSecondaryColor3fv")
    __glewSecondaryColor3fv: PFNGLSECONDARYCOLOR3FVPROC

    @(link_name = "__glewSecondaryColor3i")
    __glewSecondaryColor3i: PFNGLSECONDARYCOLOR3IPROC

    @(link_name = "__glewSecondaryColor3iv")
    __glewSecondaryColor3iv: PFNGLSECONDARYCOLOR3IVPROC

    @(link_name = "__glewSecondaryColor3s")
    __glewSecondaryColor3s: PFNGLSECONDARYCOLOR3SPROC

    @(link_name = "__glewSecondaryColor3sv")
    __glewSecondaryColor3sv: PFNGLSECONDARYCOLOR3SVPROC

    @(link_name = "__glewSecondaryColor3ub")
    __glewSecondaryColor3ub: PFNGLSECONDARYCOLOR3UBPROC

    @(link_name = "__glewSecondaryColor3ubv")
    __glewSecondaryColor3ubv: PFNGLSECONDARYCOLOR3UBVPROC

    @(link_name = "__glewSecondaryColor3ui")
    __glewSecondaryColor3ui: PFNGLSECONDARYCOLOR3UIPROC

    @(link_name = "__glewSecondaryColor3uiv")
    __glewSecondaryColor3uiv: PFNGLSECONDARYCOLOR3UIVPROC

    @(link_name = "__glewSecondaryColor3us")
    __glewSecondaryColor3us: PFNGLSECONDARYCOLOR3USPROC

    @(link_name = "__glewSecondaryColor3usv")
    __glewSecondaryColor3usv: PFNGLSECONDARYCOLOR3USVPROC

    @(link_name = "__glewSecondaryColorPointer")
    __glewSecondaryColorPointer: PFNGLSECONDARYCOLORPOINTERPROC

    @(link_name = "__glewWindowPos2d")
    __glewWindowPos2d: PFNGLWINDOWPOS2DPROC

    @(link_name = "__glewWindowPos2dv")
    __glewWindowPos2dv: PFNGLWINDOWPOS2DVPROC

    @(link_name = "__glewWindowPos2f")
    __glewWindowPos2f: PFNGLWINDOWPOS2FPROC

    @(link_name = "__glewWindowPos2fv")
    __glewWindowPos2fv: PFNGLWINDOWPOS2FVPROC

    @(link_name = "__glewWindowPos2i")
    __glewWindowPos2i: PFNGLWINDOWPOS2IPROC

    @(link_name = "__glewWindowPos2iv")
    __glewWindowPos2iv: PFNGLWINDOWPOS2IVPROC

    @(link_name = "__glewWindowPos2s")
    __glewWindowPos2s: PFNGLWINDOWPOS2SPROC

    @(link_name = "__glewWindowPos2sv")
    __glewWindowPos2sv: PFNGLWINDOWPOS2SVPROC

    @(link_name = "__glewWindowPos3d")
    __glewWindowPos3d: PFNGLWINDOWPOS3DPROC

    @(link_name = "__glewWindowPos3dv")
    __glewWindowPos3dv: PFNGLWINDOWPOS3DVPROC

    @(link_name = "__glewWindowPos3f")
    __glewWindowPos3f: PFNGLWINDOWPOS3FPROC

    @(link_name = "__glewWindowPos3fv")
    __glewWindowPos3fv: PFNGLWINDOWPOS3FVPROC

    @(link_name = "__glewWindowPos3i")
    __glewWindowPos3i: PFNGLWINDOWPOS3IPROC

    @(link_name = "__glewWindowPos3iv")
    __glewWindowPos3iv: PFNGLWINDOWPOS3IVPROC

    @(link_name = "__glewWindowPos3s")
    __glewWindowPos3s: PFNGLWINDOWPOS3SPROC

    @(link_name = "__glewWindowPos3sv")
    __glewWindowPos3sv: PFNGLWINDOWPOS3SVPROC

    @(link_name = "__glewBeginQuery")
    __glewBeginQuery: PFNGLBEGINQUERYPROC

    @(link_name = "__glewBindBuffer")
    __glewBindBuffer: PFNGLBINDBUFFERPROC

    @(link_name = "__glewBufferData")
    __glewBufferData: PFNGLBUFFERDATAPROC

    @(link_name = "__glewBufferSubData")
    __glewBufferSubData: PFNGLBUFFERSUBDATAPROC

    @(link_name = "__glewDeleteBuffers")
    __glewDeleteBuffers: PFNGLDELETEBUFFERSPROC

    @(link_name = "__glewDeleteQueries")
    __glewDeleteQueries: PFNGLDELETEQUERIESPROC

    @(link_name = "__glewEndQuery")
    __glewEndQuery: PFNGLENDQUERYPROC

    @(link_name = "__glewGenBuffers")
    __glewGenBuffers: PFNGLGENBUFFERSPROC

    @(link_name = "__glewGenQueries")
    __glewGenQueries: PFNGLGENQUERIESPROC

    @(link_name = "__glewGetBufferParameteriv")
    __glewGetBufferParameteriv: PFNGLGETBUFFERPARAMETERIVPROC

    @(link_name = "__glewGetBufferPointerv")
    __glewGetBufferPointerv: PFNGLGETBUFFERPOINTERVPROC

    @(link_name = "__glewGetBufferSubData")
    __glewGetBufferSubData: PFNGLGETBUFFERSUBDATAPROC

    @(link_name = "__glewGetQueryObjectiv")
    __glewGetQueryObjectiv: PFNGLGETQUERYOBJECTIVPROC

    @(link_name = "__glewGetQueryObjectuiv")
    __glewGetQueryObjectuiv: PFNGLGETQUERYOBJECTUIVPROC

    @(link_name = "__glewGetQueryiv")
    __glewGetQueryiv: PFNGLGETQUERYIVPROC

    @(link_name = "__glewIsBuffer")
    __glewIsBuffer: PFNGLISBUFFERPROC

    @(link_name = "__glewIsQuery")
    __glewIsQuery: PFNGLISQUERYPROC

    @(link_name = "__glewMapBuffer")
    __glewMapBuffer: PFNGLMAPBUFFERPROC

    @(link_name = "__glewUnmapBuffer")
    __glewUnmapBuffer: PFNGLUNMAPBUFFERPROC

    @(link_name = "__glewAttachShader")
    __glewAttachShader: PFNGLATTACHSHADERPROC

    @(link_name = "__glewBindAttribLocation")
    __glewBindAttribLocation: PFNGLBINDATTRIBLOCATIONPROC

    @(link_name = "__glewBlendEquationSeparate")
    __glewBlendEquationSeparate: PFNGLBLENDEQUATIONSEPARATEPROC

    @(link_name = "__glewCompileShader")
    __glewCompileShader: PFNGLCOMPILESHADERPROC

    @(link_name = "__glewCreateProgram")
    __glewCreateProgram: PFNGLCREATEPROGRAMPROC

    @(link_name = "__glewCreateShader")
    __glewCreateShader: PFNGLCREATESHADERPROC

    @(link_name = "__glewDeleteProgram")
    __glewDeleteProgram: PFNGLDELETEPROGRAMPROC

    @(link_name = "__glewDeleteShader")
    __glewDeleteShader: PFNGLDELETESHADERPROC

    @(link_name = "__glewDetachShader")
    __glewDetachShader: PFNGLDETACHSHADERPROC

    @(link_name = "__glewDisableVertexAttribArray")
    __glewDisableVertexAttribArray: PFNGLDISABLEVERTEXATTRIBARRAYPROC

    @(link_name = "__glewDrawBuffers")
    __glewDrawBuffers: PFNGLDRAWBUFFERSPROC

    @(link_name = "__glewEnableVertexAttribArray")
    __glewEnableVertexAttribArray: PFNGLENABLEVERTEXATTRIBARRAYPROC

    @(link_name = "__glewGetActiveAttrib")
    __glewGetActiveAttrib: PFNGLGETACTIVEATTRIBPROC

    @(link_name = "__glewGetActiveUniform")
    __glewGetActiveUniform: PFNGLGETACTIVEUNIFORMPROC

    @(link_name = "__glewGetAttachedShaders")
    __glewGetAttachedShaders: PFNGLGETATTACHEDSHADERSPROC

    @(link_name = "__glewGetAttribLocation")
    __glewGetAttribLocation: PFNGLGETATTRIBLOCATIONPROC

    @(link_name = "__glewGetProgramInfoLog")
    __glewGetProgramInfoLog: PFNGLGETPROGRAMINFOLOGPROC

    @(link_name = "__glewGetProgramiv")
    __glewGetProgramiv: PFNGLGETPROGRAMIVPROC

    @(link_name = "__glewGetShaderInfoLog")
    __glewGetShaderInfoLog: PFNGLGETSHADERINFOLOGPROC

    @(link_name = "__glewGetShaderSource")
    __glewGetShaderSource: PFNGLGETSHADERSOURCEPROC

    @(link_name = "__glewGetShaderiv")
    __glewGetShaderiv: PFNGLGETSHADERIVPROC

    @(link_name = "__glewGetUniformLocation")
    __glewGetUniformLocation: PFNGLGETUNIFORMLOCATIONPROC

    @(link_name = "__glewGetUniformfv")
    __glewGetUniformfv: PFNGLGETUNIFORMFVPROC

    @(link_name = "__glewGetUniformiv")
    __glewGetUniformiv: PFNGLGETUNIFORMIVPROC

    @(link_name = "__glewGetVertexAttribPointerv")
    __glewGetVertexAttribPointerv: PFNGLGETVERTEXATTRIBPOINTERVPROC

    @(link_name = "__glewGetVertexAttribdv")
    __glewGetVertexAttribdv: PFNGLGETVERTEXATTRIBDVPROC

    @(link_name = "__glewGetVertexAttribfv")
    __glewGetVertexAttribfv: PFNGLGETVERTEXATTRIBFVPROC

    @(link_name = "__glewGetVertexAttribiv")
    __glewGetVertexAttribiv: PFNGLGETVERTEXATTRIBIVPROC

    @(link_name = "__glewIsProgram")
    __glewIsProgram: PFNGLISPROGRAMPROC

    @(link_name = "__glewIsShader")
    __glewIsShader: PFNGLISSHADERPROC

    @(link_name = "__glewLinkProgram")
    __glewLinkProgram: PFNGLLINKPROGRAMPROC

    @(link_name = "__glewShaderSource")
    __glewShaderSource: PFNGLSHADERSOURCEPROC

    @(link_name = "__glewStencilFuncSeparate")
    __glewStencilFuncSeparate: PFNGLSTENCILFUNCSEPARATEPROC

    @(link_name = "__glewStencilMaskSeparate")
    __glewStencilMaskSeparate: PFNGLSTENCILMASKSEPARATEPROC

    @(link_name = "__glewStencilOpSeparate")
    __glewStencilOpSeparate: PFNGLSTENCILOPSEPARATEPROC

    @(link_name = "__glewUniform1f")
    __glewUniform1f: PFNGLUNIFORM1FPROC

    @(link_name = "__glewUniform1fv")
    __glewUniform1fv: PFNGLUNIFORM1FVPROC

    @(link_name = "__glewUniform1i")
    __glewUniform1i: PFNGLUNIFORM1IPROC

    @(link_name = "__glewUniform1iv")
    __glewUniform1iv: PFNGLUNIFORM1IVPROC

    @(link_name = "__glewUniform2f")
    __glewUniform2f: PFNGLUNIFORM2FPROC

    @(link_name = "__glewUniform2fv")
    __glewUniform2fv: PFNGLUNIFORM2FVPROC

    @(link_name = "__glewUniform2i")
    __glewUniform2i: PFNGLUNIFORM2IPROC

    @(link_name = "__glewUniform2iv")
    __glewUniform2iv: PFNGLUNIFORM2IVPROC

    @(link_name = "__glewUniform3f")
    __glewUniform3f: PFNGLUNIFORM3FPROC

    @(link_name = "__glewUniform3fv")
    __glewUniform3fv: PFNGLUNIFORM3FVPROC

    @(link_name = "__glewUniform3i")
    __glewUniform3i: PFNGLUNIFORM3IPROC

    @(link_name = "__glewUniform3iv")
    __glewUniform3iv: PFNGLUNIFORM3IVPROC

    @(link_name = "__glewUniform4f")
    __glewUniform4f: PFNGLUNIFORM4FPROC

    @(link_name = "__glewUniform4fv")
    __glewUniform4fv: PFNGLUNIFORM4FVPROC

    @(link_name = "__glewUniform4i")
    __glewUniform4i: PFNGLUNIFORM4IPROC

    @(link_name = "__glewUniform4iv")
    __glewUniform4iv: PFNGLUNIFORM4IVPROC

    @(link_name = "__glewUniformMatrix2fv")
    __glewUniformMatrix2fv: PFNGLUNIFORMMATRIX2FVPROC

    @(link_name = "__glewUniformMatrix3fv")
    __glewUniformMatrix3fv: PFNGLUNIFORMMATRIX3FVPROC

    @(link_name = "__glewUniformMatrix4fv")
    __glewUniformMatrix4fv: PFNGLUNIFORMMATRIX4FVPROC

    @(link_name = "__glewUseProgram")
    __glewUseProgram: PFNGLUSEPROGRAMPROC

    @(link_name = "__glewValidateProgram")
    __glewValidateProgram: PFNGLVALIDATEPROGRAMPROC

    @(link_name = "__glewVertexAttrib1d")
    __glewVertexAttrib1d: PFNGLVERTEXATTRIB1DPROC

    @(link_name = "__glewVertexAttrib1dv")
    __glewVertexAttrib1dv: PFNGLVERTEXATTRIB1DVPROC

    @(link_name = "__glewVertexAttrib1f")
    __glewVertexAttrib1f: PFNGLVERTEXATTRIB1FPROC

    @(link_name = "__glewVertexAttrib1fv")
    __glewVertexAttrib1fv: PFNGLVERTEXATTRIB1FVPROC

    @(link_name = "__glewVertexAttrib1s")
    __glewVertexAttrib1s: PFNGLVERTEXATTRIB1SPROC

    @(link_name = "__glewVertexAttrib1sv")
    __glewVertexAttrib1sv: PFNGLVERTEXATTRIB1SVPROC

    @(link_name = "__glewVertexAttrib2d")
    __glewVertexAttrib2d: PFNGLVERTEXATTRIB2DPROC

    @(link_name = "__glewVertexAttrib2dv")
    __glewVertexAttrib2dv: PFNGLVERTEXATTRIB2DVPROC

    @(link_name = "__glewVertexAttrib2f")
    __glewVertexAttrib2f: PFNGLVERTEXATTRIB2FPROC

    @(link_name = "__glewVertexAttrib2fv")
    __glewVertexAttrib2fv: PFNGLVERTEXATTRIB2FVPROC

    @(link_name = "__glewVertexAttrib2s")
    __glewVertexAttrib2s: PFNGLVERTEXATTRIB2SPROC

    @(link_name = "__glewVertexAttrib2sv")
    __glewVertexAttrib2sv: PFNGLVERTEXATTRIB2SVPROC

    @(link_name = "__glewVertexAttrib3d")
    __glewVertexAttrib3d: PFNGLVERTEXATTRIB3DPROC

    @(link_name = "__glewVertexAttrib3dv")
    __glewVertexAttrib3dv: PFNGLVERTEXATTRIB3DVPROC

    @(link_name = "__glewVertexAttrib3f")
    __glewVertexAttrib3f: PFNGLVERTEXATTRIB3FPROC

    @(link_name = "__glewVertexAttrib3fv")
    __glewVertexAttrib3fv: PFNGLVERTEXATTRIB3FVPROC

    @(link_name = "__glewVertexAttrib3s")
    __glewVertexAttrib3s: PFNGLVERTEXATTRIB3SPROC

    @(link_name = "__glewVertexAttrib3sv")
    __glewVertexAttrib3sv: PFNGLVERTEXATTRIB3SVPROC

    @(link_name = "__glewVertexAttrib4Nbv")
    __glewVertexAttrib4Nbv: PFNGLVERTEXATTRIB4NBVPROC

    @(link_name = "__glewVertexAttrib4Niv")
    __glewVertexAttrib4Niv: PFNGLVERTEXATTRIB4NIVPROC

    @(link_name = "__glewVertexAttrib4Nsv")
    __glewVertexAttrib4Nsv: PFNGLVERTEXATTRIB4NSVPROC

    @(link_name = "__glewVertexAttrib4Nub")
    __glewVertexAttrib4Nub: PFNGLVERTEXATTRIB4NUBPROC

    @(link_name = "__glewVertexAttrib4Nubv")
    __glewVertexAttrib4Nubv: PFNGLVERTEXATTRIB4NUBVPROC

    @(link_name = "__glewVertexAttrib4Nuiv")
    __glewVertexAttrib4Nuiv: PFNGLVERTEXATTRIB4NUIVPROC

    @(link_name = "__glewVertexAttrib4Nusv")
    __glewVertexAttrib4Nusv: PFNGLVERTEXATTRIB4NUSVPROC

    @(link_name = "__glewVertexAttrib4bv")
    __glewVertexAttrib4bv: PFNGLVERTEXATTRIB4BVPROC

    @(link_name = "__glewVertexAttrib4d")
    __glewVertexAttrib4d: PFNGLVERTEXATTRIB4DPROC

    @(link_name = "__glewVertexAttrib4dv")
    __glewVertexAttrib4dv: PFNGLVERTEXATTRIB4DVPROC

    @(link_name = "__glewVertexAttrib4f")
    __glewVertexAttrib4f: PFNGLVERTEXATTRIB4FPROC

    @(link_name = "__glewVertexAttrib4fv")
    __glewVertexAttrib4fv: PFNGLVERTEXATTRIB4FVPROC

    @(link_name = "__glewVertexAttrib4iv")
    __glewVertexAttrib4iv: PFNGLVERTEXATTRIB4IVPROC

    @(link_name = "__glewVertexAttrib4s")
    __glewVertexAttrib4s: PFNGLVERTEXATTRIB4SPROC

    @(link_name = "__glewVertexAttrib4sv")
    __glewVertexAttrib4sv: PFNGLVERTEXATTRIB4SVPROC

    @(link_name = "__glewVertexAttrib4ubv")
    __glewVertexAttrib4ubv: PFNGLVERTEXATTRIB4UBVPROC

    @(link_name = "__glewVertexAttrib4uiv")
    __glewVertexAttrib4uiv: PFNGLVERTEXATTRIB4UIVPROC

    @(link_name = "__glewVertexAttrib4usv")
    __glewVertexAttrib4usv: PFNGLVERTEXATTRIB4USVPROC

    @(link_name = "__glewVertexAttribPointer")
    __glewVertexAttribPointer: PFNGLVERTEXATTRIBPOINTERPROC

    @(link_name = "__glewUniformMatrix2x3fv")
    __glewUniformMatrix2x3fv: PFNGLUNIFORMMATRIX2X3FVPROC

    @(link_name = "__glewUniformMatrix2x4fv")
    __glewUniformMatrix2x4fv: PFNGLUNIFORMMATRIX2X4FVPROC

    @(link_name = "__glewUniformMatrix3x2fv")
    __glewUniformMatrix3x2fv: PFNGLUNIFORMMATRIX3X2FVPROC

    @(link_name = "__glewUniformMatrix3x4fv")
    __glewUniformMatrix3x4fv: PFNGLUNIFORMMATRIX3X4FVPROC

    @(link_name = "__glewUniformMatrix4x2fv")
    __glewUniformMatrix4x2fv: PFNGLUNIFORMMATRIX4X2FVPROC

    @(link_name = "__glewUniformMatrix4x3fv")
    __glewUniformMatrix4x3fv: PFNGLUNIFORMMATRIX4X3FVPROC

    @(link_name = "__glewBeginConditionalRender")
    __glewBeginConditionalRender: PFNGLBEGINCONDITIONALRENDERPROC

    @(link_name = "__glewBeginTransformFeedback")
    __glewBeginTransformFeedback: PFNGLBEGINTRANSFORMFEEDBACKPROC

    @(link_name = "__glewBindFragDataLocation")
    __glewBindFragDataLocation: PFNGLBINDFRAGDATALOCATIONPROC

    @(link_name = "__glewClampColor")
    __glewClampColor: PFNGLCLAMPCOLORPROC

    @(link_name = "__glewClearBufferfi")
    __glewClearBufferfi: PFNGLCLEARBUFFERFIPROC

    @(link_name = "__glewClearBufferfv")
    __glewClearBufferfv: PFNGLCLEARBUFFERFVPROC

    @(link_name = "__glewClearBufferiv")
    __glewClearBufferiv: PFNGLCLEARBUFFERIVPROC

    @(link_name = "__glewClearBufferuiv")
    __glewClearBufferuiv: PFNGLCLEARBUFFERUIVPROC

    @(link_name = "__glewColorMaski")
    __glewColorMaski: PFNGLCOLORMASKIPROC

    @(link_name = "__glewDisablei")
    __glewDisablei: PFNGLDISABLEIPROC

    @(link_name = "__glewEnablei")
    __glewEnablei: PFNGLENABLEIPROC

    @(link_name = "__glewEndConditionalRender")
    __glewEndConditionalRender: PFNGLENDCONDITIONALRENDERPROC

    @(link_name = "__glewEndTransformFeedback")
    __glewEndTransformFeedback: PFNGLENDTRANSFORMFEEDBACKPROC

    @(link_name = "__glewGetBooleani_v")
    __glewGetBooleani_v: PFNGLGETBOOLEANI_VPROC

    @(link_name = "__glewGetFragDataLocation")
    __glewGetFragDataLocation: PFNGLGETFRAGDATALOCATIONPROC

    @(link_name = "__glewGetStringi")
    __glewGetStringi: PFNGLGETSTRINGIPROC

    @(link_name = "__glewGetTexParameterIiv")
    __glewGetTexParameterIiv: PFNGLGETTEXPARAMETERIIVPROC

    @(link_name = "__glewGetTexParameterIuiv")
    __glewGetTexParameterIuiv: PFNGLGETTEXPARAMETERIUIVPROC

    @(link_name = "__glewGetTransformFeedbackVarying")
    __glewGetTransformFeedbackVarying: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC

    @(link_name = "__glewGetUniformuiv")
    __glewGetUniformuiv: PFNGLGETUNIFORMUIVPROC

    @(link_name = "__glewGetVertexAttribIiv")
    __glewGetVertexAttribIiv: PFNGLGETVERTEXATTRIBIIVPROC

    @(link_name = "__glewGetVertexAttribIuiv")
    __glewGetVertexAttribIuiv: PFNGLGETVERTEXATTRIBIUIVPROC

    @(link_name = "__glewIsEnabledi")
    __glewIsEnabledi: PFNGLISENABLEDIPROC

    @(link_name = "__glewTexParameterIiv")
    __glewTexParameterIiv: PFNGLTEXPARAMETERIIVPROC

    @(link_name = "__glewTexParameterIuiv")
    __glewTexParameterIuiv: PFNGLTEXPARAMETERIUIVPROC

    @(link_name = "__glewTransformFeedbackVaryings")
    __glewTransformFeedbackVaryings: PFNGLTRANSFORMFEEDBACKVARYINGSPROC

    @(link_name = "__glewUniform1ui")
    __glewUniform1ui: PFNGLUNIFORM1UIPROC

    @(link_name = "__glewUniform1uiv")
    __glewUniform1uiv: PFNGLUNIFORM1UIVPROC

    @(link_name = "__glewUniform2ui")
    __glewUniform2ui: PFNGLUNIFORM2UIPROC

    @(link_name = "__glewUniform2uiv")
    __glewUniform2uiv: PFNGLUNIFORM2UIVPROC

    @(link_name = "__glewUniform3ui")
    __glewUniform3ui: PFNGLUNIFORM3UIPROC

    @(link_name = "__glewUniform3uiv")
    __glewUniform3uiv: PFNGLUNIFORM3UIVPROC

    @(link_name = "__glewUniform4ui")
    __glewUniform4ui: PFNGLUNIFORM4UIPROC

    @(link_name = "__glewUniform4uiv")
    __glewUniform4uiv: PFNGLUNIFORM4UIVPROC

    @(link_name = "__glewVertexAttribI1i")
    __glewVertexAttribI1i: PFNGLVERTEXATTRIBI1IPROC

    @(link_name = "__glewVertexAttribI1iv")
    __glewVertexAttribI1iv: PFNGLVERTEXATTRIBI1IVPROC

    @(link_name = "__glewVertexAttribI1ui")
    __glewVertexAttribI1ui: PFNGLVERTEXATTRIBI1UIPROC

    @(link_name = "__glewVertexAttribI1uiv")
    __glewVertexAttribI1uiv: PFNGLVERTEXATTRIBI1UIVPROC

    @(link_name = "__glewVertexAttribI2i")
    __glewVertexAttribI2i: PFNGLVERTEXATTRIBI2IPROC

    @(link_name = "__glewVertexAttribI2iv")
    __glewVertexAttribI2iv: PFNGLVERTEXATTRIBI2IVPROC

    @(link_name = "__glewVertexAttribI2ui")
    __glewVertexAttribI2ui: PFNGLVERTEXATTRIBI2UIPROC

    @(link_name = "__glewVertexAttribI2uiv")
    __glewVertexAttribI2uiv: PFNGLVERTEXATTRIBI2UIVPROC

    @(link_name = "__glewVertexAttribI3i")
    __glewVertexAttribI3i: PFNGLVERTEXATTRIBI3IPROC

    @(link_name = "__glewVertexAttribI3iv")
    __glewVertexAttribI3iv: PFNGLVERTEXATTRIBI3IVPROC

    @(link_name = "__glewVertexAttribI3ui")
    __glewVertexAttribI3ui: PFNGLVERTEXATTRIBI3UIPROC

    @(link_name = "__glewVertexAttribI3uiv")
    __glewVertexAttribI3uiv: PFNGLVERTEXATTRIBI3UIVPROC

    @(link_name = "__glewVertexAttribI4bv")
    __glewVertexAttribI4bv: PFNGLVERTEXATTRIBI4BVPROC

    @(link_name = "__glewVertexAttribI4i")
    __glewVertexAttribI4i: PFNGLVERTEXATTRIBI4IPROC

    @(link_name = "__glewVertexAttribI4iv")
    __glewVertexAttribI4iv: PFNGLVERTEXATTRIBI4IVPROC

    @(link_name = "__glewVertexAttribI4sv")
    __glewVertexAttribI4sv: PFNGLVERTEXATTRIBI4SVPROC

    @(link_name = "__glewVertexAttribI4ubv")
    __glewVertexAttribI4ubv: PFNGLVERTEXATTRIBI4UBVPROC

    @(link_name = "__glewVertexAttribI4ui")
    __glewVertexAttribI4ui: PFNGLVERTEXATTRIBI4UIPROC

    @(link_name = "__glewVertexAttribI4uiv")
    __glewVertexAttribI4uiv: PFNGLVERTEXATTRIBI4UIVPROC

    @(link_name = "__glewVertexAttribI4usv")
    __glewVertexAttribI4usv: PFNGLVERTEXATTRIBI4USVPROC

    @(link_name = "__glewVertexAttribIPointer")
    __glewVertexAttribIPointer: PFNGLVERTEXATTRIBIPOINTERPROC

    @(link_name = "__glewDrawArraysInstanced")
    __glewDrawArraysInstanced: PFNGLDRAWARRAYSINSTANCEDPROC

    @(link_name = "__glewDrawElementsInstanced")
    __glewDrawElementsInstanced: PFNGLDRAWELEMENTSINSTANCEDPROC

    @(link_name = "__glewPrimitiveRestartIndex")
    __glewPrimitiveRestartIndex: PFNGLPRIMITIVERESTARTINDEXPROC

    @(link_name = "__glewTexBuffer")
    __glewTexBuffer: PFNGLTEXBUFFERPROC

    @(link_name = "__glewFramebufferTexture")
    __glewFramebufferTexture: PFNGLFRAMEBUFFERTEXTUREPROC

    @(link_name = "__glewGetBufferParameteri64v")
    __glewGetBufferParameteri64v: PFNGLGETBUFFERPARAMETERI64VPROC

    @(link_name = "__glewGetInteger64i_v")
    __glewGetInteger64i_v: PFNGLGETINTEGER64I_VPROC

    @(link_name = "__glewVertexAttribDivisor")
    __glewVertexAttribDivisor: PFNGLVERTEXATTRIBDIVISORPROC

    @(link_name = "__glewBlendEquationSeparatei")
    __glewBlendEquationSeparatei: PFNGLBLENDEQUATIONSEPARATEIPROC

    @(link_name = "__glewBlendEquationi")
    __glewBlendEquationi: PFNGLBLENDEQUATIONIPROC

    @(link_name = "__glewBlendFuncSeparatei")
    __glewBlendFuncSeparatei: PFNGLBLENDFUNCSEPARATEIPROC

    @(link_name = "__glewBlendFunci")
    __glewBlendFunci: PFNGLBLENDFUNCIPROC

    @(link_name = "__glewMinSampleShading")
    __glewMinSampleShading: PFNGLMINSAMPLESHADINGPROC

    @(link_name = "__glewGetGraphicsResetStatus")
    __glewGetGraphicsResetStatus: PFNGLGETGRAPHICSRESETSTATUSPROC

    @(link_name = "__glewGetnCompressedTexImage")
    __glewGetnCompressedTexImage: PFNGLGETNCOMPRESSEDTEXIMAGEPROC

    @(link_name = "__glewGetnTexImage")
    __glewGetnTexImage: PFNGLGETNTEXIMAGEPROC

    @(link_name = "__glewGetnUniformdv")
    __glewGetnUniformdv: PFNGLGETNUNIFORMDVPROC

    @(link_name = "__glewMultiDrawArraysIndirectCount")
    __glewMultiDrawArraysIndirectCount: PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC

    @(link_name = "__glewMultiDrawElementsIndirectCount")
    __glewMultiDrawElementsIndirectCount: PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC

    @(link_name = "__glewSpecializeShader")
    __glewSpecializeShader: PFNGLSPECIALIZESHADERPROC

    @(link_name = "__glewTbufferMask3DFX")
    __glewTbufferMask3DFX: PFNGLTBUFFERMASK3DFXPROC

    @(link_name = "__glewDebugMessageCallbackAMD")
    __glewDebugMessageCallbackAMD: PFNGLDEBUGMESSAGECALLBACKAMDPROC

    @(link_name = "__glewDebugMessageEnableAMD")
    __glewDebugMessageEnableAMD: PFNGLDEBUGMESSAGEENABLEAMDPROC

    @(link_name = "__glewDebugMessageInsertAMD")
    __glewDebugMessageInsertAMD: PFNGLDEBUGMESSAGEINSERTAMDPROC

    @(link_name = "__glewGetDebugMessageLogAMD")
    __glewGetDebugMessageLogAMD: PFNGLGETDEBUGMESSAGELOGAMDPROC

    @(link_name = "__glewBlendEquationIndexedAMD")
    __glewBlendEquationIndexedAMD: PFNGLBLENDEQUATIONINDEXEDAMDPROC

    @(link_name = "__glewBlendEquationSeparateIndexedAMD")
    __glewBlendEquationSeparateIndexedAMD: PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC

    @(link_name = "__glewBlendFuncIndexedAMD")
    __glewBlendFuncIndexedAMD: PFNGLBLENDFUNCINDEXEDAMDPROC

    @(link_name = "__glewBlendFuncSeparateIndexedAMD")
    __glewBlendFuncSeparateIndexedAMD: PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC

    @(link_name = "__glewNamedRenderbufferStorageMultisampleAdvancedAMD")
    __glewNamedRenderbufferStorageMultisampleAdvancedAMD: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC

    @(link_name = "__glewRenderbufferStorageMultisampleAdvancedAMD")
    __glewRenderbufferStorageMultisampleAdvancedAMD: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC

    @(link_name = "__glewFramebufferSamplePositionsfvAMD")
    __glewFramebufferSamplePositionsfvAMD: PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC

    @(link_name = "__glewGetFramebufferParameterfvAMD")
    __glewGetFramebufferParameterfvAMD: PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC

    @(link_name = "__glewGetNamedFramebufferParameterfvAMD")
    __glewGetNamedFramebufferParameterfvAMD: PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC

    @(link_name = "__glewNamedFramebufferSamplePositionsfvAMD")
    __glewNamedFramebufferSamplePositionsfvAMD: PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC

    @(link_name = "__glewVertexAttribParameteriAMD")
    __glewVertexAttribParameteriAMD: PFNGLVERTEXATTRIBPARAMETERIAMDPROC

    @(link_name = "__glewMultiDrawArraysIndirectAMD")
    __glewMultiDrawArraysIndirectAMD: PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC

    @(link_name = "__glewMultiDrawElementsIndirectAMD")
    __glewMultiDrawElementsIndirectAMD: PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC

    @(link_name = "__glewDeleteNamesAMD")
    __glewDeleteNamesAMD: PFNGLDELETENAMESAMDPROC

    @(link_name = "__glewGenNamesAMD")
    __glewGenNamesAMD: PFNGLGENNAMESAMDPROC

    @(link_name = "__glewIsNameAMD")
    __glewIsNameAMD: PFNGLISNAMEAMDPROC

    @(link_name = "__glewQueryObjectParameteruiAMD")
    __glewQueryObjectParameteruiAMD: PFNGLQUERYOBJECTPARAMETERUIAMDPROC

    @(link_name = "__glewBeginPerfMonitorAMD")
    __glewBeginPerfMonitorAMD: PFNGLBEGINPERFMONITORAMDPROC

    @(link_name = "__glewDeletePerfMonitorsAMD")
    __glewDeletePerfMonitorsAMD: PFNGLDELETEPERFMONITORSAMDPROC

    @(link_name = "__glewEndPerfMonitorAMD")
    __glewEndPerfMonitorAMD: PFNGLENDPERFMONITORAMDPROC

    @(link_name = "__glewGenPerfMonitorsAMD")
    __glewGenPerfMonitorsAMD: PFNGLGENPERFMONITORSAMDPROC

    @(link_name = "__glewGetPerfMonitorCounterDataAMD")
    __glewGetPerfMonitorCounterDataAMD: PFNGLGETPERFMONITORCOUNTERDATAAMDPROC

    @(link_name = "__glewGetPerfMonitorCounterInfoAMD")
    __glewGetPerfMonitorCounterInfoAMD: PFNGLGETPERFMONITORCOUNTERINFOAMDPROC

    @(link_name = "__glewGetPerfMonitorCounterStringAMD")
    __glewGetPerfMonitorCounterStringAMD: PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC

    @(link_name = "__glewGetPerfMonitorCountersAMD")
    __glewGetPerfMonitorCountersAMD: PFNGLGETPERFMONITORCOUNTERSAMDPROC

    @(link_name = "__glewGetPerfMonitorGroupStringAMD")
    __glewGetPerfMonitorGroupStringAMD: PFNGLGETPERFMONITORGROUPSTRINGAMDPROC

    @(link_name = "__glewGetPerfMonitorGroupsAMD")
    __glewGetPerfMonitorGroupsAMD: PFNGLGETPERFMONITORGROUPSAMDPROC

    @(link_name = "__glewSelectPerfMonitorCountersAMD")
    __glewSelectPerfMonitorCountersAMD: PFNGLSELECTPERFMONITORCOUNTERSAMDPROC

    @(link_name = "__glewSetMultisamplefvAMD")
    __glewSetMultisamplefvAMD: PFNGLSETMULTISAMPLEFVAMDPROC

    @(link_name = "__glewTexStorageSparseAMD")
    __glewTexStorageSparseAMD: PFNGLTEXSTORAGESPARSEAMDPROC

    @(link_name = "__glewTextureStorageSparseAMD")
    __glewTextureStorageSparseAMD: PFNGLTEXTURESTORAGESPARSEAMDPROC

    @(link_name = "__glewStencilOpValueAMD")
    __glewStencilOpValueAMD: PFNGLSTENCILOPVALUEAMDPROC

    @(link_name = "__glewTessellationFactorAMD")
    __glewTessellationFactorAMD: PFNGLTESSELLATIONFACTORAMDPROC

    @(link_name = "__glewTessellationModeAMD")
    __glewTessellationModeAMD: PFNGLTESSELLATIONMODEAMDPROC

    @(link_name = "__glewBlitFramebufferANGLE")
    __glewBlitFramebufferANGLE: PFNGLBLITFRAMEBUFFERANGLEPROC

    @(link_name = "__glewRenderbufferStorageMultisampleANGLE")
    __glewRenderbufferStorageMultisampleANGLE: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC

    @(link_name = "__glewDrawArraysInstancedANGLE")
    __glewDrawArraysInstancedANGLE: PFNGLDRAWARRAYSINSTANCEDANGLEPROC

    @(link_name = "__glewDrawElementsInstancedANGLE")
    __glewDrawElementsInstancedANGLE: PFNGLDRAWELEMENTSINSTANCEDANGLEPROC

    @(link_name = "__glewVertexAttribDivisorANGLE")
    __glewVertexAttribDivisorANGLE: PFNGLVERTEXATTRIBDIVISORANGLEPROC

    @(link_name = "__glewBeginQueryANGLE")
    __glewBeginQueryANGLE: PFNGLBEGINQUERYANGLEPROC

    @(link_name = "__glewDeleteQueriesANGLE")
    __glewDeleteQueriesANGLE: PFNGLDELETEQUERIESANGLEPROC

    @(link_name = "__glewEndQueryANGLE")
    __glewEndQueryANGLE: PFNGLENDQUERYANGLEPROC

    @(link_name = "__glewGenQueriesANGLE")
    __glewGenQueriesANGLE: PFNGLGENQUERIESANGLEPROC

    @(link_name = "__glewGetQueryObjecti64vANGLE")
    __glewGetQueryObjecti64vANGLE: PFNGLGETQUERYOBJECTI64VANGLEPROC

    @(link_name = "__glewGetQueryObjectivANGLE")
    __glewGetQueryObjectivANGLE: PFNGLGETQUERYOBJECTIVANGLEPROC

    @(link_name = "__glewGetQueryObjectui64vANGLE")
    __glewGetQueryObjectui64vANGLE: PFNGLGETQUERYOBJECTUI64VANGLEPROC

    @(link_name = "__glewGetQueryObjectuivANGLE")
    __glewGetQueryObjectuivANGLE: PFNGLGETQUERYOBJECTUIVANGLEPROC

    @(link_name = "__glewGetQueryivANGLE")
    __glewGetQueryivANGLE: PFNGLGETQUERYIVANGLEPROC

    @(link_name = "__glewIsQueryANGLE")
    __glewIsQueryANGLE: PFNGLISQUERYANGLEPROC

    @(link_name = "__glewQueryCounterANGLE")
    __glewQueryCounterANGLE: PFNGLQUERYCOUNTERANGLEPROC

    @(link_name = "__glewGetTranslatedShaderSourceANGLE")
    __glewGetTranslatedShaderSourceANGLE: PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC

    @(link_name = "__glewCopyTextureLevelsAPPLE")
    __glewCopyTextureLevelsAPPLE: PFNGLCOPYTEXTURELEVELSAPPLEPROC

    @(link_name = "__glewDrawElementArrayAPPLE")
    __glewDrawElementArrayAPPLE: PFNGLDRAWELEMENTARRAYAPPLEPROC

    @(link_name = "__glewDrawRangeElementArrayAPPLE")
    __glewDrawRangeElementArrayAPPLE: PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC

    @(link_name = "__glewElementPointerAPPLE")
    __glewElementPointerAPPLE: PFNGLELEMENTPOINTERAPPLEPROC

    @(link_name = "__glewMultiDrawElementArrayAPPLE")
    __glewMultiDrawElementArrayAPPLE: PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC

    @(link_name = "__glewMultiDrawRangeElementArrayAPPLE")
    __glewMultiDrawRangeElementArrayAPPLE: PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC

    @(link_name = "__glewDeleteFencesAPPLE")
    __glewDeleteFencesAPPLE: PFNGLDELETEFENCESAPPLEPROC

    @(link_name = "__glewFinishFenceAPPLE")
    __glewFinishFenceAPPLE: PFNGLFINISHFENCEAPPLEPROC

    @(link_name = "__glewFinishObjectAPPLE")
    __glewFinishObjectAPPLE: PFNGLFINISHOBJECTAPPLEPROC

    @(link_name = "__glewGenFencesAPPLE")
    __glewGenFencesAPPLE: PFNGLGENFENCESAPPLEPROC

    @(link_name = "__glewIsFenceAPPLE")
    __glewIsFenceAPPLE: PFNGLISFENCEAPPLEPROC

    @(link_name = "__glewSetFenceAPPLE")
    __glewSetFenceAPPLE: PFNGLSETFENCEAPPLEPROC

    @(link_name = "__glewTestFenceAPPLE")
    __glewTestFenceAPPLE: PFNGLTESTFENCEAPPLEPROC

    @(link_name = "__glewTestObjectAPPLE")
    __glewTestObjectAPPLE: PFNGLTESTOBJECTAPPLEPROC

    @(link_name = "__glewBufferParameteriAPPLE")
    __glewBufferParameteriAPPLE: PFNGLBUFFERPARAMETERIAPPLEPROC

    @(link_name = "__glewFlushMappedBufferRangeAPPLE")
    __glewFlushMappedBufferRangeAPPLE: PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC

    @(link_name = "__glewRenderbufferStorageMultisampleAPPLE")
    __glewRenderbufferStorageMultisampleAPPLE: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC

    @(link_name = "__glewResolveMultisampleFramebufferAPPLE")
    __glewResolveMultisampleFramebufferAPPLE: PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC

    @(link_name = "__glewGetObjectParameterivAPPLE")
    __glewGetObjectParameterivAPPLE: PFNGLGETOBJECTPARAMETERIVAPPLEPROC

    @(link_name = "__glewObjectPurgeableAPPLE")
    __glewObjectPurgeableAPPLE: PFNGLOBJECTPURGEABLEAPPLEPROC

    @(link_name = "__glewObjectUnpurgeableAPPLE")
    __glewObjectUnpurgeableAPPLE: PFNGLOBJECTUNPURGEABLEAPPLEPROC

    @(link_name = "__glewClientWaitSyncAPPLE")
    __glewClientWaitSyncAPPLE: PFNGLCLIENTWAITSYNCAPPLEPROC

    @(link_name = "__glewDeleteSyncAPPLE")
    __glewDeleteSyncAPPLE: PFNGLDELETESYNCAPPLEPROC

    @(link_name = "__glewFenceSyncAPPLE")
    __glewFenceSyncAPPLE: PFNGLFENCESYNCAPPLEPROC

    @(link_name = "__glewGetInteger64vAPPLE")
    __glewGetInteger64vAPPLE: PFNGLGETINTEGER64VAPPLEPROC

    @(link_name = "__glewGetSyncivAPPLE")
    __glewGetSyncivAPPLE: PFNGLGETSYNCIVAPPLEPROC

    @(link_name = "__glewIsSyncAPPLE")
    __glewIsSyncAPPLE: PFNGLISSYNCAPPLEPROC

    @(link_name = "__glewWaitSyncAPPLE")
    __glewWaitSyncAPPLE: PFNGLWAITSYNCAPPLEPROC

    @(link_name = "__glewGetTexParameterPointervAPPLE")
    __glewGetTexParameterPointervAPPLE: PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC

    @(link_name = "__glewTextureRangeAPPLE")
    __glewTextureRangeAPPLE: PFNGLTEXTURERANGEAPPLEPROC

    @(link_name = "__glewBindVertexArrayAPPLE")
    __glewBindVertexArrayAPPLE: PFNGLBINDVERTEXARRAYAPPLEPROC

    @(link_name = "__glewDeleteVertexArraysAPPLE")
    __glewDeleteVertexArraysAPPLE: PFNGLDELETEVERTEXARRAYSAPPLEPROC

    @(link_name = "__glewGenVertexArraysAPPLE")
    __glewGenVertexArraysAPPLE: PFNGLGENVERTEXARRAYSAPPLEPROC

    @(link_name = "__glewIsVertexArrayAPPLE")
    __glewIsVertexArrayAPPLE: PFNGLISVERTEXARRAYAPPLEPROC

    @(link_name = "__glewFlushVertexArrayRangeAPPLE")
    __glewFlushVertexArrayRangeAPPLE: PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC

    @(link_name = "__glewVertexArrayParameteriAPPLE")
    __glewVertexArrayParameteriAPPLE: PFNGLVERTEXARRAYPARAMETERIAPPLEPROC

    @(link_name = "__glewVertexArrayRangeAPPLE")
    __glewVertexArrayRangeAPPLE: PFNGLVERTEXARRAYRANGEAPPLEPROC

    @(link_name = "__glewDisableVertexAttribAPPLE")
    __glewDisableVertexAttribAPPLE: PFNGLDISABLEVERTEXATTRIBAPPLEPROC

    @(link_name = "__glewEnableVertexAttribAPPLE")
    __glewEnableVertexAttribAPPLE: PFNGLENABLEVERTEXATTRIBAPPLEPROC

    @(link_name = "__glewIsVertexAttribEnabledAPPLE")
    __glewIsVertexAttribEnabledAPPLE: PFNGLISVERTEXATTRIBENABLEDAPPLEPROC

    @(link_name = "__glewMapVertexAttrib1dAPPLE")
    __glewMapVertexAttrib1dAPPLE: PFNGLMAPVERTEXATTRIB1DAPPLEPROC

    @(link_name = "__glewMapVertexAttrib1fAPPLE")
    __glewMapVertexAttrib1fAPPLE: PFNGLMAPVERTEXATTRIB1FAPPLEPROC

    @(link_name = "__glewMapVertexAttrib2dAPPLE")
    __glewMapVertexAttrib2dAPPLE: PFNGLMAPVERTEXATTRIB2DAPPLEPROC

    @(link_name = "__glewMapVertexAttrib2fAPPLE")
    __glewMapVertexAttrib2fAPPLE: PFNGLMAPVERTEXATTRIB2FAPPLEPROC

    @(link_name = "__glewClearDepthf")
    __glewClearDepthf: PFNGLCLEARDEPTHFPROC

    @(link_name = "__glewDepthRangef")
    __glewDepthRangef: PFNGLDEPTHRANGEFPROC

    @(link_name = "__glewGetShaderPrecisionFormat")
    __glewGetShaderPrecisionFormat: PFNGLGETSHADERPRECISIONFORMATPROC

    @(link_name = "__glewReleaseShaderCompiler")
    __glewReleaseShaderCompiler: PFNGLRELEASESHADERCOMPILERPROC

    @(link_name = "__glewShaderBinary")
    __glewShaderBinary: PFNGLSHADERBINARYPROC

    @(link_name = "__glewMemoryBarrierByRegion")
    __glewMemoryBarrierByRegion: PFNGLMEMORYBARRIERBYREGIONPROC

    @(link_name = "__glewPrimitiveBoundingBoxARB")
    __glewPrimitiveBoundingBoxARB: PFNGLPRIMITIVEBOUNDINGBOXARBPROC

    @(link_name = "__glewDrawArraysInstancedBaseInstance")
    __glewDrawArraysInstancedBaseInstance: PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC

    @(link_name = "__glewDrawElementsInstancedBaseInstance")
    __glewDrawElementsInstancedBaseInstance: PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC

    @(link_name = "__glewDrawElementsInstancedBaseVertexBaseInstance")
    __glewDrawElementsInstancedBaseVertexBaseInstance: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC

    @(link_name = "__glewGetImageHandleARB")
    __glewGetImageHandleARB: PFNGLGETIMAGEHANDLEARBPROC

    @(link_name = "__glewGetTextureHandleARB")
    __glewGetTextureHandleARB: PFNGLGETTEXTUREHANDLEARBPROC

    @(link_name = "__glewGetTextureSamplerHandleARB")
    __glewGetTextureSamplerHandleARB: PFNGLGETTEXTURESAMPLERHANDLEARBPROC

    @(link_name = "__glewGetVertexAttribLui64vARB")
    __glewGetVertexAttribLui64vARB: PFNGLGETVERTEXATTRIBLUI64VARBPROC

    @(link_name = "__glewIsImageHandleResidentARB")
    __glewIsImageHandleResidentARB: PFNGLISIMAGEHANDLERESIDENTARBPROC

    @(link_name = "__glewIsTextureHandleResidentARB")
    __glewIsTextureHandleResidentARB: PFNGLISTEXTUREHANDLERESIDENTARBPROC

    @(link_name = "__glewMakeImageHandleNonResidentARB")
    __glewMakeImageHandleNonResidentARB: PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC

    @(link_name = "__glewMakeImageHandleResidentARB")
    __glewMakeImageHandleResidentARB: PFNGLMAKEIMAGEHANDLERESIDENTARBPROC

    @(link_name = "__glewMakeTextureHandleNonResidentARB")
    __glewMakeTextureHandleNonResidentARB: PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC

    @(link_name = "__glewMakeTextureHandleResidentARB")
    __glewMakeTextureHandleResidentARB: PFNGLMAKETEXTUREHANDLERESIDENTARBPROC

    @(link_name = "__glewProgramUniformHandleui64ARB")
    __glewProgramUniformHandleui64ARB: PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC

    @(link_name = "__glewProgramUniformHandleui64vARB")
    __glewProgramUniformHandleui64vARB: PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC

    @(link_name = "__glewUniformHandleui64ARB")
    __glewUniformHandleui64ARB: PFNGLUNIFORMHANDLEUI64ARBPROC

    @(link_name = "__glewUniformHandleui64vARB")
    __glewUniformHandleui64vARB: PFNGLUNIFORMHANDLEUI64VARBPROC

    @(link_name = "__glewVertexAttribL1ui64ARB")
    __glewVertexAttribL1ui64ARB: PFNGLVERTEXATTRIBL1UI64ARBPROC

    @(link_name = "__glewVertexAttribL1ui64vARB")
    __glewVertexAttribL1ui64vARB: PFNGLVERTEXATTRIBL1UI64VARBPROC

    @(link_name = "__glewBindFragDataLocationIndexed")
    __glewBindFragDataLocationIndexed: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC

    @(link_name = "__glewGetFragDataIndex")
    __glewGetFragDataIndex: PFNGLGETFRAGDATAINDEXPROC

    @(link_name = "__glewBufferStorage")
    __glewBufferStorage: PFNGLBUFFERSTORAGEPROC

    @(link_name = "__glewCreateSyncFromCLeventARB")
    __glewCreateSyncFromCLeventARB: PFNGLCREATESYNCFROMCLEVENTARBPROC

    @(link_name = "__glewClearBufferData")
    __glewClearBufferData: PFNGLCLEARBUFFERDATAPROC

    @(link_name = "__glewClearBufferSubData")
    __glewClearBufferSubData: PFNGLCLEARBUFFERSUBDATAPROC

    @(link_name = "__glewClearNamedBufferDataEXT")
    __glewClearNamedBufferDataEXT: PFNGLCLEARNAMEDBUFFERDATAEXTPROC

    @(link_name = "__glewClearNamedBufferSubDataEXT")
    __glewClearNamedBufferSubDataEXT: PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC

    @(link_name = "__glewClearTexImage")
    __glewClearTexImage: PFNGLCLEARTEXIMAGEPROC

    @(link_name = "__glewClearTexSubImage")
    __glewClearTexSubImage: PFNGLCLEARTEXSUBIMAGEPROC

    @(link_name = "__glewClipControl")
    __glewClipControl: PFNGLCLIPCONTROLPROC

    @(link_name = "__glewClampColorARB")
    __glewClampColorARB: PFNGLCLAMPCOLORARBPROC

    @(link_name = "__glewDispatchCompute")
    __glewDispatchCompute: PFNGLDISPATCHCOMPUTEPROC

    @(link_name = "__glewDispatchComputeIndirect")
    __glewDispatchComputeIndirect: PFNGLDISPATCHCOMPUTEINDIRECTPROC

    @(link_name = "__glewDispatchComputeGroupSizeARB")
    __glewDispatchComputeGroupSizeARB: PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC

    @(link_name = "__glewCopyBufferSubData")
    __glewCopyBufferSubData: PFNGLCOPYBUFFERSUBDATAPROC

    @(link_name = "__glewCopyImageSubData")
    __glewCopyImageSubData: PFNGLCOPYIMAGESUBDATAPROC

    @(link_name = "__glewDebugMessageCallbackARB")
    __glewDebugMessageCallbackARB: PFNGLDEBUGMESSAGECALLBACKARBPROC

    @(link_name = "__glewDebugMessageControlARB")
    __glewDebugMessageControlARB: PFNGLDEBUGMESSAGECONTROLARBPROC

    @(link_name = "__glewDebugMessageInsertARB")
    __glewDebugMessageInsertARB: PFNGLDEBUGMESSAGEINSERTARBPROC

    @(link_name = "__glewGetDebugMessageLogARB")
    __glewGetDebugMessageLogARB: PFNGLGETDEBUGMESSAGELOGARBPROC

    @(link_name = "__glewBindTextureUnit")
    __glewBindTextureUnit: PFNGLBINDTEXTUREUNITPROC

    @(link_name = "__glewBlitNamedFramebuffer")
    __glewBlitNamedFramebuffer: PFNGLBLITNAMEDFRAMEBUFFERPROC

    @(link_name = "__glewCheckNamedFramebufferStatus")
    __glewCheckNamedFramebufferStatus: PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC

    @(link_name = "__glewClearNamedBufferData")
    __glewClearNamedBufferData: PFNGLCLEARNAMEDBUFFERDATAPROC

    @(link_name = "__glewClearNamedBufferSubData")
    __glewClearNamedBufferSubData: PFNGLCLEARNAMEDBUFFERSUBDATAPROC

    @(link_name = "__glewClearNamedFramebufferfi")
    __glewClearNamedFramebufferfi: PFNGLCLEARNAMEDFRAMEBUFFERFIPROC

    @(link_name = "__glewClearNamedFramebufferfv")
    __glewClearNamedFramebufferfv: PFNGLCLEARNAMEDFRAMEBUFFERFVPROC

    @(link_name = "__glewClearNamedFramebufferiv")
    __glewClearNamedFramebufferiv: PFNGLCLEARNAMEDFRAMEBUFFERIVPROC

    @(link_name = "__glewClearNamedFramebufferuiv")
    __glewClearNamedFramebufferuiv: PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC

    @(link_name = "__glewCompressedTextureSubImage1D")
    __glewCompressedTextureSubImage1D: PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC

    @(link_name = "__glewCompressedTextureSubImage2D")
    __glewCompressedTextureSubImage2D: PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC

    @(link_name = "__glewCompressedTextureSubImage3D")
    __glewCompressedTextureSubImage3D: PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC

    @(link_name = "__glewCopyNamedBufferSubData")
    __glewCopyNamedBufferSubData: PFNGLCOPYNAMEDBUFFERSUBDATAPROC

    @(link_name = "__glewCopyTextureSubImage1D")
    __glewCopyTextureSubImage1D: PFNGLCOPYTEXTURESUBIMAGE1DPROC

    @(link_name = "__glewCopyTextureSubImage2D")
    __glewCopyTextureSubImage2D: PFNGLCOPYTEXTURESUBIMAGE2DPROC

    @(link_name = "__glewCopyTextureSubImage3D")
    __glewCopyTextureSubImage3D: PFNGLCOPYTEXTURESUBIMAGE3DPROC

    @(link_name = "__glewCreateBuffers")
    __glewCreateBuffers: PFNGLCREATEBUFFERSPROC

    @(link_name = "__glewCreateFramebuffers")
    __glewCreateFramebuffers: PFNGLCREATEFRAMEBUFFERSPROC

    @(link_name = "__glewCreateProgramPipelines")
    __glewCreateProgramPipelines: PFNGLCREATEPROGRAMPIPELINESPROC

    @(link_name = "__glewCreateQueries")
    __glewCreateQueries: PFNGLCREATEQUERIESPROC

    @(link_name = "__glewCreateRenderbuffers")
    __glewCreateRenderbuffers: PFNGLCREATERENDERBUFFERSPROC

    @(link_name = "__glewCreateSamplers")
    __glewCreateSamplers: PFNGLCREATESAMPLERSPROC

    @(link_name = "__glewCreateTextures")
    __glewCreateTextures: PFNGLCREATETEXTURESPROC

    @(link_name = "__glewCreateTransformFeedbacks")
    __glewCreateTransformFeedbacks: PFNGLCREATETRANSFORMFEEDBACKSPROC

    @(link_name = "__glewCreateVertexArrays")
    __glewCreateVertexArrays: PFNGLCREATEVERTEXARRAYSPROC

    @(link_name = "__glewDisableVertexArrayAttrib")
    __glewDisableVertexArrayAttrib: PFNGLDISABLEVERTEXARRAYATTRIBPROC

    @(link_name = "__glewEnableVertexArrayAttrib")
    __glewEnableVertexArrayAttrib: PFNGLENABLEVERTEXARRAYATTRIBPROC

    @(link_name = "__glewFlushMappedNamedBufferRange")
    __glewFlushMappedNamedBufferRange: PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC

    @(link_name = "__glewGenerateTextureMipmap")
    __glewGenerateTextureMipmap: PFNGLGENERATETEXTUREMIPMAPPROC

    @(link_name = "__glewGetCompressedTextureImage")
    __glewGetCompressedTextureImage: PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC

    @(link_name = "__glewGetNamedBufferParameteri64v")
    __glewGetNamedBufferParameteri64v: PFNGLGETNAMEDBUFFERPARAMETERI64VPROC

    @(link_name = "__glewGetNamedBufferParameteriv")
    __glewGetNamedBufferParameteriv: PFNGLGETNAMEDBUFFERPARAMETERIVPROC

    @(link_name = "__glewGetNamedBufferPointerv")
    __glewGetNamedBufferPointerv: PFNGLGETNAMEDBUFFERPOINTERVPROC

    @(link_name = "__glewGetNamedBufferSubData")
    __glewGetNamedBufferSubData: PFNGLGETNAMEDBUFFERSUBDATAPROC

    @(link_name = "__glewGetNamedFramebufferAttachmentParameteriv")
    __glewGetNamedFramebufferAttachmentParameteriv: PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC

    @(link_name = "__glewGetNamedFramebufferParameteriv")
    __glewGetNamedFramebufferParameteriv: PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC

    @(link_name = "__glewGetNamedRenderbufferParameteriv")
    __glewGetNamedRenderbufferParameteriv: PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC

    @(link_name = "__glewGetQueryBufferObjecti64v")
    __glewGetQueryBufferObjecti64v: PFNGLGETQUERYBUFFEROBJECTI64VPROC

    @(link_name = "__glewGetQueryBufferObjectiv")
    __glewGetQueryBufferObjectiv: PFNGLGETQUERYBUFFEROBJECTIVPROC

    @(link_name = "__glewGetQueryBufferObjectui64v")
    __glewGetQueryBufferObjectui64v: PFNGLGETQUERYBUFFEROBJECTUI64VPROC

    @(link_name = "__glewGetQueryBufferObjectuiv")
    __glewGetQueryBufferObjectuiv: PFNGLGETQUERYBUFFEROBJECTUIVPROC

    @(link_name = "__glewGetTextureImage")
    __glewGetTextureImage: PFNGLGETTEXTUREIMAGEPROC

    @(link_name = "__glewGetTextureLevelParameterfv")
    __glewGetTextureLevelParameterfv: PFNGLGETTEXTURELEVELPARAMETERFVPROC

    @(link_name = "__glewGetTextureLevelParameteriv")
    __glewGetTextureLevelParameteriv: PFNGLGETTEXTURELEVELPARAMETERIVPROC

    @(link_name = "__glewGetTextureParameterIiv")
    __glewGetTextureParameterIiv: PFNGLGETTEXTUREPARAMETERIIVPROC

    @(link_name = "__glewGetTextureParameterIuiv")
    __glewGetTextureParameterIuiv: PFNGLGETTEXTUREPARAMETERIUIVPROC

    @(link_name = "__glewGetTextureParameterfv")
    __glewGetTextureParameterfv: PFNGLGETTEXTUREPARAMETERFVPROC

    @(link_name = "__glewGetTextureParameteriv")
    __glewGetTextureParameteriv: PFNGLGETTEXTUREPARAMETERIVPROC

    @(link_name = "__glewGetTransformFeedbacki64_v")
    __glewGetTransformFeedbacki64_v: PFNGLGETTRANSFORMFEEDBACKI64_VPROC

    @(link_name = "__glewGetTransformFeedbacki_v")
    __glewGetTransformFeedbacki_v: PFNGLGETTRANSFORMFEEDBACKI_VPROC

    @(link_name = "__glewGetTransformFeedbackiv")
    __glewGetTransformFeedbackiv: PFNGLGETTRANSFORMFEEDBACKIVPROC

    @(link_name = "__glewGetVertexArrayIndexed64iv")
    __glewGetVertexArrayIndexed64iv: PFNGLGETVERTEXARRAYINDEXED64IVPROC

    @(link_name = "__glewGetVertexArrayIndexediv")
    __glewGetVertexArrayIndexediv: PFNGLGETVERTEXARRAYINDEXEDIVPROC

    @(link_name = "__glewGetVertexArrayiv")
    __glewGetVertexArrayiv: PFNGLGETVERTEXARRAYIVPROC

    @(link_name = "__glewInvalidateNamedFramebufferData")
    __glewInvalidateNamedFramebufferData: PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC

    @(link_name = "__glewInvalidateNamedFramebufferSubData")
    __glewInvalidateNamedFramebufferSubData: PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC

    @(link_name = "__glewMapNamedBuffer")
    __glewMapNamedBuffer: PFNGLMAPNAMEDBUFFERPROC

    @(link_name = "__glewMapNamedBufferRange")
    __glewMapNamedBufferRange: PFNGLMAPNAMEDBUFFERRANGEPROC

    @(link_name = "__glewNamedBufferData")
    __glewNamedBufferData: PFNGLNAMEDBUFFERDATAPROC

    @(link_name = "__glewNamedBufferStorage")
    __glewNamedBufferStorage: PFNGLNAMEDBUFFERSTORAGEPROC

    @(link_name = "__glewNamedBufferSubData")
    __glewNamedBufferSubData: PFNGLNAMEDBUFFERSUBDATAPROC

    @(link_name = "__glewNamedFramebufferDrawBuffer")
    __glewNamedFramebufferDrawBuffer: PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC

    @(link_name = "__glewNamedFramebufferDrawBuffers")
    __glewNamedFramebufferDrawBuffers: PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC

    @(link_name = "__glewNamedFramebufferParameteri")
    __glewNamedFramebufferParameteri: PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC

    @(link_name = "__glewNamedFramebufferReadBuffer")
    __glewNamedFramebufferReadBuffer: PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC

    @(link_name = "__glewNamedFramebufferRenderbuffer")
    __glewNamedFramebufferRenderbuffer: PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC

    @(link_name = "__glewNamedFramebufferTexture")
    __glewNamedFramebufferTexture: PFNGLNAMEDFRAMEBUFFERTEXTUREPROC

    @(link_name = "__glewNamedFramebufferTextureLayer")
    __glewNamedFramebufferTextureLayer: PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC

    @(link_name = "__glewNamedRenderbufferStorage")
    __glewNamedRenderbufferStorage: PFNGLNAMEDRENDERBUFFERSTORAGEPROC

    @(link_name = "__glewNamedRenderbufferStorageMultisample")
    __glewNamedRenderbufferStorageMultisample: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC

    @(link_name = "__glewTextureBuffer")
    __glewTextureBuffer: PFNGLTEXTUREBUFFERPROC

    @(link_name = "__glewTextureBufferRange")
    __glewTextureBufferRange: PFNGLTEXTUREBUFFERRANGEPROC

    @(link_name = "__glewTextureParameterIiv")
    __glewTextureParameterIiv: PFNGLTEXTUREPARAMETERIIVPROC

    @(link_name = "__glewTextureParameterIuiv")
    __glewTextureParameterIuiv: PFNGLTEXTUREPARAMETERIUIVPROC

    @(link_name = "__glewTextureParameterf")
    __glewTextureParameterf: PFNGLTEXTUREPARAMETERFPROC

    @(link_name = "__glewTextureParameterfv")
    __glewTextureParameterfv: PFNGLTEXTUREPARAMETERFVPROC

    @(link_name = "__glewTextureParameteri")
    __glewTextureParameteri: PFNGLTEXTUREPARAMETERIPROC

    @(link_name = "__glewTextureParameteriv")
    __glewTextureParameteriv: PFNGLTEXTUREPARAMETERIVPROC

    @(link_name = "__glewTextureStorage1D")
    __glewTextureStorage1D: PFNGLTEXTURESTORAGE1DPROC

    @(link_name = "__glewTextureStorage2D")
    __glewTextureStorage2D: PFNGLTEXTURESTORAGE2DPROC

    @(link_name = "__glewTextureStorage2DMultisample")
    __glewTextureStorage2DMultisample: PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC

    @(link_name = "__glewTextureStorage3D")
    __glewTextureStorage3D: PFNGLTEXTURESTORAGE3DPROC

    @(link_name = "__glewTextureStorage3DMultisample")
    __glewTextureStorage3DMultisample: PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC

    @(link_name = "__glewTextureSubImage1D")
    __glewTextureSubImage1D: PFNGLTEXTURESUBIMAGE1DPROC

    @(link_name = "__glewTextureSubImage2D")
    __glewTextureSubImage2D: PFNGLTEXTURESUBIMAGE2DPROC

    @(link_name = "__glewTextureSubImage3D")
    __glewTextureSubImage3D: PFNGLTEXTURESUBIMAGE3DPROC

    @(link_name = "__glewTransformFeedbackBufferBase")
    __glewTransformFeedbackBufferBase: PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC

    @(link_name = "__glewTransformFeedbackBufferRange")
    __glewTransformFeedbackBufferRange: PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC

    @(link_name = "__glewUnmapNamedBuffer")
    __glewUnmapNamedBuffer: PFNGLUNMAPNAMEDBUFFERPROC

    @(link_name = "__glewVertexArrayAttribBinding")
    __glewVertexArrayAttribBinding: PFNGLVERTEXARRAYATTRIBBINDINGPROC

    @(link_name = "__glewVertexArrayAttribFormat")
    __glewVertexArrayAttribFormat: PFNGLVERTEXARRAYATTRIBFORMATPROC

    @(link_name = "__glewVertexArrayAttribIFormat")
    __glewVertexArrayAttribIFormat: PFNGLVERTEXARRAYATTRIBIFORMATPROC

    @(link_name = "__glewVertexArrayAttribLFormat")
    __glewVertexArrayAttribLFormat: PFNGLVERTEXARRAYATTRIBLFORMATPROC

    @(link_name = "__glewVertexArrayBindingDivisor")
    __glewVertexArrayBindingDivisor: PFNGLVERTEXARRAYBINDINGDIVISORPROC

    @(link_name = "__glewVertexArrayElementBuffer")
    __glewVertexArrayElementBuffer: PFNGLVERTEXARRAYELEMENTBUFFERPROC

    @(link_name = "__glewVertexArrayVertexBuffer")
    __glewVertexArrayVertexBuffer: PFNGLVERTEXARRAYVERTEXBUFFERPROC

    @(link_name = "__glewVertexArrayVertexBuffers")
    __glewVertexArrayVertexBuffers: PFNGLVERTEXARRAYVERTEXBUFFERSPROC

    @(link_name = "__glewDrawBuffersARB")
    __glewDrawBuffersARB: PFNGLDRAWBUFFERSARBPROC

    @(link_name = "__glewBlendEquationSeparateiARB")
    __glewBlendEquationSeparateiARB: PFNGLBLENDEQUATIONSEPARATEIARBPROC

    @(link_name = "__glewBlendEquationiARB")
    __glewBlendEquationiARB: PFNGLBLENDEQUATIONIARBPROC

    @(link_name = "__glewBlendFuncSeparateiARB")
    __glewBlendFuncSeparateiARB: PFNGLBLENDFUNCSEPARATEIARBPROC

    @(link_name = "__glewBlendFunciARB")
    __glewBlendFunciARB: PFNGLBLENDFUNCIARBPROC

    @(link_name = "__glewDrawElementsBaseVertex")
    __glewDrawElementsBaseVertex: PFNGLDRAWELEMENTSBASEVERTEXPROC

    @(link_name = "__glewDrawElementsInstancedBaseVertex")
    __glewDrawElementsInstancedBaseVertex: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC

    @(link_name = "__glewDrawRangeElementsBaseVertex")
    __glewDrawRangeElementsBaseVertex: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC

    @(link_name = "__glewMultiDrawElementsBaseVertex")
    __glewMultiDrawElementsBaseVertex: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC

    @(link_name = "__glewDrawArraysIndirect")
    __glewDrawArraysIndirect: PFNGLDRAWARRAYSINDIRECTPROC

    @(link_name = "__glewDrawElementsIndirect")
    __glewDrawElementsIndirect: PFNGLDRAWELEMENTSINDIRECTPROC

    @(link_name = "__glewFramebufferParameteri")
    __glewFramebufferParameteri: PFNGLFRAMEBUFFERPARAMETERIPROC

    @(link_name = "__glewGetFramebufferParameteriv")
    __glewGetFramebufferParameteriv: PFNGLGETFRAMEBUFFERPARAMETERIVPROC

    @(link_name = "__glewGetNamedFramebufferParameterivEXT")
    __glewGetNamedFramebufferParameterivEXT: PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC

    @(link_name = "__glewNamedFramebufferParameteriEXT")
    __glewNamedFramebufferParameteriEXT: PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC

    @(link_name = "__glewBindFramebuffer")
    __glewBindFramebuffer: PFNGLBINDFRAMEBUFFERPROC

    @(link_name = "__glewBindRenderbuffer")
    __glewBindRenderbuffer: PFNGLBINDRENDERBUFFERPROC

    @(link_name = "__glewBlitFramebuffer")
    __glewBlitFramebuffer: PFNGLBLITFRAMEBUFFERPROC

    @(link_name = "__glewCheckFramebufferStatus")
    __glewCheckFramebufferStatus: PFNGLCHECKFRAMEBUFFERSTATUSPROC

    @(link_name = "__glewDeleteFramebuffers")
    __glewDeleteFramebuffers: PFNGLDELETEFRAMEBUFFERSPROC

    @(link_name = "__glewDeleteRenderbuffers")
    __glewDeleteRenderbuffers: PFNGLDELETERENDERBUFFERSPROC

    @(link_name = "__glewFramebufferRenderbuffer")
    __glewFramebufferRenderbuffer: PFNGLFRAMEBUFFERRENDERBUFFERPROC

    @(link_name = "__glewFramebufferTexture1D")
    __glewFramebufferTexture1D: PFNGLFRAMEBUFFERTEXTURE1DPROC

    @(link_name = "__glewFramebufferTexture2D")
    __glewFramebufferTexture2D: PFNGLFRAMEBUFFERTEXTURE2DPROC

    @(link_name = "__glewFramebufferTexture3D")
    __glewFramebufferTexture3D: PFNGLFRAMEBUFFERTEXTURE3DPROC

    @(link_name = "__glewFramebufferTextureLayer")
    __glewFramebufferTextureLayer: PFNGLFRAMEBUFFERTEXTURELAYERPROC

    @(link_name = "__glewGenFramebuffers")
    __glewGenFramebuffers: PFNGLGENFRAMEBUFFERSPROC

    @(link_name = "__glewGenRenderbuffers")
    __glewGenRenderbuffers: PFNGLGENRENDERBUFFERSPROC

    @(link_name = "__glewGenerateMipmap")
    __glewGenerateMipmap: PFNGLGENERATEMIPMAPPROC

    @(link_name = "__glewGetFramebufferAttachmentParameteriv")
    __glewGetFramebufferAttachmentParameteriv: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC

    @(link_name = "__glewGetRenderbufferParameteriv")
    __glewGetRenderbufferParameteriv: PFNGLGETRENDERBUFFERPARAMETERIVPROC

    @(link_name = "__glewIsFramebuffer")
    __glewIsFramebuffer: PFNGLISFRAMEBUFFERPROC

    @(link_name = "__glewIsRenderbuffer")
    __glewIsRenderbuffer: PFNGLISRENDERBUFFERPROC

    @(link_name = "__glewRenderbufferStorage")
    __glewRenderbufferStorage: PFNGLRENDERBUFFERSTORAGEPROC

    @(link_name = "__glewRenderbufferStorageMultisample")
    __glewRenderbufferStorageMultisample: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC

    @(link_name = "__glewFramebufferTextureARB")
    __glewFramebufferTextureARB: PFNGLFRAMEBUFFERTEXTUREARBPROC

    @(link_name = "__glewFramebufferTextureFaceARB")
    __glewFramebufferTextureFaceARB: PFNGLFRAMEBUFFERTEXTUREFACEARBPROC

    @(link_name = "__glewFramebufferTextureLayerARB")
    __glewFramebufferTextureLayerARB: PFNGLFRAMEBUFFERTEXTURELAYERARBPROC

    @(link_name = "__glewProgramParameteriARB")
    __glewProgramParameteriARB: PFNGLPROGRAMPARAMETERIARBPROC

    @(link_name = "__glewGetProgramBinary")
    __glewGetProgramBinary: PFNGLGETPROGRAMBINARYPROC

    @(link_name = "__glewProgramBinary")
    __glewProgramBinary: PFNGLPROGRAMBINARYPROC

    @(link_name = "__glewProgramParameteri")
    __glewProgramParameteri: PFNGLPROGRAMPARAMETERIPROC

    @(link_name = "__glewGetCompressedTextureSubImage")
    __glewGetCompressedTextureSubImage: PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC

    @(link_name = "__glewGetTextureSubImage")
    __glewGetTextureSubImage: PFNGLGETTEXTURESUBIMAGEPROC

    @(link_name = "__glewSpecializeShaderARB")
    __glewSpecializeShaderARB: PFNGLSPECIALIZESHADERARBPROC

    @(link_name = "__glewGetUniformdv")
    __glewGetUniformdv: PFNGLGETUNIFORMDVPROC

    @(link_name = "__glewUniform1d")
    __glewUniform1d: PFNGLUNIFORM1DPROC

    @(link_name = "__glewUniform1dv")
    __glewUniform1dv: PFNGLUNIFORM1DVPROC

    @(link_name = "__glewUniform2d")
    __glewUniform2d: PFNGLUNIFORM2DPROC

    @(link_name = "__glewUniform2dv")
    __glewUniform2dv: PFNGLUNIFORM2DVPROC

    @(link_name = "__glewUniform3d")
    __glewUniform3d: PFNGLUNIFORM3DPROC

    @(link_name = "__glewUniform3dv")
    __glewUniform3dv: PFNGLUNIFORM3DVPROC

    @(link_name = "__glewUniform4d")
    __glewUniform4d: PFNGLUNIFORM4DPROC

    @(link_name = "__glewUniform4dv")
    __glewUniform4dv: PFNGLUNIFORM4DVPROC

    @(link_name = "__glewUniformMatrix2dv")
    __glewUniformMatrix2dv: PFNGLUNIFORMMATRIX2DVPROC

    @(link_name = "__glewUniformMatrix2x3dv")
    __glewUniformMatrix2x3dv: PFNGLUNIFORMMATRIX2X3DVPROC

    @(link_name = "__glewUniformMatrix2x4dv")
    __glewUniformMatrix2x4dv: PFNGLUNIFORMMATRIX2X4DVPROC

    @(link_name = "__glewUniformMatrix3dv")
    __glewUniformMatrix3dv: PFNGLUNIFORMMATRIX3DVPROC

    @(link_name = "__glewUniformMatrix3x2dv")
    __glewUniformMatrix3x2dv: PFNGLUNIFORMMATRIX3X2DVPROC

    @(link_name = "__glewUniformMatrix3x4dv")
    __glewUniformMatrix3x4dv: PFNGLUNIFORMMATRIX3X4DVPROC

    @(link_name = "__glewUniformMatrix4dv")
    __glewUniformMatrix4dv: PFNGLUNIFORMMATRIX4DVPROC

    @(link_name = "__glewUniformMatrix4x2dv")
    __glewUniformMatrix4x2dv: PFNGLUNIFORMMATRIX4X2DVPROC

    @(link_name = "__glewUniformMatrix4x3dv")
    __glewUniformMatrix4x3dv: PFNGLUNIFORMMATRIX4X3DVPROC

    @(link_name = "__glewGetUniformi64vARB")
    __glewGetUniformi64vARB: PFNGLGETUNIFORMI64VARBPROC

    @(link_name = "__glewGetUniformui64vARB")
    __glewGetUniformui64vARB: PFNGLGETUNIFORMUI64VARBPROC

    @(link_name = "__glewGetnUniformi64vARB")
    __glewGetnUniformi64vARB: PFNGLGETNUNIFORMI64VARBPROC

    @(link_name = "__glewGetnUniformui64vARB")
    __glewGetnUniformui64vARB: PFNGLGETNUNIFORMUI64VARBPROC

    @(link_name = "__glewProgramUniform1i64ARB")
    __glewProgramUniform1i64ARB: PFNGLPROGRAMUNIFORM1I64ARBPROC

    @(link_name = "__glewProgramUniform1i64vARB")
    __glewProgramUniform1i64vARB: PFNGLPROGRAMUNIFORM1I64VARBPROC

    @(link_name = "__glewProgramUniform1ui64ARB")
    __glewProgramUniform1ui64ARB: PFNGLPROGRAMUNIFORM1UI64ARBPROC

    @(link_name = "__glewProgramUniform1ui64vARB")
    __glewProgramUniform1ui64vARB: PFNGLPROGRAMUNIFORM1UI64VARBPROC

    @(link_name = "__glewProgramUniform2i64ARB")
    __glewProgramUniform2i64ARB: PFNGLPROGRAMUNIFORM2I64ARBPROC

    @(link_name = "__glewProgramUniform2i64vARB")
    __glewProgramUniform2i64vARB: PFNGLPROGRAMUNIFORM2I64VARBPROC

    @(link_name = "__glewProgramUniform2ui64ARB")
    __glewProgramUniform2ui64ARB: PFNGLPROGRAMUNIFORM2UI64ARBPROC

    @(link_name = "__glewProgramUniform2ui64vARB")
    __glewProgramUniform2ui64vARB: PFNGLPROGRAMUNIFORM2UI64VARBPROC

    @(link_name = "__glewProgramUniform3i64ARB")
    __glewProgramUniform3i64ARB: PFNGLPROGRAMUNIFORM3I64ARBPROC

    @(link_name = "__glewProgramUniform3i64vARB")
    __glewProgramUniform3i64vARB: PFNGLPROGRAMUNIFORM3I64VARBPROC

    @(link_name = "__glewProgramUniform3ui64ARB")
    __glewProgramUniform3ui64ARB: PFNGLPROGRAMUNIFORM3UI64ARBPROC

    @(link_name = "__glewProgramUniform3ui64vARB")
    __glewProgramUniform3ui64vARB: PFNGLPROGRAMUNIFORM3UI64VARBPROC

    @(link_name = "__glewProgramUniform4i64ARB")
    __glewProgramUniform4i64ARB: PFNGLPROGRAMUNIFORM4I64ARBPROC

    @(link_name = "__glewProgramUniform4i64vARB")
    __glewProgramUniform4i64vARB: PFNGLPROGRAMUNIFORM4I64VARBPROC

    @(link_name = "__glewProgramUniform4ui64ARB")
    __glewProgramUniform4ui64ARB: PFNGLPROGRAMUNIFORM4UI64ARBPROC

    @(link_name = "__glewProgramUniform4ui64vARB")
    __glewProgramUniform4ui64vARB: PFNGLPROGRAMUNIFORM4UI64VARBPROC

    @(link_name = "__glewUniform1i64ARB")
    __glewUniform1i64ARB: PFNGLUNIFORM1I64ARBPROC

    @(link_name = "__glewUniform1i64vARB")
    __glewUniform1i64vARB: PFNGLUNIFORM1I64VARBPROC

    @(link_name = "__glewUniform1ui64ARB")
    __glewUniform1ui64ARB: PFNGLUNIFORM1UI64ARBPROC

    @(link_name = "__glewUniform1ui64vARB")
    __glewUniform1ui64vARB: PFNGLUNIFORM1UI64VARBPROC

    @(link_name = "__glewUniform2i64ARB")
    __glewUniform2i64ARB: PFNGLUNIFORM2I64ARBPROC

    @(link_name = "__glewUniform2i64vARB")
    __glewUniform2i64vARB: PFNGLUNIFORM2I64VARBPROC

    @(link_name = "__glewUniform2ui64ARB")
    __glewUniform2ui64ARB: PFNGLUNIFORM2UI64ARBPROC

    @(link_name = "__glewUniform2ui64vARB")
    __glewUniform2ui64vARB: PFNGLUNIFORM2UI64VARBPROC

    @(link_name = "__glewUniform3i64ARB")
    __glewUniform3i64ARB: PFNGLUNIFORM3I64ARBPROC

    @(link_name = "__glewUniform3i64vARB")
    __glewUniform3i64vARB: PFNGLUNIFORM3I64VARBPROC

    @(link_name = "__glewUniform3ui64ARB")
    __glewUniform3ui64ARB: PFNGLUNIFORM3UI64ARBPROC

    @(link_name = "__glewUniform3ui64vARB")
    __glewUniform3ui64vARB: PFNGLUNIFORM3UI64VARBPROC

    @(link_name = "__glewUniform4i64ARB")
    __glewUniform4i64ARB: PFNGLUNIFORM4I64ARBPROC

    @(link_name = "__glewUniform4i64vARB")
    __glewUniform4i64vARB: PFNGLUNIFORM4I64VARBPROC

    @(link_name = "__glewUniform4ui64ARB")
    __glewUniform4ui64ARB: PFNGLUNIFORM4UI64ARBPROC

    @(link_name = "__glewUniform4ui64vARB")
    __glewUniform4ui64vARB: PFNGLUNIFORM4UI64VARBPROC

    @(link_name = "__glewColorSubTable")
    __glewColorSubTable: PFNGLCOLORSUBTABLEPROC

    @(link_name = "__glewColorTable")
    __glewColorTable: PFNGLCOLORTABLEPROC

    @(link_name = "__glewColorTableParameterfv")
    __glewColorTableParameterfv: PFNGLCOLORTABLEPARAMETERFVPROC

    @(link_name = "__glewColorTableParameteriv")
    __glewColorTableParameteriv: PFNGLCOLORTABLEPARAMETERIVPROC

    @(link_name = "__glewConvolutionFilter1D")
    __glewConvolutionFilter1D: PFNGLCONVOLUTIONFILTER1DPROC

    @(link_name = "__glewConvolutionFilter2D")
    __glewConvolutionFilter2D: PFNGLCONVOLUTIONFILTER2DPROC

    @(link_name = "__glewConvolutionParameterf")
    __glewConvolutionParameterf: PFNGLCONVOLUTIONPARAMETERFPROC

    @(link_name = "__glewConvolutionParameterfv")
    __glewConvolutionParameterfv: PFNGLCONVOLUTIONPARAMETERFVPROC

    @(link_name = "__glewConvolutionParameteri")
    __glewConvolutionParameteri: PFNGLCONVOLUTIONPARAMETERIPROC

    @(link_name = "__glewConvolutionParameteriv")
    __glewConvolutionParameteriv: PFNGLCONVOLUTIONPARAMETERIVPROC

    @(link_name = "__glewCopyColorSubTable")
    __glewCopyColorSubTable: PFNGLCOPYCOLORSUBTABLEPROC

    @(link_name = "__glewCopyColorTable")
    __glewCopyColorTable: PFNGLCOPYCOLORTABLEPROC

    @(link_name = "__glewCopyConvolutionFilter1D")
    __glewCopyConvolutionFilter1D: PFNGLCOPYCONVOLUTIONFILTER1DPROC

    @(link_name = "__glewCopyConvolutionFilter2D")
    __glewCopyConvolutionFilter2D: PFNGLCOPYCONVOLUTIONFILTER2DPROC

    @(link_name = "__glewGetColorTable")
    __glewGetColorTable: PFNGLGETCOLORTABLEPROC

    @(link_name = "__glewGetColorTableParameterfv")
    __glewGetColorTableParameterfv: PFNGLGETCOLORTABLEPARAMETERFVPROC

    @(link_name = "__glewGetColorTableParameteriv")
    __glewGetColorTableParameteriv: PFNGLGETCOLORTABLEPARAMETERIVPROC

    @(link_name = "__glewGetConvolutionFilter")
    __glewGetConvolutionFilter: PFNGLGETCONVOLUTIONFILTERPROC

    @(link_name = "__glewGetConvolutionParameterfv")
    __glewGetConvolutionParameterfv: PFNGLGETCONVOLUTIONPARAMETERFVPROC

    @(link_name = "__glewGetConvolutionParameteriv")
    __glewGetConvolutionParameteriv: PFNGLGETCONVOLUTIONPARAMETERIVPROC

    @(link_name = "__glewGetHistogram")
    __glewGetHistogram: PFNGLGETHISTOGRAMPROC

    @(link_name = "__glewGetHistogramParameterfv")
    __glewGetHistogramParameterfv: PFNGLGETHISTOGRAMPARAMETERFVPROC

    @(link_name = "__glewGetHistogramParameteriv")
    __glewGetHistogramParameteriv: PFNGLGETHISTOGRAMPARAMETERIVPROC

    @(link_name = "__glewGetMinmax")
    __glewGetMinmax: PFNGLGETMINMAXPROC

    @(link_name = "__glewGetMinmaxParameterfv")
    __glewGetMinmaxParameterfv: PFNGLGETMINMAXPARAMETERFVPROC

    @(link_name = "__glewGetMinmaxParameteriv")
    __glewGetMinmaxParameteriv: PFNGLGETMINMAXPARAMETERIVPROC

    @(link_name = "__glewGetSeparableFilter")
    __glewGetSeparableFilter: PFNGLGETSEPARABLEFILTERPROC

    @(link_name = "__glewHistogram")
    __glewHistogram: PFNGLHISTOGRAMPROC

    @(link_name = "__glewMinmax")
    __glewMinmax: PFNGLMINMAXPROC

    @(link_name = "__glewResetHistogram")
    __glewResetHistogram: PFNGLRESETHISTOGRAMPROC

    @(link_name = "__glewResetMinmax")
    __glewResetMinmax: PFNGLRESETMINMAXPROC

    @(link_name = "__glewSeparableFilter2D")
    __glewSeparableFilter2D: PFNGLSEPARABLEFILTER2DPROC

    @(link_name = "__glewMultiDrawArraysIndirectCountARB")
    __glewMultiDrawArraysIndirectCountARB: PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC

    @(link_name = "__glewMultiDrawElementsIndirectCountARB")
    __glewMultiDrawElementsIndirectCountARB: PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC

    @(link_name = "__glewDrawArraysInstancedARB")
    __glewDrawArraysInstancedARB: PFNGLDRAWARRAYSINSTANCEDARBPROC

    @(link_name = "__glewDrawElementsInstancedARB")
    __glewDrawElementsInstancedARB: PFNGLDRAWELEMENTSINSTANCEDARBPROC

    @(link_name = "__glewVertexAttribDivisorARB")
    __glewVertexAttribDivisorARB: PFNGLVERTEXATTRIBDIVISORARBPROC

    @(link_name = "__glewGetInternalformativ")
    __glewGetInternalformativ: PFNGLGETINTERNALFORMATIVPROC

    @(link_name = "__glewGetInternalformati64v")
    __glewGetInternalformati64v: PFNGLGETINTERNALFORMATI64VPROC

    @(link_name = "__glewInvalidateBufferData")
    __glewInvalidateBufferData: PFNGLINVALIDATEBUFFERDATAPROC

    @(link_name = "__glewInvalidateBufferSubData")
    __glewInvalidateBufferSubData: PFNGLINVALIDATEBUFFERSUBDATAPROC

    @(link_name = "__glewInvalidateFramebuffer")
    __glewInvalidateFramebuffer: PFNGLINVALIDATEFRAMEBUFFERPROC

    @(link_name = "__glewInvalidateSubFramebuffer")
    __glewInvalidateSubFramebuffer: PFNGLINVALIDATESUBFRAMEBUFFERPROC

    @(link_name = "__glewInvalidateTexImage")
    __glewInvalidateTexImage: PFNGLINVALIDATETEXIMAGEPROC

    @(link_name = "__glewInvalidateTexSubImage")
    __glewInvalidateTexSubImage: PFNGLINVALIDATETEXSUBIMAGEPROC

    @(link_name = "__glewFlushMappedBufferRange")
    __glewFlushMappedBufferRange: PFNGLFLUSHMAPPEDBUFFERRANGEPROC

    @(link_name = "__glewMapBufferRange")
    __glewMapBufferRange: PFNGLMAPBUFFERRANGEPROC

    @(link_name = "__glewCurrentPaletteMatrixARB")
    __glewCurrentPaletteMatrixARB: PFNGLCURRENTPALETTEMATRIXARBPROC

    @(link_name = "__glewMatrixIndexPointerARB")
    __glewMatrixIndexPointerARB: PFNGLMATRIXINDEXPOINTERARBPROC

    @(link_name = "__glewMatrixIndexubvARB")
    __glewMatrixIndexubvARB: PFNGLMATRIXINDEXUBVARBPROC

    @(link_name = "__glewMatrixIndexuivARB")
    __glewMatrixIndexuivARB: PFNGLMATRIXINDEXUIVARBPROC

    @(link_name = "__glewMatrixIndexusvARB")
    __glewMatrixIndexusvARB: PFNGLMATRIXINDEXUSVARBPROC

    @(link_name = "__glewBindBuffersBase")
    __glewBindBuffersBase: PFNGLBINDBUFFERSBASEPROC

    @(link_name = "__glewBindBuffersRange")
    __glewBindBuffersRange: PFNGLBINDBUFFERSRANGEPROC

    @(link_name = "__glewBindImageTextures")
    __glewBindImageTextures: PFNGLBINDIMAGETEXTURESPROC

    @(link_name = "__glewBindSamplers")
    __glewBindSamplers: PFNGLBINDSAMPLERSPROC

    @(link_name = "__glewBindTextures")
    __glewBindTextures: PFNGLBINDTEXTURESPROC

    @(link_name = "__glewBindVertexBuffers")
    __glewBindVertexBuffers: PFNGLBINDVERTEXBUFFERSPROC

    @(link_name = "__glewMultiDrawArraysIndirect")
    __glewMultiDrawArraysIndirect: PFNGLMULTIDRAWARRAYSINDIRECTPROC

    @(link_name = "__glewMultiDrawElementsIndirect")
    __glewMultiDrawElementsIndirect: PFNGLMULTIDRAWELEMENTSINDIRECTPROC

    @(link_name = "__glewSampleCoverageARB")
    __glewSampleCoverageARB: PFNGLSAMPLECOVERAGEARBPROC

    @(link_name = "__glewActiveTextureARB")
    __glewActiveTextureARB: PFNGLACTIVETEXTUREARBPROC

    @(link_name = "__glewClientActiveTextureARB")
    __glewClientActiveTextureARB: PFNGLCLIENTACTIVETEXTUREARBPROC

    @(link_name = "__glewMultiTexCoord1dARB")
    __glewMultiTexCoord1dARB: PFNGLMULTITEXCOORD1DARBPROC

    @(link_name = "__glewMultiTexCoord1dvARB")
    __glewMultiTexCoord1dvARB: PFNGLMULTITEXCOORD1DVARBPROC

    @(link_name = "__glewMultiTexCoord1fARB")
    __glewMultiTexCoord1fARB: PFNGLMULTITEXCOORD1FARBPROC

    @(link_name = "__glewMultiTexCoord1fvARB")
    __glewMultiTexCoord1fvARB: PFNGLMULTITEXCOORD1FVARBPROC

    @(link_name = "__glewMultiTexCoord1iARB")
    __glewMultiTexCoord1iARB: PFNGLMULTITEXCOORD1IARBPROC

    @(link_name = "__glewMultiTexCoord1ivARB")
    __glewMultiTexCoord1ivARB: PFNGLMULTITEXCOORD1IVARBPROC

    @(link_name = "__glewMultiTexCoord1sARB")
    __glewMultiTexCoord1sARB: PFNGLMULTITEXCOORD1SARBPROC

    @(link_name = "__glewMultiTexCoord1svARB")
    __glewMultiTexCoord1svARB: PFNGLMULTITEXCOORD1SVARBPROC

    @(link_name = "__glewMultiTexCoord2dARB")
    __glewMultiTexCoord2dARB: PFNGLMULTITEXCOORD2DARBPROC

    @(link_name = "__glewMultiTexCoord2dvARB")
    __glewMultiTexCoord2dvARB: PFNGLMULTITEXCOORD2DVARBPROC

    @(link_name = "__glewMultiTexCoord2fARB")
    __glewMultiTexCoord2fARB: PFNGLMULTITEXCOORD2FARBPROC

    @(link_name = "__glewMultiTexCoord2fvARB")
    __glewMultiTexCoord2fvARB: PFNGLMULTITEXCOORD2FVARBPROC

    @(link_name = "__glewMultiTexCoord2iARB")
    __glewMultiTexCoord2iARB: PFNGLMULTITEXCOORD2IARBPROC

    @(link_name = "__glewMultiTexCoord2ivARB")
    __glewMultiTexCoord2ivARB: PFNGLMULTITEXCOORD2IVARBPROC

    @(link_name = "__glewMultiTexCoord2sARB")
    __glewMultiTexCoord2sARB: PFNGLMULTITEXCOORD2SARBPROC

    @(link_name = "__glewMultiTexCoord2svARB")
    __glewMultiTexCoord2svARB: PFNGLMULTITEXCOORD2SVARBPROC

    @(link_name = "__glewMultiTexCoord3dARB")
    __glewMultiTexCoord3dARB: PFNGLMULTITEXCOORD3DARBPROC

    @(link_name = "__glewMultiTexCoord3dvARB")
    __glewMultiTexCoord3dvARB: PFNGLMULTITEXCOORD3DVARBPROC

    @(link_name = "__glewMultiTexCoord3fARB")
    __glewMultiTexCoord3fARB: PFNGLMULTITEXCOORD3FARBPROC

    @(link_name = "__glewMultiTexCoord3fvARB")
    __glewMultiTexCoord3fvARB: PFNGLMULTITEXCOORD3FVARBPROC

    @(link_name = "__glewMultiTexCoord3iARB")
    __glewMultiTexCoord3iARB: PFNGLMULTITEXCOORD3IARBPROC

    @(link_name = "__glewMultiTexCoord3ivARB")
    __glewMultiTexCoord3ivARB: PFNGLMULTITEXCOORD3IVARBPROC

    @(link_name = "__glewMultiTexCoord3sARB")
    __glewMultiTexCoord3sARB: PFNGLMULTITEXCOORD3SARBPROC

    @(link_name = "__glewMultiTexCoord3svARB")
    __glewMultiTexCoord3svARB: PFNGLMULTITEXCOORD3SVARBPROC

    @(link_name = "__glewMultiTexCoord4dARB")
    __glewMultiTexCoord4dARB: PFNGLMULTITEXCOORD4DARBPROC

    @(link_name = "__glewMultiTexCoord4dvARB")
    __glewMultiTexCoord4dvARB: PFNGLMULTITEXCOORD4DVARBPROC

    @(link_name = "__glewMultiTexCoord4fARB")
    __glewMultiTexCoord4fARB: PFNGLMULTITEXCOORD4FARBPROC

    @(link_name = "__glewMultiTexCoord4fvARB")
    __glewMultiTexCoord4fvARB: PFNGLMULTITEXCOORD4FVARBPROC

    @(link_name = "__glewMultiTexCoord4iARB")
    __glewMultiTexCoord4iARB: PFNGLMULTITEXCOORD4IARBPROC

    @(link_name = "__glewMultiTexCoord4ivARB")
    __glewMultiTexCoord4ivARB: PFNGLMULTITEXCOORD4IVARBPROC

    @(link_name = "__glewMultiTexCoord4sARB")
    __glewMultiTexCoord4sARB: PFNGLMULTITEXCOORD4SARBPROC

    @(link_name = "__glewMultiTexCoord4svARB")
    __glewMultiTexCoord4svARB: PFNGLMULTITEXCOORD4SVARBPROC

    @(link_name = "__glewBeginQueryARB")
    __glewBeginQueryARB: PFNGLBEGINQUERYARBPROC

    @(link_name = "__glewDeleteQueriesARB")
    __glewDeleteQueriesARB: PFNGLDELETEQUERIESARBPROC

    @(link_name = "__glewEndQueryARB")
    __glewEndQueryARB: PFNGLENDQUERYARBPROC

    @(link_name = "__glewGenQueriesARB")
    __glewGenQueriesARB: PFNGLGENQUERIESARBPROC

    @(link_name = "__glewGetQueryObjectivARB")
    __glewGetQueryObjectivARB: PFNGLGETQUERYOBJECTIVARBPROC

    @(link_name = "__glewGetQueryObjectuivARB")
    __glewGetQueryObjectuivARB: PFNGLGETQUERYOBJECTUIVARBPROC

    @(link_name = "__glewGetQueryivARB")
    __glewGetQueryivARB: PFNGLGETQUERYIVARBPROC

    @(link_name = "__glewIsQueryARB")
    __glewIsQueryARB: PFNGLISQUERYARBPROC

    @(link_name = "__glewMaxShaderCompilerThreadsARB")
    __glewMaxShaderCompilerThreadsARB: PFNGLMAXSHADERCOMPILERTHREADSARBPROC

    @(link_name = "__glewPointParameterfARB")
    __glewPointParameterfARB: PFNGLPOINTPARAMETERFARBPROC

    @(link_name = "__glewPointParameterfvARB")
    __glewPointParameterfvARB: PFNGLPOINTPARAMETERFVARBPROC

    @(link_name = "__glewPolygonOffsetClamp")
    __glewPolygonOffsetClamp: PFNGLPOLYGONOFFSETCLAMPPROC

    @(link_name = "__glewGetProgramInterfaceiv")
    __glewGetProgramInterfaceiv: PFNGLGETPROGRAMINTERFACEIVPROC

    @(link_name = "__glewGetProgramResourceIndex")
    __glewGetProgramResourceIndex: PFNGLGETPROGRAMRESOURCEINDEXPROC

    @(link_name = "__glewGetProgramResourceLocation")
    __glewGetProgramResourceLocation: PFNGLGETPROGRAMRESOURCELOCATIONPROC

    @(link_name = "__glewGetProgramResourceLocationIndex")
    __glewGetProgramResourceLocationIndex: PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC

    @(link_name = "__glewGetProgramResourceName")
    __glewGetProgramResourceName: PFNGLGETPROGRAMRESOURCENAMEPROC

    @(link_name = "__glewGetProgramResourceiv")
    __glewGetProgramResourceiv: PFNGLGETPROGRAMRESOURCEIVPROC

    @(link_name = "__glewProvokingVertex")
    __glewProvokingVertex: PFNGLPROVOKINGVERTEXPROC

    @(link_name = "__glewGetGraphicsResetStatusARB")
    __glewGetGraphicsResetStatusARB: PFNGLGETGRAPHICSRESETSTATUSARBPROC

    @(link_name = "__glewGetnColorTableARB")
    __glewGetnColorTableARB: PFNGLGETNCOLORTABLEARBPROC

    @(link_name = "__glewGetnCompressedTexImageARB")
    __glewGetnCompressedTexImageARB: PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC

    @(link_name = "__glewGetnConvolutionFilterARB")
    __glewGetnConvolutionFilterARB: PFNGLGETNCONVOLUTIONFILTERARBPROC

    @(link_name = "__glewGetnHistogramARB")
    __glewGetnHistogramARB: PFNGLGETNHISTOGRAMARBPROC

    @(link_name = "__glewGetnMapdvARB")
    __glewGetnMapdvARB: PFNGLGETNMAPDVARBPROC

    @(link_name = "__glewGetnMapfvARB")
    __glewGetnMapfvARB: PFNGLGETNMAPFVARBPROC

    @(link_name = "__glewGetnMapivARB")
    __glewGetnMapivARB: PFNGLGETNMAPIVARBPROC

    @(link_name = "__glewGetnMinmaxARB")
    __glewGetnMinmaxARB: PFNGLGETNMINMAXARBPROC

    @(link_name = "__glewGetnPixelMapfvARB")
    __glewGetnPixelMapfvARB: PFNGLGETNPIXELMAPFVARBPROC

    @(link_name = "__glewGetnPixelMapuivARB")
    __glewGetnPixelMapuivARB: PFNGLGETNPIXELMAPUIVARBPROC

    @(link_name = "__glewGetnPixelMapusvARB")
    __glewGetnPixelMapusvARB: PFNGLGETNPIXELMAPUSVARBPROC

    @(link_name = "__glewGetnPolygonStippleARB")
    __glewGetnPolygonStippleARB: PFNGLGETNPOLYGONSTIPPLEARBPROC

    @(link_name = "__glewGetnSeparableFilterARB")
    __glewGetnSeparableFilterARB: PFNGLGETNSEPARABLEFILTERARBPROC

    @(link_name = "__glewGetnTexImageARB")
    __glewGetnTexImageARB: PFNGLGETNTEXIMAGEARBPROC

    @(link_name = "__glewGetnUniformdvARB")
    __glewGetnUniformdvARB: PFNGLGETNUNIFORMDVARBPROC

    @(link_name = "__glewGetnUniformfvARB")
    __glewGetnUniformfvARB: PFNGLGETNUNIFORMFVARBPROC

    @(link_name = "__glewGetnUniformivARB")
    __glewGetnUniformivARB: PFNGLGETNUNIFORMIVARBPROC

    @(link_name = "__glewGetnUniformuivARB")
    __glewGetnUniformuivARB: PFNGLGETNUNIFORMUIVARBPROC

    @(link_name = "__glewReadnPixelsARB")
    __glewReadnPixelsARB: PFNGLREADNPIXELSARBPROC

    @(link_name = "__glewEvaluateDepthValuesARB")
    __glewEvaluateDepthValuesARB: PFNGLEVALUATEDEPTHVALUESARBPROC

    @(link_name = "__glewFramebufferSampleLocationsfvARB")
    __glewFramebufferSampleLocationsfvARB: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC

    @(link_name = "__glewNamedFramebufferSampleLocationsfvARB")
    __glewNamedFramebufferSampleLocationsfvARB: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC

    @(link_name = "__glewMinSampleShadingARB")
    __glewMinSampleShadingARB: PFNGLMINSAMPLESHADINGARBPROC

    @(link_name = "__glewBindSampler")
    __glewBindSampler: PFNGLBINDSAMPLERPROC

    @(link_name = "__glewDeleteSamplers")
    __glewDeleteSamplers: PFNGLDELETESAMPLERSPROC

    @(link_name = "__glewGenSamplers")
    __glewGenSamplers: PFNGLGENSAMPLERSPROC

    @(link_name = "__glewGetSamplerParameterIiv")
    __glewGetSamplerParameterIiv: PFNGLGETSAMPLERPARAMETERIIVPROC

    @(link_name = "__glewGetSamplerParameterIuiv")
    __glewGetSamplerParameterIuiv: PFNGLGETSAMPLERPARAMETERIUIVPROC

    @(link_name = "__glewGetSamplerParameterfv")
    __glewGetSamplerParameterfv: PFNGLGETSAMPLERPARAMETERFVPROC

    @(link_name = "__glewGetSamplerParameteriv")
    __glewGetSamplerParameteriv: PFNGLGETSAMPLERPARAMETERIVPROC

    @(link_name = "__glewIsSampler")
    __glewIsSampler: PFNGLISSAMPLERPROC

    @(link_name = "__glewSamplerParameterIiv")
    __glewSamplerParameterIiv: PFNGLSAMPLERPARAMETERIIVPROC

    @(link_name = "__glewSamplerParameterIuiv")
    __glewSamplerParameterIuiv: PFNGLSAMPLERPARAMETERIUIVPROC

    @(link_name = "__glewSamplerParameterf")
    __glewSamplerParameterf: PFNGLSAMPLERPARAMETERFPROC

    @(link_name = "__glewSamplerParameterfv")
    __glewSamplerParameterfv: PFNGLSAMPLERPARAMETERFVPROC

    @(link_name = "__glewSamplerParameteri")
    __glewSamplerParameteri: PFNGLSAMPLERPARAMETERIPROC

    @(link_name = "__glewSamplerParameteriv")
    __glewSamplerParameteriv: PFNGLSAMPLERPARAMETERIVPROC

    @(link_name = "__glewActiveShaderProgram")
    __glewActiveShaderProgram: PFNGLACTIVESHADERPROGRAMPROC

    @(link_name = "__glewBindProgramPipeline")
    __glewBindProgramPipeline: PFNGLBINDPROGRAMPIPELINEPROC

    @(link_name = "__glewCreateShaderProgramv")
    __glewCreateShaderProgramv: PFNGLCREATESHADERPROGRAMVPROC

    @(link_name = "__glewDeleteProgramPipelines")
    __glewDeleteProgramPipelines: PFNGLDELETEPROGRAMPIPELINESPROC

    @(link_name = "__glewGenProgramPipelines")
    __glewGenProgramPipelines: PFNGLGENPROGRAMPIPELINESPROC

    @(link_name = "__glewGetProgramPipelineInfoLog")
    __glewGetProgramPipelineInfoLog: PFNGLGETPROGRAMPIPELINEINFOLOGPROC

    @(link_name = "__glewGetProgramPipelineiv")
    __glewGetProgramPipelineiv: PFNGLGETPROGRAMPIPELINEIVPROC

    @(link_name = "__glewIsProgramPipeline")
    __glewIsProgramPipeline: PFNGLISPROGRAMPIPELINEPROC

    @(link_name = "__glewProgramUniform1d")
    __glewProgramUniform1d: PFNGLPROGRAMUNIFORM1DPROC

    @(link_name = "__glewProgramUniform1dv")
    __glewProgramUniform1dv: PFNGLPROGRAMUNIFORM1DVPROC

    @(link_name = "__glewProgramUniform1f")
    __glewProgramUniform1f: PFNGLPROGRAMUNIFORM1FPROC

    @(link_name = "__glewProgramUniform1fv")
    __glewProgramUniform1fv: PFNGLPROGRAMUNIFORM1FVPROC

    @(link_name = "__glewProgramUniform1i")
    __glewProgramUniform1i: PFNGLPROGRAMUNIFORM1IPROC

    @(link_name = "__glewProgramUniform1iv")
    __glewProgramUniform1iv: PFNGLPROGRAMUNIFORM1IVPROC

    @(link_name = "__glewProgramUniform1ui")
    __glewProgramUniform1ui: PFNGLPROGRAMUNIFORM1UIPROC

    @(link_name = "__glewProgramUniform1uiv")
    __glewProgramUniform1uiv: PFNGLPROGRAMUNIFORM1UIVPROC

    @(link_name = "__glewProgramUniform2d")
    __glewProgramUniform2d: PFNGLPROGRAMUNIFORM2DPROC

    @(link_name = "__glewProgramUniform2dv")
    __glewProgramUniform2dv: PFNGLPROGRAMUNIFORM2DVPROC

    @(link_name = "__glewProgramUniform2f")
    __glewProgramUniform2f: PFNGLPROGRAMUNIFORM2FPROC

    @(link_name = "__glewProgramUniform2fv")
    __glewProgramUniform2fv: PFNGLPROGRAMUNIFORM2FVPROC

    @(link_name = "__glewProgramUniform2i")
    __glewProgramUniform2i: PFNGLPROGRAMUNIFORM2IPROC

    @(link_name = "__glewProgramUniform2iv")
    __glewProgramUniform2iv: PFNGLPROGRAMUNIFORM2IVPROC

    @(link_name = "__glewProgramUniform2ui")
    __glewProgramUniform2ui: PFNGLPROGRAMUNIFORM2UIPROC

    @(link_name = "__glewProgramUniform2uiv")
    __glewProgramUniform2uiv: PFNGLPROGRAMUNIFORM2UIVPROC

    @(link_name = "__glewProgramUniform3d")
    __glewProgramUniform3d: PFNGLPROGRAMUNIFORM3DPROC

    @(link_name = "__glewProgramUniform3dv")
    __glewProgramUniform3dv: PFNGLPROGRAMUNIFORM3DVPROC

    @(link_name = "__glewProgramUniform3f")
    __glewProgramUniform3f: PFNGLPROGRAMUNIFORM3FPROC

    @(link_name = "__glewProgramUniform3fv")
    __glewProgramUniform3fv: PFNGLPROGRAMUNIFORM3FVPROC

    @(link_name = "__glewProgramUniform3i")
    __glewProgramUniform3i: PFNGLPROGRAMUNIFORM3IPROC

    @(link_name = "__glewProgramUniform3iv")
    __glewProgramUniform3iv: PFNGLPROGRAMUNIFORM3IVPROC

    @(link_name = "__glewProgramUniform3ui")
    __glewProgramUniform3ui: PFNGLPROGRAMUNIFORM3UIPROC

    @(link_name = "__glewProgramUniform3uiv")
    __glewProgramUniform3uiv: PFNGLPROGRAMUNIFORM3UIVPROC

    @(link_name = "__glewProgramUniform4d")
    __glewProgramUniform4d: PFNGLPROGRAMUNIFORM4DPROC

    @(link_name = "__glewProgramUniform4dv")
    __glewProgramUniform4dv: PFNGLPROGRAMUNIFORM4DVPROC

    @(link_name = "__glewProgramUniform4f")
    __glewProgramUniform4f: PFNGLPROGRAMUNIFORM4FPROC

    @(link_name = "__glewProgramUniform4fv")
    __glewProgramUniform4fv: PFNGLPROGRAMUNIFORM4FVPROC

    @(link_name = "__glewProgramUniform4i")
    __glewProgramUniform4i: PFNGLPROGRAMUNIFORM4IPROC

    @(link_name = "__glewProgramUniform4iv")
    __glewProgramUniform4iv: PFNGLPROGRAMUNIFORM4IVPROC

    @(link_name = "__glewProgramUniform4ui")
    __glewProgramUniform4ui: PFNGLPROGRAMUNIFORM4UIPROC

    @(link_name = "__glewProgramUniform4uiv")
    __glewProgramUniform4uiv: PFNGLPROGRAMUNIFORM4UIVPROC

    @(link_name = "__glewProgramUniformMatrix2dv")
    __glewProgramUniformMatrix2dv: PFNGLPROGRAMUNIFORMMATRIX2DVPROC

    @(link_name = "__glewProgramUniformMatrix2fv")
    __glewProgramUniformMatrix2fv: PFNGLPROGRAMUNIFORMMATRIX2FVPROC

    @(link_name = "__glewProgramUniformMatrix2x3dv")
    __glewProgramUniformMatrix2x3dv: PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC

    @(link_name = "__glewProgramUniformMatrix2x3fv")
    __glewProgramUniformMatrix2x3fv: PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC

    @(link_name = "__glewProgramUniformMatrix2x4dv")
    __glewProgramUniformMatrix2x4dv: PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC

    @(link_name = "__glewProgramUniformMatrix2x4fv")
    __glewProgramUniformMatrix2x4fv: PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC

    @(link_name = "__glewProgramUniformMatrix3dv")
    __glewProgramUniformMatrix3dv: PFNGLPROGRAMUNIFORMMATRIX3DVPROC

    @(link_name = "__glewProgramUniformMatrix3fv")
    __glewProgramUniformMatrix3fv: PFNGLPROGRAMUNIFORMMATRIX3FVPROC

    @(link_name = "__glewProgramUniformMatrix3x2dv")
    __glewProgramUniformMatrix3x2dv: PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC

    @(link_name = "__glewProgramUniformMatrix3x2fv")
    __glewProgramUniformMatrix3x2fv: PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC

    @(link_name = "__glewProgramUniformMatrix3x4dv")
    __glewProgramUniformMatrix3x4dv: PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC

    @(link_name = "__glewProgramUniformMatrix3x4fv")
    __glewProgramUniformMatrix3x4fv: PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC

    @(link_name = "__glewProgramUniformMatrix4dv")
    __glewProgramUniformMatrix4dv: PFNGLPROGRAMUNIFORMMATRIX4DVPROC

    @(link_name = "__glewProgramUniformMatrix4fv")
    __glewProgramUniformMatrix4fv: PFNGLPROGRAMUNIFORMMATRIX4FVPROC

    @(link_name = "__glewProgramUniformMatrix4x2dv")
    __glewProgramUniformMatrix4x2dv: PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC

    @(link_name = "__glewProgramUniformMatrix4x2fv")
    __glewProgramUniformMatrix4x2fv: PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC

    @(link_name = "__glewProgramUniformMatrix4x3dv")
    __glewProgramUniformMatrix4x3dv: PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC

    @(link_name = "__glewProgramUniformMatrix4x3fv")
    __glewProgramUniformMatrix4x3fv: PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC

    @(link_name = "__glewUseProgramStages")
    __glewUseProgramStages: PFNGLUSEPROGRAMSTAGESPROC

    @(link_name = "__glewValidateProgramPipeline")
    __glewValidateProgramPipeline: PFNGLVALIDATEPROGRAMPIPELINEPROC

    @(link_name = "__glewGetActiveAtomicCounterBufferiv")
    __glewGetActiveAtomicCounterBufferiv: PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC

    @(link_name = "__glewBindImageTexture")
    __glewBindImageTexture: PFNGLBINDIMAGETEXTUREPROC

    @(link_name = "__glewMemoryBarrier")
    __glewMemoryBarrier: PFNGLMEMORYBARRIERPROC

    @(link_name = "__glewAttachObjectARB")
    __glewAttachObjectARB: PFNGLATTACHOBJECTARBPROC

    @(link_name = "__glewCompileShaderARB")
    __glewCompileShaderARB: PFNGLCOMPILESHADERARBPROC

    @(link_name = "__glewCreateProgramObjectARB")
    __glewCreateProgramObjectARB: PFNGLCREATEPROGRAMOBJECTARBPROC

    @(link_name = "__glewCreateShaderObjectARB")
    __glewCreateShaderObjectARB: PFNGLCREATESHADEROBJECTARBPROC

    @(link_name = "__glewDeleteObjectARB")
    __glewDeleteObjectARB: PFNGLDELETEOBJECTARBPROC

    @(link_name = "__glewDetachObjectARB")
    __glewDetachObjectARB: PFNGLDETACHOBJECTARBPROC

    @(link_name = "__glewGetActiveUniformARB")
    __glewGetActiveUniformARB: PFNGLGETACTIVEUNIFORMARBPROC

    @(link_name = "__glewGetAttachedObjectsARB")
    __glewGetAttachedObjectsARB: PFNGLGETATTACHEDOBJECTSARBPROC

    @(link_name = "__glewGetHandleARB")
    __glewGetHandleARB: PFNGLGETHANDLEARBPROC

    @(link_name = "__glewGetInfoLogARB")
    __glewGetInfoLogARB: PFNGLGETINFOLOGARBPROC

    @(link_name = "__glewGetObjectParameterfvARB")
    __glewGetObjectParameterfvARB: PFNGLGETOBJECTPARAMETERFVARBPROC

    @(link_name = "__glewGetObjectParameterivARB")
    __glewGetObjectParameterivARB: PFNGLGETOBJECTPARAMETERIVARBPROC

    @(link_name = "__glewGetShaderSourceARB")
    __glewGetShaderSourceARB: PFNGLGETSHADERSOURCEARBPROC

    @(link_name = "__glewGetUniformLocationARB")
    __glewGetUniformLocationARB: PFNGLGETUNIFORMLOCATIONARBPROC

    @(link_name = "__glewGetUniformfvARB")
    __glewGetUniformfvARB: PFNGLGETUNIFORMFVARBPROC

    @(link_name = "__glewGetUniformivARB")
    __glewGetUniformivARB: PFNGLGETUNIFORMIVARBPROC

    @(link_name = "__glewLinkProgramARB")
    __glewLinkProgramARB: PFNGLLINKPROGRAMARBPROC

    @(link_name = "__glewShaderSourceARB")
    __glewShaderSourceARB: PFNGLSHADERSOURCEARBPROC

    @(link_name = "__glewUniform1fARB")
    __glewUniform1fARB: PFNGLUNIFORM1FARBPROC

    @(link_name = "__glewUniform1fvARB")
    __glewUniform1fvARB: PFNGLUNIFORM1FVARBPROC

    @(link_name = "__glewUniform1iARB")
    __glewUniform1iARB: PFNGLUNIFORM1IARBPROC

    @(link_name = "__glewUniform1ivARB")
    __glewUniform1ivARB: PFNGLUNIFORM1IVARBPROC

    @(link_name = "__glewUniform2fARB")
    __glewUniform2fARB: PFNGLUNIFORM2FARBPROC

    @(link_name = "__glewUniform2fvARB")
    __glewUniform2fvARB: PFNGLUNIFORM2FVARBPROC

    @(link_name = "__glewUniform2iARB")
    __glewUniform2iARB: PFNGLUNIFORM2IARBPROC

    @(link_name = "__glewUniform2ivARB")
    __glewUniform2ivARB: PFNGLUNIFORM2IVARBPROC

    @(link_name = "__glewUniform3fARB")
    __glewUniform3fARB: PFNGLUNIFORM3FARBPROC

    @(link_name = "__glewUniform3fvARB")
    __glewUniform3fvARB: PFNGLUNIFORM3FVARBPROC

    @(link_name = "__glewUniform3iARB")
    __glewUniform3iARB: PFNGLUNIFORM3IARBPROC

    @(link_name = "__glewUniform3ivARB")
    __glewUniform3ivARB: PFNGLUNIFORM3IVARBPROC

    @(link_name = "__glewUniform4fARB")
    __glewUniform4fARB: PFNGLUNIFORM4FARBPROC

    @(link_name = "__glewUniform4fvARB")
    __glewUniform4fvARB: PFNGLUNIFORM4FVARBPROC

    @(link_name = "__glewUniform4iARB")
    __glewUniform4iARB: PFNGLUNIFORM4IARBPROC

    @(link_name = "__glewUniform4ivARB")
    __glewUniform4ivARB: PFNGLUNIFORM4IVARBPROC

    @(link_name = "__glewUniformMatrix2fvARB")
    __glewUniformMatrix2fvARB: PFNGLUNIFORMMATRIX2FVARBPROC

    @(link_name = "__glewUniformMatrix3fvARB")
    __glewUniformMatrix3fvARB: PFNGLUNIFORMMATRIX3FVARBPROC

    @(link_name = "__glewUniformMatrix4fvARB")
    __glewUniformMatrix4fvARB: PFNGLUNIFORMMATRIX4FVARBPROC

    @(link_name = "__glewUseProgramObjectARB")
    __glewUseProgramObjectARB: PFNGLUSEPROGRAMOBJECTARBPROC

    @(link_name = "__glewValidateProgramARB")
    __glewValidateProgramARB: PFNGLVALIDATEPROGRAMARBPROC

    @(link_name = "__glewShaderStorageBlockBinding")
    __glewShaderStorageBlockBinding: PFNGLSHADERSTORAGEBLOCKBINDINGPROC

    @(link_name = "__glewGetActiveSubroutineName")
    __glewGetActiveSubroutineName: PFNGLGETACTIVESUBROUTINENAMEPROC

    @(link_name = "__glewGetActiveSubroutineUniformName")
    __glewGetActiveSubroutineUniformName: PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC

    @(link_name = "__glewGetActiveSubroutineUniformiv")
    __glewGetActiveSubroutineUniformiv: PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC

    @(link_name = "__glewGetProgramStageiv")
    __glewGetProgramStageiv: PFNGLGETPROGRAMSTAGEIVPROC

    @(link_name = "__glewGetSubroutineIndex")
    __glewGetSubroutineIndex: PFNGLGETSUBROUTINEINDEXPROC

    @(link_name = "__glewGetSubroutineUniformLocation")
    __glewGetSubroutineUniformLocation: PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC

    @(link_name = "__glewGetUniformSubroutineuiv")
    __glewGetUniformSubroutineuiv: PFNGLGETUNIFORMSUBROUTINEUIVPROC

    @(link_name = "__glewUniformSubroutinesuiv")
    __glewUniformSubroutinesuiv: PFNGLUNIFORMSUBROUTINESUIVPROC

    @(link_name = "__glewCompileShaderIncludeARB")
    __glewCompileShaderIncludeARB: PFNGLCOMPILESHADERINCLUDEARBPROC

    @(link_name = "__glewDeleteNamedStringARB")
    __glewDeleteNamedStringARB: PFNGLDELETENAMEDSTRINGARBPROC

    @(link_name = "__glewGetNamedStringARB")
    __glewGetNamedStringARB: PFNGLGETNAMEDSTRINGARBPROC

    @(link_name = "__glewGetNamedStringivARB")
    __glewGetNamedStringivARB: PFNGLGETNAMEDSTRINGIVARBPROC

    @(link_name = "__glewIsNamedStringARB")
    __glewIsNamedStringARB: PFNGLISNAMEDSTRINGARBPROC

    @(link_name = "__glewNamedStringARB")
    __glewNamedStringARB: PFNGLNAMEDSTRINGARBPROC

    @(link_name = "__glewBufferPageCommitmentARB")
    __glewBufferPageCommitmentARB: PFNGLBUFFERPAGECOMMITMENTARBPROC

    @(link_name = "__glewTexPageCommitmentARB")
    __glewTexPageCommitmentARB: PFNGLTEXPAGECOMMITMENTARBPROC

    @(link_name = "__glewClientWaitSync")
    __glewClientWaitSync: PFNGLCLIENTWAITSYNCPROC

    @(link_name = "__glewDeleteSync")
    __glewDeleteSync: PFNGLDELETESYNCPROC

    @(link_name = "__glewFenceSync")
    __glewFenceSync: PFNGLFENCESYNCPROC

    @(link_name = "__glewGetInteger64v")
    __glewGetInteger64v: PFNGLGETINTEGER64VPROC

    @(link_name = "__glewGetSynciv")
    __glewGetSynciv: PFNGLGETSYNCIVPROC

    @(link_name = "__glewIsSync")
    __glewIsSync: PFNGLISSYNCPROC

    @(link_name = "__glewWaitSync")
    __glewWaitSync: PFNGLWAITSYNCPROC

    @(link_name = "__glewPatchParameterfv")
    __glewPatchParameterfv: PFNGLPATCHPARAMETERFVPROC

    @(link_name = "__glewPatchParameteri")
    __glewPatchParameteri: PFNGLPATCHPARAMETERIPROC

    @(link_name = "__glewTextureBarrier")
    __glewTextureBarrier: PFNGLTEXTUREBARRIERPROC

    @(link_name = "__glewTexBufferARB")
    __glewTexBufferARB: PFNGLTEXBUFFERARBPROC

    @(link_name = "__glewTexBufferRange")
    __glewTexBufferRange: PFNGLTEXBUFFERRANGEPROC

    @(link_name = "__glewTextureBufferRangeEXT")
    __glewTextureBufferRangeEXT: PFNGLTEXTUREBUFFERRANGEEXTPROC

    @(link_name = "__glewCompressedTexImage1DARB")
    __glewCompressedTexImage1DARB: PFNGLCOMPRESSEDTEXIMAGE1DARBPROC

    @(link_name = "__glewCompressedTexImage2DARB")
    __glewCompressedTexImage2DARB: PFNGLCOMPRESSEDTEXIMAGE2DARBPROC

    @(link_name = "__glewCompressedTexImage3DARB")
    __glewCompressedTexImage3DARB: PFNGLCOMPRESSEDTEXIMAGE3DARBPROC

    @(link_name = "__glewCompressedTexSubImage1DARB")
    __glewCompressedTexSubImage1DARB: PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC

    @(link_name = "__glewCompressedTexSubImage2DARB")
    __glewCompressedTexSubImage2DARB: PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC

    @(link_name = "__glewCompressedTexSubImage3DARB")
    __glewCompressedTexSubImage3DARB: PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC

    @(link_name = "__glewGetCompressedTexImageARB")
    __glewGetCompressedTexImageARB: PFNGLGETCOMPRESSEDTEXIMAGEARBPROC

    @(link_name = "__glewGetMultisamplefv")
    __glewGetMultisamplefv: PFNGLGETMULTISAMPLEFVPROC

    @(link_name = "__glewSampleMaski")
    __glewSampleMaski: PFNGLSAMPLEMASKIPROC

    @(link_name = "__glewTexImage2DMultisample")
    __glewTexImage2DMultisample: PFNGLTEXIMAGE2DMULTISAMPLEPROC

    @(link_name = "__glewTexImage3DMultisample")
    __glewTexImage3DMultisample: PFNGLTEXIMAGE3DMULTISAMPLEPROC

    @(link_name = "__glewTexStorage1D")
    __glewTexStorage1D: PFNGLTEXSTORAGE1DPROC

    @(link_name = "__glewTexStorage2D")
    __glewTexStorage2D: PFNGLTEXSTORAGE2DPROC

    @(link_name = "__glewTexStorage3D")
    __glewTexStorage3D: PFNGLTEXSTORAGE3DPROC

    @(link_name = "__glewTexStorage2DMultisample")
    __glewTexStorage2DMultisample: PFNGLTEXSTORAGE2DMULTISAMPLEPROC

    @(link_name = "__glewTexStorage3DMultisample")
    __glewTexStorage3DMultisample: PFNGLTEXSTORAGE3DMULTISAMPLEPROC

    @(link_name = "__glewTextureStorage2DMultisampleEXT")
    __glewTextureStorage2DMultisampleEXT: PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC

    @(link_name = "__glewTextureStorage3DMultisampleEXT")
    __glewTextureStorage3DMultisampleEXT: PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC

    @(link_name = "__glewTextureView")
    __glewTextureView: PFNGLTEXTUREVIEWPROC

    @(link_name = "__glewGetQueryObjecti64v")
    __glewGetQueryObjecti64v: PFNGLGETQUERYOBJECTI64VPROC

    @(link_name = "__glewGetQueryObjectui64v")
    __glewGetQueryObjectui64v: PFNGLGETQUERYOBJECTUI64VPROC

    @(link_name = "__glewQueryCounter")
    __glewQueryCounter: PFNGLQUERYCOUNTERPROC

    @(link_name = "__glewBindTransformFeedback")
    __glewBindTransformFeedback: PFNGLBINDTRANSFORMFEEDBACKPROC

    @(link_name = "__glewDeleteTransformFeedbacks")
    __glewDeleteTransformFeedbacks: PFNGLDELETETRANSFORMFEEDBACKSPROC

    @(link_name = "__glewDrawTransformFeedback")
    __glewDrawTransformFeedback: PFNGLDRAWTRANSFORMFEEDBACKPROC

    @(link_name = "__glewGenTransformFeedbacks")
    __glewGenTransformFeedbacks: PFNGLGENTRANSFORMFEEDBACKSPROC

    @(link_name = "__glewIsTransformFeedback")
    __glewIsTransformFeedback: PFNGLISTRANSFORMFEEDBACKPROC

    @(link_name = "__glewPauseTransformFeedback")
    __glewPauseTransformFeedback: PFNGLPAUSETRANSFORMFEEDBACKPROC

    @(link_name = "__glewResumeTransformFeedback")
    __glewResumeTransformFeedback: PFNGLRESUMETRANSFORMFEEDBACKPROC

    @(link_name = "__glewBeginQueryIndexed")
    __glewBeginQueryIndexed: PFNGLBEGINQUERYINDEXEDPROC

    @(link_name = "__glewDrawTransformFeedbackStream")
    __glewDrawTransformFeedbackStream: PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC

    @(link_name = "__glewEndQueryIndexed")
    __glewEndQueryIndexed: PFNGLENDQUERYINDEXEDPROC

    @(link_name = "__glewGetQueryIndexediv")
    __glewGetQueryIndexediv: PFNGLGETQUERYINDEXEDIVPROC

    @(link_name = "__glewDrawTransformFeedbackInstanced")
    __glewDrawTransformFeedbackInstanced: PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC

    @(link_name = "__glewDrawTransformFeedbackStreamInstanced")
    __glewDrawTransformFeedbackStreamInstanced: PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC

    @(link_name = "__glewLoadTransposeMatrixdARB")
    __glewLoadTransposeMatrixdARB: PFNGLLOADTRANSPOSEMATRIXDARBPROC

    @(link_name = "__glewLoadTransposeMatrixfARB")
    __glewLoadTransposeMatrixfARB: PFNGLLOADTRANSPOSEMATRIXFARBPROC

    @(link_name = "__glewMultTransposeMatrixdARB")
    __glewMultTransposeMatrixdARB: PFNGLMULTTRANSPOSEMATRIXDARBPROC

    @(link_name = "__glewMultTransposeMatrixfARB")
    __glewMultTransposeMatrixfARB: PFNGLMULTTRANSPOSEMATRIXFARBPROC

    @(link_name = "__glewBindBufferBase")
    __glewBindBufferBase: PFNGLBINDBUFFERBASEPROC

    @(link_name = "__glewBindBufferRange")
    __glewBindBufferRange: PFNGLBINDBUFFERRANGEPROC

    @(link_name = "__glewGetActiveUniformBlockName")
    __glewGetActiveUniformBlockName: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC

    @(link_name = "__glewGetActiveUniformBlockiv")
    __glewGetActiveUniformBlockiv: PFNGLGETACTIVEUNIFORMBLOCKIVPROC

    @(link_name = "__glewGetActiveUniformName")
    __glewGetActiveUniformName: PFNGLGETACTIVEUNIFORMNAMEPROC

    @(link_name = "__glewGetActiveUniformsiv")
    __glewGetActiveUniformsiv: PFNGLGETACTIVEUNIFORMSIVPROC

    @(link_name = "__glewGetIntegeri_v")
    __glewGetIntegeri_v: PFNGLGETINTEGERI_VPROC

    @(link_name = "__glewGetUniformBlockIndex")
    __glewGetUniformBlockIndex: PFNGLGETUNIFORMBLOCKINDEXPROC

    @(link_name = "__glewGetUniformIndices")
    __glewGetUniformIndices: PFNGLGETUNIFORMINDICESPROC

    @(link_name = "__glewUniformBlockBinding")
    __glewUniformBlockBinding: PFNGLUNIFORMBLOCKBINDINGPROC

    @(link_name = "__glewBindVertexArray")
    __glewBindVertexArray: PFNGLBINDVERTEXARRAYPROC

    @(link_name = "__glewDeleteVertexArrays")
    __glewDeleteVertexArrays: PFNGLDELETEVERTEXARRAYSPROC

    @(link_name = "__glewGenVertexArrays")
    __glewGenVertexArrays: PFNGLGENVERTEXARRAYSPROC

    @(link_name = "__glewIsVertexArray")
    __glewIsVertexArray: PFNGLISVERTEXARRAYPROC

    @(link_name = "__glewGetVertexAttribLdv")
    __glewGetVertexAttribLdv: PFNGLGETVERTEXATTRIBLDVPROC

    @(link_name = "__glewVertexAttribL1d")
    __glewVertexAttribL1d: PFNGLVERTEXATTRIBL1DPROC

    @(link_name = "__glewVertexAttribL1dv")
    __glewVertexAttribL1dv: PFNGLVERTEXATTRIBL1DVPROC

    @(link_name = "__glewVertexAttribL2d")
    __glewVertexAttribL2d: PFNGLVERTEXATTRIBL2DPROC

    @(link_name = "__glewVertexAttribL2dv")
    __glewVertexAttribL2dv: PFNGLVERTEXATTRIBL2DVPROC

    @(link_name = "__glewVertexAttribL3d")
    __glewVertexAttribL3d: PFNGLVERTEXATTRIBL3DPROC

    @(link_name = "__glewVertexAttribL3dv")
    __glewVertexAttribL3dv: PFNGLVERTEXATTRIBL3DVPROC

    @(link_name = "__glewVertexAttribL4d")
    __glewVertexAttribL4d: PFNGLVERTEXATTRIBL4DPROC

    @(link_name = "__glewVertexAttribL4dv")
    __glewVertexAttribL4dv: PFNGLVERTEXATTRIBL4DVPROC

    @(link_name = "__glewVertexAttribLPointer")
    __glewVertexAttribLPointer: PFNGLVERTEXATTRIBLPOINTERPROC

    @(link_name = "__glewBindVertexBuffer")
    __glewBindVertexBuffer: PFNGLBINDVERTEXBUFFERPROC

    @(link_name = "__glewVertexArrayBindVertexBufferEXT")
    __glewVertexArrayBindVertexBufferEXT: PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC

    @(link_name = "__glewVertexArrayVertexAttribBindingEXT")
    __glewVertexArrayVertexAttribBindingEXT: PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribFormatEXT")
    __glewVertexArrayVertexAttribFormatEXT: PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribIFormatEXT")
    __glewVertexArrayVertexAttribIFormatEXT: PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribLFormatEXT")
    __glewVertexArrayVertexAttribLFormatEXT: PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC

    @(link_name = "__glewVertexArrayVertexBindingDivisorEXT")
    __glewVertexArrayVertexBindingDivisorEXT: PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC

    @(link_name = "__glewVertexAttribBinding")
    __glewVertexAttribBinding: PFNGLVERTEXATTRIBBINDINGPROC

    @(link_name = "__glewVertexAttribFormat")
    __glewVertexAttribFormat: PFNGLVERTEXATTRIBFORMATPROC

    @(link_name = "__glewVertexAttribIFormat")
    __glewVertexAttribIFormat: PFNGLVERTEXATTRIBIFORMATPROC

    @(link_name = "__glewVertexAttribLFormat")
    __glewVertexAttribLFormat: PFNGLVERTEXATTRIBLFORMATPROC

    @(link_name = "__glewVertexBindingDivisor")
    __glewVertexBindingDivisor: PFNGLVERTEXBINDINGDIVISORPROC

    @(link_name = "__glewVertexBlendARB")
    __glewVertexBlendARB: PFNGLVERTEXBLENDARBPROC

    @(link_name = "__glewWeightPointerARB")
    __glewWeightPointerARB: PFNGLWEIGHTPOINTERARBPROC

    @(link_name = "__glewWeightbvARB")
    __glewWeightbvARB: PFNGLWEIGHTBVARBPROC

    @(link_name = "__glewWeightdvARB")
    __glewWeightdvARB: PFNGLWEIGHTDVARBPROC

    @(link_name = "__glewWeightfvARB")
    __glewWeightfvARB: PFNGLWEIGHTFVARBPROC

    @(link_name = "__glewWeightivARB")
    __glewWeightivARB: PFNGLWEIGHTIVARBPROC

    @(link_name = "__glewWeightsvARB")
    __glewWeightsvARB: PFNGLWEIGHTSVARBPROC

    @(link_name = "__glewWeightubvARB")
    __glewWeightubvARB: PFNGLWEIGHTUBVARBPROC

    @(link_name = "__glewWeightuivARB")
    __glewWeightuivARB: PFNGLWEIGHTUIVARBPROC

    @(link_name = "__glewWeightusvARB")
    __glewWeightusvARB: PFNGLWEIGHTUSVARBPROC

    @(link_name = "__glewBindBufferARB")
    __glewBindBufferARB: PFNGLBINDBUFFERARBPROC

    @(link_name = "__glewBufferDataARB")
    __glewBufferDataARB: PFNGLBUFFERDATAARBPROC

    @(link_name = "__glewBufferSubDataARB")
    __glewBufferSubDataARB: PFNGLBUFFERSUBDATAARBPROC

    @(link_name = "__glewDeleteBuffersARB")
    __glewDeleteBuffersARB: PFNGLDELETEBUFFERSARBPROC

    @(link_name = "__glewGenBuffersARB")
    __glewGenBuffersARB: PFNGLGENBUFFERSARBPROC

    @(link_name = "__glewGetBufferParameterivARB")
    __glewGetBufferParameterivARB: PFNGLGETBUFFERPARAMETERIVARBPROC

    @(link_name = "__glewGetBufferPointervARB")
    __glewGetBufferPointervARB: PFNGLGETBUFFERPOINTERVARBPROC

    @(link_name = "__glewGetBufferSubDataARB")
    __glewGetBufferSubDataARB: PFNGLGETBUFFERSUBDATAARBPROC

    @(link_name = "__glewIsBufferARB")
    __glewIsBufferARB: PFNGLISBUFFERARBPROC

    @(link_name = "__glewMapBufferARB")
    __glewMapBufferARB: PFNGLMAPBUFFERARBPROC

    @(link_name = "__glewUnmapBufferARB")
    __glewUnmapBufferARB: PFNGLUNMAPBUFFERARBPROC

    @(link_name = "__glewBindProgramARB")
    __glewBindProgramARB: PFNGLBINDPROGRAMARBPROC

    @(link_name = "__glewDeleteProgramsARB")
    __glewDeleteProgramsARB: PFNGLDELETEPROGRAMSARBPROC

    @(link_name = "__glewDisableVertexAttribArrayARB")
    __glewDisableVertexAttribArrayARB: PFNGLDISABLEVERTEXATTRIBARRAYARBPROC

    @(link_name = "__glewEnableVertexAttribArrayARB")
    __glewEnableVertexAttribArrayARB: PFNGLENABLEVERTEXATTRIBARRAYARBPROC

    @(link_name = "__glewGenProgramsARB")
    __glewGenProgramsARB: PFNGLGENPROGRAMSARBPROC

    @(link_name = "__glewGetProgramEnvParameterdvARB")
    __glewGetProgramEnvParameterdvARB: PFNGLGETPROGRAMENVPARAMETERDVARBPROC

    @(link_name = "__glewGetProgramEnvParameterfvARB")
    __glewGetProgramEnvParameterfvARB: PFNGLGETPROGRAMENVPARAMETERFVARBPROC

    @(link_name = "__glewGetProgramLocalParameterdvARB")
    __glewGetProgramLocalParameterdvARB: PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC

    @(link_name = "__glewGetProgramLocalParameterfvARB")
    __glewGetProgramLocalParameterfvARB: PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC

    @(link_name = "__glewGetProgramStringARB")
    __glewGetProgramStringARB: PFNGLGETPROGRAMSTRINGARBPROC

    @(link_name = "__glewGetProgramivARB")
    __glewGetProgramivARB: PFNGLGETPROGRAMIVARBPROC

    @(link_name = "__glewGetVertexAttribPointervARB")
    __glewGetVertexAttribPointervARB: PFNGLGETVERTEXATTRIBPOINTERVARBPROC

    @(link_name = "__glewGetVertexAttribdvARB")
    __glewGetVertexAttribdvARB: PFNGLGETVERTEXATTRIBDVARBPROC

    @(link_name = "__glewGetVertexAttribfvARB")
    __glewGetVertexAttribfvARB: PFNGLGETVERTEXATTRIBFVARBPROC

    @(link_name = "__glewGetVertexAttribivARB")
    __glewGetVertexAttribivARB: PFNGLGETVERTEXATTRIBIVARBPROC

    @(link_name = "__glewIsProgramARB")
    __glewIsProgramARB: PFNGLISPROGRAMARBPROC

    @(link_name = "__glewProgramEnvParameter4dARB")
    __glewProgramEnvParameter4dARB: PFNGLPROGRAMENVPARAMETER4DARBPROC

    @(link_name = "__glewProgramEnvParameter4dvARB")
    __glewProgramEnvParameter4dvARB: PFNGLPROGRAMENVPARAMETER4DVARBPROC

    @(link_name = "__glewProgramEnvParameter4fARB")
    __glewProgramEnvParameter4fARB: PFNGLPROGRAMENVPARAMETER4FARBPROC

    @(link_name = "__glewProgramEnvParameter4fvARB")
    __glewProgramEnvParameter4fvARB: PFNGLPROGRAMENVPARAMETER4FVARBPROC

    @(link_name = "__glewProgramLocalParameter4dARB")
    __glewProgramLocalParameter4dARB: PFNGLPROGRAMLOCALPARAMETER4DARBPROC

    @(link_name = "__glewProgramLocalParameter4dvARB")
    __glewProgramLocalParameter4dvARB: PFNGLPROGRAMLOCALPARAMETER4DVARBPROC

    @(link_name = "__glewProgramLocalParameter4fARB")
    __glewProgramLocalParameter4fARB: PFNGLPROGRAMLOCALPARAMETER4FARBPROC

    @(link_name = "__glewProgramLocalParameter4fvARB")
    __glewProgramLocalParameter4fvARB: PFNGLPROGRAMLOCALPARAMETER4FVARBPROC

    @(link_name = "__glewProgramStringARB")
    __glewProgramStringARB: PFNGLPROGRAMSTRINGARBPROC

    @(link_name = "__glewVertexAttrib1dARB")
    __glewVertexAttrib1dARB: PFNGLVERTEXATTRIB1DARBPROC

    @(link_name = "__glewVertexAttrib1dvARB")
    __glewVertexAttrib1dvARB: PFNGLVERTEXATTRIB1DVARBPROC

    @(link_name = "__glewVertexAttrib1fARB")
    __glewVertexAttrib1fARB: PFNGLVERTEXATTRIB1FARBPROC

    @(link_name = "__glewVertexAttrib1fvARB")
    __glewVertexAttrib1fvARB: PFNGLVERTEXATTRIB1FVARBPROC

    @(link_name = "__glewVertexAttrib1sARB")
    __glewVertexAttrib1sARB: PFNGLVERTEXATTRIB1SARBPROC

    @(link_name = "__glewVertexAttrib1svARB")
    __glewVertexAttrib1svARB: PFNGLVERTEXATTRIB1SVARBPROC

    @(link_name = "__glewVertexAttrib2dARB")
    __glewVertexAttrib2dARB: PFNGLVERTEXATTRIB2DARBPROC

    @(link_name = "__glewVertexAttrib2dvARB")
    __glewVertexAttrib2dvARB: PFNGLVERTEXATTRIB2DVARBPROC

    @(link_name = "__glewVertexAttrib2fARB")
    __glewVertexAttrib2fARB: PFNGLVERTEXATTRIB2FARBPROC

    @(link_name = "__glewVertexAttrib2fvARB")
    __glewVertexAttrib2fvARB: PFNGLVERTEXATTRIB2FVARBPROC

    @(link_name = "__glewVertexAttrib2sARB")
    __glewVertexAttrib2sARB: PFNGLVERTEXATTRIB2SARBPROC

    @(link_name = "__glewVertexAttrib2svARB")
    __glewVertexAttrib2svARB: PFNGLVERTEXATTRIB2SVARBPROC

    @(link_name = "__glewVertexAttrib3dARB")
    __glewVertexAttrib3dARB: PFNGLVERTEXATTRIB3DARBPROC

    @(link_name = "__glewVertexAttrib3dvARB")
    __glewVertexAttrib3dvARB: PFNGLVERTEXATTRIB3DVARBPROC

    @(link_name = "__glewVertexAttrib3fARB")
    __glewVertexAttrib3fARB: PFNGLVERTEXATTRIB3FARBPROC

    @(link_name = "__glewVertexAttrib3fvARB")
    __glewVertexAttrib3fvARB: PFNGLVERTEXATTRIB3FVARBPROC

    @(link_name = "__glewVertexAttrib3sARB")
    __glewVertexAttrib3sARB: PFNGLVERTEXATTRIB3SARBPROC

    @(link_name = "__glewVertexAttrib3svARB")
    __glewVertexAttrib3svARB: PFNGLVERTEXATTRIB3SVARBPROC

    @(link_name = "__glewVertexAttrib4NbvARB")
    __glewVertexAttrib4NbvARB: PFNGLVERTEXATTRIB4NBVARBPROC

    @(link_name = "__glewVertexAttrib4NivARB")
    __glewVertexAttrib4NivARB: PFNGLVERTEXATTRIB4NIVARBPROC

    @(link_name = "__glewVertexAttrib4NsvARB")
    __glewVertexAttrib4NsvARB: PFNGLVERTEXATTRIB4NSVARBPROC

    @(link_name = "__glewVertexAttrib4NubARB")
    __glewVertexAttrib4NubARB: PFNGLVERTEXATTRIB4NUBARBPROC

    @(link_name = "__glewVertexAttrib4NubvARB")
    __glewVertexAttrib4NubvARB: PFNGLVERTEXATTRIB4NUBVARBPROC

    @(link_name = "__glewVertexAttrib4NuivARB")
    __glewVertexAttrib4NuivARB: PFNGLVERTEXATTRIB4NUIVARBPROC

    @(link_name = "__glewVertexAttrib4NusvARB")
    __glewVertexAttrib4NusvARB: PFNGLVERTEXATTRIB4NUSVARBPROC

    @(link_name = "__glewVertexAttrib4bvARB")
    __glewVertexAttrib4bvARB: PFNGLVERTEXATTRIB4BVARBPROC

    @(link_name = "__glewVertexAttrib4dARB")
    __glewVertexAttrib4dARB: PFNGLVERTEXATTRIB4DARBPROC

    @(link_name = "__glewVertexAttrib4dvARB")
    __glewVertexAttrib4dvARB: PFNGLVERTEXATTRIB4DVARBPROC

    @(link_name = "__glewVertexAttrib4fARB")
    __glewVertexAttrib4fARB: PFNGLVERTEXATTRIB4FARBPROC

    @(link_name = "__glewVertexAttrib4fvARB")
    __glewVertexAttrib4fvARB: PFNGLVERTEXATTRIB4FVARBPROC

    @(link_name = "__glewVertexAttrib4ivARB")
    __glewVertexAttrib4ivARB: PFNGLVERTEXATTRIB4IVARBPROC

    @(link_name = "__glewVertexAttrib4sARB")
    __glewVertexAttrib4sARB: PFNGLVERTEXATTRIB4SARBPROC

    @(link_name = "__glewVertexAttrib4svARB")
    __glewVertexAttrib4svARB: PFNGLVERTEXATTRIB4SVARBPROC

    @(link_name = "__glewVertexAttrib4ubvARB")
    __glewVertexAttrib4ubvARB: PFNGLVERTEXATTRIB4UBVARBPROC

    @(link_name = "__glewVertexAttrib4uivARB")
    __glewVertexAttrib4uivARB: PFNGLVERTEXATTRIB4UIVARBPROC

    @(link_name = "__glewVertexAttrib4usvARB")
    __glewVertexAttrib4usvARB: PFNGLVERTEXATTRIB4USVARBPROC

    @(link_name = "__glewVertexAttribPointerARB")
    __glewVertexAttribPointerARB: PFNGLVERTEXATTRIBPOINTERARBPROC

    @(link_name = "__glewBindAttribLocationARB")
    __glewBindAttribLocationARB: PFNGLBINDATTRIBLOCATIONARBPROC

    @(link_name = "__glewGetActiveAttribARB")
    __glewGetActiveAttribARB: PFNGLGETACTIVEATTRIBARBPROC

    @(link_name = "__glewGetAttribLocationARB")
    __glewGetAttribLocationARB: PFNGLGETATTRIBLOCATIONARBPROC

    @(link_name = "__glewColorP3ui")
    __glewColorP3ui: PFNGLCOLORP3UIPROC

    @(link_name = "__glewColorP3uiv")
    __glewColorP3uiv: PFNGLCOLORP3UIVPROC

    @(link_name = "__glewColorP4ui")
    __glewColorP4ui: PFNGLCOLORP4UIPROC

    @(link_name = "__glewColorP4uiv")
    __glewColorP4uiv: PFNGLCOLORP4UIVPROC

    @(link_name = "__glewMultiTexCoordP1ui")
    __glewMultiTexCoordP1ui: PFNGLMULTITEXCOORDP1UIPROC

    @(link_name = "__glewMultiTexCoordP1uiv")
    __glewMultiTexCoordP1uiv: PFNGLMULTITEXCOORDP1UIVPROC

    @(link_name = "__glewMultiTexCoordP2ui")
    __glewMultiTexCoordP2ui: PFNGLMULTITEXCOORDP2UIPROC

    @(link_name = "__glewMultiTexCoordP2uiv")
    __glewMultiTexCoordP2uiv: PFNGLMULTITEXCOORDP2UIVPROC

    @(link_name = "__glewMultiTexCoordP3ui")
    __glewMultiTexCoordP3ui: PFNGLMULTITEXCOORDP3UIPROC

    @(link_name = "__glewMultiTexCoordP3uiv")
    __glewMultiTexCoordP3uiv: PFNGLMULTITEXCOORDP3UIVPROC

    @(link_name = "__glewMultiTexCoordP4ui")
    __glewMultiTexCoordP4ui: PFNGLMULTITEXCOORDP4UIPROC

    @(link_name = "__glewMultiTexCoordP4uiv")
    __glewMultiTexCoordP4uiv: PFNGLMULTITEXCOORDP4UIVPROC

    @(link_name = "__glewNormalP3ui")
    __glewNormalP3ui: PFNGLNORMALP3UIPROC

    @(link_name = "__glewNormalP3uiv")
    __glewNormalP3uiv: PFNGLNORMALP3UIVPROC

    @(link_name = "__glewSecondaryColorP3ui")
    __glewSecondaryColorP3ui: PFNGLSECONDARYCOLORP3UIPROC

    @(link_name = "__glewSecondaryColorP3uiv")
    __glewSecondaryColorP3uiv: PFNGLSECONDARYCOLORP3UIVPROC

    @(link_name = "__glewTexCoordP1ui")
    __glewTexCoordP1ui: PFNGLTEXCOORDP1UIPROC

    @(link_name = "__glewTexCoordP1uiv")
    __glewTexCoordP1uiv: PFNGLTEXCOORDP1UIVPROC

    @(link_name = "__glewTexCoordP2ui")
    __glewTexCoordP2ui: PFNGLTEXCOORDP2UIPROC

    @(link_name = "__glewTexCoordP2uiv")
    __glewTexCoordP2uiv: PFNGLTEXCOORDP2UIVPROC

    @(link_name = "__glewTexCoordP3ui")
    __glewTexCoordP3ui: PFNGLTEXCOORDP3UIPROC

    @(link_name = "__glewTexCoordP3uiv")
    __glewTexCoordP3uiv: PFNGLTEXCOORDP3UIVPROC

    @(link_name = "__glewTexCoordP4ui")
    __glewTexCoordP4ui: PFNGLTEXCOORDP4UIPROC

    @(link_name = "__glewTexCoordP4uiv")
    __glewTexCoordP4uiv: PFNGLTEXCOORDP4UIVPROC

    @(link_name = "__glewVertexAttribP1ui")
    __glewVertexAttribP1ui: PFNGLVERTEXATTRIBP1UIPROC

    @(link_name = "__glewVertexAttribP1uiv")
    __glewVertexAttribP1uiv: PFNGLVERTEXATTRIBP1UIVPROC

    @(link_name = "__glewVertexAttribP2ui")
    __glewVertexAttribP2ui: PFNGLVERTEXATTRIBP2UIPROC

    @(link_name = "__glewVertexAttribP2uiv")
    __glewVertexAttribP2uiv: PFNGLVERTEXATTRIBP2UIVPROC

    @(link_name = "__glewVertexAttribP3ui")
    __glewVertexAttribP3ui: PFNGLVERTEXATTRIBP3UIPROC

    @(link_name = "__glewVertexAttribP3uiv")
    __glewVertexAttribP3uiv: PFNGLVERTEXATTRIBP3UIVPROC

    @(link_name = "__glewVertexAttribP4ui")
    __glewVertexAttribP4ui: PFNGLVERTEXATTRIBP4UIPROC

    @(link_name = "__glewVertexAttribP4uiv")
    __glewVertexAttribP4uiv: PFNGLVERTEXATTRIBP4UIVPROC

    @(link_name = "__glewVertexP2ui")
    __glewVertexP2ui: PFNGLVERTEXP2UIPROC

    @(link_name = "__glewVertexP2uiv")
    __glewVertexP2uiv: PFNGLVERTEXP2UIVPROC

    @(link_name = "__glewVertexP3ui")
    __glewVertexP3ui: PFNGLVERTEXP3UIPROC

    @(link_name = "__glewVertexP3uiv")
    __glewVertexP3uiv: PFNGLVERTEXP3UIVPROC

    @(link_name = "__glewVertexP4ui")
    __glewVertexP4ui: PFNGLVERTEXP4UIPROC

    @(link_name = "__glewVertexP4uiv")
    __glewVertexP4uiv: PFNGLVERTEXP4UIVPROC

    @(link_name = "__glewDepthRangeArrayv")
    __glewDepthRangeArrayv: PFNGLDEPTHRANGEARRAYVPROC

    @(link_name = "__glewDepthRangeIndexed")
    __glewDepthRangeIndexed: PFNGLDEPTHRANGEINDEXEDPROC

    @(link_name = "__glewGetDoublei_v")
    __glewGetDoublei_v: PFNGLGETDOUBLEI_VPROC

    @(link_name = "__glewGetFloati_v")
    __glewGetFloati_v: PFNGLGETFLOATI_VPROC

    @(link_name = "__glewScissorArrayv")
    __glewScissorArrayv: PFNGLSCISSORARRAYVPROC

    @(link_name = "__glewScissorIndexed")
    __glewScissorIndexed: PFNGLSCISSORINDEXEDPROC

    @(link_name = "__glewScissorIndexedv")
    __glewScissorIndexedv: PFNGLSCISSORINDEXEDVPROC

    @(link_name = "__glewViewportArrayv")
    __glewViewportArrayv: PFNGLVIEWPORTARRAYVPROC

    @(link_name = "__glewViewportIndexedf")
    __glewViewportIndexedf: PFNGLVIEWPORTINDEXEDFPROC

    @(link_name = "__glewViewportIndexedfv")
    __glewViewportIndexedfv: PFNGLVIEWPORTINDEXEDFVPROC

    @(link_name = "__glewWindowPos2dARB")
    __glewWindowPos2dARB: PFNGLWINDOWPOS2DARBPROC

    @(link_name = "__glewWindowPos2dvARB")
    __glewWindowPos2dvARB: PFNGLWINDOWPOS2DVARBPROC

    @(link_name = "__glewWindowPos2fARB")
    __glewWindowPos2fARB: PFNGLWINDOWPOS2FARBPROC

    @(link_name = "__glewWindowPos2fvARB")
    __glewWindowPos2fvARB: PFNGLWINDOWPOS2FVARBPROC

    @(link_name = "__glewWindowPos2iARB")
    __glewWindowPos2iARB: PFNGLWINDOWPOS2IARBPROC

    @(link_name = "__glewWindowPos2ivARB")
    __glewWindowPos2ivARB: PFNGLWINDOWPOS2IVARBPROC

    @(link_name = "__glewWindowPos2sARB")
    __glewWindowPos2sARB: PFNGLWINDOWPOS2SARBPROC

    @(link_name = "__glewWindowPos2svARB")
    __glewWindowPos2svARB: PFNGLWINDOWPOS2SVARBPROC

    @(link_name = "__glewWindowPos3dARB")
    __glewWindowPos3dARB: PFNGLWINDOWPOS3DARBPROC

    @(link_name = "__glewWindowPos3dvARB")
    __glewWindowPos3dvARB: PFNGLWINDOWPOS3DVARBPROC

    @(link_name = "__glewWindowPos3fARB")
    __glewWindowPos3fARB: PFNGLWINDOWPOS3FARBPROC

    @(link_name = "__glewWindowPos3fvARB")
    __glewWindowPos3fvARB: PFNGLWINDOWPOS3FVARBPROC

    @(link_name = "__glewWindowPos3iARB")
    __glewWindowPos3iARB: PFNGLWINDOWPOS3IARBPROC

    @(link_name = "__glewWindowPos3ivARB")
    __glewWindowPos3ivARB: PFNGLWINDOWPOS3IVARBPROC

    @(link_name = "__glewWindowPos3sARB")
    __glewWindowPos3sARB: PFNGLWINDOWPOS3SARBPROC

    @(link_name = "__glewWindowPos3svARB")
    __glewWindowPos3svARB: PFNGLWINDOWPOS3SVARBPROC

    @(link_name = "__glewMaxActiveShaderCoresARM")
    __glewMaxActiveShaderCoresARM: PFNGLMAXACTIVESHADERCORESARMPROC

    @(link_name = "__glewDrawBuffersATI")
    __glewDrawBuffersATI: PFNGLDRAWBUFFERSATIPROC

    @(link_name = "__glewDrawElementArrayATI")
    __glewDrawElementArrayATI: PFNGLDRAWELEMENTARRAYATIPROC

    @(link_name = "__glewDrawRangeElementArrayATI")
    __glewDrawRangeElementArrayATI: PFNGLDRAWRANGEELEMENTARRAYATIPROC

    @(link_name = "__glewElementPointerATI")
    __glewElementPointerATI: PFNGLELEMENTPOINTERATIPROC

    @(link_name = "__glewGetTexBumpParameterfvATI")
    __glewGetTexBumpParameterfvATI: PFNGLGETTEXBUMPPARAMETERFVATIPROC

    @(link_name = "__glewGetTexBumpParameterivATI")
    __glewGetTexBumpParameterivATI: PFNGLGETTEXBUMPPARAMETERIVATIPROC

    @(link_name = "__glewTexBumpParameterfvATI")
    __glewTexBumpParameterfvATI: PFNGLTEXBUMPPARAMETERFVATIPROC

    @(link_name = "__glewTexBumpParameterivATI")
    __glewTexBumpParameterivATI: PFNGLTEXBUMPPARAMETERIVATIPROC

    @(link_name = "__glewAlphaFragmentOp1ATI")
    __glewAlphaFragmentOp1ATI: PFNGLALPHAFRAGMENTOP1ATIPROC

    @(link_name = "__glewAlphaFragmentOp2ATI")
    __glewAlphaFragmentOp2ATI: PFNGLALPHAFRAGMENTOP2ATIPROC

    @(link_name = "__glewAlphaFragmentOp3ATI")
    __glewAlphaFragmentOp3ATI: PFNGLALPHAFRAGMENTOP3ATIPROC

    @(link_name = "__glewBeginFragmentShaderATI")
    __glewBeginFragmentShaderATI: PFNGLBEGINFRAGMENTSHADERATIPROC

    @(link_name = "__glewBindFragmentShaderATI")
    __glewBindFragmentShaderATI: PFNGLBINDFRAGMENTSHADERATIPROC

    @(link_name = "__glewColorFragmentOp1ATI")
    __glewColorFragmentOp1ATI: PFNGLCOLORFRAGMENTOP1ATIPROC

    @(link_name = "__glewColorFragmentOp2ATI")
    __glewColorFragmentOp2ATI: PFNGLCOLORFRAGMENTOP2ATIPROC

    @(link_name = "__glewColorFragmentOp3ATI")
    __glewColorFragmentOp3ATI: PFNGLCOLORFRAGMENTOP3ATIPROC

    @(link_name = "__glewDeleteFragmentShaderATI")
    __glewDeleteFragmentShaderATI: PFNGLDELETEFRAGMENTSHADERATIPROC

    @(link_name = "__glewEndFragmentShaderATI")
    __glewEndFragmentShaderATI: PFNGLENDFRAGMENTSHADERATIPROC

    @(link_name = "__glewGenFragmentShadersATI")
    __glewGenFragmentShadersATI: PFNGLGENFRAGMENTSHADERSATIPROC

    @(link_name = "__glewPassTexCoordATI")
    __glewPassTexCoordATI: PFNGLPASSTEXCOORDATIPROC

    @(link_name = "__glewSampleMapATI")
    __glewSampleMapATI: PFNGLSAMPLEMAPATIPROC

    @(link_name = "__glewSetFragmentShaderConstantATI")
    __glewSetFragmentShaderConstantATI: PFNGLSETFRAGMENTSHADERCONSTANTATIPROC

    @(link_name = "__glewMapObjectBufferATI")
    __glewMapObjectBufferATI: PFNGLMAPOBJECTBUFFERATIPROC

    @(link_name = "__glewUnmapObjectBufferATI")
    __glewUnmapObjectBufferATI: PFNGLUNMAPOBJECTBUFFERATIPROC

    @(link_name = "__glewPNTrianglesfATI")
    __glewPNTrianglesfATI: PFNGLPNTRIANGLESFATIPROC

    @(link_name = "__glewPNTrianglesiATI")
    __glewPNTrianglesiATI: PFNGLPNTRIANGLESIATIPROC

    @(link_name = "__glewStencilFuncSeparateATI")
    __glewStencilFuncSeparateATI: PFNGLSTENCILFUNCSEPARATEATIPROC

    @(link_name = "__glewStencilOpSeparateATI")
    __glewStencilOpSeparateATI: PFNGLSTENCILOPSEPARATEATIPROC

    @(link_name = "__glewArrayObjectATI")
    __glewArrayObjectATI: PFNGLARRAYOBJECTATIPROC

    @(link_name = "__glewFreeObjectBufferATI")
    __glewFreeObjectBufferATI: PFNGLFREEOBJECTBUFFERATIPROC

    @(link_name = "__glewGetArrayObjectfvATI")
    __glewGetArrayObjectfvATI: PFNGLGETARRAYOBJECTFVATIPROC

    @(link_name = "__glewGetArrayObjectivATI")
    __glewGetArrayObjectivATI: PFNGLGETARRAYOBJECTIVATIPROC

    @(link_name = "__glewGetObjectBufferfvATI")
    __glewGetObjectBufferfvATI: PFNGLGETOBJECTBUFFERFVATIPROC

    @(link_name = "__glewGetObjectBufferivATI")
    __glewGetObjectBufferivATI: PFNGLGETOBJECTBUFFERIVATIPROC

    @(link_name = "__glewGetVariantArrayObjectfvATI")
    __glewGetVariantArrayObjectfvATI: PFNGLGETVARIANTARRAYOBJECTFVATIPROC

    @(link_name = "__glewGetVariantArrayObjectivATI")
    __glewGetVariantArrayObjectivATI: PFNGLGETVARIANTARRAYOBJECTIVATIPROC

    @(link_name = "__glewIsObjectBufferATI")
    __glewIsObjectBufferATI: PFNGLISOBJECTBUFFERATIPROC

    @(link_name = "__glewNewObjectBufferATI")
    __glewNewObjectBufferATI: PFNGLNEWOBJECTBUFFERATIPROC

    @(link_name = "__glewUpdateObjectBufferATI")
    __glewUpdateObjectBufferATI: PFNGLUPDATEOBJECTBUFFERATIPROC

    @(link_name = "__glewVariantArrayObjectATI")
    __glewVariantArrayObjectATI: PFNGLVARIANTARRAYOBJECTATIPROC

    @(link_name = "__glewGetVertexAttribArrayObjectfvATI")
    __glewGetVertexAttribArrayObjectfvATI: PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC

    @(link_name = "__glewGetVertexAttribArrayObjectivATI")
    __glewGetVertexAttribArrayObjectivATI: PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC

    @(link_name = "__glewVertexAttribArrayObjectATI")
    __glewVertexAttribArrayObjectATI: PFNGLVERTEXATTRIBARRAYOBJECTATIPROC

    @(link_name = "__glewClientActiveVertexStreamATI")
    __glewClientActiveVertexStreamATI: PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC

    @(link_name = "__glewNormalStream3bATI")
    __glewNormalStream3bATI: PFNGLNORMALSTREAM3BATIPROC

    @(link_name = "__glewNormalStream3bvATI")
    __glewNormalStream3bvATI: PFNGLNORMALSTREAM3BVATIPROC

    @(link_name = "__glewNormalStream3dATI")
    __glewNormalStream3dATI: PFNGLNORMALSTREAM3DATIPROC

    @(link_name = "__glewNormalStream3dvATI")
    __glewNormalStream3dvATI: PFNGLNORMALSTREAM3DVATIPROC

    @(link_name = "__glewNormalStream3fATI")
    __glewNormalStream3fATI: PFNGLNORMALSTREAM3FATIPROC

    @(link_name = "__glewNormalStream3fvATI")
    __glewNormalStream3fvATI: PFNGLNORMALSTREAM3FVATIPROC

    @(link_name = "__glewNormalStream3iATI")
    __glewNormalStream3iATI: PFNGLNORMALSTREAM3IATIPROC

    @(link_name = "__glewNormalStream3ivATI")
    __glewNormalStream3ivATI: PFNGLNORMALSTREAM3IVATIPROC

    @(link_name = "__glewNormalStream3sATI")
    __glewNormalStream3sATI: PFNGLNORMALSTREAM3SATIPROC

    @(link_name = "__glewNormalStream3svATI")
    __glewNormalStream3svATI: PFNGLNORMALSTREAM3SVATIPROC

    @(link_name = "__glewVertexBlendEnvfATI")
    __glewVertexBlendEnvfATI: PFNGLVERTEXBLENDENVFATIPROC

    @(link_name = "__glewVertexBlendEnviATI")
    __glewVertexBlendEnviATI: PFNGLVERTEXBLENDENVIATIPROC

    @(link_name = "__glewVertexStream1dATI")
    __glewVertexStream1dATI: PFNGLVERTEXSTREAM1DATIPROC

    @(link_name = "__glewVertexStream1dvATI")
    __glewVertexStream1dvATI: PFNGLVERTEXSTREAM1DVATIPROC

    @(link_name = "__glewVertexStream1fATI")
    __glewVertexStream1fATI: PFNGLVERTEXSTREAM1FATIPROC

    @(link_name = "__glewVertexStream1fvATI")
    __glewVertexStream1fvATI: PFNGLVERTEXSTREAM1FVATIPROC

    @(link_name = "__glewVertexStream1iATI")
    __glewVertexStream1iATI: PFNGLVERTEXSTREAM1IATIPROC

    @(link_name = "__glewVertexStream1ivATI")
    __glewVertexStream1ivATI: PFNGLVERTEXSTREAM1IVATIPROC

    @(link_name = "__glewVertexStream1sATI")
    __glewVertexStream1sATI: PFNGLVERTEXSTREAM1SATIPROC

    @(link_name = "__glewVertexStream1svATI")
    __glewVertexStream1svATI: PFNGLVERTEXSTREAM1SVATIPROC

    @(link_name = "__glewVertexStream2dATI")
    __glewVertexStream2dATI: PFNGLVERTEXSTREAM2DATIPROC

    @(link_name = "__glewVertexStream2dvATI")
    __glewVertexStream2dvATI: PFNGLVERTEXSTREAM2DVATIPROC

    @(link_name = "__glewVertexStream2fATI")
    __glewVertexStream2fATI: PFNGLVERTEXSTREAM2FATIPROC

    @(link_name = "__glewVertexStream2fvATI")
    __glewVertexStream2fvATI: PFNGLVERTEXSTREAM2FVATIPROC

    @(link_name = "__glewVertexStream2iATI")
    __glewVertexStream2iATI: PFNGLVERTEXSTREAM2IATIPROC

    @(link_name = "__glewVertexStream2ivATI")
    __glewVertexStream2ivATI: PFNGLVERTEXSTREAM2IVATIPROC

    @(link_name = "__glewVertexStream2sATI")
    __glewVertexStream2sATI: PFNGLVERTEXSTREAM2SATIPROC

    @(link_name = "__glewVertexStream2svATI")
    __glewVertexStream2svATI: PFNGLVERTEXSTREAM2SVATIPROC

    @(link_name = "__glewVertexStream3dATI")
    __glewVertexStream3dATI: PFNGLVERTEXSTREAM3DATIPROC

    @(link_name = "__glewVertexStream3dvATI")
    __glewVertexStream3dvATI: PFNGLVERTEXSTREAM3DVATIPROC

    @(link_name = "__glewVertexStream3fATI")
    __glewVertexStream3fATI: PFNGLVERTEXSTREAM3FATIPROC

    @(link_name = "__glewVertexStream3fvATI")
    __glewVertexStream3fvATI: PFNGLVERTEXSTREAM3FVATIPROC

    @(link_name = "__glewVertexStream3iATI")
    __glewVertexStream3iATI: PFNGLVERTEXSTREAM3IATIPROC

    @(link_name = "__glewVertexStream3ivATI")
    __glewVertexStream3ivATI: PFNGLVERTEXSTREAM3IVATIPROC

    @(link_name = "__glewVertexStream3sATI")
    __glewVertexStream3sATI: PFNGLVERTEXSTREAM3SATIPROC

    @(link_name = "__glewVertexStream3svATI")
    __glewVertexStream3svATI: PFNGLVERTEXSTREAM3SVATIPROC

    @(link_name = "__glewVertexStream4dATI")
    __glewVertexStream4dATI: PFNGLVERTEXSTREAM4DATIPROC

    @(link_name = "__glewVertexStream4dvATI")
    __glewVertexStream4dvATI: PFNGLVERTEXSTREAM4DVATIPROC

    @(link_name = "__glewVertexStream4fATI")
    __glewVertexStream4fATI: PFNGLVERTEXSTREAM4FATIPROC

    @(link_name = "__glewVertexStream4fvATI")
    __glewVertexStream4fvATI: PFNGLVERTEXSTREAM4FVATIPROC

    @(link_name = "__glewVertexStream4iATI")
    __glewVertexStream4iATI: PFNGLVERTEXSTREAM4IATIPROC

    @(link_name = "__glewVertexStream4ivATI")
    __glewVertexStream4ivATI: PFNGLVERTEXSTREAM4IVATIPROC

    @(link_name = "__glewVertexStream4sATI")
    __glewVertexStream4sATI: PFNGLVERTEXSTREAM4SATIPROC

    @(link_name = "__glewVertexStream4svATI")
    __glewVertexStream4svATI: PFNGLVERTEXSTREAM4SVATIPROC

    @(link_name = "__glewEGLImageTargetTexStorageEXT")
    __glewEGLImageTargetTexStorageEXT: PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC

    @(link_name = "__glewEGLImageTargetTextureStorageEXT")
    __glewEGLImageTargetTextureStorageEXT: PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC

    @(link_name = "__glewDrawArraysInstancedBaseInstanceEXT")
    __glewDrawArraysInstancedBaseInstanceEXT: PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC

    @(link_name = "__glewDrawElementsInstancedBaseInstanceEXT")
    __glewDrawElementsInstancedBaseInstanceEXT: PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC

    @(link_name = "__glewDrawElementsInstancedBaseVertexBaseInstanceEXT")
    __glewDrawElementsInstancedBaseVertexBaseInstanceEXT: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC

    @(link_name = "__glewGetUniformBufferSizeEXT")
    __glewGetUniformBufferSizeEXT: PFNGLGETUNIFORMBUFFERSIZEEXTPROC

    @(link_name = "__glewGetUniformOffsetEXT")
    __glewGetUniformOffsetEXT: PFNGLGETUNIFORMOFFSETEXTPROC

    @(link_name = "__glewUniformBufferEXT")
    __glewUniformBufferEXT: PFNGLUNIFORMBUFFEREXTPROC

    @(link_name = "__glewBlendColorEXT")
    __glewBlendColorEXT: PFNGLBLENDCOLOREXTPROC

    @(link_name = "__glewBlendEquationSeparateEXT")
    __glewBlendEquationSeparateEXT: PFNGLBLENDEQUATIONSEPARATEEXTPROC

    @(link_name = "__glewBindFragDataLocationIndexedEXT")
    __glewBindFragDataLocationIndexedEXT: PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC

    @(link_name = "__glewGetFragDataIndexEXT")
    __glewGetFragDataIndexEXT: PFNGLGETFRAGDATAINDEXEXTPROC

    @(link_name = "__glewGetProgramResourceLocationIndexEXT")
    __glewGetProgramResourceLocationIndexEXT: PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC

    @(link_name = "__glewBlendFuncSeparateEXT")
    __glewBlendFuncSeparateEXT: PFNGLBLENDFUNCSEPARATEEXTPROC

    @(link_name = "__glewBlendEquationEXT")
    __glewBlendEquationEXT: PFNGLBLENDEQUATIONEXTPROC

    @(link_name = "__glewBufferStorageEXT")
    __glewBufferStorageEXT: PFNGLBUFFERSTORAGEEXTPROC

    @(link_name = "__glewNamedBufferStorageEXT")
    __glewNamedBufferStorageEXT: PFNGLNAMEDBUFFERSTORAGEEXTPROC

    @(link_name = "__glewClearTexImageEXT")
    __glewClearTexImageEXT: PFNGLCLEARTEXIMAGEEXTPROC

    @(link_name = "__glewClearTexSubImageEXT")
    __glewClearTexSubImageEXT: PFNGLCLEARTEXSUBIMAGEEXTPROC

    @(link_name = "__glewClipControlEXT")
    __glewClipControlEXT: PFNGLCLIPCONTROLEXTPROC

    @(link_name = "__glewColorSubTableEXT")
    __glewColorSubTableEXT: PFNGLCOLORSUBTABLEEXTPROC

    @(link_name = "__glewCopyColorSubTableEXT")
    __glewCopyColorSubTableEXT: PFNGLCOPYCOLORSUBTABLEEXTPROC

    @(link_name = "__glewLockArraysEXT")
    __glewLockArraysEXT: PFNGLLOCKARRAYSEXTPROC

    @(link_name = "__glewUnlockArraysEXT")
    __glewUnlockArraysEXT: PFNGLUNLOCKARRAYSEXTPROC

    @(link_name = "__glewConvolutionFilter1DEXT")
    __glewConvolutionFilter1DEXT: PFNGLCONVOLUTIONFILTER1DEXTPROC

    @(link_name = "__glewConvolutionFilter2DEXT")
    __glewConvolutionFilter2DEXT: PFNGLCONVOLUTIONFILTER2DEXTPROC

    @(link_name = "__glewConvolutionParameterfEXT")
    __glewConvolutionParameterfEXT: PFNGLCONVOLUTIONPARAMETERFEXTPROC

    @(link_name = "__glewConvolutionParameterfvEXT")
    __glewConvolutionParameterfvEXT: PFNGLCONVOLUTIONPARAMETERFVEXTPROC

    @(link_name = "__glewConvolutionParameteriEXT")
    __glewConvolutionParameteriEXT: PFNGLCONVOLUTIONPARAMETERIEXTPROC

    @(link_name = "__glewConvolutionParameterivEXT")
    __glewConvolutionParameterivEXT: PFNGLCONVOLUTIONPARAMETERIVEXTPROC

    @(link_name = "__glewCopyConvolutionFilter1DEXT")
    __glewCopyConvolutionFilter1DEXT: PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC

    @(link_name = "__glewCopyConvolutionFilter2DEXT")
    __glewCopyConvolutionFilter2DEXT: PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC

    @(link_name = "__glewGetConvolutionFilterEXT")
    __glewGetConvolutionFilterEXT: PFNGLGETCONVOLUTIONFILTEREXTPROC

    @(link_name = "__glewGetConvolutionParameterfvEXT")
    __glewGetConvolutionParameterfvEXT: PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC

    @(link_name = "__glewGetConvolutionParameterivEXT")
    __glewGetConvolutionParameterivEXT: PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC

    @(link_name = "__glewGetSeparableFilterEXT")
    __glewGetSeparableFilterEXT: PFNGLGETSEPARABLEFILTEREXTPROC

    @(link_name = "__glewSeparableFilter2DEXT")
    __glewSeparableFilter2DEXT: PFNGLSEPARABLEFILTER2DEXTPROC

    @(link_name = "__glewBinormalPointerEXT")
    __glewBinormalPointerEXT: PFNGLBINORMALPOINTEREXTPROC

    @(link_name = "__glewTangentPointerEXT")
    __glewTangentPointerEXT: PFNGLTANGENTPOINTEREXTPROC

    @(link_name = "__glewCopyImageSubDataEXT")
    __glewCopyImageSubDataEXT: PFNGLCOPYIMAGESUBDATAEXTPROC

    @(link_name = "__glewCopyTexImage1DEXT")
    __glewCopyTexImage1DEXT: PFNGLCOPYTEXIMAGE1DEXTPROC

    @(link_name = "__glewCopyTexImage2DEXT")
    __glewCopyTexImage2DEXT: PFNGLCOPYTEXIMAGE2DEXTPROC

    @(link_name = "__glewCopyTexSubImage1DEXT")
    __glewCopyTexSubImage1DEXT: PFNGLCOPYTEXSUBIMAGE1DEXTPROC

    @(link_name = "__glewCopyTexSubImage2DEXT")
    __glewCopyTexSubImage2DEXT: PFNGLCOPYTEXSUBIMAGE2DEXTPROC

    @(link_name = "__glewCopyTexSubImage3DEXT")
    __glewCopyTexSubImage3DEXT: PFNGLCOPYTEXSUBIMAGE3DEXTPROC

    @(link_name = "__glewCullParameterdvEXT")
    __glewCullParameterdvEXT: PFNGLCULLPARAMETERDVEXTPROC

    @(link_name = "__glewCullParameterfvEXT")
    __glewCullParameterfvEXT: PFNGLCULLPARAMETERFVEXTPROC

    @(link_name = "__glewGetObjectLabelEXT")
    __glewGetObjectLabelEXT: PFNGLGETOBJECTLABELEXTPROC

    @(link_name = "__glewLabelObjectEXT")
    __glewLabelObjectEXT: PFNGLLABELOBJECTEXTPROC

    @(link_name = "__glewInsertEventMarkerEXT")
    __glewInsertEventMarkerEXT: PFNGLINSERTEVENTMARKEREXTPROC

    @(link_name = "__glewPopGroupMarkerEXT")
    __glewPopGroupMarkerEXT: PFNGLPOPGROUPMARKEREXTPROC

    @(link_name = "__glewPushGroupMarkerEXT")
    __glewPushGroupMarkerEXT: PFNGLPUSHGROUPMARKEREXTPROC

    @(link_name = "__glewDepthBoundsEXT")
    __glewDepthBoundsEXT: PFNGLDEPTHBOUNDSEXTPROC

    @(link_name = "__glewBindMultiTextureEXT")
    __glewBindMultiTextureEXT: PFNGLBINDMULTITEXTUREEXTPROC

    @(link_name = "__glewCheckNamedFramebufferStatusEXT")
    __glewCheckNamedFramebufferStatusEXT: PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC

    @(link_name = "__glewClientAttribDefaultEXT")
    __glewClientAttribDefaultEXT: PFNGLCLIENTATTRIBDEFAULTEXTPROC

    @(link_name = "__glewCompressedMultiTexImage1DEXT")
    __glewCompressedMultiTexImage1DEXT: PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC

    @(link_name = "__glewCompressedMultiTexImage2DEXT")
    __glewCompressedMultiTexImage2DEXT: PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC

    @(link_name = "__glewCompressedMultiTexImage3DEXT")
    __glewCompressedMultiTexImage3DEXT: PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC

    @(link_name = "__glewCompressedMultiTexSubImage1DEXT")
    __glewCompressedMultiTexSubImage1DEXT: PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC

    @(link_name = "__glewCompressedMultiTexSubImage2DEXT")
    __glewCompressedMultiTexSubImage2DEXT: PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC

    @(link_name = "__glewCompressedMultiTexSubImage3DEXT")
    __glewCompressedMultiTexSubImage3DEXT: PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC

    @(link_name = "__glewCompressedTextureImage1DEXT")
    __glewCompressedTextureImage1DEXT: PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC

    @(link_name = "__glewCompressedTextureImage2DEXT")
    __glewCompressedTextureImage2DEXT: PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC

    @(link_name = "__glewCompressedTextureImage3DEXT")
    __glewCompressedTextureImage3DEXT: PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC

    @(link_name = "__glewCompressedTextureSubImage1DEXT")
    __glewCompressedTextureSubImage1DEXT: PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC

    @(link_name = "__glewCompressedTextureSubImage2DEXT")
    __glewCompressedTextureSubImage2DEXT: PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC

    @(link_name = "__glewCompressedTextureSubImage3DEXT")
    __glewCompressedTextureSubImage3DEXT: PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC

    @(link_name = "__glewCopyMultiTexImage1DEXT")
    __glewCopyMultiTexImage1DEXT: PFNGLCOPYMULTITEXIMAGE1DEXTPROC

    @(link_name = "__glewCopyMultiTexImage2DEXT")
    __glewCopyMultiTexImage2DEXT: PFNGLCOPYMULTITEXIMAGE2DEXTPROC

    @(link_name = "__glewCopyMultiTexSubImage1DEXT")
    __glewCopyMultiTexSubImage1DEXT: PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC

    @(link_name = "__glewCopyMultiTexSubImage2DEXT")
    __glewCopyMultiTexSubImage2DEXT: PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC

    @(link_name = "__glewCopyMultiTexSubImage3DEXT")
    __glewCopyMultiTexSubImage3DEXT: PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC

    @(link_name = "__glewCopyTextureImage1DEXT")
    __glewCopyTextureImage1DEXT: PFNGLCOPYTEXTUREIMAGE1DEXTPROC

    @(link_name = "__glewCopyTextureImage2DEXT")
    __glewCopyTextureImage2DEXT: PFNGLCOPYTEXTUREIMAGE2DEXTPROC

    @(link_name = "__glewCopyTextureSubImage1DEXT")
    __glewCopyTextureSubImage1DEXT: PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC

    @(link_name = "__glewCopyTextureSubImage2DEXT")
    __glewCopyTextureSubImage2DEXT: PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC

    @(link_name = "__glewCopyTextureSubImage3DEXT")
    __glewCopyTextureSubImage3DEXT: PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC

    @(link_name = "__glewDisableClientStateIndexedEXT")
    __glewDisableClientStateIndexedEXT: PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC

    @(link_name = "__glewDisableClientStateiEXT")
    __glewDisableClientStateiEXT: PFNGLDISABLECLIENTSTATEIEXTPROC

    @(link_name = "__glewDisableVertexArrayAttribEXT")
    __glewDisableVertexArrayAttribEXT: PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC

    @(link_name = "__glewDisableVertexArrayEXT")
    __glewDisableVertexArrayEXT: PFNGLDISABLEVERTEXARRAYEXTPROC

    @(link_name = "__glewEnableClientStateIndexedEXT")
    __glewEnableClientStateIndexedEXT: PFNGLENABLECLIENTSTATEINDEXEDEXTPROC

    @(link_name = "__glewEnableClientStateiEXT")
    __glewEnableClientStateiEXT: PFNGLENABLECLIENTSTATEIEXTPROC

    @(link_name = "__glewEnableVertexArrayAttribEXT")
    __glewEnableVertexArrayAttribEXT: PFNGLENABLEVERTEXARRAYATTRIBEXTPROC

    @(link_name = "__glewEnableVertexArrayEXT")
    __glewEnableVertexArrayEXT: PFNGLENABLEVERTEXARRAYEXTPROC

    @(link_name = "__glewFlushMappedNamedBufferRangeEXT")
    __glewFlushMappedNamedBufferRangeEXT: PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC

    @(link_name = "__glewFramebufferDrawBufferEXT")
    __glewFramebufferDrawBufferEXT: PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC

    @(link_name = "__glewFramebufferDrawBuffersEXT")
    __glewFramebufferDrawBuffersEXT: PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC

    @(link_name = "__glewFramebufferReadBufferEXT")
    __glewFramebufferReadBufferEXT: PFNGLFRAMEBUFFERREADBUFFEREXTPROC

    @(link_name = "__glewGenerateMultiTexMipmapEXT")
    __glewGenerateMultiTexMipmapEXT: PFNGLGENERATEMULTITEXMIPMAPEXTPROC

    @(link_name = "__glewGenerateTextureMipmapEXT")
    __glewGenerateTextureMipmapEXT: PFNGLGENERATETEXTUREMIPMAPEXTPROC

    @(link_name = "__glewGetCompressedMultiTexImageEXT")
    __glewGetCompressedMultiTexImageEXT: PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC

    @(link_name = "__glewGetCompressedTextureImageEXT")
    __glewGetCompressedTextureImageEXT: PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC

    @(link_name = "__glewGetDoubleIndexedvEXT")
    __glewGetDoubleIndexedvEXT: PFNGLGETDOUBLEINDEXEDVEXTPROC

    @(link_name = "__glewGetDoublei_vEXT")
    __glewGetDoublei_vEXT: PFNGLGETDOUBLEI_VEXTPROC

    @(link_name = "__glewGetFloatIndexedvEXT")
    __glewGetFloatIndexedvEXT: PFNGLGETFLOATINDEXEDVEXTPROC

    @(link_name = "__glewGetFloati_vEXT")
    __glewGetFloati_vEXT: PFNGLGETFLOATI_VEXTPROC

    @(link_name = "__glewGetFramebufferParameterivEXT")
    __glewGetFramebufferParameterivEXT: PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC

    @(link_name = "__glewGetMultiTexEnvfvEXT")
    __glewGetMultiTexEnvfvEXT: PFNGLGETMULTITEXENVFVEXTPROC

    @(link_name = "__glewGetMultiTexEnvivEXT")
    __glewGetMultiTexEnvivEXT: PFNGLGETMULTITEXENVIVEXTPROC

    @(link_name = "__glewGetMultiTexGendvEXT")
    __glewGetMultiTexGendvEXT: PFNGLGETMULTITEXGENDVEXTPROC

    @(link_name = "__glewGetMultiTexGenfvEXT")
    __glewGetMultiTexGenfvEXT: PFNGLGETMULTITEXGENFVEXTPROC

    @(link_name = "__glewGetMultiTexGenivEXT")
    __glewGetMultiTexGenivEXT: PFNGLGETMULTITEXGENIVEXTPROC

    @(link_name = "__glewGetMultiTexImageEXT")
    __glewGetMultiTexImageEXT: PFNGLGETMULTITEXIMAGEEXTPROC

    @(link_name = "__glewGetMultiTexLevelParameterfvEXT")
    __glewGetMultiTexLevelParameterfvEXT: PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC

    @(link_name = "__glewGetMultiTexLevelParameterivEXT")
    __glewGetMultiTexLevelParameterivEXT: PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC

    @(link_name = "__glewGetMultiTexParameterIivEXT")
    __glewGetMultiTexParameterIivEXT: PFNGLGETMULTITEXPARAMETERIIVEXTPROC

    @(link_name = "__glewGetMultiTexParameterIuivEXT")
    __glewGetMultiTexParameterIuivEXT: PFNGLGETMULTITEXPARAMETERIUIVEXTPROC

    @(link_name = "__glewGetMultiTexParameterfvEXT")
    __glewGetMultiTexParameterfvEXT: PFNGLGETMULTITEXPARAMETERFVEXTPROC

    @(link_name = "__glewGetMultiTexParameterivEXT")
    __glewGetMultiTexParameterivEXT: PFNGLGETMULTITEXPARAMETERIVEXTPROC

    @(link_name = "__glewGetNamedBufferParameterivEXT")
    __glewGetNamedBufferParameterivEXT: PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC

    @(link_name = "__glewGetNamedBufferPointervEXT")
    __glewGetNamedBufferPointervEXT: PFNGLGETNAMEDBUFFERPOINTERVEXTPROC

    @(link_name = "__glewGetNamedBufferSubDataEXT")
    __glewGetNamedBufferSubDataEXT: PFNGLGETNAMEDBUFFERSUBDATAEXTPROC

    @(link_name = "__glewGetNamedFramebufferAttachmentParameterivEXT")
    __glewGetNamedFramebufferAttachmentParameterivEXT: PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC

    @(link_name = "__glewGetNamedProgramLocalParameterIivEXT")
    __glewGetNamedProgramLocalParameterIivEXT: PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC

    @(link_name = "__glewGetNamedProgramLocalParameterIuivEXT")
    __glewGetNamedProgramLocalParameterIuivEXT: PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC

    @(link_name = "__glewGetNamedProgramLocalParameterdvEXT")
    __glewGetNamedProgramLocalParameterdvEXT: PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC

    @(link_name = "__glewGetNamedProgramLocalParameterfvEXT")
    __glewGetNamedProgramLocalParameterfvEXT: PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC

    @(link_name = "__glewGetNamedProgramStringEXT")
    __glewGetNamedProgramStringEXT: PFNGLGETNAMEDPROGRAMSTRINGEXTPROC

    @(link_name = "__glewGetNamedProgramivEXT")
    __glewGetNamedProgramivEXT: PFNGLGETNAMEDPROGRAMIVEXTPROC

    @(link_name = "__glewGetNamedRenderbufferParameterivEXT")
    __glewGetNamedRenderbufferParameterivEXT: PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC

    @(link_name = "__glewGetPointerIndexedvEXT")
    __glewGetPointerIndexedvEXT: PFNGLGETPOINTERINDEXEDVEXTPROC

    @(link_name = "__glewGetPointeri_vEXT")
    __glewGetPointeri_vEXT: PFNGLGETPOINTERI_VEXTPROC

    @(link_name = "__glewGetTextureImageEXT")
    __glewGetTextureImageEXT: PFNGLGETTEXTUREIMAGEEXTPROC

    @(link_name = "__glewGetTextureLevelParameterfvEXT")
    __glewGetTextureLevelParameterfvEXT: PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC

    @(link_name = "__glewGetTextureLevelParameterivEXT")
    __glewGetTextureLevelParameterivEXT: PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC

    @(link_name = "__glewGetTextureParameterIivEXT")
    __glewGetTextureParameterIivEXT: PFNGLGETTEXTUREPARAMETERIIVEXTPROC

    @(link_name = "__glewGetTextureParameterIuivEXT")
    __glewGetTextureParameterIuivEXT: PFNGLGETTEXTUREPARAMETERIUIVEXTPROC

    @(link_name = "__glewGetTextureParameterfvEXT")
    __glewGetTextureParameterfvEXT: PFNGLGETTEXTUREPARAMETERFVEXTPROC

    @(link_name = "__glewGetTextureParameterivEXT")
    __glewGetTextureParameterivEXT: PFNGLGETTEXTUREPARAMETERIVEXTPROC

    @(link_name = "__glewGetVertexArrayIntegeri_vEXT")
    __glewGetVertexArrayIntegeri_vEXT: PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC

    @(link_name = "__glewGetVertexArrayIntegervEXT")
    __glewGetVertexArrayIntegervEXT: PFNGLGETVERTEXARRAYINTEGERVEXTPROC

    @(link_name = "__glewGetVertexArrayPointeri_vEXT")
    __glewGetVertexArrayPointeri_vEXT: PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC

    @(link_name = "__glewGetVertexArrayPointervEXT")
    __glewGetVertexArrayPointervEXT: PFNGLGETVERTEXARRAYPOINTERVEXTPROC

    @(link_name = "__glewMapNamedBufferEXT")
    __glewMapNamedBufferEXT: PFNGLMAPNAMEDBUFFEREXTPROC

    @(link_name = "__glewMapNamedBufferRangeEXT")
    __glewMapNamedBufferRangeEXT: PFNGLMAPNAMEDBUFFERRANGEEXTPROC

    @(link_name = "__glewMatrixFrustumEXT")
    __glewMatrixFrustumEXT: PFNGLMATRIXFRUSTUMEXTPROC

    @(link_name = "__glewMatrixLoadIdentityEXT")
    __glewMatrixLoadIdentityEXT: PFNGLMATRIXLOADIDENTITYEXTPROC

    @(link_name = "__glewMatrixLoadTransposedEXT")
    __glewMatrixLoadTransposedEXT: PFNGLMATRIXLOADTRANSPOSEDEXTPROC

    @(link_name = "__glewMatrixLoadTransposefEXT")
    __glewMatrixLoadTransposefEXT: PFNGLMATRIXLOADTRANSPOSEFEXTPROC

    @(link_name = "__glewMatrixLoaddEXT")
    __glewMatrixLoaddEXT: PFNGLMATRIXLOADDEXTPROC

    @(link_name = "__glewMatrixLoadfEXT")
    __glewMatrixLoadfEXT: PFNGLMATRIXLOADFEXTPROC

    @(link_name = "__glewMatrixMultTransposedEXT")
    __glewMatrixMultTransposedEXT: PFNGLMATRIXMULTTRANSPOSEDEXTPROC

    @(link_name = "__glewMatrixMultTransposefEXT")
    __glewMatrixMultTransposefEXT: PFNGLMATRIXMULTTRANSPOSEFEXTPROC

    @(link_name = "__glewMatrixMultdEXT")
    __glewMatrixMultdEXT: PFNGLMATRIXMULTDEXTPROC

    @(link_name = "__glewMatrixMultfEXT")
    __glewMatrixMultfEXT: PFNGLMATRIXMULTFEXTPROC

    @(link_name = "__glewMatrixOrthoEXT")
    __glewMatrixOrthoEXT: PFNGLMATRIXORTHOEXTPROC

    @(link_name = "__glewMatrixPopEXT")
    __glewMatrixPopEXT: PFNGLMATRIXPOPEXTPROC

    @(link_name = "__glewMatrixPushEXT")
    __glewMatrixPushEXT: PFNGLMATRIXPUSHEXTPROC

    @(link_name = "__glewMatrixRotatedEXT")
    __glewMatrixRotatedEXT: PFNGLMATRIXROTATEDEXTPROC

    @(link_name = "__glewMatrixRotatefEXT")
    __glewMatrixRotatefEXT: PFNGLMATRIXROTATEFEXTPROC

    @(link_name = "__glewMatrixScaledEXT")
    __glewMatrixScaledEXT: PFNGLMATRIXSCALEDEXTPROC

    @(link_name = "__glewMatrixScalefEXT")
    __glewMatrixScalefEXT: PFNGLMATRIXSCALEFEXTPROC

    @(link_name = "__glewMatrixTranslatedEXT")
    __glewMatrixTranslatedEXT: PFNGLMATRIXTRANSLATEDEXTPROC

    @(link_name = "__glewMatrixTranslatefEXT")
    __glewMatrixTranslatefEXT: PFNGLMATRIXTRANSLATEFEXTPROC

    @(link_name = "__glewMultiTexBufferEXT")
    __glewMultiTexBufferEXT: PFNGLMULTITEXBUFFEREXTPROC

    @(link_name = "__glewMultiTexCoordPointerEXT")
    __glewMultiTexCoordPointerEXT: PFNGLMULTITEXCOORDPOINTEREXTPROC

    @(link_name = "__glewMultiTexEnvfEXT")
    __glewMultiTexEnvfEXT: PFNGLMULTITEXENVFEXTPROC

    @(link_name = "__glewMultiTexEnvfvEXT")
    __glewMultiTexEnvfvEXT: PFNGLMULTITEXENVFVEXTPROC

    @(link_name = "__glewMultiTexEnviEXT")
    __glewMultiTexEnviEXT: PFNGLMULTITEXENVIEXTPROC

    @(link_name = "__glewMultiTexEnvivEXT")
    __glewMultiTexEnvivEXT: PFNGLMULTITEXENVIVEXTPROC

    @(link_name = "__glewMultiTexGendEXT")
    __glewMultiTexGendEXT: PFNGLMULTITEXGENDEXTPROC

    @(link_name = "__glewMultiTexGendvEXT")
    __glewMultiTexGendvEXT: PFNGLMULTITEXGENDVEXTPROC

    @(link_name = "__glewMultiTexGenfEXT")
    __glewMultiTexGenfEXT: PFNGLMULTITEXGENFEXTPROC

    @(link_name = "__glewMultiTexGenfvEXT")
    __glewMultiTexGenfvEXT: PFNGLMULTITEXGENFVEXTPROC

    @(link_name = "__glewMultiTexGeniEXT")
    __glewMultiTexGeniEXT: PFNGLMULTITEXGENIEXTPROC

    @(link_name = "__glewMultiTexGenivEXT")
    __glewMultiTexGenivEXT: PFNGLMULTITEXGENIVEXTPROC

    @(link_name = "__glewMultiTexImage1DEXT")
    __glewMultiTexImage1DEXT: PFNGLMULTITEXIMAGE1DEXTPROC

    @(link_name = "__glewMultiTexImage2DEXT")
    __glewMultiTexImage2DEXT: PFNGLMULTITEXIMAGE2DEXTPROC

    @(link_name = "__glewMultiTexImage3DEXT")
    __glewMultiTexImage3DEXT: PFNGLMULTITEXIMAGE3DEXTPROC

    @(link_name = "__glewMultiTexParameterIivEXT")
    __glewMultiTexParameterIivEXT: PFNGLMULTITEXPARAMETERIIVEXTPROC

    @(link_name = "__glewMultiTexParameterIuivEXT")
    __glewMultiTexParameterIuivEXT: PFNGLMULTITEXPARAMETERIUIVEXTPROC

    @(link_name = "__glewMultiTexParameterfEXT")
    __glewMultiTexParameterfEXT: PFNGLMULTITEXPARAMETERFEXTPROC

    @(link_name = "__glewMultiTexParameterfvEXT")
    __glewMultiTexParameterfvEXT: PFNGLMULTITEXPARAMETERFVEXTPROC

    @(link_name = "__glewMultiTexParameteriEXT")
    __glewMultiTexParameteriEXT: PFNGLMULTITEXPARAMETERIEXTPROC

    @(link_name = "__glewMultiTexParameterivEXT")
    __glewMultiTexParameterivEXT: PFNGLMULTITEXPARAMETERIVEXTPROC

    @(link_name = "__glewMultiTexRenderbufferEXT")
    __glewMultiTexRenderbufferEXT: PFNGLMULTITEXRENDERBUFFEREXTPROC

    @(link_name = "__glewMultiTexSubImage1DEXT")
    __glewMultiTexSubImage1DEXT: PFNGLMULTITEXSUBIMAGE1DEXTPROC

    @(link_name = "__glewMultiTexSubImage2DEXT")
    __glewMultiTexSubImage2DEXT: PFNGLMULTITEXSUBIMAGE2DEXTPROC

    @(link_name = "__glewMultiTexSubImage3DEXT")
    __glewMultiTexSubImage3DEXT: PFNGLMULTITEXSUBIMAGE3DEXTPROC

    @(link_name = "__glewNamedBufferDataEXT")
    __glewNamedBufferDataEXT: PFNGLNAMEDBUFFERDATAEXTPROC

    @(link_name = "__glewNamedBufferSubDataEXT")
    __glewNamedBufferSubDataEXT: PFNGLNAMEDBUFFERSUBDATAEXTPROC

    @(link_name = "__glewNamedCopyBufferSubDataEXT")
    __glewNamedCopyBufferSubDataEXT: PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC

    @(link_name = "__glewNamedFramebufferRenderbufferEXT")
    __glewNamedFramebufferRenderbufferEXT: PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC

    @(link_name = "__glewNamedFramebufferTexture1DEXT")
    __glewNamedFramebufferTexture1DEXT: PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC

    @(link_name = "__glewNamedFramebufferTexture2DEXT")
    __glewNamedFramebufferTexture2DEXT: PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC

    @(link_name = "__glewNamedFramebufferTexture3DEXT")
    __glewNamedFramebufferTexture3DEXT: PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC

    @(link_name = "__glewNamedFramebufferTextureEXT")
    __glewNamedFramebufferTextureEXT: PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC

    @(link_name = "__glewNamedFramebufferTextureFaceEXT")
    __glewNamedFramebufferTextureFaceEXT: PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC

    @(link_name = "__glewNamedFramebufferTextureLayerEXT")
    __glewNamedFramebufferTextureLayerEXT: PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC

    @(link_name = "__glewNamedProgramLocalParameter4dEXT")
    __glewNamedProgramLocalParameter4dEXT: PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC

    @(link_name = "__glewNamedProgramLocalParameter4dvEXT")
    __glewNamedProgramLocalParameter4dvEXT: PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC

    @(link_name = "__glewNamedProgramLocalParameter4fEXT")
    __glewNamedProgramLocalParameter4fEXT: PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC

    @(link_name = "__glewNamedProgramLocalParameter4fvEXT")
    __glewNamedProgramLocalParameter4fvEXT: PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC

    @(link_name = "__glewNamedProgramLocalParameterI4iEXT")
    __glewNamedProgramLocalParameterI4iEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC

    @(link_name = "__glewNamedProgramLocalParameterI4ivEXT")
    __glewNamedProgramLocalParameterI4ivEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC

    @(link_name = "__glewNamedProgramLocalParameterI4uiEXT")
    __glewNamedProgramLocalParameterI4uiEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC

    @(link_name = "__glewNamedProgramLocalParameterI4uivEXT")
    __glewNamedProgramLocalParameterI4uivEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC

    @(link_name = "__glewNamedProgramLocalParameters4fvEXT")
    __glewNamedProgramLocalParameters4fvEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC

    @(link_name = "__glewNamedProgramLocalParametersI4ivEXT")
    __glewNamedProgramLocalParametersI4ivEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC

    @(link_name = "__glewNamedProgramLocalParametersI4uivEXT")
    __glewNamedProgramLocalParametersI4uivEXT: PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC

    @(link_name = "__glewNamedProgramStringEXT")
    __glewNamedProgramStringEXT: PFNGLNAMEDPROGRAMSTRINGEXTPROC

    @(link_name = "__glewNamedRenderbufferStorageEXT")
    __glewNamedRenderbufferStorageEXT: PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC

    @(link_name = "__glewNamedRenderbufferStorageMultisampleCoverageEXT")
    __glewNamedRenderbufferStorageMultisampleCoverageEXT: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC

    @(link_name = "__glewNamedRenderbufferStorageMultisampleEXT")
    __glewNamedRenderbufferStorageMultisampleEXT: PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC

    @(link_name = "__glewProgramUniform1fEXT")
    __glewProgramUniform1fEXT: PFNGLPROGRAMUNIFORM1FEXTPROC

    @(link_name = "__glewProgramUniform1fvEXT")
    __glewProgramUniform1fvEXT: PFNGLPROGRAMUNIFORM1FVEXTPROC

    @(link_name = "__glewProgramUniform1iEXT")
    __glewProgramUniform1iEXT: PFNGLPROGRAMUNIFORM1IEXTPROC

    @(link_name = "__glewProgramUniform1ivEXT")
    __glewProgramUniform1ivEXT: PFNGLPROGRAMUNIFORM1IVEXTPROC

    @(link_name = "__glewProgramUniform1uiEXT")
    __glewProgramUniform1uiEXT: PFNGLPROGRAMUNIFORM1UIEXTPROC

    @(link_name = "__glewProgramUniform1uivEXT")
    __glewProgramUniform1uivEXT: PFNGLPROGRAMUNIFORM1UIVEXTPROC

    @(link_name = "__glewProgramUniform2fEXT")
    __glewProgramUniform2fEXT: PFNGLPROGRAMUNIFORM2FEXTPROC

    @(link_name = "__glewProgramUniform2fvEXT")
    __glewProgramUniform2fvEXT: PFNGLPROGRAMUNIFORM2FVEXTPROC

    @(link_name = "__glewProgramUniform2iEXT")
    __glewProgramUniform2iEXT: PFNGLPROGRAMUNIFORM2IEXTPROC

    @(link_name = "__glewProgramUniform2ivEXT")
    __glewProgramUniform2ivEXT: PFNGLPROGRAMUNIFORM2IVEXTPROC

    @(link_name = "__glewProgramUniform2uiEXT")
    __glewProgramUniform2uiEXT: PFNGLPROGRAMUNIFORM2UIEXTPROC

    @(link_name = "__glewProgramUniform2uivEXT")
    __glewProgramUniform2uivEXT: PFNGLPROGRAMUNIFORM2UIVEXTPROC

    @(link_name = "__glewProgramUniform3fEXT")
    __glewProgramUniform3fEXT: PFNGLPROGRAMUNIFORM3FEXTPROC

    @(link_name = "__glewProgramUniform3fvEXT")
    __glewProgramUniform3fvEXT: PFNGLPROGRAMUNIFORM3FVEXTPROC

    @(link_name = "__glewProgramUniform3iEXT")
    __glewProgramUniform3iEXT: PFNGLPROGRAMUNIFORM3IEXTPROC

    @(link_name = "__glewProgramUniform3ivEXT")
    __glewProgramUniform3ivEXT: PFNGLPROGRAMUNIFORM3IVEXTPROC

    @(link_name = "__glewProgramUniform3uiEXT")
    __glewProgramUniform3uiEXT: PFNGLPROGRAMUNIFORM3UIEXTPROC

    @(link_name = "__glewProgramUniform3uivEXT")
    __glewProgramUniform3uivEXT: PFNGLPROGRAMUNIFORM3UIVEXTPROC

    @(link_name = "__glewProgramUniform4fEXT")
    __glewProgramUniform4fEXT: PFNGLPROGRAMUNIFORM4FEXTPROC

    @(link_name = "__glewProgramUniform4fvEXT")
    __glewProgramUniform4fvEXT: PFNGLPROGRAMUNIFORM4FVEXTPROC

    @(link_name = "__glewProgramUniform4iEXT")
    __glewProgramUniform4iEXT: PFNGLPROGRAMUNIFORM4IEXTPROC

    @(link_name = "__glewProgramUniform4ivEXT")
    __glewProgramUniform4ivEXT: PFNGLPROGRAMUNIFORM4IVEXTPROC

    @(link_name = "__glewProgramUniform4uiEXT")
    __glewProgramUniform4uiEXT: PFNGLPROGRAMUNIFORM4UIEXTPROC

    @(link_name = "__glewProgramUniform4uivEXT")
    __glewProgramUniform4uivEXT: PFNGLPROGRAMUNIFORM4UIVEXTPROC

    @(link_name = "__glewProgramUniformMatrix2fvEXT")
    __glewProgramUniformMatrix2fvEXT: PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix2x3fvEXT")
    __glewProgramUniformMatrix2x3fvEXT: PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix2x4fvEXT")
    __glewProgramUniformMatrix2x4fvEXT: PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix3fvEXT")
    __glewProgramUniformMatrix3fvEXT: PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix3x2fvEXT")
    __glewProgramUniformMatrix3x2fvEXT: PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix3x4fvEXT")
    __glewProgramUniformMatrix3x4fvEXT: PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix4fvEXT")
    __glewProgramUniformMatrix4fvEXT: PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix4x2fvEXT")
    __glewProgramUniformMatrix4x2fvEXT: PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC

    @(link_name = "__glewProgramUniformMatrix4x3fvEXT")
    __glewProgramUniformMatrix4x3fvEXT: PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC

    @(link_name = "__glewPushClientAttribDefaultEXT")
    __glewPushClientAttribDefaultEXT: PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC

    @(link_name = "__glewTextureBufferEXT")
    __glewTextureBufferEXT: PFNGLTEXTUREBUFFEREXTPROC

    @(link_name = "__glewTextureImage1DEXT")
    __glewTextureImage1DEXT: PFNGLTEXTUREIMAGE1DEXTPROC

    @(link_name = "__glewTextureImage2DEXT")
    __glewTextureImage2DEXT: PFNGLTEXTUREIMAGE2DEXTPROC

    @(link_name = "__glewTextureImage3DEXT")
    __glewTextureImage3DEXT: PFNGLTEXTUREIMAGE3DEXTPROC

    @(link_name = "__glewTextureParameterIivEXT")
    __glewTextureParameterIivEXT: PFNGLTEXTUREPARAMETERIIVEXTPROC

    @(link_name = "__glewTextureParameterIuivEXT")
    __glewTextureParameterIuivEXT: PFNGLTEXTUREPARAMETERIUIVEXTPROC

    @(link_name = "__glewTextureParameterfEXT")
    __glewTextureParameterfEXT: PFNGLTEXTUREPARAMETERFEXTPROC

    @(link_name = "__glewTextureParameterfvEXT")
    __glewTextureParameterfvEXT: PFNGLTEXTUREPARAMETERFVEXTPROC

    @(link_name = "__glewTextureParameteriEXT")
    __glewTextureParameteriEXT: PFNGLTEXTUREPARAMETERIEXTPROC

    @(link_name = "__glewTextureParameterivEXT")
    __glewTextureParameterivEXT: PFNGLTEXTUREPARAMETERIVEXTPROC

    @(link_name = "__glewTextureRenderbufferEXT")
    __glewTextureRenderbufferEXT: PFNGLTEXTURERENDERBUFFEREXTPROC

    @(link_name = "__glewTextureSubImage1DEXT")
    __glewTextureSubImage1DEXT: PFNGLTEXTURESUBIMAGE1DEXTPROC

    @(link_name = "__glewTextureSubImage2DEXT")
    __glewTextureSubImage2DEXT: PFNGLTEXTURESUBIMAGE2DEXTPROC

    @(link_name = "__glewTextureSubImage3DEXT")
    __glewTextureSubImage3DEXT: PFNGLTEXTURESUBIMAGE3DEXTPROC

    @(link_name = "__glewUnmapNamedBufferEXT")
    __glewUnmapNamedBufferEXT: PFNGLUNMAPNAMEDBUFFEREXTPROC

    @(link_name = "__glewVertexArrayColorOffsetEXT")
    __glewVertexArrayColorOffsetEXT: PFNGLVERTEXARRAYCOLOROFFSETEXTPROC

    @(link_name = "__glewVertexArrayEdgeFlagOffsetEXT")
    __glewVertexArrayEdgeFlagOffsetEXT: PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC

    @(link_name = "__glewVertexArrayFogCoordOffsetEXT")
    __glewVertexArrayFogCoordOffsetEXT: PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC

    @(link_name = "__glewVertexArrayIndexOffsetEXT")
    __glewVertexArrayIndexOffsetEXT: PFNGLVERTEXARRAYINDEXOFFSETEXTPROC

    @(link_name = "__glewVertexArrayMultiTexCoordOffsetEXT")
    __glewVertexArrayMultiTexCoordOffsetEXT: PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC

    @(link_name = "__glewVertexArrayNormalOffsetEXT")
    __glewVertexArrayNormalOffsetEXT: PFNGLVERTEXARRAYNORMALOFFSETEXTPROC

    @(link_name = "__glewVertexArraySecondaryColorOffsetEXT")
    __glewVertexArraySecondaryColorOffsetEXT: PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC

    @(link_name = "__glewVertexArrayTexCoordOffsetEXT")
    __glewVertexArrayTexCoordOffsetEXT: PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribDivisorEXT")
    __glewVertexArrayVertexAttribDivisorEXT: PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC

    @(link_name = "__glewVertexArrayVertexAttribIOffsetEXT")
    __glewVertexArrayVertexAttribIOffsetEXT: PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribOffsetEXT")
    __glewVertexArrayVertexAttribOffsetEXT: PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC

    @(link_name = "__glewVertexArrayVertexOffsetEXT")
    __glewVertexArrayVertexOffsetEXT: PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC

    @(link_name = "__glewDiscardFramebufferEXT")
    __glewDiscardFramebufferEXT: PFNGLDISCARDFRAMEBUFFEREXTPROC

    @(link_name = "__glewBeginQueryEXT")
    __glewBeginQueryEXT: PFNGLBEGINQUERYEXTPROC

    @(link_name = "__glewDeleteQueriesEXT")
    __glewDeleteQueriesEXT: PFNGLDELETEQUERIESEXTPROC

    @(link_name = "__glewEndQueryEXT")
    __glewEndQueryEXT: PFNGLENDQUERYEXTPROC

    @(link_name = "__glewGenQueriesEXT")
    __glewGenQueriesEXT: PFNGLGENQUERIESEXTPROC

    @(link_name = "__glewGetInteger64vEXT")
    __glewGetInteger64vEXT: PFNGLGETINTEGER64VEXTPROC

    @(link_name = "__glewGetQueryObjectivEXT")
    __glewGetQueryObjectivEXT: PFNGLGETQUERYOBJECTIVEXTPROC

    @(link_name = "__glewGetQueryObjectuivEXT")
    __glewGetQueryObjectuivEXT: PFNGLGETQUERYOBJECTUIVEXTPROC

    @(link_name = "__glewGetQueryivEXT")
    __glewGetQueryivEXT: PFNGLGETQUERYIVEXTPROC

    @(link_name = "__glewIsQueryEXT")
    __glewIsQueryEXT: PFNGLISQUERYEXTPROC

    @(link_name = "__glewQueryCounterEXT")
    __glewQueryCounterEXT: PFNGLQUERYCOUNTEREXTPROC

    @(link_name = "__glewDrawBuffersEXT")
    __glewDrawBuffersEXT: PFNGLDRAWBUFFERSEXTPROC

    @(link_name = "__glewColorMaskIndexedEXT")
    __glewColorMaskIndexedEXT: PFNGLCOLORMASKINDEXEDEXTPROC

    @(link_name = "__glewDisableIndexedEXT")
    __glewDisableIndexedEXT: PFNGLDISABLEINDEXEDEXTPROC

    @(link_name = "__glewEnableIndexedEXT")
    __glewEnableIndexedEXT: PFNGLENABLEINDEXEDEXTPROC

    @(link_name = "__glewGetBooleanIndexedvEXT")
    __glewGetBooleanIndexedvEXT: PFNGLGETBOOLEANINDEXEDVEXTPROC

    @(link_name = "__glewGetIntegerIndexedvEXT")
    __glewGetIntegerIndexedvEXT: PFNGLGETINTEGERINDEXEDVEXTPROC

    @(link_name = "__glewIsEnabledIndexedEXT")
    __glewIsEnabledIndexedEXT: PFNGLISENABLEDINDEXEDEXTPROC

    @(link_name = "__glewBlendEquationSeparateiEXT")
    __glewBlendEquationSeparateiEXT: PFNGLBLENDEQUATIONSEPARATEIEXTPROC

    @(link_name = "__glewBlendEquationiEXT")
    __glewBlendEquationiEXT: PFNGLBLENDEQUATIONIEXTPROC

    @(link_name = "__glewBlendFuncSeparateiEXT")
    __glewBlendFuncSeparateiEXT: PFNGLBLENDFUNCSEPARATEIEXTPROC

    @(link_name = "__glewBlendFunciEXT")
    __glewBlendFunciEXT: PFNGLBLENDFUNCIEXTPROC

    @(link_name = "__glewColorMaskiEXT")
    __glewColorMaskiEXT: PFNGLCOLORMASKIEXTPROC

    @(link_name = "__glewDisableiEXT")
    __glewDisableiEXT: PFNGLDISABLEIEXTPROC

    @(link_name = "__glewEnableiEXT")
    __glewEnableiEXT: PFNGLENABLEIEXTPROC

    @(link_name = "__glewIsEnablediEXT")
    __glewIsEnablediEXT: PFNGLISENABLEDIEXTPROC

    @(link_name = "__glewDrawElementsBaseVertexEXT")
    __glewDrawElementsBaseVertexEXT: PFNGLDRAWELEMENTSBASEVERTEXEXTPROC

    @(link_name = "__glewDrawElementsInstancedBaseVertexEXT")
    __glewDrawElementsInstancedBaseVertexEXT: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC

    @(link_name = "__glewDrawRangeElementsBaseVertexEXT")
    __glewDrawRangeElementsBaseVertexEXT: PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC

    @(link_name = "__glewMultiDrawElementsBaseVertexEXT")
    __glewMultiDrawElementsBaseVertexEXT: PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC

    @(link_name = "__glewDrawArraysInstancedEXT")
    __glewDrawArraysInstancedEXT: PFNGLDRAWARRAYSINSTANCEDEXTPROC

    @(link_name = "__glewDrawElementsInstancedEXT")
    __glewDrawElementsInstancedEXT: PFNGLDRAWELEMENTSINSTANCEDEXTPROC

    @(link_name = "__glewDrawRangeElementsEXT")
    __glewDrawRangeElementsEXT: PFNGLDRAWRANGEELEMENTSEXTPROC

    @(link_name = "__glewDrawTransformFeedbackEXT")
    __glewDrawTransformFeedbackEXT: PFNGLDRAWTRANSFORMFEEDBACKEXTPROC

    @(link_name = "__glewDrawTransformFeedbackInstancedEXT")
    __glewDrawTransformFeedbackInstancedEXT: PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC

    @(link_name = "__glewBufferStorageExternalEXT")
    __glewBufferStorageExternalEXT: PFNGLBUFFERSTORAGEEXTERNALEXTPROC

    @(link_name = "__glewNamedBufferStorageExternalEXT")
    __glewNamedBufferStorageExternalEXT: PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC

    @(link_name = "__glewFogCoordPointerEXT")
    __glewFogCoordPointerEXT: PFNGLFOGCOORDPOINTEREXTPROC

    @(link_name = "__glewFogCoorddEXT")
    __glewFogCoorddEXT: PFNGLFOGCOORDDEXTPROC

    @(link_name = "__glewFogCoorddvEXT")
    __glewFogCoorddvEXT: PFNGLFOGCOORDDVEXTPROC

    @(link_name = "__glewFogCoordfEXT")
    __glewFogCoordfEXT: PFNGLFOGCOORDFEXTPROC

    @(link_name = "__glewFogCoordfvEXT")
    __glewFogCoordfvEXT: PFNGLFOGCOORDFVEXTPROC

    @(link_name = "__glewFragmentColorMaterialEXT")
    __glewFragmentColorMaterialEXT: PFNGLFRAGMENTCOLORMATERIALEXTPROC

    @(link_name = "__glewFragmentLightModelfEXT")
    __glewFragmentLightModelfEXT: PFNGLFRAGMENTLIGHTMODELFEXTPROC

    @(link_name = "__glewFragmentLightModelfvEXT")
    __glewFragmentLightModelfvEXT: PFNGLFRAGMENTLIGHTMODELFVEXTPROC

    @(link_name = "__glewFragmentLightModeliEXT")
    __glewFragmentLightModeliEXT: PFNGLFRAGMENTLIGHTMODELIEXTPROC

    @(link_name = "__glewFragmentLightModelivEXT")
    __glewFragmentLightModelivEXT: PFNGLFRAGMENTLIGHTMODELIVEXTPROC

    @(link_name = "__glewFragmentLightfEXT")
    __glewFragmentLightfEXT: PFNGLFRAGMENTLIGHTFEXTPROC

    @(link_name = "__glewFragmentLightfvEXT")
    __glewFragmentLightfvEXT: PFNGLFRAGMENTLIGHTFVEXTPROC

    @(link_name = "__glewFragmentLightiEXT")
    __glewFragmentLightiEXT: PFNGLFRAGMENTLIGHTIEXTPROC

    @(link_name = "__glewFragmentLightivEXT")
    __glewFragmentLightivEXT: PFNGLFRAGMENTLIGHTIVEXTPROC

    @(link_name = "__glewFragmentMaterialfEXT")
    __glewFragmentMaterialfEXT: PFNGLFRAGMENTMATERIALFEXTPROC

    @(link_name = "__glewFragmentMaterialfvEXT")
    __glewFragmentMaterialfvEXT: PFNGLFRAGMENTMATERIALFVEXTPROC

    @(link_name = "__glewFragmentMaterialiEXT")
    __glewFragmentMaterialiEXT: PFNGLFRAGMENTMATERIALIEXTPROC

    @(link_name = "__glewFragmentMaterialivEXT")
    __glewFragmentMaterialivEXT: PFNGLFRAGMENTMATERIALIVEXTPROC

    @(link_name = "__glewGetFragmentLightfvEXT")
    __glewGetFragmentLightfvEXT: PFNGLGETFRAGMENTLIGHTFVEXTPROC

    @(link_name = "__glewGetFragmentLightivEXT")
    __glewGetFragmentLightivEXT: PFNGLGETFRAGMENTLIGHTIVEXTPROC

    @(link_name = "__glewGetFragmentMaterialfvEXT")
    __glewGetFragmentMaterialfvEXT: PFNGLGETFRAGMENTMATERIALFVEXTPROC

    @(link_name = "__glewGetFragmentMaterialivEXT")
    __glewGetFragmentMaterialivEXT: PFNGLGETFRAGMENTMATERIALIVEXTPROC

    @(link_name = "__glewLightEnviEXT")
    __glewLightEnviEXT: PFNGLLIGHTENVIEXTPROC

    @(link_name = "__glewBlitFramebufferEXT")
    __glewBlitFramebufferEXT: PFNGLBLITFRAMEBUFFEREXTPROC

    @(link_name = "__glewBlitFramebufferLayerEXT")
    __glewBlitFramebufferLayerEXT: PFNGLBLITFRAMEBUFFERLAYEREXTPROC

    @(link_name = "__glewBlitFramebufferLayersEXT")
    __glewBlitFramebufferLayersEXT: PFNGLBLITFRAMEBUFFERLAYERSEXTPROC

    @(link_name = "__glewRenderbufferStorageMultisampleEXT")
    __glewRenderbufferStorageMultisampleEXT: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC

    @(link_name = "__glewBindFramebufferEXT")
    __glewBindFramebufferEXT: PFNGLBINDFRAMEBUFFEREXTPROC

    @(link_name = "__glewBindRenderbufferEXT")
    __glewBindRenderbufferEXT: PFNGLBINDRENDERBUFFEREXTPROC

    @(link_name = "__glewCheckFramebufferStatusEXT")
    __glewCheckFramebufferStatusEXT: PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC

    @(link_name = "__glewDeleteFramebuffersEXT")
    __glewDeleteFramebuffersEXT: PFNGLDELETEFRAMEBUFFERSEXTPROC

    @(link_name = "__glewDeleteRenderbuffersEXT")
    __glewDeleteRenderbuffersEXT: PFNGLDELETERENDERBUFFERSEXTPROC

    @(link_name = "__glewFramebufferRenderbufferEXT")
    __glewFramebufferRenderbufferEXT: PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC

    @(link_name = "__glewFramebufferTexture1DEXT")
    __glewFramebufferTexture1DEXT: PFNGLFRAMEBUFFERTEXTURE1DEXTPROC

    @(link_name = "__glewFramebufferTexture2DEXT")
    __glewFramebufferTexture2DEXT: PFNGLFRAMEBUFFERTEXTURE2DEXTPROC

    @(link_name = "__glewFramebufferTexture3DEXT")
    __glewFramebufferTexture3DEXT: PFNGLFRAMEBUFFERTEXTURE3DEXTPROC

    @(link_name = "__glewGenFramebuffersEXT")
    __glewGenFramebuffersEXT: PFNGLGENFRAMEBUFFERSEXTPROC

    @(link_name = "__glewGenRenderbuffersEXT")
    __glewGenRenderbuffersEXT: PFNGLGENRENDERBUFFERSEXTPROC

    @(link_name = "__glewGenerateMipmapEXT")
    __glewGenerateMipmapEXT: PFNGLGENERATEMIPMAPEXTPROC

    @(link_name = "__glewGetFramebufferAttachmentParameterivEXT")
    __glewGetFramebufferAttachmentParameterivEXT: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC

    @(link_name = "__glewGetRenderbufferParameterivEXT")
    __glewGetRenderbufferParameterivEXT: PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC

    @(link_name = "__glewIsFramebufferEXT")
    __glewIsFramebufferEXT: PFNGLISFRAMEBUFFEREXTPROC

    @(link_name = "__glewIsRenderbufferEXT")
    __glewIsRenderbufferEXT: PFNGLISRENDERBUFFEREXTPROC

    @(link_name = "__glewRenderbufferStorageEXT")
    __glewRenderbufferStorageEXT: PFNGLRENDERBUFFERSTORAGEEXTPROC

    @(link_name = "__glewFramebufferTextureEXT")
    __glewFramebufferTextureEXT: PFNGLFRAMEBUFFERTEXTUREEXTPROC

    @(link_name = "__glewFramebufferTextureFaceEXT")
    __glewFramebufferTextureFaceEXT: PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC

    @(link_name = "__glewProgramParameteriEXT")
    __glewProgramParameteriEXT: PFNGLPROGRAMPARAMETERIEXTPROC

    @(link_name = "__glewProgramEnvParameters4fvEXT")
    __glewProgramEnvParameters4fvEXT: PFNGLPROGRAMENVPARAMETERS4FVEXTPROC

    @(link_name = "__glewProgramLocalParameters4fvEXT")
    __glewProgramLocalParameters4fvEXT: PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC

    @(link_name = "__glewBindFragDataLocationEXT")
    __glewBindFragDataLocationEXT: PFNGLBINDFRAGDATALOCATIONEXTPROC

    @(link_name = "__glewGetFragDataLocationEXT")
    __glewGetFragDataLocationEXT: PFNGLGETFRAGDATALOCATIONEXTPROC

    @(link_name = "__glewGetUniformuivEXT")
    __glewGetUniformuivEXT: PFNGLGETUNIFORMUIVEXTPROC

    @(link_name = "__glewGetVertexAttribIivEXT")
    __glewGetVertexAttribIivEXT: PFNGLGETVERTEXATTRIBIIVEXTPROC

    @(link_name = "__glewGetVertexAttribIuivEXT")
    __glewGetVertexAttribIuivEXT: PFNGLGETVERTEXATTRIBIUIVEXTPROC

    @(link_name = "__glewUniform1uiEXT")
    __glewUniform1uiEXT: PFNGLUNIFORM1UIEXTPROC

    @(link_name = "__glewUniform1uivEXT")
    __glewUniform1uivEXT: PFNGLUNIFORM1UIVEXTPROC

    @(link_name = "__glewUniform2uiEXT")
    __glewUniform2uiEXT: PFNGLUNIFORM2UIEXTPROC

    @(link_name = "__glewUniform2uivEXT")
    __glewUniform2uivEXT: PFNGLUNIFORM2UIVEXTPROC

    @(link_name = "__glewUniform3uiEXT")
    __glewUniform3uiEXT: PFNGLUNIFORM3UIEXTPROC

    @(link_name = "__glewUniform3uivEXT")
    __glewUniform3uivEXT: PFNGLUNIFORM3UIVEXTPROC

    @(link_name = "__glewUniform4uiEXT")
    __glewUniform4uiEXT: PFNGLUNIFORM4UIEXTPROC

    @(link_name = "__glewUniform4uivEXT")
    __glewUniform4uivEXT: PFNGLUNIFORM4UIVEXTPROC

    @(link_name = "__glewVertexAttribI1iEXT")
    __glewVertexAttribI1iEXT: PFNGLVERTEXATTRIBI1IEXTPROC

    @(link_name = "__glewVertexAttribI1ivEXT")
    __glewVertexAttribI1ivEXT: PFNGLVERTEXATTRIBI1IVEXTPROC

    @(link_name = "__glewVertexAttribI1uiEXT")
    __glewVertexAttribI1uiEXT: PFNGLVERTEXATTRIBI1UIEXTPROC

    @(link_name = "__glewVertexAttribI1uivEXT")
    __glewVertexAttribI1uivEXT: PFNGLVERTEXATTRIBI1UIVEXTPROC

    @(link_name = "__glewVertexAttribI2iEXT")
    __glewVertexAttribI2iEXT: PFNGLVERTEXATTRIBI2IEXTPROC

    @(link_name = "__glewVertexAttribI2ivEXT")
    __glewVertexAttribI2ivEXT: PFNGLVERTEXATTRIBI2IVEXTPROC

    @(link_name = "__glewVertexAttribI2uiEXT")
    __glewVertexAttribI2uiEXT: PFNGLVERTEXATTRIBI2UIEXTPROC

    @(link_name = "__glewVertexAttribI2uivEXT")
    __glewVertexAttribI2uivEXT: PFNGLVERTEXATTRIBI2UIVEXTPROC

    @(link_name = "__glewVertexAttribI3iEXT")
    __glewVertexAttribI3iEXT: PFNGLVERTEXATTRIBI3IEXTPROC

    @(link_name = "__glewVertexAttribI3ivEXT")
    __glewVertexAttribI3ivEXT: PFNGLVERTEXATTRIBI3IVEXTPROC

    @(link_name = "__glewVertexAttribI3uiEXT")
    __glewVertexAttribI3uiEXT: PFNGLVERTEXATTRIBI3UIEXTPROC

    @(link_name = "__glewVertexAttribI3uivEXT")
    __glewVertexAttribI3uivEXT: PFNGLVERTEXATTRIBI3UIVEXTPROC

    @(link_name = "__glewVertexAttribI4bvEXT")
    __glewVertexAttribI4bvEXT: PFNGLVERTEXATTRIBI4BVEXTPROC

    @(link_name = "__glewVertexAttribI4iEXT")
    __glewVertexAttribI4iEXT: PFNGLVERTEXATTRIBI4IEXTPROC

    @(link_name = "__glewVertexAttribI4ivEXT")
    __glewVertexAttribI4ivEXT: PFNGLVERTEXATTRIBI4IVEXTPROC

    @(link_name = "__glewVertexAttribI4svEXT")
    __glewVertexAttribI4svEXT: PFNGLVERTEXATTRIBI4SVEXTPROC

    @(link_name = "__glewVertexAttribI4ubvEXT")
    __glewVertexAttribI4ubvEXT: PFNGLVERTEXATTRIBI4UBVEXTPROC

    @(link_name = "__glewVertexAttribI4uiEXT")
    __glewVertexAttribI4uiEXT: PFNGLVERTEXATTRIBI4UIEXTPROC

    @(link_name = "__glewVertexAttribI4uivEXT")
    __glewVertexAttribI4uivEXT: PFNGLVERTEXATTRIBI4UIVEXTPROC

    @(link_name = "__glewVertexAttribI4usvEXT")
    __glewVertexAttribI4usvEXT: PFNGLVERTEXATTRIBI4USVEXTPROC

    @(link_name = "__glewVertexAttribIPointerEXT")
    __glewVertexAttribIPointerEXT: PFNGLVERTEXATTRIBIPOINTEREXTPROC

    @(link_name = "__glewGetHistogramEXT")
    __glewGetHistogramEXT: PFNGLGETHISTOGRAMEXTPROC

    @(link_name = "__glewGetHistogramParameterfvEXT")
    __glewGetHistogramParameterfvEXT: PFNGLGETHISTOGRAMPARAMETERFVEXTPROC

    @(link_name = "__glewGetHistogramParameterivEXT")
    __glewGetHistogramParameterivEXT: PFNGLGETHISTOGRAMPARAMETERIVEXTPROC

    @(link_name = "__glewGetMinmaxEXT")
    __glewGetMinmaxEXT: PFNGLGETMINMAXEXTPROC

    @(link_name = "__glewGetMinmaxParameterfvEXT")
    __glewGetMinmaxParameterfvEXT: PFNGLGETMINMAXPARAMETERFVEXTPROC

    @(link_name = "__glewGetMinmaxParameterivEXT")
    __glewGetMinmaxParameterivEXT: PFNGLGETMINMAXPARAMETERIVEXTPROC

    @(link_name = "__glewHistogramEXT")
    __glewHistogramEXT: PFNGLHISTOGRAMEXTPROC

    @(link_name = "__glewMinmaxEXT")
    __glewMinmaxEXT: PFNGLMINMAXEXTPROC

    @(link_name = "__glewResetHistogramEXT")
    __glewResetHistogramEXT: PFNGLRESETHISTOGRAMEXTPROC

    @(link_name = "__glewResetMinmaxEXT")
    __glewResetMinmaxEXT: PFNGLRESETMINMAXEXTPROC

    @(link_name = "__glewIndexFuncEXT")
    __glewIndexFuncEXT: PFNGLINDEXFUNCEXTPROC

    @(link_name = "__glewIndexMaterialEXT")
    __glewIndexMaterialEXT: PFNGLINDEXMATERIALEXTPROC

    @(link_name = "__glewVertexAttribDivisorEXT")
    __glewVertexAttribDivisorEXT: PFNGLVERTEXATTRIBDIVISOREXTPROC

    @(link_name = "__glewApplyTextureEXT")
    __glewApplyTextureEXT: PFNGLAPPLYTEXTUREEXTPROC

    @(link_name = "__glewTextureLightEXT")
    __glewTextureLightEXT: PFNGLTEXTURELIGHTEXTPROC

    @(link_name = "__glewTextureMaterialEXT")
    __glewTextureMaterialEXT: PFNGLTEXTUREMATERIALEXTPROC

    @(link_name = "__glewFlushMappedBufferRangeEXT")
    __glewFlushMappedBufferRangeEXT: PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC

    @(link_name = "__glewMapBufferRangeEXT")
    __glewMapBufferRangeEXT: PFNGLMAPBUFFERRANGEEXTPROC

    @(link_name = "__glewBufferStorageMemEXT")
    __glewBufferStorageMemEXT: PFNGLBUFFERSTORAGEMEMEXTPROC

    @(link_name = "__glewCreateMemoryObjectsEXT")
    __glewCreateMemoryObjectsEXT: PFNGLCREATEMEMORYOBJECTSEXTPROC

    @(link_name = "__glewDeleteMemoryObjectsEXT")
    __glewDeleteMemoryObjectsEXT: PFNGLDELETEMEMORYOBJECTSEXTPROC

    @(link_name = "__glewGetMemoryObjectParameterivEXT")
    __glewGetMemoryObjectParameterivEXT: PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC

    @(link_name = "__glewGetUnsignedBytei_vEXT")
    __glewGetUnsignedBytei_vEXT: PFNGLGETUNSIGNEDBYTEI_VEXTPROC

    @(link_name = "__glewGetUnsignedBytevEXT")
    __glewGetUnsignedBytevEXT: PFNGLGETUNSIGNEDBYTEVEXTPROC

    @(link_name = "__glewIsMemoryObjectEXT")
    __glewIsMemoryObjectEXT: PFNGLISMEMORYOBJECTEXTPROC

    @(link_name = "__glewMemoryObjectParameterivEXT")
    __glewMemoryObjectParameterivEXT: PFNGLMEMORYOBJECTPARAMETERIVEXTPROC

    @(link_name = "__glewNamedBufferStorageMemEXT")
    __glewNamedBufferStorageMemEXT: PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC

    @(link_name = "__glewTexStorageMem1DEXT")
    __glewTexStorageMem1DEXT: PFNGLTEXSTORAGEMEM1DEXTPROC

    @(link_name = "__glewTexStorageMem2DEXT")
    __glewTexStorageMem2DEXT: PFNGLTEXSTORAGEMEM2DEXTPROC

    @(link_name = "__glewTexStorageMem2DMultisampleEXT")
    __glewTexStorageMem2DMultisampleEXT: PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC

    @(link_name = "__glewTexStorageMem3DEXT")
    __glewTexStorageMem3DEXT: PFNGLTEXSTORAGEMEM3DEXTPROC

    @(link_name = "__glewTexStorageMem3DMultisampleEXT")
    __glewTexStorageMem3DMultisampleEXT: PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC

    @(link_name = "__glewTextureStorageMem1DEXT")
    __glewTextureStorageMem1DEXT: PFNGLTEXTURESTORAGEMEM1DEXTPROC

    @(link_name = "__glewTextureStorageMem2DEXT")
    __glewTextureStorageMem2DEXT: PFNGLTEXTURESTORAGEMEM2DEXTPROC

    @(link_name = "__glewTextureStorageMem2DMultisampleEXT")
    __glewTextureStorageMem2DMultisampleEXT: PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC

    @(link_name = "__glewTextureStorageMem3DEXT")
    __glewTextureStorageMem3DEXT: PFNGLTEXTURESTORAGEMEM3DEXTPROC

    @(link_name = "__glewTextureStorageMem3DMultisampleEXT")
    __glewTextureStorageMem3DMultisampleEXT: PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC

    @(link_name = "__glewImportMemoryFdEXT")
    __glewImportMemoryFdEXT: PFNGLIMPORTMEMORYFDEXTPROC

    @(link_name = "__glewImportMemoryWin32HandleEXT")
    __glewImportMemoryWin32HandleEXT: PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC

    @(link_name = "__glewImportMemoryWin32NameEXT")
    __glewImportMemoryWin32NameEXT: PFNGLIMPORTMEMORYWIN32NAMEEXTPROC

    @(link_name = "__glewMultiDrawArraysEXT")
    __glewMultiDrawArraysEXT: PFNGLMULTIDRAWARRAYSEXTPROC

    @(link_name = "__glewMultiDrawElementsEXT")
    __glewMultiDrawElementsEXT: PFNGLMULTIDRAWELEMENTSEXTPROC

    @(link_name = "__glewMultiDrawArraysIndirectEXT")
    __glewMultiDrawArraysIndirectEXT: PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC

    @(link_name = "__glewMultiDrawElementsIndirectEXT")
    __glewMultiDrawElementsIndirectEXT: PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC

    @(link_name = "__glewSampleMaskEXT")
    __glewSampleMaskEXT: PFNGLSAMPLEMASKEXTPROC

    @(link_name = "__glewSamplePatternEXT")
    __glewSamplePatternEXT: PFNGLSAMPLEPATTERNEXTPROC

    @(link_name = "__glewFramebufferTexture2DMultisampleEXT")
    __glewFramebufferTexture2DMultisampleEXT: PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC

    @(link_name = "__glewDrawBuffersIndexedEXT")
    __glewDrawBuffersIndexedEXT: PFNGLDRAWBUFFERSINDEXEDEXTPROC

    @(link_name = "__glewGetIntegeri_vEXT")
    __glewGetIntegeri_vEXT: PFNGLGETINTEGERI_VEXTPROC

    @(link_name = "__glewReadBufferIndexedEXT")
    __glewReadBufferIndexedEXT: PFNGLREADBUFFERINDEXEDEXTPROC

    @(link_name = "__glewColorTableEXT")
    __glewColorTableEXT: PFNGLCOLORTABLEEXTPROC

    @(link_name = "__glewGetColorTableEXT")
    __glewGetColorTableEXT: PFNGLGETCOLORTABLEEXTPROC

    @(link_name = "__glewGetColorTableParameterfvEXT")
    __glewGetColorTableParameterfvEXT: PFNGLGETCOLORTABLEPARAMETERFVEXTPROC

    @(link_name = "__glewGetColorTableParameterivEXT")
    __glewGetColorTableParameterivEXT: PFNGLGETCOLORTABLEPARAMETERIVEXTPROC

    @(link_name = "__glewGetPixelTransformParameterfvEXT")
    __glewGetPixelTransformParameterfvEXT: PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC

    @(link_name = "__glewGetPixelTransformParameterivEXT")
    __glewGetPixelTransformParameterivEXT: PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC

    @(link_name = "__glewPixelTransformParameterfEXT")
    __glewPixelTransformParameterfEXT: PFNGLPIXELTRANSFORMPARAMETERFEXTPROC

    @(link_name = "__glewPixelTransformParameterfvEXT")
    __glewPixelTransformParameterfvEXT: PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC

    @(link_name = "__glewPixelTransformParameteriEXT")
    __glewPixelTransformParameteriEXT: PFNGLPIXELTRANSFORMPARAMETERIEXTPROC

    @(link_name = "__glewPixelTransformParameterivEXT")
    __glewPixelTransformParameterivEXT: PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC

    @(link_name = "__glewPointParameterfEXT")
    __glewPointParameterfEXT: PFNGLPOINTPARAMETERFEXTPROC

    @(link_name = "__glewPointParameterfvEXT")
    __glewPointParameterfvEXT: PFNGLPOINTPARAMETERFVEXTPROC

    @(link_name = "__glewPolygonOffsetEXT")
    __glewPolygonOffsetEXT: PFNGLPOLYGONOFFSETEXTPROC

    @(link_name = "__glewPolygonOffsetClampEXT")
    __glewPolygonOffsetClampEXT: PFNGLPOLYGONOFFSETCLAMPEXTPROC

    @(link_name = "__glewPrimitiveBoundingBoxEXT")
    __glewPrimitiveBoundingBoxEXT: PFNGLPRIMITIVEBOUNDINGBOXEXTPROC

    @(link_name = "__glewProvokingVertexEXT")
    __glewProvokingVertexEXT: PFNGLPROVOKINGVERTEXEXTPROC

    @(link_name = "__glewCoverageModulationNV")
    __glewCoverageModulationNV: PFNGLCOVERAGEMODULATIONNVPROC

    @(link_name = "__glewCoverageModulationTableNV")
    __glewCoverageModulationTableNV: PFNGLCOVERAGEMODULATIONTABLENVPROC

    @(link_name = "__glewGetCoverageModulationTableNV")
    __glewGetCoverageModulationTableNV: PFNGLGETCOVERAGEMODULATIONTABLENVPROC

    @(link_name = "__glewRasterSamplesEXT")
    __glewRasterSamplesEXT: PFNGLRASTERSAMPLESEXTPROC

    @(link_name = "__glewGetGraphicsResetStatusEXT")
    __glewGetGraphicsResetStatusEXT: PFNGLGETGRAPHICSRESETSTATUSEXTPROC

    @(link_name = "__glewGetnUniformfvEXT")
    __glewGetnUniformfvEXT: PFNGLGETNUNIFORMFVEXTPROC

    @(link_name = "__glewGetnUniformivEXT")
    __glewGetnUniformivEXT: PFNGLGETNUNIFORMIVEXTPROC

    @(link_name = "__glewReadnPixelsEXT")
    __glewReadnPixelsEXT: PFNGLREADNPIXELSEXTPROC

    @(link_name = "__glewBeginSceneEXT")
    __glewBeginSceneEXT: PFNGLBEGINSCENEEXTPROC

    @(link_name = "__glewEndSceneEXT")
    __glewEndSceneEXT: PFNGLENDSCENEEXTPROC

    @(link_name = "__glewSecondaryColor3bEXT")
    __glewSecondaryColor3bEXT: PFNGLSECONDARYCOLOR3BEXTPROC

    @(link_name = "__glewSecondaryColor3bvEXT")
    __glewSecondaryColor3bvEXT: PFNGLSECONDARYCOLOR3BVEXTPROC

    @(link_name = "__glewSecondaryColor3dEXT")
    __glewSecondaryColor3dEXT: PFNGLSECONDARYCOLOR3DEXTPROC

    @(link_name = "__glewSecondaryColor3dvEXT")
    __glewSecondaryColor3dvEXT: PFNGLSECONDARYCOLOR3DVEXTPROC

    @(link_name = "__glewSecondaryColor3fEXT")
    __glewSecondaryColor3fEXT: PFNGLSECONDARYCOLOR3FEXTPROC

    @(link_name = "__glewSecondaryColor3fvEXT")
    __glewSecondaryColor3fvEXT: PFNGLSECONDARYCOLOR3FVEXTPROC

    @(link_name = "__glewSecondaryColor3iEXT")
    __glewSecondaryColor3iEXT: PFNGLSECONDARYCOLOR3IEXTPROC

    @(link_name = "__glewSecondaryColor3ivEXT")
    __glewSecondaryColor3ivEXT: PFNGLSECONDARYCOLOR3IVEXTPROC

    @(link_name = "__glewSecondaryColor3sEXT")
    __glewSecondaryColor3sEXT: PFNGLSECONDARYCOLOR3SEXTPROC

    @(link_name = "__glewSecondaryColor3svEXT")
    __glewSecondaryColor3svEXT: PFNGLSECONDARYCOLOR3SVEXTPROC

    @(link_name = "__glewSecondaryColor3ubEXT")
    __glewSecondaryColor3ubEXT: PFNGLSECONDARYCOLOR3UBEXTPROC

    @(link_name = "__glewSecondaryColor3ubvEXT")
    __glewSecondaryColor3ubvEXT: PFNGLSECONDARYCOLOR3UBVEXTPROC

    @(link_name = "__glewSecondaryColor3uiEXT")
    __glewSecondaryColor3uiEXT: PFNGLSECONDARYCOLOR3UIEXTPROC

    @(link_name = "__glewSecondaryColor3uivEXT")
    __glewSecondaryColor3uivEXT: PFNGLSECONDARYCOLOR3UIVEXTPROC

    @(link_name = "__glewSecondaryColor3usEXT")
    __glewSecondaryColor3usEXT: PFNGLSECONDARYCOLOR3USEXTPROC

    @(link_name = "__glewSecondaryColor3usvEXT")
    __glewSecondaryColor3usvEXT: PFNGLSECONDARYCOLOR3USVEXTPROC

    @(link_name = "__glewSecondaryColorPointerEXT")
    __glewSecondaryColorPointerEXT: PFNGLSECONDARYCOLORPOINTEREXTPROC

    @(link_name = "__glewDeleteSemaphoresEXT")
    __glewDeleteSemaphoresEXT: PFNGLDELETESEMAPHORESEXTPROC

    @(link_name = "__glewGenSemaphoresEXT")
    __glewGenSemaphoresEXT: PFNGLGENSEMAPHORESEXTPROC

    @(link_name = "__glewGetSemaphoreParameterui64vEXT")
    __glewGetSemaphoreParameterui64vEXT: PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC

    @(link_name = "__glewIsSemaphoreEXT")
    __glewIsSemaphoreEXT: PFNGLISSEMAPHOREEXTPROC

    @(link_name = "__glewSemaphoreParameterui64vEXT")
    __glewSemaphoreParameterui64vEXT: PFNGLSEMAPHOREPARAMETERUI64VEXTPROC

    @(link_name = "__glewSignalSemaphoreEXT")
    __glewSignalSemaphoreEXT: PFNGLSIGNALSEMAPHOREEXTPROC

    @(link_name = "__glewWaitSemaphoreEXT")
    __glewWaitSemaphoreEXT: PFNGLWAITSEMAPHOREEXTPROC

    @(link_name = "__glewImportSemaphoreFdEXT")
    __glewImportSemaphoreFdEXT: PFNGLIMPORTSEMAPHOREFDEXTPROC

    @(link_name = "__glewImportSemaphoreWin32HandleEXT")
    __glewImportSemaphoreWin32HandleEXT: PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC

    @(link_name = "__glewImportSemaphoreWin32NameEXT")
    __glewImportSemaphoreWin32NameEXT: PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC

    @(link_name = "__glewActiveProgramEXT")
    __glewActiveProgramEXT: PFNGLACTIVEPROGRAMEXTPROC

    @(link_name = "__glewCreateShaderProgramEXT")
    __glewCreateShaderProgramEXT: PFNGLCREATESHADERPROGRAMEXTPROC

    @(link_name = "__glewUseShaderProgramEXT")
    __glewUseShaderProgramEXT: PFNGLUSESHADERPROGRAMEXTPROC

    @(link_name = "__glewFramebufferFetchBarrierEXT")
    __glewFramebufferFetchBarrierEXT: PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC

    @(link_name = "__glewBindImageTextureEXT")
    __glewBindImageTextureEXT: PFNGLBINDIMAGETEXTUREEXTPROC

    @(link_name = "__glewMemoryBarrierEXT")
    __glewMemoryBarrierEXT: PFNGLMEMORYBARRIEREXTPROC

    @(link_name = "__glewClearPixelLocalStorageuiEXT")
    __glewClearPixelLocalStorageuiEXT: PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC

    @(link_name = "__glewFramebufferPixelLocalStorageSizeEXT")
    __glewFramebufferPixelLocalStorageSizeEXT: PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC

    @(link_name = "__glewGetFramebufferPixelLocalStorageSizeEXT")
    __glewGetFramebufferPixelLocalStorageSizeEXT: PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC

    @(link_name = "__glewTexPageCommitmentEXT")
    __glewTexPageCommitmentEXT: PFNGLTEXPAGECOMMITMENTEXTPROC

    @(link_name = "__glewTexturePageCommitmentEXT")
    __glewTexturePageCommitmentEXT: PFNGLTEXTUREPAGECOMMITMENTEXTPROC

    @(link_name = "__glewActiveStencilFaceEXT")
    __glewActiveStencilFaceEXT: PFNGLACTIVESTENCILFACEEXTPROC

    @(link_name = "__glewTexSubImage1DEXT")
    __glewTexSubImage1DEXT: PFNGLTEXSUBIMAGE1DEXTPROC

    @(link_name = "__glewTexSubImage2DEXT")
    __glewTexSubImage2DEXT: PFNGLTEXSUBIMAGE2DEXTPROC

    @(link_name = "__glewTexSubImage3DEXT")
    __glewTexSubImage3DEXT: PFNGLTEXSUBIMAGE3DEXTPROC

    @(link_name = "__glewPatchParameteriEXT")
    __glewPatchParameteriEXT: PFNGLPATCHPARAMETERIEXTPROC

    @(link_name = "__glewTexImage3DEXT")
    __glewTexImage3DEXT: PFNGLTEXIMAGE3DEXTPROC

    @(link_name = "__glewFramebufferTextureLayerEXT")
    __glewFramebufferTextureLayerEXT: PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC

    @(link_name = "__glewGetSamplerParameterIivEXT")
    __glewGetSamplerParameterIivEXT: PFNGLGETSAMPLERPARAMETERIIVEXTPROC

    @(link_name = "__glewGetSamplerParameterIuivEXT")
    __glewGetSamplerParameterIuivEXT: PFNGLGETSAMPLERPARAMETERIUIVEXTPROC

    @(link_name = "__glewSamplerParameterIivEXT")
    __glewSamplerParameterIivEXT: PFNGLSAMPLERPARAMETERIIVEXTPROC

    @(link_name = "__glewSamplerParameterIuivEXT")
    __glewSamplerParameterIuivEXT: PFNGLSAMPLERPARAMETERIUIVEXTPROC

    @(link_name = "__glewTexBufferEXT")
    __glewTexBufferEXT: PFNGLTEXBUFFEREXTPROC

    @(link_name = "__glewClearColorIiEXT")
    __glewClearColorIiEXT: PFNGLCLEARCOLORIIEXTPROC

    @(link_name = "__glewClearColorIuiEXT")
    __glewClearColorIuiEXT: PFNGLCLEARCOLORIUIEXTPROC

    @(link_name = "__glewGetTexParameterIivEXT")
    __glewGetTexParameterIivEXT: PFNGLGETTEXPARAMETERIIVEXTPROC

    @(link_name = "__glewGetTexParameterIuivEXT")
    __glewGetTexParameterIuivEXT: PFNGLGETTEXPARAMETERIUIVEXTPROC

    @(link_name = "__glewTexParameterIivEXT")
    __glewTexParameterIivEXT: PFNGLTEXPARAMETERIIVEXTPROC

    @(link_name = "__glewTexParameterIuivEXT")
    __glewTexParameterIuivEXT: PFNGLTEXPARAMETERIUIVEXTPROC

    @(link_name = "__glewAreTexturesResidentEXT")
    __glewAreTexturesResidentEXT: PFNGLARETEXTURESRESIDENTEXTPROC

    @(link_name = "__glewBindTextureEXT")
    __glewBindTextureEXT: PFNGLBINDTEXTUREEXTPROC

    @(link_name = "__glewDeleteTexturesEXT")
    __glewDeleteTexturesEXT: PFNGLDELETETEXTURESEXTPROC

    @(link_name = "__glewGenTexturesEXT")
    __glewGenTexturesEXT: PFNGLGENTEXTURESEXTPROC

    @(link_name = "__glewIsTextureEXT")
    __glewIsTextureEXT: PFNGLISTEXTUREEXTPROC

    @(link_name = "__glewPrioritizeTexturesEXT")
    __glewPrioritizeTexturesEXT: PFNGLPRIORITIZETEXTURESEXTPROC

    @(link_name = "__glewTextureNormalEXT")
    __glewTextureNormalEXT: PFNGLTEXTURENORMALEXTPROC

    @(link_name = "__glewTexStorage1DEXT")
    __glewTexStorage1DEXT: PFNGLTEXSTORAGE1DEXTPROC

    @(link_name = "__glewTexStorage2DEXT")
    __glewTexStorage2DEXT: PFNGLTEXSTORAGE2DEXTPROC

    @(link_name = "__glewTexStorage3DEXT")
    __glewTexStorage3DEXT: PFNGLTEXSTORAGE3DEXTPROC

    @(link_name = "__glewTextureStorage1DEXT")
    __glewTextureStorage1DEXT: PFNGLTEXTURESTORAGE1DEXTPROC

    @(link_name = "__glewTextureStorage2DEXT")
    __glewTextureStorage2DEXT: PFNGLTEXTURESTORAGE2DEXTPROC

    @(link_name = "__glewTextureStorage3DEXT")
    __glewTextureStorage3DEXT: PFNGLTEXTURESTORAGE3DEXTPROC

    @(link_name = "__glewTexStorageAttribs2DEXT")
    __glewTexStorageAttribs2DEXT: PFNGLTEXSTORAGEATTRIBS2DEXTPROC

    @(link_name = "__glewTexStorageAttribs3DEXT")
    __glewTexStorageAttribs3DEXT: PFNGLTEXSTORAGEATTRIBS3DEXTPROC

    @(link_name = "__glewTextureViewEXT")
    __glewTextureViewEXT: PFNGLTEXTUREVIEWEXTPROC

    @(link_name = "__glewGetQueryObjecti64vEXT")
    __glewGetQueryObjecti64vEXT: PFNGLGETQUERYOBJECTI64VEXTPROC

    @(link_name = "__glewGetQueryObjectui64vEXT")
    __glewGetQueryObjectui64vEXT: PFNGLGETQUERYOBJECTUI64VEXTPROC

    @(link_name = "__glewBeginTransformFeedbackEXT")
    __glewBeginTransformFeedbackEXT: PFNGLBEGINTRANSFORMFEEDBACKEXTPROC

    @(link_name = "__glewBindBufferBaseEXT")
    __glewBindBufferBaseEXT: PFNGLBINDBUFFERBASEEXTPROC

    @(link_name = "__glewBindBufferOffsetEXT")
    __glewBindBufferOffsetEXT: PFNGLBINDBUFFEROFFSETEXTPROC

    @(link_name = "__glewBindBufferRangeEXT")
    __glewBindBufferRangeEXT: PFNGLBINDBUFFERRANGEEXTPROC

    @(link_name = "__glewEndTransformFeedbackEXT")
    __glewEndTransformFeedbackEXT: PFNGLENDTRANSFORMFEEDBACKEXTPROC

    @(link_name = "__glewGetTransformFeedbackVaryingEXT")
    __glewGetTransformFeedbackVaryingEXT: PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC

    @(link_name = "__glewTransformFeedbackVaryingsEXT")
    __glewTransformFeedbackVaryingsEXT: PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC

    @(link_name = "__glewArrayElementEXT")
    __glewArrayElementEXT: PFNGLARRAYELEMENTEXTPROC

    @(link_name = "__glewColorPointerEXT")
    __glewColorPointerEXT: PFNGLCOLORPOINTEREXTPROC

    @(link_name = "__glewDrawArraysEXT")
    __glewDrawArraysEXT: PFNGLDRAWARRAYSEXTPROC

    @(link_name = "__glewEdgeFlagPointerEXT")
    __glewEdgeFlagPointerEXT: PFNGLEDGEFLAGPOINTEREXTPROC

    @(link_name = "__glewIndexPointerEXT")
    __glewIndexPointerEXT: PFNGLINDEXPOINTEREXTPROC

    @(link_name = "__glewNormalPointerEXT")
    __glewNormalPointerEXT: PFNGLNORMALPOINTEREXTPROC

    @(link_name = "__glewTexCoordPointerEXT")
    __glewTexCoordPointerEXT: PFNGLTEXCOORDPOINTEREXTPROC

    @(link_name = "__glewVertexPointerEXT")
    __glewVertexPointerEXT: PFNGLVERTEXPOINTEREXTPROC

    @(link_name = "__glewBindArraySetEXT")
    __glewBindArraySetEXT: PFNGLBINDARRAYSETEXTPROC

    @(link_name = "__glewCreateArraySetExt")
    __glewCreateArraySetExt: PFNGLCREATEARRAYSETEXTPROC

    @(link_name = "__glewDeleteArraySetsEXT")
    __glewDeleteArraySetsEXT: PFNGLDELETEARRAYSETSEXTPROC

    @(link_name = "__glewGetVertexAttribLdvEXT")
    __glewGetVertexAttribLdvEXT: PFNGLGETVERTEXATTRIBLDVEXTPROC

    @(link_name = "__glewVertexArrayVertexAttribLOffsetEXT")
    __glewVertexArrayVertexAttribLOffsetEXT: PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC

    @(link_name = "__glewVertexAttribL1dEXT")
    __glewVertexAttribL1dEXT: PFNGLVERTEXATTRIBL1DEXTPROC

    @(link_name = "__glewVertexAttribL1dvEXT")
    __glewVertexAttribL1dvEXT: PFNGLVERTEXATTRIBL1DVEXTPROC

    @(link_name = "__glewVertexAttribL2dEXT")
    __glewVertexAttribL2dEXT: PFNGLVERTEXATTRIBL2DEXTPROC

    @(link_name = "__glewVertexAttribL2dvEXT")
    __glewVertexAttribL2dvEXT: PFNGLVERTEXATTRIBL2DVEXTPROC

    @(link_name = "__glewVertexAttribL3dEXT")
    __glewVertexAttribL3dEXT: PFNGLVERTEXATTRIBL3DEXTPROC

    @(link_name = "__glewVertexAttribL3dvEXT")
    __glewVertexAttribL3dvEXT: PFNGLVERTEXATTRIBL3DVEXTPROC

    @(link_name = "__glewVertexAttribL4dEXT")
    __glewVertexAttribL4dEXT: PFNGLVERTEXATTRIBL4DEXTPROC

    @(link_name = "__glewVertexAttribL4dvEXT")
    __glewVertexAttribL4dvEXT: PFNGLVERTEXATTRIBL4DVEXTPROC

    @(link_name = "__glewVertexAttribLPointerEXT")
    __glewVertexAttribLPointerEXT: PFNGLVERTEXATTRIBLPOINTEREXTPROC

    @(link_name = "__glewBeginVertexShaderEXT")
    __glewBeginVertexShaderEXT: PFNGLBEGINVERTEXSHADEREXTPROC

    @(link_name = "__glewBindLightParameterEXT")
    __glewBindLightParameterEXT: PFNGLBINDLIGHTPARAMETEREXTPROC

    @(link_name = "__glewBindMaterialParameterEXT")
    __glewBindMaterialParameterEXT: PFNGLBINDMATERIALPARAMETEREXTPROC

    @(link_name = "__glewBindParameterEXT")
    __glewBindParameterEXT: PFNGLBINDPARAMETEREXTPROC

    @(link_name = "__glewBindTexGenParameterEXT")
    __glewBindTexGenParameterEXT: PFNGLBINDTEXGENPARAMETEREXTPROC

    @(link_name = "__glewBindTextureUnitParameterEXT")
    __glewBindTextureUnitParameterEXT: PFNGLBINDTEXTUREUNITPARAMETEREXTPROC

    @(link_name = "__glewBindVertexShaderEXT")
    __glewBindVertexShaderEXT: PFNGLBINDVERTEXSHADEREXTPROC

    @(link_name = "__glewDeleteVertexShaderEXT")
    __glewDeleteVertexShaderEXT: PFNGLDELETEVERTEXSHADEREXTPROC

    @(link_name = "__glewDisableVariantClientStateEXT")
    __glewDisableVariantClientStateEXT: PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC

    @(link_name = "__glewEnableVariantClientStateEXT")
    __glewEnableVariantClientStateEXT: PFNGLENABLEVARIANTCLIENTSTATEEXTPROC

    @(link_name = "__glewEndVertexShaderEXT")
    __glewEndVertexShaderEXT: PFNGLENDVERTEXSHADEREXTPROC

    @(link_name = "__glewExtractComponentEXT")
    __glewExtractComponentEXT: PFNGLEXTRACTCOMPONENTEXTPROC

    @(link_name = "__glewGenSymbolsEXT")
    __glewGenSymbolsEXT: PFNGLGENSYMBOLSEXTPROC

    @(link_name = "__glewGenVertexShadersEXT")
    __glewGenVertexShadersEXT: PFNGLGENVERTEXSHADERSEXTPROC

    @(link_name = "__glewGetInvariantBooleanvEXT")
    __glewGetInvariantBooleanvEXT: PFNGLGETINVARIANTBOOLEANVEXTPROC

    @(link_name = "__glewGetInvariantFloatvEXT")
    __glewGetInvariantFloatvEXT: PFNGLGETINVARIANTFLOATVEXTPROC

    @(link_name = "__glewGetInvariantIntegervEXT")
    __glewGetInvariantIntegervEXT: PFNGLGETINVARIANTINTEGERVEXTPROC

    @(link_name = "__glewGetLocalConstantBooleanvEXT")
    __glewGetLocalConstantBooleanvEXT: PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC

    @(link_name = "__glewGetLocalConstantFloatvEXT")
    __glewGetLocalConstantFloatvEXT: PFNGLGETLOCALCONSTANTFLOATVEXTPROC

    @(link_name = "__glewGetLocalConstantIntegervEXT")
    __glewGetLocalConstantIntegervEXT: PFNGLGETLOCALCONSTANTINTEGERVEXTPROC

    @(link_name = "__glewGetVariantBooleanvEXT")
    __glewGetVariantBooleanvEXT: PFNGLGETVARIANTBOOLEANVEXTPROC

    @(link_name = "__glewGetVariantFloatvEXT")
    __glewGetVariantFloatvEXT: PFNGLGETVARIANTFLOATVEXTPROC

    @(link_name = "__glewGetVariantIntegervEXT")
    __glewGetVariantIntegervEXT: PFNGLGETVARIANTINTEGERVEXTPROC

    @(link_name = "__glewGetVariantPointervEXT")
    __glewGetVariantPointervEXT: PFNGLGETVARIANTPOINTERVEXTPROC

    @(link_name = "__glewInsertComponentEXT")
    __glewInsertComponentEXT: PFNGLINSERTCOMPONENTEXTPROC

    @(link_name = "__glewIsVariantEnabledEXT")
    __glewIsVariantEnabledEXT: PFNGLISVARIANTENABLEDEXTPROC

    @(link_name = "__glewSetInvariantEXT")
    __glewSetInvariantEXT: PFNGLSETINVARIANTEXTPROC

    @(link_name = "__glewSetLocalConstantEXT")
    __glewSetLocalConstantEXT: PFNGLSETLOCALCONSTANTEXTPROC

    @(link_name = "__glewShaderOp1EXT")
    __glewShaderOp1EXT: PFNGLSHADEROP1EXTPROC

    @(link_name = "__glewShaderOp2EXT")
    __glewShaderOp2EXT: PFNGLSHADEROP2EXTPROC

    @(link_name = "__glewShaderOp3EXT")
    __glewShaderOp3EXT: PFNGLSHADEROP3EXTPROC

    @(link_name = "__glewSwizzleEXT")
    __glewSwizzleEXT: PFNGLSWIZZLEEXTPROC

    @(link_name = "__glewVariantPointerEXT")
    __glewVariantPointerEXT: PFNGLVARIANTPOINTEREXTPROC

    @(link_name = "__glewVariantbvEXT")
    __glewVariantbvEXT: PFNGLVARIANTBVEXTPROC

    @(link_name = "__glewVariantdvEXT")
    __glewVariantdvEXT: PFNGLVARIANTDVEXTPROC

    @(link_name = "__glewVariantfvEXT")
    __glewVariantfvEXT: PFNGLVARIANTFVEXTPROC

    @(link_name = "__glewVariantivEXT")
    __glewVariantivEXT: PFNGLVARIANTIVEXTPROC

    @(link_name = "__glewVariantsvEXT")
    __glewVariantsvEXT: PFNGLVARIANTSVEXTPROC

    @(link_name = "__glewVariantubvEXT")
    __glewVariantubvEXT: PFNGLVARIANTUBVEXTPROC

    @(link_name = "__glewVariantuivEXT")
    __glewVariantuivEXT: PFNGLVARIANTUIVEXTPROC

    @(link_name = "__glewVariantusvEXT")
    __glewVariantusvEXT: PFNGLVARIANTUSVEXTPROC

    @(link_name = "__glewWriteMaskEXT")
    __glewWriteMaskEXT: PFNGLWRITEMASKEXTPROC

    @(link_name = "__glewVertexWeightPointerEXT")
    __glewVertexWeightPointerEXT: PFNGLVERTEXWEIGHTPOINTEREXTPROC

    @(link_name = "__glewVertexWeightfEXT")
    __glewVertexWeightfEXT: PFNGLVERTEXWEIGHTFEXTPROC

    @(link_name = "__glewVertexWeightfvEXT")
    __glewVertexWeightfvEXT: PFNGLVERTEXWEIGHTFVEXTPROC

    @(link_name = "__glewAcquireKeyedMutexWin32EXT")
    __glewAcquireKeyedMutexWin32EXT: PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC

    @(link_name = "__glewReleaseKeyedMutexWin32EXT")
    __glewReleaseKeyedMutexWin32EXT: PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC

    @(link_name = "__glewWindowRectanglesEXT")
    __glewWindowRectanglesEXT: PFNGLWINDOWRECTANGLESEXTPROC

    @(link_name = "__glewImportSyncEXT")
    __glewImportSyncEXT: PFNGLIMPORTSYNCEXTPROC

    @(link_name = "__glewFrameTerminatorGREMEDY")
    __glewFrameTerminatorGREMEDY: PFNGLFRAMETERMINATORGREMEDYPROC

    @(link_name = "__glewStringMarkerGREMEDY")
    __glewStringMarkerGREMEDY: PFNGLSTRINGMARKERGREMEDYPROC

    @(link_name = "__glewGetImageTransformParameterfvHP")
    __glewGetImageTransformParameterfvHP: PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC

    @(link_name = "__glewGetImageTransformParameterivHP")
    __glewGetImageTransformParameterivHP: PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC

    @(link_name = "__glewImageTransformParameterfHP")
    __glewImageTransformParameterfHP: PFNGLIMAGETRANSFORMPARAMETERFHPPROC

    @(link_name = "__glewImageTransformParameterfvHP")
    __glewImageTransformParameterfvHP: PFNGLIMAGETRANSFORMPARAMETERFVHPPROC

    @(link_name = "__glewImageTransformParameteriHP")
    __glewImageTransformParameteriHP: PFNGLIMAGETRANSFORMPARAMETERIHPPROC

    @(link_name = "__glewImageTransformParameterivHP")
    __glewImageTransformParameterivHP: PFNGLIMAGETRANSFORMPARAMETERIVHPPROC

    @(link_name = "__glewMultiModeDrawArraysIBM")
    __glewMultiModeDrawArraysIBM: PFNGLMULTIMODEDRAWARRAYSIBMPROC

    @(link_name = "__glewMultiModeDrawElementsIBM")
    __glewMultiModeDrawElementsIBM: PFNGLMULTIMODEDRAWELEMENTSIBMPROC

    @(link_name = "__glewColorPointerListIBM")
    __glewColorPointerListIBM: PFNGLCOLORPOINTERLISTIBMPROC

    @(link_name = "__glewEdgeFlagPointerListIBM")
    __glewEdgeFlagPointerListIBM: PFNGLEDGEFLAGPOINTERLISTIBMPROC

    @(link_name = "__glewFogCoordPointerListIBM")
    __glewFogCoordPointerListIBM: PFNGLFOGCOORDPOINTERLISTIBMPROC

    @(link_name = "__glewIndexPointerListIBM")
    __glewIndexPointerListIBM: PFNGLINDEXPOINTERLISTIBMPROC

    @(link_name = "__glewNormalPointerListIBM")
    __glewNormalPointerListIBM: PFNGLNORMALPOINTERLISTIBMPROC

    @(link_name = "__glewSecondaryColorPointerListIBM")
    __glewSecondaryColorPointerListIBM: PFNGLSECONDARYCOLORPOINTERLISTIBMPROC

    @(link_name = "__glewTexCoordPointerListIBM")
    __glewTexCoordPointerListIBM: PFNGLTEXCOORDPOINTERLISTIBMPROC

    @(link_name = "__glewVertexPointerListIBM")
    __glewVertexPointerListIBM: PFNGLVERTEXPOINTERLISTIBMPROC

    @(link_name = "__glewGetTextureHandleIMG")
    __glewGetTextureHandleIMG: PFNGLGETTEXTUREHANDLEIMGPROC

    @(link_name = "__glewGetTextureSamplerHandleIMG")
    __glewGetTextureSamplerHandleIMG: PFNGLGETTEXTURESAMPLERHANDLEIMGPROC

    @(link_name = "__glewProgramUniformHandleui64IMG")
    __glewProgramUniformHandleui64IMG: PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC

    @(link_name = "__glewProgramUniformHandleui64vIMG")
    __glewProgramUniformHandleui64vIMG: PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC

    @(link_name = "__glewUniformHandleui64IMG")
    __glewUniformHandleui64IMG: PFNGLUNIFORMHANDLEUI64IMGPROC

    @(link_name = "__glewUniformHandleui64vIMG")
    __glewUniformHandleui64vIMG: PFNGLUNIFORMHANDLEUI64VIMGPROC

    @(link_name = "__glewFramebufferTexture2DDownsampleIMG")
    __glewFramebufferTexture2DDownsampleIMG: PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC

    @(link_name = "__glewFramebufferTextureLayerDownsampleIMG")
    __glewFramebufferTextureLayerDownsampleIMG: PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC

    @(link_name = "__glewFramebufferTexture2DMultisampleIMG")
    __glewFramebufferTexture2DMultisampleIMG: PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC

    @(link_name = "__glewRenderbufferStorageMultisampleIMG")
    __glewRenderbufferStorageMultisampleIMG: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC

    @(link_name = "__glewApplyFramebufferAttachmentCMAAINTEL")
    __glewApplyFramebufferAttachmentCMAAINTEL: PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC

    @(link_name = "__glewMapTexture2DINTEL")
    __glewMapTexture2DINTEL: PFNGLMAPTEXTURE2DINTELPROC

    @(link_name = "__glewSyncTextureINTEL")
    __glewSyncTextureINTEL: PFNGLSYNCTEXTUREINTELPROC

    @(link_name = "__glewUnmapTexture2DINTEL")
    __glewUnmapTexture2DINTEL: PFNGLUNMAPTEXTURE2DINTELPROC

    @(link_name = "__glewColorPointervINTEL")
    __glewColorPointervINTEL: PFNGLCOLORPOINTERVINTELPROC

    @(link_name = "__glewNormalPointervINTEL")
    __glewNormalPointervINTEL: PFNGLNORMALPOINTERVINTELPROC

    @(link_name = "__glewTexCoordPointervINTEL")
    __glewTexCoordPointervINTEL: PFNGLTEXCOORDPOINTERVINTELPROC

    @(link_name = "__glewVertexPointervINTEL")
    __glewVertexPointervINTEL: PFNGLVERTEXPOINTERVINTELPROC

    @(link_name = "__glewBeginPerfQueryINTEL")
    __glewBeginPerfQueryINTEL: PFNGLBEGINPERFQUERYINTELPROC

    @(link_name = "__glewCreatePerfQueryINTEL")
    __glewCreatePerfQueryINTEL: PFNGLCREATEPERFQUERYINTELPROC

    @(link_name = "__glewDeletePerfQueryINTEL")
    __glewDeletePerfQueryINTEL: PFNGLDELETEPERFQUERYINTELPROC

    @(link_name = "__glewEndPerfQueryINTEL")
    __glewEndPerfQueryINTEL: PFNGLENDPERFQUERYINTELPROC

    @(link_name = "__glewGetFirstPerfQueryIdINTEL")
    __glewGetFirstPerfQueryIdINTEL: PFNGLGETFIRSTPERFQUERYIDINTELPROC

    @(link_name = "__glewGetNextPerfQueryIdINTEL")
    __glewGetNextPerfQueryIdINTEL: PFNGLGETNEXTPERFQUERYIDINTELPROC

    @(link_name = "__glewGetPerfCounterInfoINTEL")
    __glewGetPerfCounterInfoINTEL: PFNGLGETPERFCOUNTERINFOINTELPROC

    @(link_name = "__glewGetPerfQueryDataINTEL")
    __glewGetPerfQueryDataINTEL: PFNGLGETPERFQUERYDATAINTELPROC

    @(link_name = "__glewGetPerfQueryIdByNameINTEL")
    __glewGetPerfQueryIdByNameINTEL: PFNGLGETPERFQUERYIDBYNAMEINTELPROC

    @(link_name = "__glewGetPerfQueryInfoINTEL")
    __glewGetPerfQueryInfoINTEL: PFNGLGETPERFQUERYINFOINTELPROC

    @(link_name = "__glewTexScissorFuncINTEL")
    __glewTexScissorFuncINTEL: PFNGLTEXSCISSORFUNCINTELPROC

    @(link_name = "__glewTexScissorINTEL")
    __glewTexScissorINTEL: PFNGLTEXSCISSORINTELPROC

    @(link_name = "__glewBlendBarrierKHR")
    __glewBlendBarrierKHR: PFNGLBLENDBARRIERKHRPROC

    @(link_name = "__glewDebugMessageCallback")
    __glewDebugMessageCallback: PFNGLDEBUGMESSAGECALLBACKPROC

    @(link_name = "__glewDebugMessageControl")
    __glewDebugMessageControl: PFNGLDEBUGMESSAGECONTROLPROC

    @(link_name = "__glewDebugMessageInsert")
    __glewDebugMessageInsert: PFNGLDEBUGMESSAGEINSERTPROC

    @(link_name = "__glewGetDebugMessageLog")
    __glewGetDebugMessageLog: PFNGLGETDEBUGMESSAGELOGPROC

    @(link_name = "__glewGetObjectLabel")
    __glewGetObjectLabel: PFNGLGETOBJECTLABELPROC

    @(link_name = "__glewGetObjectPtrLabel")
    __glewGetObjectPtrLabel: PFNGLGETOBJECTPTRLABELPROC

    @(link_name = "__glewObjectLabel")
    __glewObjectLabel: PFNGLOBJECTLABELPROC

    @(link_name = "__glewObjectPtrLabel")
    __glewObjectPtrLabel: PFNGLOBJECTPTRLABELPROC

    @(link_name = "__glewPopDebugGroup")
    __glewPopDebugGroup: PFNGLPOPDEBUGGROUPPROC

    @(link_name = "__glewPushDebugGroup")
    __glewPushDebugGroup: PFNGLPUSHDEBUGGROUPPROC

    @(link_name = "__glewMaxShaderCompilerThreadsKHR")
    __glewMaxShaderCompilerThreadsKHR: PFNGLMAXSHADERCOMPILERTHREADSKHRPROC

    @(link_name = "__glewGetnUniformfv")
    __glewGetnUniformfv: PFNGLGETNUNIFORMFVPROC

    @(link_name = "__glewGetnUniformiv")
    __glewGetnUniformiv: PFNGLGETNUNIFORMIVPROC

    @(link_name = "__glewGetnUniformuiv")
    __glewGetnUniformuiv: PFNGLGETNUNIFORMUIVPROC

    @(link_name = "__glewReadnPixels")
    __glewReadnPixels: PFNGLREADNPIXELSPROC

    @(link_name = "__glewBufferRegionEnabled")
    __glewBufferRegionEnabled: PFNGLBUFFERREGIONENABLEDPROC

    @(link_name = "__glewDeleteBufferRegion")
    __glewDeleteBufferRegion: PFNGLDELETEBUFFERREGIONPROC

    @(link_name = "__glewDrawBufferRegion")
    __glewDrawBufferRegion: PFNGLDRAWBUFFERREGIONPROC

    @(link_name = "__glewNewBufferRegion")
    __glewNewBufferRegion: PFNGLNEWBUFFERREGIONPROC

    @(link_name = "__glewReadBufferRegion")
    __glewReadBufferRegion: PFNGLREADBUFFERREGIONPROC

    @(link_name = "__glewFramebufferParameteriMESA")
    __glewFramebufferParameteriMESA: PFNGLFRAMEBUFFERPARAMETERIMESAPROC

    @(link_name = "__glewGetFramebufferParameterivMESA")
    __glewGetFramebufferParameterivMESA: PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC

    @(link_name = "__glewResizeBuffersMESA")
    __glewResizeBuffersMESA: PFNGLRESIZEBUFFERSMESAPROC

    @(link_name = "__glewWindowPos2dMESA")
    __glewWindowPos2dMESA: PFNGLWINDOWPOS2DMESAPROC

    @(link_name = "__glewWindowPos2dvMESA")
    __glewWindowPos2dvMESA: PFNGLWINDOWPOS2DVMESAPROC

    @(link_name = "__glewWindowPos2fMESA")
    __glewWindowPos2fMESA: PFNGLWINDOWPOS2FMESAPROC

    @(link_name = "__glewWindowPos2fvMESA")
    __glewWindowPos2fvMESA: PFNGLWINDOWPOS2FVMESAPROC

    @(link_name = "__glewWindowPos2iMESA")
    __glewWindowPos2iMESA: PFNGLWINDOWPOS2IMESAPROC

    @(link_name = "__glewWindowPos2ivMESA")
    __glewWindowPos2ivMESA: PFNGLWINDOWPOS2IVMESAPROC

    @(link_name = "__glewWindowPos2sMESA")
    __glewWindowPos2sMESA: PFNGLWINDOWPOS2SMESAPROC

    @(link_name = "__glewWindowPos2svMESA")
    __glewWindowPos2svMESA: PFNGLWINDOWPOS2SVMESAPROC

    @(link_name = "__glewWindowPos3dMESA")
    __glewWindowPos3dMESA: PFNGLWINDOWPOS3DMESAPROC

    @(link_name = "__glewWindowPos3dvMESA")
    __glewWindowPos3dvMESA: PFNGLWINDOWPOS3DVMESAPROC

    @(link_name = "__glewWindowPos3fMESA")
    __glewWindowPos3fMESA: PFNGLWINDOWPOS3FMESAPROC

    @(link_name = "__glewWindowPos3fvMESA")
    __glewWindowPos3fvMESA: PFNGLWINDOWPOS3FVMESAPROC

    @(link_name = "__glewWindowPos3iMESA")
    __glewWindowPos3iMESA: PFNGLWINDOWPOS3IMESAPROC

    @(link_name = "__glewWindowPos3ivMESA")
    __glewWindowPos3ivMESA: PFNGLWINDOWPOS3IVMESAPROC

    @(link_name = "__glewWindowPos3sMESA")
    __glewWindowPos3sMESA: PFNGLWINDOWPOS3SMESAPROC

    @(link_name = "__glewWindowPos3svMESA")
    __glewWindowPos3svMESA: PFNGLWINDOWPOS3SVMESAPROC

    @(link_name = "__glewWindowPos4dMESA")
    __glewWindowPos4dMESA: PFNGLWINDOWPOS4DMESAPROC

    @(link_name = "__glewWindowPos4dvMESA")
    __glewWindowPos4dvMESA: PFNGLWINDOWPOS4DVMESAPROC

    @(link_name = "__glewWindowPos4fMESA")
    __glewWindowPos4fMESA: PFNGLWINDOWPOS4FMESAPROC

    @(link_name = "__glewWindowPos4fvMESA")
    __glewWindowPos4fvMESA: PFNGLWINDOWPOS4FVMESAPROC

    @(link_name = "__glewWindowPos4iMESA")
    __glewWindowPos4iMESA: PFNGLWINDOWPOS4IMESAPROC

    @(link_name = "__glewWindowPos4ivMESA")
    __glewWindowPos4ivMESA: PFNGLWINDOWPOS4IVMESAPROC

    @(link_name = "__glewWindowPos4sMESA")
    __glewWindowPos4sMESA: PFNGLWINDOWPOS4SMESAPROC

    @(link_name = "__glewWindowPos4svMESA")
    __glewWindowPos4svMESA: PFNGLWINDOWPOS4SVMESAPROC

    @(link_name = "__glewBeginConditionalRenderNVX")
    __glewBeginConditionalRenderNVX: PFNGLBEGINCONDITIONALRENDERNVXPROC

    @(link_name = "__glewEndConditionalRenderNVX")
    __glewEndConditionalRenderNVX: PFNGLENDCONDITIONALRENDERNVXPROC

    @(link_name = "__glewAsyncCopyBufferSubDataNVX")
    __glewAsyncCopyBufferSubDataNVX: PFNGLASYNCCOPYBUFFERSUBDATANVXPROC

    @(link_name = "__glewAsyncCopyImageSubDataNVX")
    __glewAsyncCopyImageSubDataNVX: PFNGLASYNCCOPYIMAGESUBDATANVXPROC

    @(link_name = "__glewMulticastScissorArrayvNVX")
    __glewMulticastScissorArrayvNVX: PFNGLMULTICASTSCISSORARRAYVNVXPROC

    @(link_name = "__glewMulticastViewportArrayvNVX")
    __glewMulticastViewportArrayvNVX: PFNGLMULTICASTVIEWPORTARRAYVNVXPROC

    @(link_name = "__glewMulticastViewportPositionWScaleNVX")
    __glewMulticastViewportPositionWScaleNVX: PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC

    @(link_name = "__glewUploadGpuMaskNVX")
    __glewUploadGpuMaskNVX: PFNGLUPLOADGPUMASKNVXPROC

    @(link_name = "__glewLGPUCopyImageSubDataNVX")
    __glewLGPUCopyImageSubDataNVX: PFNGLLGPUCOPYIMAGESUBDATANVXPROC

    @(link_name = "__glewLGPUInterlockNVX")
    __glewLGPUInterlockNVX: PFNGLLGPUINTERLOCKNVXPROC

    @(link_name = "__glewLGPUNamedBufferSubDataNVX")
    __glewLGPUNamedBufferSubDataNVX: PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC

    @(link_name = "__glewClientWaitSemaphoreui64NVX")
    __glewClientWaitSemaphoreui64NVX: PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC

    @(link_name = "__glewCreateProgressFenceNVX")
    __glewCreateProgressFenceNVX: PFNGLCREATEPROGRESSFENCENVXPROC

    @(link_name = "__glewSignalSemaphoreui64NVX")
    __glewSignalSemaphoreui64NVX: PFNGLSIGNALSEMAPHOREUI64NVXPROC

    @(link_name = "__glewWaitSemaphoreui64NVX")
    __glewWaitSemaphoreui64NVX: PFNGLWAITSEMAPHOREUI64NVXPROC

    @(link_name = "__glewStereoParameterfNV")
    __glewStereoParameterfNV: PFNGLSTEREOPARAMETERFNVPROC

    @(link_name = "__glewStereoParameteriNV")
    __glewStereoParameteriNV: PFNGLSTEREOPARAMETERINVPROC

    @(link_name = "__glewAlphaToCoverageDitherControlNV")
    __glewAlphaToCoverageDitherControlNV: PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC

    @(link_name = "__glewMultiDrawArraysIndirectBindlessNV")
    __glewMultiDrawArraysIndirectBindlessNV: PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC

    @(link_name = "__glewMultiDrawElementsIndirectBindlessNV")
    __glewMultiDrawElementsIndirectBindlessNV: PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC

    @(link_name = "__glewMultiDrawArraysIndirectBindlessCountNV")
    __glewMultiDrawArraysIndirectBindlessCountNV: PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC

    @(link_name = "__glewMultiDrawElementsIndirectBindlessCountNV")
    __glewMultiDrawElementsIndirectBindlessCountNV: PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC

    @(link_name = "__glewGetImageHandleNV")
    __glewGetImageHandleNV: PFNGLGETIMAGEHANDLENVPROC

    @(link_name = "__glewGetTextureHandleNV")
    __glewGetTextureHandleNV: PFNGLGETTEXTUREHANDLENVPROC

    @(link_name = "__glewGetTextureSamplerHandleNV")
    __glewGetTextureSamplerHandleNV: PFNGLGETTEXTURESAMPLERHANDLENVPROC

    @(link_name = "__glewIsImageHandleResidentNV")
    __glewIsImageHandleResidentNV: PFNGLISIMAGEHANDLERESIDENTNVPROC

    @(link_name = "__glewIsTextureHandleResidentNV")
    __glewIsTextureHandleResidentNV: PFNGLISTEXTUREHANDLERESIDENTNVPROC

    @(link_name = "__glewMakeImageHandleNonResidentNV")
    __glewMakeImageHandleNonResidentNV: PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC

    @(link_name = "__glewMakeImageHandleResidentNV")
    __glewMakeImageHandleResidentNV: PFNGLMAKEIMAGEHANDLERESIDENTNVPROC

    @(link_name = "__glewMakeTextureHandleNonResidentNV")
    __glewMakeTextureHandleNonResidentNV: PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC

    @(link_name = "__glewMakeTextureHandleResidentNV")
    __glewMakeTextureHandleResidentNV: PFNGLMAKETEXTUREHANDLERESIDENTNVPROC

    @(link_name = "__glewProgramUniformHandleui64NV")
    __glewProgramUniformHandleui64NV: PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC

    @(link_name = "__glewProgramUniformHandleui64vNV")
    __glewProgramUniformHandleui64vNV: PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC

    @(link_name = "__glewUniformHandleui64NV")
    __glewUniformHandleui64NV: PFNGLUNIFORMHANDLEUI64NVPROC

    @(link_name = "__glewUniformHandleui64vNV")
    __glewUniformHandleui64vNV: PFNGLUNIFORMHANDLEUI64VNVPROC

    @(link_name = "__glewBlendBarrierNV")
    __glewBlendBarrierNV: PFNGLBLENDBARRIERNVPROC

    @(link_name = "__glewBlendParameteriNV")
    __glewBlendParameteriNV: PFNGLBLENDPARAMETERINVPROC

    @(link_name = "__glewViewportPositionWScaleNV")
    __glewViewportPositionWScaleNV: PFNGLVIEWPORTPOSITIONWSCALENVPROC

    @(link_name = "__glewCallCommandListNV")
    __glewCallCommandListNV: PFNGLCALLCOMMANDLISTNVPROC

    @(link_name = "__glewCommandListSegmentsNV")
    __glewCommandListSegmentsNV: PFNGLCOMMANDLISTSEGMENTSNVPROC

    @(link_name = "__glewCompileCommandListNV")
    __glewCompileCommandListNV: PFNGLCOMPILECOMMANDLISTNVPROC

    @(link_name = "__glewCreateCommandListsNV")
    __glewCreateCommandListsNV: PFNGLCREATECOMMANDLISTSNVPROC

    @(link_name = "__glewCreateStatesNV")
    __glewCreateStatesNV: PFNGLCREATESTATESNVPROC

    @(link_name = "__glewDeleteCommandListsNV")
    __glewDeleteCommandListsNV: PFNGLDELETECOMMANDLISTSNVPROC

    @(link_name = "__glewDeleteStatesNV")
    __glewDeleteStatesNV: PFNGLDELETESTATESNVPROC

    @(link_name = "__glewDrawCommandsAddressNV")
    __glewDrawCommandsAddressNV: PFNGLDRAWCOMMANDSADDRESSNVPROC

    @(link_name = "__glewDrawCommandsNV")
    __glewDrawCommandsNV: PFNGLDRAWCOMMANDSNVPROC

    @(link_name = "__glewDrawCommandsStatesAddressNV")
    __glewDrawCommandsStatesAddressNV: PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC

    @(link_name = "__glewDrawCommandsStatesNV")
    __glewDrawCommandsStatesNV: PFNGLDRAWCOMMANDSSTATESNVPROC

    @(link_name = "__glewGetCommandHeaderNV")
    __glewGetCommandHeaderNV: PFNGLGETCOMMANDHEADERNVPROC

    @(link_name = "__glewGetStageIndexNV")
    __glewGetStageIndexNV: PFNGLGETSTAGEINDEXNVPROC

    @(link_name = "__glewIsCommandListNV")
    __glewIsCommandListNV: PFNGLISCOMMANDLISTNVPROC

    @(link_name = "__glewIsStateNV")
    __glewIsStateNV: PFNGLISSTATENVPROC

    @(link_name = "__glewListDrawCommandsStatesClientNV")
    __glewListDrawCommandsStatesClientNV: PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC

    @(link_name = "__glewStateCaptureNV")
    __glewStateCaptureNV: PFNGLSTATECAPTURENVPROC

    @(link_name = "__glewBeginConditionalRenderNV")
    __glewBeginConditionalRenderNV: PFNGLBEGINCONDITIONALRENDERNVPROC

    @(link_name = "__glewEndConditionalRenderNV")
    __glewEndConditionalRenderNV: PFNGLENDCONDITIONALRENDERNVPROC

    @(link_name = "__glewSubpixelPrecisionBiasNV")
    __glewSubpixelPrecisionBiasNV: PFNGLSUBPIXELPRECISIONBIASNVPROC

    @(link_name = "__glewConservativeRasterParameterfNV")
    __glewConservativeRasterParameterfNV: PFNGLCONSERVATIVERASTERPARAMETERFNVPROC

    @(link_name = "__glewConservativeRasterParameteriNV")
    __glewConservativeRasterParameteriNV: PFNGLCONSERVATIVERASTERPARAMETERINVPROC

    @(link_name = "__glewCopyBufferSubDataNV")
    __glewCopyBufferSubDataNV: PFNGLCOPYBUFFERSUBDATANVPROC

    @(link_name = "__glewCopyImageSubDataNV")
    __glewCopyImageSubDataNV: PFNGLCOPYIMAGESUBDATANVPROC

    @(link_name = "__glewClearDepthdNV")
    __glewClearDepthdNV: PFNGLCLEARDEPTHDNVPROC

    @(link_name = "__glewDepthBoundsdNV")
    __glewDepthBoundsdNV: PFNGLDEPTHBOUNDSDNVPROC

    @(link_name = "__glewDepthRangedNV")
    __glewDepthRangedNV: PFNGLDEPTHRANGEDNVPROC

    @(link_name = "__glewDrawBuffersNV")
    __glewDrawBuffersNV: PFNGLDRAWBUFFERSNVPROC

    @(link_name = "__glewDrawArraysInstancedNV")
    __glewDrawArraysInstancedNV: PFNGLDRAWARRAYSINSTANCEDNVPROC

    @(link_name = "__glewDrawElementsInstancedNV")
    __glewDrawElementsInstancedNV: PFNGLDRAWELEMENTSINSTANCEDNVPROC

    @(link_name = "__glewDrawTextureNV")
    __glewDrawTextureNV: PFNGLDRAWTEXTURENVPROC

    @(link_name = "__glewDrawVkImageNV")
    __glewDrawVkImageNV: PFNGLDRAWVKIMAGENVPROC

    @(link_name = "__glewGetVkProcAddrNV")
    __glewGetVkProcAddrNV: PFNGLGETVKPROCADDRNVPROC

    @(link_name = "__glewSignalVkFenceNV")
    __glewSignalVkFenceNV: PFNGLSIGNALVKFENCENVPROC

    @(link_name = "__glewSignalVkSemaphoreNV")
    __glewSignalVkSemaphoreNV: PFNGLSIGNALVKSEMAPHORENVPROC

    @(link_name = "__glewWaitVkSemaphoreNV")
    __glewWaitVkSemaphoreNV: PFNGLWAITVKSEMAPHORENVPROC

    @(link_name = "__glewEvalMapsNV")
    __glewEvalMapsNV: PFNGLEVALMAPSNVPROC

    @(link_name = "__glewGetMapAttribParameterfvNV")
    __glewGetMapAttribParameterfvNV: PFNGLGETMAPATTRIBPARAMETERFVNVPROC

    @(link_name = "__glewGetMapAttribParameterivNV")
    __glewGetMapAttribParameterivNV: PFNGLGETMAPATTRIBPARAMETERIVNVPROC

    @(link_name = "__glewGetMapControlPointsNV")
    __glewGetMapControlPointsNV: PFNGLGETMAPCONTROLPOINTSNVPROC

    @(link_name = "__glewGetMapParameterfvNV")
    __glewGetMapParameterfvNV: PFNGLGETMAPPARAMETERFVNVPROC

    @(link_name = "__glewGetMapParameterivNV")
    __glewGetMapParameterivNV: PFNGLGETMAPPARAMETERIVNVPROC

    @(link_name = "__glewMapControlPointsNV")
    __glewMapControlPointsNV: PFNGLMAPCONTROLPOINTSNVPROC

    @(link_name = "__glewMapParameterfvNV")
    __glewMapParameterfvNV: PFNGLMAPPARAMETERFVNVPROC

    @(link_name = "__glewMapParameterivNV")
    __glewMapParameterivNV: PFNGLMAPPARAMETERIVNVPROC

    @(link_name = "__glewGetMultisamplefvNV")
    __glewGetMultisamplefvNV: PFNGLGETMULTISAMPLEFVNVPROC

    @(link_name = "__glewSampleMaskIndexedNV")
    __glewSampleMaskIndexedNV: PFNGLSAMPLEMASKINDEXEDNVPROC

    @(link_name = "__glewTexRenderbufferNV")
    __glewTexRenderbufferNV: PFNGLTEXRENDERBUFFERNVPROC

    @(link_name = "__glewDeleteFencesNV")
    __glewDeleteFencesNV: PFNGLDELETEFENCESNVPROC

    @(link_name = "__glewFinishFenceNV")
    __glewFinishFenceNV: PFNGLFINISHFENCENVPROC

    @(link_name = "__glewGenFencesNV")
    __glewGenFencesNV: PFNGLGENFENCESNVPROC

    @(link_name = "__glewGetFenceivNV")
    __glewGetFenceivNV: PFNGLGETFENCEIVNVPROC

    @(link_name = "__glewIsFenceNV")
    __glewIsFenceNV: PFNGLISFENCENVPROC

    @(link_name = "__glewSetFenceNV")
    __glewSetFenceNV: PFNGLSETFENCENVPROC

    @(link_name = "__glewTestFenceNV")
    __glewTestFenceNV: PFNGLTESTFENCENVPROC

    @(link_name = "__glewFragmentCoverageColorNV")
    __glewFragmentCoverageColorNV: PFNGLFRAGMENTCOVERAGECOLORNVPROC

    @(link_name = "__glewGetProgramNamedParameterdvNV")
    __glewGetProgramNamedParameterdvNV: PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC

    @(link_name = "__glewGetProgramNamedParameterfvNV")
    __glewGetProgramNamedParameterfvNV: PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC

    @(link_name = "__glewProgramNamedParameter4dNV")
    __glewProgramNamedParameter4dNV: PFNGLPROGRAMNAMEDPARAMETER4DNVPROC

    @(link_name = "__glewProgramNamedParameter4dvNV")
    __glewProgramNamedParameter4dvNV: PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC

    @(link_name = "__glewProgramNamedParameter4fNV")
    __glewProgramNamedParameter4fNV: PFNGLPROGRAMNAMEDPARAMETER4FNVPROC

    @(link_name = "__glewProgramNamedParameter4fvNV")
    __glewProgramNamedParameter4fvNV: PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC

    @(link_name = "__glewBlitFramebufferNV")
    __glewBlitFramebufferNV: PFNGLBLITFRAMEBUFFERNVPROC

    @(link_name = "__glewRenderbufferStorageMultisampleNV")
    __glewRenderbufferStorageMultisampleNV: PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC

    @(link_name = "__glewRenderbufferStorageMultisampleCoverageNV")
    __glewRenderbufferStorageMultisampleCoverageNV: PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC

    @(link_name = "__glewProgramVertexLimitNV")
    __glewProgramVertexLimitNV: PFNGLPROGRAMVERTEXLIMITNVPROC

    @(link_name = "__glewMulticastBarrierNV")
    __glewMulticastBarrierNV: PFNGLMULTICASTBARRIERNVPROC

    @(link_name = "__glewMulticastBlitFramebufferNV")
    __glewMulticastBlitFramebufferNV: PFNGLMULTICASTBLITFRAMEBUFFERNVPROC

    @(link_name = "__glewMulticastBufferSubDataNV")
    __glewMulticastBufferSubDataNV: PFNGLMULTICASTBUFFERSUBDATANVPROC

    @(link_name = "__glewMulticastCopyBufferSubDataNV")
    __glewMulticastCopyBufferSubDataNV: PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC

    @(link_name = "__glewMulticastCopyImageSubDataNV")
    __glewMulticastCopyImageSubDataNV: PFNGLMULTICASTCOPYIMAGESUBDATANVPROC

    @(link_name = "__glewMulticastFramebufferSampleLocationsfvNV")
    __glewMulticastFramebufferSampleLocationsfvNV: PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC

    @(link_name = "__glewMulticastGetQueryObjecti64vNV")
    __glewMulticastGetQueryObjecti64vNV: PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC

    @(link_name = "__glewMulticastGetQueryObjectivNV")
    __glewMulticastGetQueryObjectivNV: PFNGLMULTICASTGETQUERYOBJECTIVNVPROC

    @(link_name = "__glewMulticastGetQueryObjectui64vNV")
    __glewMulticastGetQueryObjectui64vNV: PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC

    @(link_name = "__glewMulticastGetQueryObjectuivNV")
    __glewMulticastGetQueryObjectuivNV: PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC

    @(link_name = "__glewMulticastWaitSyncNV")
    __glewMulticastWaitSyncNV: PFNGLMULTICASTWAITSYNCNVPROC

    @(link_name = "__glewRenderGpuMaskNV")
    __glewRenderGpuMaskNV: PFNGLRENDERGPUMASKNVPROC

    @(link_name = "__glewProgramEnvParameterI4iNV")
    __glewProgramEnvParameterI4iNV: PFNGLPROGRAMENVPARAMETERI4INVPROC

    @(link_name = "__glewProgramEnvParameterI4ivNV")
    __glewProgramEnvParameterI4ivNV: PFNGLPROGRAMENVPARAMETERI4IVNVPROC

    @(link_name = "__glewProgramEnvParameterI4uiNV")
    __glewProgramEnvParameterI4uiNV: PFNGLPROGRAMENVPARAMETERI4UINVPROC

    @(link_name = "__glewProgramEnvParameterI4uivNV")
    __glewProgramEnvParameterI4uivNV: PFNGLPROGRAMENVPARAMETERI4UIVNVPROC

    @(link_name = "__glewProgramEnvParametersI4ivNV")
    __glewProgramEnvParametersI4ivNV: PFNGLPROGRAMENVPARAMETERSI4IVNVPROC

    @(link_name = "__glewProgramEnvParametersI4uivNV")
    __glewProgramEnvParametersI4uivNV: PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC

    @(link_name = "__glewProgramLocalParameterI4iNV")
    __glewProgramLocalParameterI4iNV: PFNGLPROGRAMLOCALPARAMETERI4INVPROC

    @(link_name = "__glewProgramLocalParameterI4ivNV")
    __glewProgramLocalParameterI4ivNV: PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC

    @(link_name = "__glewProgramLocalParameterI4uiNV")
    __glewProgramLocalParameterI4uiNV: PFNGLPROGRAMLOCALPARAMETERI4UINVPROC

    @(link_name = "__glewProgramLocalParameterI4uivNV")
    __glewProgramLocalParameterI4uivNV: PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC

    @(link_name = "__glewProgramLocalParametersI4ivNV")
    __glewProgramLocalParametersI4ivNV: PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC

    @(link_name = "__glewProgramLocalParametersI4uivNV")
    __glewProgramLocalParametersI4uivNV: PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC

    @(link_name = "__glewGetUniformi64vNV")
    __glewGetUniformi64vNV: PFNGLGETUNIFORMI64VNVPROC

    @(link_name = "__glewGetUniformui64vNV")
    __glewGetUniformui64vNV: PFNGLGETUNIFORMUI64VNVPROC

    @(link_name = "__glewProgramUniform1i64NV")
    __glewProgramUniform1i64NV: PFNGLPROGRAMUNIFORM1I64NVPROC

    @(link_name = "__glewProgramUniform1i64vNV")
    __glewProgramUniform1i64vNV: PFNGLPROGRAMUNIFORM1I64VNVPROC

    @(link_name = "__glewProgramUniform1ui64NV")
    __glewProgramUniform1ui64NV: PFNGLPROGRAMUNIFORM1UI64NVPROC

    @(link_name = "__glewProgramUniform1ui64vNV")
    __glewProgramUniform1ui64vNV: PFNGLPROGRAMUNIFORM1UI64VNVPROC

    @(link_name = "__glewProgramUniform2i64NV")
    __glewProgramUniform2i64NV: PFNGLPROGRAMUNIFORM2I64NVPROC

    @(link_name = "__glewProgramUniform2i64vNV")
    __glewProgramUniform2i64vNV: PFNGLPROGRAMUNIFORM2I64VNVPROC

    @(link_name = "__glewProgramUniform2ui64NV")
    __glewProgramUniform2ui64NV: PFNGLPROGRAMUNIFORM2UI64NVPROC

    @(link_name = "__glewProgramUniform2ui64vNV")
    __glewProgramUniform2ui64vNV: PFNGLPROGRAMUNIFORM2UI64VNVPROC

    @(link_name = "__glewProgramUniform3i64NV")
    __glewProgramUniform3i64NV: PFNGLPROGRAMUNIFORM3I64NVPROC

    @(link_name = "__glewProgramUniform3i64vNV")
    __glewProgramUniform3i64vNV: PFNGLPROGRAMUNIFORM3I64VNVPROC

    @(link_name = "__glewProgramUniform3ui64NV")
    __glewProgramUniform3ui64NV: PFNGLPROGRAMUNIFORM3UI64NVPROC

    @(link_name = "__glewProgramUniform3ui64vNV")
    __glewProgramUniform3ui64vNV: PFNGLPROGRAMUNIFORM3UI64VNVPROC

    @(link_name = "__glewProgramUniform4i64NV")
    __glewProgramUniform4i64NV: PFNGLPROGRAMUNIFORM4I64NVPROC

    @(link_name = "__glewProgramUniform4i64vNV")
    __glewProgramUniform4i64vNV: PFNGLPROGRAMUNIFORM4I64VNVPROC

    @(link_name = "__glewProgramUniform4ui64NV")
    __glewProgramUniform4ui64NV: PFNGLPROGRAMUNIFORM4UI64NVPROC

    @(link_name = "__glewProgramUniform4ui64vNV")
    __glewProgramUniform4ui64vNV: PFNGLPROGRAMUNIFORM4UI64VNVPROC

    @(link_name = "__glewUniform1i64NV")
    __glewUniform1i64NV: PFNGLUNIFORM1I64NVPROC

    @(link_name = "__glewUniform1i64vNV")
    __glewUniform1i64vNV: PFNGLUNIFORM1I64VNVPROC

    @(link_name = "__glewUniform1ui64NV")
    __glewUniform1ui64NV: PFNGLUNIFORM1UI64NVPROC

    @(link_name = "__glewUniform1ui64vNV")
    __glewUniform1ui64vNV: PFNGLUNIFORM1UI64VNVPROC

    @(link_name = "__glewUniform2i64NV")
    __glewUniform2i64NV: PFNGLUNIFORM2I64NVPROC

    @(link_name = "__glewUniform2i64vNV")
    __glewUniform2i64vNV: PFNGLUNIFORM2I64VNVPROC

    @(link_name = "__glewUniform2ui64NV")
    __glewUniform2ui64NV: PFNGLUNIFORM2UI64NVPROC

    @(link_name = "__glewUniform2ui64vNV")
    __glewUniform2ui64vNV: PFNGLUNIFORM2UI64VNVPROC

    @(link_name = "__glewUniform3i64NV")
    __glewUniform3i64NV: PFNGLUNIFORM3I64NVPROC

    @(link_name = "__glewUniform3i64vNV")
    __glewUniform3i64vNV: PFNGLUNIFORM3I64VNVPROC

    @(link_name = "__glewUniform3ui64NV")
    __glewUniform3ui64NV: PFNGLUNIFORM3UI64NVPROC

    @(link_name = "__glewUniform3ui64vNV")
    __glewUniform3ui64vNV: PFNGLUNIFORM3UI64VNVPROC

    @(link_name = "__glewUniform4i64NV")
    __glewUniform4i64NV: PFNGLUNIFORM4I64NVPROC

    @(link_name = "__glewUniform4i64vNV")
    __glewUniform4i64vNV: PFNGLUNIFORM4I64VNVPROC

    @(link_name = "__glewUniform4ui64NV")
    __glewUniform4ui64NV: PFNGLUNIFORM4UI64NVPROC

    @(link_name = "__glewUniform4ui64vNV")
    __glewUniform4ui64vNV: PFNGLUNIFORM4UI64VNVPROC

    @(link_name = "__glewColor3hNV")
    __glewColor3hNV: PFNGLCOLOR3HNVPROC

    @(link_name = "__glewColor3hvNV")
    __glewColor3hvNV: PFNGLCOLOR3HVNVPROC

    @(link_name = "__glewColor4hNV")
    __glewColor4hNV: PFNGLCOLOR4HNVPROC

    @(link_name = "__glewColor4hvNV")
    __glewColor4hvNV: PFNGLCOLOR4HVNVPROC

    @(link_name = "__glewFogCoordhNV")
    __glewFogCoordhNV: PFNGLFOGCOORDHNVPROC

    @(link_name = "__glewFogCoordhvNV")
    __glewFogCoordhvNV: PFNGLFOGCOORDHVNVPROC

    @(link_name = "__glewMultiTexCoord1hNV")
    __glewMultiTexCoord1hNV: PFNGLMULTITEXCOORD1HNVPROC

    @(link_name = "__glewMultiTexCoord1hvNV")
    __glewMultiTexCoord1hvNV: PFNGLMULTITEXCOORD1HVNVPROC

    @(link_name = "__glewMultiTexCoord2hNV")
    __glewMultiTexCoord2hNV: PFNGLMULTITEXCOORD2HNVPROC

    @(link_name = "__glewMultiTexCoord2hvNV")
    __glewMultiTexCoord2hvNV: PFNGLMULTITEXCOORD2HVNVPROC

    @(link_name = "__glewMultiTexCoord3hNV")
    __glewMultiTexCoord3hNV: PFNGLMULTITEXCOORD3HNVPROC

    @(link_name = "__glewMultiTexCoord3hvNV")
    __glewMultiTexCoord3hvNV: PFNGLMULTITEXCOORD3HVNVPROC

    @(link_name = "__glewMultiTexCoord4hNV")
    __glewMultiTexCoord4hNV: PFNGLMULTITEXCOORD4HNVPROC

    @(link_name = "__glewMultiTexCoord4hvNV")
    __glewMultiTexCoord4hvNV: PFNGLMULTITEXCOORD4HVNVPROC

    @(link_name = "__glewNormal3hNV")
    __glewNormal3hNV: PFNGLNORMAL3HNVPROC

    @(link_name = "__glewNormal3hvNV")
    __glewNormal3hvNV: PFNGLNORMAL3HVNVPROC

    @(link_name = "__glewSecondaryColor3hNV")
    __glewSecondaryColor3hNV: PFNGLSECONDARYCOLOR3HNVPROC

    @(link_name = "__glewSecondaryColor3hvNV")
    __glewSecondaryColor3hvNV: PFNGLSECONDARYCOLOR3HVNVPROC

    @(link_name = "__glewTexCoord1hNV")
    __glewTexCoord1hNV: PFNGLTEXCOORD1HNVPROC

    @(link_name = "__glewTexCoord1hvNV")
    __glewTexCoord1hvNV: PFNGLTEXCOORD1HVNVPROC

    @(link_name = "__glewTexCoord2hNV")
    __glewTexCoord2hNV: PFNGLTEXCOORD2HNVPROC

    @(link_name = "__glewTexCoord2hvNV")
    __glewTexCoord2hvNV: PFNGLTEXCOORD2HVNVPROC

    @(link_name = "__glewTexCoord3hNV")
    __glewTexCoord3hNV: PFNGLTEXCOORD3HNVPROC

    @(link_name = "__glewTexCoord3hvNV")
    __glewTexCoord3hvNV: PFNGLTEXCOORD3HVNVPROC

    @(link_name = "__glewTexCoord4hNV")
    __glewTexCoord4hNV: PFNGLTEXCOORD4HNVPROC

    @(link_name = "__glewTexCoord4hvNV")
    __glewTexCoord4hvNV: PFNGLTEXCOORD4HVNVPROC

    @(link_name = "__glewVertex2hNV")
    __glewVertex2hNV: PFNGLVERTEX2HNVPROC

    @(link_name = "__glewVertex2hvNV")
    __glewVertex2hvNV: PFNGLVERTEX2HVNVPROC

    @(link_name = "__glewVertex3hNV")
    __glewVertex3hNV: PFNGLVERTEX3HNVPROC

    @(link_name = "__glewVertex3hvNV")
    __glewVertex3hvNV: PFNGLVERTEX3HVNVPROC

    @(link_name = "__glewVertex4hNV")
    __glewVertex4hNV: PFNGLVERTEX4HNVPROC

    @(link_name = "__glewVertex4hvNV")
    __glewVertex4hvNV: PFNGLVERTEX4HVNVPROC

    @(link_name = "__glewVertexAttrib1hNV")
    __glewVertexAttrib1hNV: PFNGLVERTEXATTRIB1HNVPROC

    @(link_name = "__glewVertexAttrib1hvNV")
    __glewVertexAttrib1hvNV: PFNGLVERTEXATTRIB1HVNVPROC

    @(link_name = "__glewVertexAttrib2hNV")
    __glewVertexAttrib2hNV: PFNGLVERTEXATTRIB2HNVPROC

    @(link_name = "__glewVertexAttrib2hvNV")
    __glewVertexAttrib2hvNV: PFNGLVERTEXATTRIB2HVNVPROC

    @(link_name = "__glewVertexAttrib3hNV")
    __glewVertexAttrib3hNV: PFNGLVERTEXATTRIB3HNVPROC

    @(link_name = "__glewVertexAttrib3hvNV")
    __glewVertexAttrib3hvNV: PFNGLVERTEXATTRIB3HVNVPROC

    @(link_name = "__glewVertexAttrib4hNV")
    __glewVertexAttrib4hNV: PFNGLVERTEXATTRIB4HNVPROC

    @(link_name = "__glewVertexAttrib4hvNV")
    __glewVertexAttrib4hvNV: PFNGLVERTEXATTRIB4HVNVPROC

    @(link_name = "__glewVertexAttribs1hvNV")
    __glewVertexAttribs1hvNV: PFNGLVERTEXATTRIBS1HVNVPROC

    @(link_name = "__glewVertexAttribs2hvNV")
    __glewVertexAttribs2hvNV: PFNGLVERTEXATTRIBS2HVNVPROC

    @(link_name = "__glewVertexAttribs3hvNV")
    __glewVertexAttribs3hvNV: PFNGLVERTEXATTRIBS3HVNVPROC

    @(link_name = "__glewVertexAttribs4hvNV")
    __glewVertexAttribs4hvNV: PFNGLVERTEXATTRIBS4HVNVPROC

    @(link_name = "__glewVertexWeighthNV")
    __glewVertexWeighthNV: PFNGLVERTEXWEIGHTHNVPROC

    @(link_name = "__glewVertexWeighthvNV")
    __glewVertexWeighthvNV: PFNGLVERTEXWEIGHTHVNVPROC

    @(link_name = "__glewVertexAttribDivisorNV")
    __glewVertexAttribDivisorNV: PFNGLVERTEXATTRIBDIVISORNVPROC

    @(link_name = "__glewGetInternalformatSampleivNV")
    __glewGetInternalformatSampleivNV: PFNGLGETINTERNALFORMATSAMPLEIVNVPROC

    @(link_name = "__glewBufferAttachMemoryNV")
    __glewBufferAttachMemoryNV: PFNGLBUFFERATTACHMEMORYNVPROC

    @(link_name = "__glewGetMemoryObjectDetachedResourcesuivNV")
    __glewGetMemoryObjectDetachedResourcesuivNV: PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC

    @(link_name = "__glewNamedBufferAttachMemoryNV")
    __glewNamedBufferAttachMemoryNV: PFNGLNAMEDBUFFERATTACHMEMORYNVPROC

    @(link_name = "__glewResetMemoryObjectParameterNV")
    __glewResetMemoryObjectParameterNV: PFNGLRESETMEMORYOBJECTPARAMETERNVPROC

    @(link_name = "__glewTexAttachMemoryNV")
    __glewTexAttachMemoryNV: PFNGLTEXATTACHMEMORYNVPROC

    @(link_name = "__glewTextureAttachMemoryNV")
    __glewTextureAttachMemoryNV: PFNGLTEXTUREATTACHMEMORYNVPROC

    @(link_name = "__glewBufferPageCommitmentMemNV")
    __glewBufferPageCommitmentMemNV: PFNGLBUFFERPAGECOMMITMENTMEMNVPROC

    @(link_name = "__glewNamedBufferPageCommitmentMemNV")
    __glewNamedBufferPageCommitmentMemNV: PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC

    @(link_name = "__glewTexPageCommitmentMemNV")
    __glewTexPageCommitmentMemNV: PFNGLTEXPAGECOMMITMENTMEMNVPROC

    @(link_name = "__glewTexturePageCommitmentMemNV")
    __glewTexturePageCommitmentMemNV: PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC

    @(link_name = "__glewDrawMeshTasksIndirectNV")
    __glewDrawMeshTasksIndirectNV: PFNGLDRAWMESHTASKSINDIRECTNVPROC

    @(link_name = "__glewDrawMeshTasksNV")
    __glewDrawMeshTasksNV: PFNGLDRAWMESHTASKSNVPROC

    @(link_name = "__glewMultiDrawMeshTasksIndirectCountNV")
    __glewMultiDrawMeshTasksIndirectCountNV: PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC

    @(link_name = "__glewMultiDrawMeshTasksIndirectNV")
    __glewMultiDrawMeshTasksIndirectNV: PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC

    @(link_name = "__glewUniformMatrix2x3fvNV")
    __glewUniformMatrix2x3fvNV: PFNGLUNIFORMMATRIX2X3FVNVPROC

    @(link_name = "__glewUniformMatrix2x4fvNV")
    __glewUniformMatrix2x4fvNV: PFNGLUNIFORMMATRIX2X4FVNVPROC

    @(link_name = "__glewUniformMatrix3x2fvNV")
    __glewUniformMatrix3x2fvNV: PFNGLUNIFORMMATRIX3X2FVNVPROC

    @(link_name = "__glewUniformMatrix3x4fvNV")
    __glewUniformMatrix3x4fvNV: PFNGLUNIFORMMATRIX3X4FVNVPROC

    @(link_name = "__glewUniformMatrix4x2fvNV")
    __glewUniformMatrix4x2fvNV: PFNGLUNIFORMMATRIX4X2FVNVPROC

    @(link_name = "__glewUniformMatrix4x3fvNV")
    __glewUniformMatrix4x3fvNV: PFNGLUNIFORMMATRIX4X3FVNVPROC

    @(link_name = "__glewBeginOcclusionQueryNV")
    __glewBeginOcclusionQueryNV: PFNGLBEGINOCCLUSIONQUERYNVPROC

    @(link_name = "__glewDeleteOcclusionQueriesNV")
    __glewDeleteOcclusionQueriesNV: PFNGLDELETEOCCLUSIONQUERIESNVPROC

    @(link_name = "__glewEndOcclusionQueryNV")
    __glewEndOcclusionQueryNV: PFNGLENDOCCLUSIONQUERYNVPROC

    @(link_name = "__glewGenOcclusionQueriesNV")
    __glewGenOcclusionQueriesNV: PFNGLGENOCCLUSIONQUERIESNVPROC

    @(link_name = "__glewGetOcclusionQueryivNV")
    __glewGetOcclusionQueryivNV: PFNGLGETOCCLUSIONQUERYIVNVPROC

    @(link_name = "__glewGetOcclusionQueryuivNV")
    __glewGetOcclusionQueryuivNV: PFNGLGETOCCLUSIONQUERYUIVNVPROC

    @(link_name = "__glewIsOcclusionQueryNV")
    __glewIsOcclusionQueryNV: PFNGLISOCCLUSIONQUERYNVPROC

    @(link_name = "__glewProgramBufferParametersIivNV")
    __glewProgramBufferParametersIivNV: PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC

    @(link_name = "__glewProgramBufferParametersIuivNV")
    __glewProgramBufferParametersIuivNV: PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC

    @(link_name = "__glewProgramBufferParametersfvNV")
    __glewProgramBufferParametersfvNV: PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC

    @(link_name = "__glewCopyPathNV")
    __glewCopyPathNV: PFNGLCOPYPATHNVPROC

    @(link_name = "__glewCoverFillPathInstancedNV")
    __glewCoverFillPathInstancedNV: PFNGLCOVERFILLPATHINSTANCEDNVPROC

    @(link_name = "__glewCoverFillPathNV")
    __glewCoverFillPathNV: PFNGLCOVERFILLPATHNVPROC

    @(link_name = "__glewCoverStrokePathInstancedNV")
    __glewCoverStrokePathInstancedNV: PFNGLCOVERSTROKEPATHINSTANCEDNVPROC

    @(link_name = "__glewCoverStrokePathNV")
    __glewCoverStrokePathNV: PFNGLCOVERSTROKEPATHNVPROC

    @(link_name = "__glewDeletePathsNV")
    __glewDeletePathsNV: PFNGLDELETEPATHSNVPROC

    @(link_name = "__glewGenPathsNV")
    __glewGenPathsNV: PFNGLGENPATHSNVPROC

    @(link_name = "__glewGetPathColorGenfvNV")
    __glewGetPathColorGenfvNV: PFNGLGETPATHCOLORGENFVNVPROC

    @(link_name = "__glewGetPathColorGenivNV")
    __glewGetPathColorGenivNV: PFNGLGETPATHCOLORGENIVNVPROC

    @(link_name = "__glewGetPathCommandsNV")
    __glewGetPathCommandsNV: PFNGLGETPATHCOMMANDSNVPROC

    @(link_name = "__glewGetPathCoordsNV")
    __glewGetPathCoordsNV: PFNGLGETPATHCOORDSNVPROC

    @(link_name = "__glewGetPathDashArrayNV")
    __glewGetPathDashArrayNV: PFNGLGETPATHDASHARRAYNVPROC

    @(link_name = "__glewGetPathLengthNV")
    __glewGetPathLengthNV: PFNGLGETPATHLENGTHNVPROC

    @(link_name = "__glewGetPathMetricRangeNV")
    __glewGetPathMetricRangeNV: PFNGLGETPATHMETRICRANGENVPROC

    @(link_name = "__glewGetPathMetricsNV")
    __glewGetPathMetricsNV: PFNGLGETPATHMETRICSNVPROC

    @(link_name = "__glewGetPathParameterfvNV")
    __glewGetPathParameterfvNV: PFNGLGETPATHPARAMETERFVNVPROC

    @(link_name = "__glewGetPathParameterivNV")
    __glewGetPathParameterivNV: PFNGLGETPATHPARAMETERIVNVPROC

    @(link_name = "__glewGetPathSpacingNV")
    __glewGetPathSpacingNV: PFNGLGETPATHSPACINGNVPROC

    @(link_name = "__glewGetPathTexGenfvNV")
    __glewGetPathTexGenfvNV: PFNGLGETPATHTEXGENFVNVPROC

    @(link_name = "__glewGetPathTexGenivNV")
    __glewGetPathTexGenivNV: PFNGLGETPATHTEXGENIVNVPROC

    @(link_name = "__glewGetProgramResourcefvNV")
    __glewGetProgramResourcefvNV: PFNGLGETPROGRAMRESOURCEFVNVPROC

    @(link_name = "__glewInterpolatePathsNV")
    __glewInterpolatePathsNV: PFNGLINTERPOLATEPATHSNVPROC

    @(link_name = "__glewIsPathNV")
    __glewIsPathNV: PFNGLISPATHNVPROC

    @(link_name = "__glewIsPointInFillPathNV")
    __glewIsPointInFillPathNV: PFNGLISPOINTINFILLPATHNVPROC

    @(link_name = "__glewIsPointInStrokePathNV")
    __glewIsPointInStrokePathNV: PFNGLISPOINTINSTROKEPATHNVPROC

    @(link_name = "__glewMatrixLoad3x2fNV")
    __glewMatrixLoad3x2fNV: PFNGLMATRIXLOAD3X2FNVPROC

    @(link_name = "__glewMatrixLoad3x3fNV")
    __glewMatrixLoad3x3fNV: PFNGLMATRIXLOAD3X3FNVPROC

    @(link_name = "__glewMatrixLoadTranspose3x3fNV")
    __glewMatrixLoadTranspose3x3fNV: PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC

    @(link_name = "__glewMatrixMult3x2fNV")
    __glewMatrixMult3x2fNV: PFNGLMATRIXMULT3X2FNVPROC

    @(link_name = "__glewMatrixMult3x3fNV")
    __glewMatrixMult3x3fNV: PFNGLMATRIXMULT3X3FNVPROC

    @(link_name = "__glewMatrixMultTranspose3x3fNV")
    __glewMatrixMultTranspose3x3fNV: PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC

    @(link_name = "__glewPathColorGenNV")
    __glewPathColorGenNV: PFNGLPATHCOLORGENNVPROC

    @(link_name = "__glewPathCommandsNV")
    __glewPathCommandsNV: PFNGLPATHCOMMANDSNVPROC

    @(link_name = "__glewPathCoordsNV")
    __glewPathCoordsNV: PFNGLPATHCOORDSNVPROC

    @(link_name = "__glewPathCoverDepthFuncNV")
    __glewPathCoverDepthFuncNV: PFNGLPATHCOVERDEPTHFUNCNVPROC

    @(link_name = "__glewPathDashArrayNV")
    __glewPathDashArrayNV: PFNGLPATHDASHARRAYNVPROC

    @(link_name = "__glewPathFogGenNV")
    __glewPathFogGenNV: PFNGLPATHFOGGENNVPROC

    @(link_name = "__glewPathGlyphIndexArrayNV")
    __glewPathGlyphIndexArrayNV: PFNGLPATHGLYPHINDEXARRAYNVPROC

    @(link_name = "__glewPathGlyphIndexRangeNV")
    __glewPathGlyphIndexRangeNV: PFNGLPATHGLYPHINDEXRANGENVPROC

    @(link_name = "__glewPathGlyphRangeNV")
    __glewPathGlyphRangeNV: PFNGLPATHGLYPHRANGENVPROC

    @(link_name = "__glewPathGlyphsNV")
    __glewPathGlyphsNV: PFNGLPATHGLYPHSNVPROC

    @(link_name = "__glewPathMemoryGlyphIndexArrayNV")
    __glewPathMemoryGlyphIndexArrayNV: PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC

    @(link_name = "__glewPathParameterfNV")
    __glewPathParameterfNV: PFNGLPATHPARAMETERFNVPROC

    @(link_name = "__glewPathParameterfvNV")
    __glewPathParameterfvNV: PFNGLPATHPARAMETERFVNVPROC

    @(link_name = "__glewPathParameteriNV")
    __glewPathParameteriNV: PFNGLPATHPARAMETERINVPROC

    @(link_name = "__glewPathParameterivNV")
    __glewPathParameterivNV: PFNGLPATHPARAMETERIVNVPROC

    @(link_name = "__glewPathStencilDepthOffsetNV")
    __glewPathStencilDepthOffsetNV: PFNGLPATHSTENCILDEPTHOFFSETNVPROC

    @(link_name = "__glewPathStencilFuncNV")
    __glewPathStencilFuncNV: PFNGLPATHSTENCILFUNCNVPROC

    @(link_name = "__glewPathStringNV")
    __glewPathStringNV: PFNGLPATHSTRINGNVPROC

    @(link_name = "__glewPathSubCommandsNV")
    __glewPathSubCommandsNV: PFNGLPATHSUBCOMMANDSNVPROC

    @(link_name = "__glewPathSubCoordsNV")
    __glewPathSubCoordsNV: PFNGLPATHSUBCOORDSNVPROC

    @(link_name = "__glewPathTexGenNV")
    __glewPathTexGenNV: PFNGLPATHTEXGENNVPROC

    @(link_name = "__glewPointAlongPathNV")
    __glewPointAlongPathNV: PFNGLPOINTALONGPATHNVPROC

    @(link_name = "__glewProgramPathFragmentInputGenNV")
    __glewProgramPathFragmentInputGenNV: PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC

    @(link_name = "__glewStencilFillPathInstancedNV")
    __glewStencilFillPathInstancedNV: PFNGLSTENCILFILLPATHINSTANCEDNVPROC

    @(link_name = "__glewStencilFillPathNV")
    __glewStencilFillPathNV: PFNGLSTENCILFILLPATHNVPROC

    @(link_name = "__glewStencilStrokePathInstancedNV")
    __glewStencilStrokePathInstancedNV: PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC

    @(link_name = "__glewStencilStrokePathNV")
    __glewStencilStrokePathNV: PFNGLSTENCILSTROKEPATHNVPROC

    @(link_name = "__glewStencilThenCoverFillPathInstancedNV")
    __glewStencilThenCoverFillPathInstancedNV: PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC

    @(link_name = "__glewStencilThenCoverFillPathNV")
    __glewStencilThenCoverFillPathNV: PFNGLSTENCILTHENCOVERFILLPATHNVPROC

    @(link_name = "__glewStencilThenCoverStrokePathInstancedNV")
    __glewStencilThenCoverStrokePathInstancedNV: PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC

    @(link_name = "__glewStencilThenCoverStrokePathNV")
    __glewStencilThenCoverStrokePathNV: PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC

    @(link_name = "__glewTransformPathNV")
    __glewTransformPathNV: PFNGLTRANSFORMPATHNVPROC

    @(link_name = "__glewWeightPathsNV")
    __glewWeightPathsNV: PFNGLWEIGHTPATHSNVPROC

    @(link_name = "__glewFlushPixelDataRangeNV")
    __glewFlushPixelDataRangeNV: PFNGLFLUSHPIXELDATARANGENVPROC

    @(link_name = "__glewPixelDataRangeNV")
    __glewPixelDataRangeNV: PFNGLPIXELDATARANGENVPROC

    @(link_name = "__glewPointParameteriNV")
    __glewPointParameteriNV: PFNGLPOINTPARAMETERINVPROC

    @(link_name = "__glewPointParameterivNV")
    __glewPointParameterivNV: PFNGLPOINTPARAMETERIVNVPROC

    @(link_name = "__glewPolygonModeNV")
    __glewPolygonModeNV: PFNGLPOLYGONMODENVPROC

    @(link_name = "__glewGetVideoi64vNV")
    __glewGetVideoi64vNV: PFNGLGETVIDEOI64VNVPROC

    @(link_name = "__glewGetVideoivNV")
    __glewGetVideoivNV: PFNGLGETVIDEOIVNVPROC

    @(link_name = "__glewGetVideoui64vNV")
    __glewGetVideoui64vNV: PFNGLGETVIDEOUI64VNVPROC

    @(link_name = "__glewGetVideouivNV")
    __glewGetVideouivNV: PFNGLGETVIDEOUIVNVPROC

    @(link_name = "__glewPresentFrameDualFillNV")
    __glewPresentFrameDualFillNV: PFNGLPRESENTFRAMEDUALFILLNVPROC

    @(link_name = "__glewPresentFrameKeyedNV")
    __glewPresentFrameKeyedNV: PFNGLPRESENTFRAMEKEYEDNVPROC

    @(link_name = "__glewPrimitiveRestartIndexNV")
    __glewPrimitiveRestartIndexNV: PFNGLPRIMITIVERESTARTINDEXNVPROC

    @(link_name = "__glewPrimitiveRestartNV")
    __glewPrimitiveRestartNV: PFNGLPRIMITIVERESTARTNVPROC

    @(link_name = "__glewReadBufferNV")
    __glewReadBufferNV: PFNGLREADBUFFERNVPROC

    @(link_name = "__glewCombinerInputNV")
    __glewCombinerInputNV: PFNGLCOMBINERINPUTNVPROC

    @(link_name = "__glewCombinerOutputNV")
    __glewCombinerOutputNV: PFNGLCOMBINEROUTPUTNVPROC

    @(link_name = "__glewCombinerParameterfNV")
    __glewCombinerParameterfNV: PFNGLCOMBINERPARAMETERFNVPROC

    @(link_name = "__glewCombinerParameterfvNV")
    __glewCombinerParameterfvNV: PFNGLCOMBINERPARAMETERFVNVPROC

    @(link_name = "__glewCombinerParameteriNV")
    __glewCombinerParameteriNV: PFNGLCOMBINERPARAMETERINVPROC

    @(link_name = "__glewCombinerParameterivNV")
    __glewCombinerParameterivNV: PFNGLCOMBINERPARAMETERIVNVPROC

    @(link_name = "__glewFinalCombinerInputNV")
    __glewFinalCombinerInputNV: PFNGLFINALCOMBINERINPUTNVPROC

    @(link_name = "__glewGetCombinerInputParameterfvNV")
    __glewGetCombinerInputParameterfvNV: PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC

    @(link_name = "__glewGetCombinerInputParameterivNV")
    __glewGetCombinerInputParameterivNV: PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC

    @(link_name = "__glewGetCombinerOutputParameterfvNV")
    __glewGetCombinerOutputParameterfvNV: PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC

    @(link_name = "__glewGetCombinerOutputParameterivNV")
    __glewGetCombinerOutputParameterivNV: PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC

    @(link_name = "__glewGetFinalCombinerInputParameterfvNV")
    __glewGetFinalCombinerInputParameterfvNV: PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC

    @(link_name = "__glewGetFinalCombinerInputParameterivNV")
    __glewGetFinalCombinerInputParameterivNV: PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC

    @(link_name = "__glewCombinerStageParameterfvNV")
    __glewCombinerStageParameterfvNV: PFNGLCOMBINERSTAGEPARAMETERFVNVPROC

    @(link_name = "__glewGetCombinerStageParameterfvNV")
    __glewGetCombinerStageParameterfvNV: PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC

    @(link_name = "__glewFramebufferSampleLocationsfvNV")
    __glewFramebufferSampleLocationsfvNV: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC

    @(link_name = "__glewNamedFramebufferSampleLocationsfvNV")
    __glewNamedFramebufferSampleLocationsfvNV: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC

    @(link_name = "__glewResolveDepthValuesNV")
    __glewResolveDepthValuesNV: PFNGLRESOLVEDEPTHVALUESNVPROC

    @(link_name = "__glewScissorExclusiveArrayvNV")
    __glewScissorExclusiveArrayvNV: PFNGLSCISSOREXCLUSIVEARRAYVNVPROC

    @(link_name = "__glewScissorExclusiveNV")
    __glewScissorExclusiveNV: PFNGLSCISSOREXCLUSIVENVPROC

    @(link_name = "__glewGetBufferParameterui64vNV")
    __glewGetBufferParameterui64vNV: PFNGLGETBUFFERPARAMETERUI64VNVPROC

    @(link_name = "__glewGetIntegerui64vNV")
    __glewGetIntegerui64vNV: PFNGLGETINTEGERUI64VNVPROC

    @(link_name = "__glewGetNamedBufferParameterui64vNV")
    __glewGetNamedBufferParameterui64vNV: PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC

    @(link_name = "__glewIsBufferResidentNV")
    __glewIsBufferResidentNV: PFNGLISBUFFERRESIDENTNVPROC

    @(link_name = "__glewIsNamedBufferResidentNV")
    __glewIsNamedBufferResidentNV: PFNGLISNAMEDBUFFERRESIDENTNVPROC

    @(link_name = "__glewMakeBufferNonResidentNV")
    __glewMakeBufferNonResidentNV: PFNGLMAKEBUFFERNONRESIDENTNVPROC

    @(link_name = "__glewMakeBufferResidentNV")
    __glewMakeBufferResidentNV: PFNGLMAKEBUFFERRESIDENTNVPROC

    @(link_name = "__glewMakeNamedBufferNonResidentNV")
    __glewMakeNamedBufferNonResidentNV: PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC

    @(link_name = "__glewMakeNamedBufferResidentNV")
    __glewMakeNamedBufferResidentNV: PFNGLMAKENAMEDBUFFERRESIDENTNVPROC

    @(link_name = "__glewProgramUniformui64NV")
    __glewProgramUniformui64NV: PFNGLPROGRAMUNIFORMUI64NVPROC

    @(link_name = "__glewProgramUniformui64vNV")
    __glewProgramUniformui64vNV: PFNGLPROGRAMUNIFORMUI64VNVPROC

    @(link_name = "__glewUniformui64NV")
    __glewUniformui64NV: PFNGLUNIFORMUI64NVPROC

    @(link_name = "__glewUniformui64vNV")
    __glewUniformui64vNV: PFNGLUNIFORMUI64VNVPROC

    @(link_name = "__glewBindShadingRateImageNV")
    __glewBindShadingRateImageNV: PFNGLBINDSHADINGRATEIMAGENVPROC

    @(link_name = "__glewGetShadingRateImagePaletteNV")
    __glewGetShadingRateImagePaletteNV: PFNGLGETSHADINGRATEIMAGEPALETTENVPROC

    @(link_name = "__glewGetShadingRateSampleLocationivNV")
    __glewGetShadingRateSampleLocationivNV: PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC

    @(link_name = "__glewShadingRateImageBarrierNV")
    __glewShadingRateImageBarrierNV: PFNGLSHADINGRATEIMAGEBARRIERNVPROC

    @(link_name = "__glewShadingRateImagePaletteNV")
    __glewShadingRateImagePaletteNV: PFNGLSHADINGRATEIMAGEPALETTENVPROC

    @(link_name = "__glewShadingRateSampleOrderCustomNV")
    __glewShadingRateSampleOrderCustomNV: PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC

    @(link_name = "__glewShadingRateSampleOrderNV")
    __glewShadingRateSampleOrderNV: PFNGLSHADINGRATESAMPLEORDERNVPROC

    @(link_name = "__glewCompressedTexImage3DNV")
    __glewCompressedTexImage3DNV: PFNGLCOMPRESSEDTEXIMAGE3DNVPROC

    @(link_name = "__glewCompressedTexSubImage3DNV")
    __glewCompressedTexSubImage3DNV: PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC

    @(link_name = "__glewCopyTexSubImage3DNV")
    __glewCopyTexSubImage3DNV: PFNGLCOPYTEXSUBIMAGE3DNVPROC

    @(link_name = "__glewFramebufferTextureLayerNV")
    __glewFramebufferTextureLayerNV: PFNGLFRAMEBUFFERTEXTURELAYERNVPROC

    @(link_name = "__glewTexImage3DNV")
    __glewTexImage3DNV: PFNGLTEXIMAGE3DNVPROC

    @(link_name = "__glewTexSubImage3DNV")
    __glewTexSubImage3DNV: PFNGLTEXSUBIMAGE3DNVPROC

    @(link_name = "__glewTextureBarrierNV")
    __glewTextureBarrierNV: PFNGLTEXTUREBARRIERNVPROC

    @(link_name = "__glewTexImage2DMultisampleCoverageNV")
    __glewTexImage2DMultisampleCoverageNV: PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC

    @(link_name = "__glewTexImage3DMultisampleCoverageNV")
    __glewTexImage3DMultisampleCoverageNV: PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC

    @(link_name = "__glewTextureImage2DMultisampleCoverageNV")
    __glewTextureImage2DMultisampleCoverageNV: PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC

    @(link_name = "__glewTextureImage2DMultisampleNV")
    __glewTextureImage2DMultisampleNV: PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC

    @(link_name = "__glewTextureImage3DMultisampleCoverageNV")
    __glewTextureImage3DMultisampleCoverageNV: PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC

    @(link_name = "__glewTextureImage3DMultisampleNV")
    __glewTextureImage3DMultisampleNV: PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC

    @(link_name = "__glewCreateSemaphoresNV")
    __glewCreateSemaphoresNV: PFNGLCREATESEMAPHORESNVPROC

    @(link_name = "__glewGetSemaphoreParameterivNV")
    __glewGetSemaphoreParameterivNV: PFNGLGETSEMAPHOREPARAMETERIVNVPROC

    @(link_name = "__glewSemaphoreParameterivNV")
    __glewSemaphoreParameterivNV: PFNGLSEMAPHOREPARAMETERIVNVPROC

    @(link_name = "__glewActiveVaryingNV")
    __glewActiveVaryingNV: PFNGLACTIVEVARYINGNVPROC

    @(link_name = "__glewBeginTransformFeedbackNV")
    __glewBeginTransformFeedbackNV: PFNGLBEGINTRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewBindBufferBaseNV")
    __glewBindBufferBaseNV: PFNGLBINDBUFFERBASENVPROC

    @(link_name = "__glewBindBufferOffsetNV")
    __glewBindBufferOffsetNV: PFNGLBINDBUFFEROFFSETNVPROC

    @(link_name = "__glewBindBufferRangeNV")
    __glewBindBufferRangeNV: PFNGLBINDBUFFERRANGENVPROC

    @(link_name = "__glewEndTransformFeedbackNV")
    __glewEndTransformFeedbackNV: PFNGLENDTRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewGetActiveVaryingNV")
    __glewGetActiveVaryingNV: PFNGLGETACTIVEVARYINGNVPROC

    @(link_name = "__glewGetTransformFeedbackVaryingNV")
    __glewGetTransformFeedbackVaryingNV: PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC

    @(link_name = "__glewGetVaryingLocationNV")
    __glewGetVaryingLocationNV: PFNGLGETVARYINGLOCATIONNVPROC

    @(link_name = "__glewTransformFeedbackAttribsNV")
    __glewTransformFeedbackAttribsNV: PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC

    @(link_name = "__glewTransformFeedbackVaryingsNV")
    __glewTransformFeedbackVaryingsNV: PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC

    @(link_name = "__glewBindTransformFeedbackNV")
    __glewBindTransformFeedbackNV: PFNGLBINDTRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewDeleteTransformFeedbacksNV")
    __glewDeleteTransformFeedbacksNV: PFNGLDELETETRANSFORMFEEDBACKSNVPROC

    @(link_name = "__glewDrawTransformFeedbackNV")
    __glewDrawTransformFeedbackNV: PFNGLDRAWTRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewGenTransformFeedbacksNV")
    __glewGenTransformFeedbacksNV: PFNGLGENTRANSFORMFEEDBACKSNVPROC

    @(link_name = "__glewIsTransformFeedbackNV")
    __glewIsTransformFeedbackNV: PFNGLISTRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewPauseTransformFeedbackNV")
    __glewPauseTransformFeedbackNV: PFNGLPAUSETRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewResumeTransformFeedbackNV")
    __glewResumeTransformFeedbackNV: PFNGLRESUMETRANSFORMFEEDBACKNVPROC

    @(link_name = "__glewVDPAUFiniNV")
    __glewVDPAUFiniNV: PFNGLVDPAUFININVPROC

    @(link_name = "__glewVDPAUGetSurfaceivNV")
    __glewVDPAUGetSurfaceivNV: PFNGLVDPAUGETSURFACEIVNVPROC

    @(link_name = "__glewVDPAUInitNV")
    __glewVDPAUInitNV: PFNGLVDPAUINITNVPROC

    @(link_name = "__glewVDPAUIsSurfaceNV")
    __glewVDPAUIsSurfaceNV: PFNGLVDPAUISSURFACENVPROC

    @(link_name = "__glewVDPAUMapSurfacesNV")
    __glewVDPAUMapSurfacesNV: PFNGLVDPAUMAPSURFACESNVPROC

    @(link_name = "__glewVDPAURegisterOutputSurfaceNV")
    __glewVDPAURegisterOutputSurfaceNV: PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC

    @(link_name = "__glewVDPAURegisterVideoSurfaceNV")
    __glewVDPAURegisterVideoSurfaceNV: PFNGLVDPAUREGISTERVIDEOSURFACENVPROC

    @(link_name = "__glewVDPAUSurfaceAccessNV")
    __glewVDPAUSurfaceAccessNV: PFNGLVDPAUSURFACEACCESSNVPROC

    @(link_name = "__glewVDPAUUnmapSurfacesNV")
    __glewVDPAUUnmapSurfacesNV: PFNGLVDPAUUNMAPSURFACESNVPROC

    @(link_name = "__glewVDPAUUnregisterSurfaceNV")
    __glewVDPAUUnregisterSurfaceNV: PFNGLVDPAUUNREGISTERSURFACENVPROC

    @(link_name = "__glewVDPAURegisterVideoSurfaceWithPictureStructureNV")
    __glewVDPAURegisterVideoSurfaceWithPictureStructureNV: PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC

    @(link_name = "__glewFlushVertexArrayRangeNV")
    __glewFlushVertexArrayRangeNV: PFNGLFLUSHVERTEXARRAYRANGENVPROC

    @(link_name = "__glewVertexArrayRangeNV")
    __glewVertexArrayRangeNV: PFNGLVERTEXARRAYRANGENVPROC

    @(link_name = "__glewGetVertexAttribLi64vNV")
    __glewGetVertexAttribLi64vNV: PFNGLGETVERTEXATTRIBLI64VNVPROC

    @(link_name = "__glewGetVertexAttribLui64vNV")
    __glewGetVertexAttribLui64vNV: PFNGLGETVERTEXATTRIBLUI64VNVPROC

    @(link_name = "__glewVertexAttribL1i64NV")
    __glewVertexAttribL1i64NV: PFNGLVERTEXATTRIBL1I64NVPROC

    @(link_name = "__glewVertexAttribL1i64vNV")
    __glewVertexAttribL1i64vNV: PFNGLVERTEXATTRIBL1I64VNVPROC

    @(link_name = "__glewVertexAttribL1ui64NV")
    __glewVertexAttribL1ui64NV: PFNGLVERTEXATTRIBL1UI64NVPROC

    @(link_name = "__glewVertexAttribL1ui64vNV")
    __glewVertexAttribL1ui64vNV: PFNGLVERTEXATTRIBL1UI64VNVPROC

    @(link_name = "__glewVertexAttribL2i64NV")
    __glewVertexAttribL2i64NV: PFNGLVERTEXATTRIBL2I64NVPROC

    @(link_name = "__glewVertexAttribL2i64vNV")
    __glewVertexAttribL2i64vNV: PFNGLVERTEXATTRIBL2I64VNVPROC

    @(link_name = "__glewVertexAttribL2ui64NV")
    __glewVertexAttribL2ui64NV: PFNGLVERTEXATTRIBL2UI64NVPROC

    @(link_name = "__glewVertexAttribL2ui64vNV")
    __glewVertexAttribL2ui64vNV: PFNGLVERTEXATTRIBL2UI64VNVPROC

    @(link_name = "__glewVertexAttribL3i64NV")
    __glewVertexAttribL3i64NV: PFNGLVERTEXATTRIBL3I64NVPROC

    @(link_name = "__glewVertexAttribL3i64vNV")
    __glewVertexAttribL3i64vNV: PFNGLVERTEXATTRIBL3I64VNVPROC

    @(link_name = "__glewVertexAttribL3ui64NV")
    __glewVertexAttribL3ui64NV: PFNGLVERTEXATTRIBL3UI64NVPROC

    @(link_name = "__glewVertexAttribL3ui64vNV")
    __glewVertexAttribL3ui64vNV: PFNGLVERTEXATTRIBL3UI64VNVPROC

    @(link_name = "__glewVertexAttribL4i64NV")
    __glewVertexAttribL4i64NV: PFNGLVERTEXATTRIBL4I64NVPROC

    @(link_name = "__glewVertexAttribL4i64vNV")
    __glewVertexAttribL4i64vNV: PFNGLVERTEXATTRIBL4I64VNVPROC

    @(link_name = "__glewVertexAttribL4ui64NV")
    __glewVertexAttribL4ui64NV: PFNGLVERTEXATTRIBL4UI64NVPROC

    @(link_name = "__glewVertexAttribL4ui64vNV")
    __glewVertexAttribL4ui64vNV: PFNGLVERTEXATTRIBL4UI64VNVPROC

    @(link_name = "__glewVertexAttribLFormatNV")
    __glewVertexAttribLFormatNV: PFNGLVERTEXATTRIBLFORMATNVPROC

    @(link_name = "__glewBufferAddressRangeNV")
    __glewBufferAddressRangeNV: PFNGLBUFFERADDRESSRANGENVPROC

    @(link_name = "__glewColorFormatNV")
    __glewColorFormatNV: PFNGLCOLORFORMATNVPROC

    @(link_name = "__glewEdgeFlagFormatNV")
    __glewEdgeFlagFormatNV: PFNGLEDGEFLAGFORMATNVPROC

    @(link_name = "__glewFogCoordFormatNV")
    __glewFogCoordFormatNV: PFNGLFOGCOORDFORMATNVPROC

    @(link_name = "__glewGetIntegerui64i_vNV")
    __glewGetIntegerui64i_vNV: PFNGLGETINTEGERUI64I_VNVPROC

    @(link_name = "__glewIndexFormatNV")
    __glewIndexFormatNV: PFNGLINDEXFORMATNVPROC

    @(link_name = "__glewNormalFormatNV")
    __glewNormalFormatNV: PFNGLNORMALFORMATNVPROC

    @(link_name = "__glewSecondaryColorFormatNV")
    __glewSecondaryColorFormatNV: PFNGLSECONDARYCOLORFORMATNVPROC

    @(link_name = "__glewTexCoordFormatNV")
    __glewTexCoordFormatNV: PFNGLTEXCOORDFORMATNVPROC

    @(link_name = "__glewVertexAttribFormatNV")
    __glewVertexAttribFormatNV: PFNGLVERTEXATTRIBFORMATNVPROC

    @(link_name = "__glewVertexAttribIFormatNV")
    __glewVertexAttribIFormatNV: PFNGLVERTEXATTRIBIFORMATNVPROC

    @(link_name = "__glewVertexFormatNV")
    __glewVertexFormatNV: PFNGLVERTEXFORMATNVPROC

    @(link_name = "__glewAreProgramsResidentNV")
    __glewAreProgramsResidentNV: PFNGLAREPROGRAMSRESIDENTNVPROC

    @(link_name = "__glewBindProgramNV")
    __glewBindProgramNV: PFNGLBINDPROGRAMNVPROC

    @(link_name = "__glewDeleteProgramsNV")
    __glewDeleteProgramsNV: PFNGLDELETEPROGRAMSNVPROC

    @(link_name = "__glewExecuteProgramNV")
    __glewExecuteProgramNV: PFNGLEXECUTEPROGRAMNVPROC

    @(link_name = "__glewGenProgramsNV")
    __glewGenProgramsNV: PFNGLGENPROGRAMSNVPROC

    @(link_name = "__glewGetProgramParameterdvNV")
    __glewGetProgramParameterdvNV: PFNGLGETPROGRAMPARAMETERDVNVPROC

    @(link_name = "__glewGetProgramParameterfvNV")
    __glewGetProgramParameterfvNV: PFNGLGETPROGRAMPARAMETERFVNVPROC

    @(link_name = "__glewGetProgramStringNV")
    __glewGetProgramStringNV: PFNGLGETPROGRAMSTRINGNVPROC

    @(link_name = "__glewGetProgramivNV")
    __glewGetProgramivNV: PFNGLGETPROGRAMIVNVPROC

    @(link_name = "__glewGetTrackMatrixivNV")
    __glewGetTrackMatrixivNV: PFNGLGETTRACKMATRIXIVNVPROC

    @(link_name = "__glewGetVertexAttribPointervNV")
    __glewGetVertexAttribPointervNV: PFNGLGETVERTEXATTRIBPOINTERVNVPROC

    @(link_name = "__glewGetVertexAttribdvNV")
    __glewGetVertexAttribdvNV: PFNGLGETVERTEXATTRIBDVNVPROC

    @(link_name = "__glewGetVertexAttribfvNV")
    __glewGetVertexAttribfvNV: PFNGLGETVERTEXATTRIBFVNVPROC

    @(link_name = "__glewGetVertexAttribivNV")
    __glewGetVertexAttribivNV: PFNGLGETVERTEXATTRIBIVNVPROC

    @(link_name = "__glewIsProgramNV")
    __glewIsProgramNV: PFNGLISPROGRAMNVPROC

    @(link_name = "__glewLoadProgramNV")
    __glewLoadProgramNV: PFNGLLOADPROGRAMNVPROC

    @(link_name = "__glewProgramParameter4dNV")
    __glewProgramParameter4dNV: PFNGLPROGRAMPARAMETER4DNVPROC

    @(link_name = "__glewProgramParameter4dvNV")
    __glewProgramParameter4dvNV: PFNGLPROGRAMPARAMETER4DVNVPROC

    @(link_name = "__glewProgramParameter4fNV")
    __glewProgramParameter4fNV: PFNGLPROGRAMPARAMETER4FNVPROC

    @(link_name = "__glewProgramParameter4fvNV")
    __glewProgramParameter4fvNV: PFNGLPROGRAMPARAMETER4FVNVPROC

    @(link_name = "__glewProgramParameters4dvNV")
    __glewProgramParameters4dvNV: PFNGLPROGRAMPARAMETERS4DVNVPROC

    @(link_name = "__glewProgramParameters4fvNV")
    __glewProgramParameters4fvNV: PFNGLPROGRAMPARAMETERS4FVNVPROC

    @(link_name = "__glewRequestResidentProgramsNV")
    __glewRequestResidentProgramsNV: PFNGLREQUESTRESIDENTPROGRAMSNVPROC

    @(link_name = "__glewTrackMatrixNV")
    __glewTrackMatrixNV: PFNGLTRACKMATRIXNVPROC

    @(link_name = "__glewVertexAttrib1dNV")
    __glewVertexAttrib1dNV: PFNGLVERTEXATTRIB1DNVPROC

    @(link_name = "__glewVertexAttrib1dvNV")
    __glewVertexAttrib1dvNV: PFNGLVERTEXATTRIB1DVNVPROC

    @(link_name = "__glewVertexAttrib1fNV")
    __glewVertexAttrib1fNV: PFNGLVERTEXATTRIB1FNVPROC

    @(link_name = "__glewVertexAttrib1fvNV")
    __glewVertexAttrib1fvNV: PFNGLVERTEXATTRIB1FVNVPROC

    @(link_name = "__glewVertexAttrib1sNV")
    __glewVertexAttrib1sNV: PFNGLVERTEXATTRIB1SNVPROC

    @(link_name = "__glewVertexAttrib1svNV")
    __glewVertexAttrib1svNV: PFNGLVERTEXATTRIB1SVNVPROC

    @(link_name = "__glewVertexAttrib2dNV")
    __glewVertexAttrib2dNV: PFNGLVERTEXATTRIB2DNVPROC

    @(link_name = "__glewVertexAttrib2dvNV")
    __glewVertexAttrib2dvNV: PFNGLVERTEXATTRIB2DVNVPROC

    @(link_name = "__glewVertexAttrib2fNV")
    __glewVertexAttrib2fNV: PFNGLVERTEXATTRIB2FNVPROC

    @(link_name = "__glewVertexAttrib2fvNV")
    __glewVertexAttrib2fvNV: PFNGLVERTEXATTRIB2FVNVPROC

    @(link_name = "__glewVertexAttrib2sNV")
    __glewVertexAttrib2sNV: PFNGLVERTEXATTRIB2SNVPROC

    @(link_name = "__glewVertexAttrib2svNV")
    __glewVertexAttrib2svNV: PFNGLVERTEXATTRIB2SVNVPROC

    @(link_name = "__glewVertexAttrib3dNV")
    __glewVertexAttrib3dNV: PFNGLVERTEXATTRIB3DNVPROC

    @(link_name = "__glewVertexAttrib3dvNV")
    __glewVertexAttrib3dvNV: PFNGLVERTEXATTRIB3DVNVPROC

    @(link_name = "__glewVertexAttrib3fNV")
    __glewVertexAttrib3fNV: PFNGLVERTEXATTRIB3FNVPROC

    @(link_name = "__glewVertexAttrib3fvNV")
    __glewVertexAttrib3fvNV: PFNGLVERTEXATTRIB3FVNVPROC

    @(link_name = "__glewVertexAttrib3sNV")
    __glewVertexAttrib3sNV: PFNGLVERTEXATTRIB3SNVPROC

    @(link_name = "__glewVertexAttrib3svNV")
    __glewVertexAttrib3svNV: PFNGLVERTEXATTRIB3SVNVPROC

    @(link_name = "__glewVertexAttrib4dNV")
    __glewVertexAttrib4dNV: PFNGLVERTEXATTRIB4DNVPROC

    @(link_name = "__glewVertexAttrib4dvNV")
    __glewVertexAttrib4dvNV: PFNGLVERTEXATTRIB4DVNVPROC

    @(link_name = "__glewVertexAttrib4fNV")
    __glewVertexAttrib4fNV: PFNGLVERTEXATTRIB4FNVPROC

    @(link_name = "__glewVertexAttrib4fvNV")
    __glewVertexAttrib4fvNV: PFNGLVERTEXATTRIB4FVNVPROC

    @(link_name = "__glewVertexAttrib4sNV")
    __glewVertexAttrib4sNV: PFNGLVERTEXATTRIB4SNVPROC

    @(link_name = "__glewVertexAttrib4svNV")
    __glewVertexAttrib4svNV: PFNGLVERTEXATTRIB4SVNVPROC

    @(link_name = "__glewVertexAttrib4ubNV")
    __glewVertexAttrib4ubNV: PFNGLVERTEXATTRIB4UBNVPROC

    @(link_name = "__glewVertexAttrib4ubvNV")
    __glewVertexAttrib4ubvNV: PFNGLVERTEXATTRIB4UBVNVPROC

    @(link_name = "__glewVertexAttribPointerNV")
    __glewVertexAttribPointerNV: PFNGLVERTEXATTRIBPOINTERNVPROC

    @(link_name = "__glewVertexAttribs1dvNV")
    __glewVertexAttribs1dvNV: PFNGLVERTEXATTRIBS1DVNVPROC

    @(link_name = "__glewVertexAttribs1fvNV")
    __glewVertexAttribs1fvNV: PFNGLVERTEXATTRIBS1FVNVPROC

    @(link_name = "__glewVertexAttribs1svNV")
    __glewVertexAttribs1svNV: PFNGLVERTEXATTRIBS1SVNVPROC

    @(link_name = "__glewVertexAttribs2dvNV")
    __glewVertexAttribs2dvNV: PFNGLVERTEXATTRIBS2DVNVPROC

    @(link_name = "__glewVertexAttribs2fvNV")
    __glewVertexAttribs2fvNV: PFNGLVERTEXATTRIBS2FVNVPROC

    @(link_name = "__glewVertexAttribs2svNV")
    __glewVertexAttribs2svNV: PFNGLVERTEXATTRIBS2SVNVPROC

    @(link_name = "__glewVertexAttribs3dvNV")
    __glewVertexAttribs3dvNV: PFNGLVERTEXATTRIBS3DVNVPROC

    @(link_name = "__glewVertexAttribs3fvNV")
    __glewVertexAttribs3fvNV: PFNGLVERTEXATTRIBS3FVNVPROC

    @(link_name = "__glewVertexAttribs3svNV")
    __glewVertexAttribs3svNV: PFNGLVERTEXATTRIBS3SVNVPROC

    @(link_name = "__glewVertexAttribs4dvNV")
    __glewVertexAttribs4dvNV: PFNGLVERTEXATTRIBS4DVNVPROC

    @(link_name = "__glewVertexAttribs4fvNV")
    __glewVertexAttribs4fvNV: PFNGLVERTEXATTRIBS4FVNVPROC

    @(link_name = "__glewVertexAttribs4svNV")
    __glewVertexAttribs4svNV: PFNGLVERTEXATTRIBS4SVNVPROC

    @(link_name = "__glewVertexAttribs4ubvNV")
    __glewVertexAttribs4ubvNV: PFNGLVERTEXATTRIBS4UBVNVPROC

    @(link_name = "__glewBeginVideoCaptureNV")
    __glewBeginVideoCaptureNV: PFNGLBEGINVIDEOCAPTURENVPROC

    @(link_name = "__glewBindVideoCaptureStreamBufferNV")
    __glewBindVideoCaptureStreamBufferNV: PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC

    @(link_name = "__glewBindVideoCaptureStreamTextureNV")
    __glewBindVideoCaptureStreamTextureNV: PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC

    @(link_name = "__glewEndVideoCaptureNV")
    __glewEndVideoCaptureNV: PFNGLENDVIDEOCAPTURENVPROC

    @(link_name = "__glewGetVideoCaptureStreamdvNV")
    __glewGetVideoCaptureStreamdvNV: PFNGLGETVIDEOCAPTURESTREAMDVNVPROC

    @(link_name = "__glewGetVideoCaptureStreamfvNV")
    __glewGetVideoCaptureStreamfvNV: PFNGLGETVIDEOCAPTURESTREAMFVNVPROC

    @(link_name = "__glewGetVideoCaptureStreamivNV")
    __glewGetVideoCaptureStreamivNV: PFNGLGETVIDEOCAPTURESTREAMIVNVPROC

    @(link_name = "__glewGetVideoCaptureivNV")
    __glewGetVideoCaptureivNV: PFNGLGETVIDEOCAPTUREIVNVPROC

    @(link_name = "__glewVideoCaptureNV")
    __glewVideoCaptureNV: PFNGLVIDEOCAPTURENVPROC

    @(link_name = "__glewVideoCaptureStreamParameterdvNV")
    __glewVideoCaptureStreamParameterdvNV: PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC

    @(link_name = "__glewVideoCaptureStreamParameterfvNV")
    __glewVideoCaptureStreamParameterfvNV: PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC

    @(link_name = "__glewVideoCaptureStreamParameterivNV")
    __glewVideoCaptureStreamParameterivNV: PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC

    @(link_name = "__glewDepthRangeArrayfvNV")
    __glewDepthRangeArrayfvNV: PFNGLDEPTHRANGEARRAYFVNVPROC

    @(link_name = "__glewDepthRangeIndexedfNV")
    __glewDepthRangeIndexedfNV: PFNGLDEPTHRANGEINDEXEDFNVPROC

    @(link_name = "__glewDisableiNV")
    __glewDisableiNV: PFNGLDISABLEINVPROC

    @(link_name = "__glewEnableiNV")
    __glewEnableiNV: PFNGLENABLEINVPROC

    @(link_name = "__glewGetFloati_vNV")
    __glewGetFloati_vNV: PFNGLGETFLOATI_VNVPROC

    @(link_name = "__glewIsEnablediNV")
    __glewIsEnablediNV: PFNGLISENABLEDINVPROC

    @(link_name = "__glewScissorArrayvNV")
    __glewScissorArrayvNV: PFNGLSCISSORARRAYVNVPROC

    @(link_name = "__glewScissorIndexedNV")
    __glewScissorIndexedNV: PFNGLSCISSORINDEXEDNVPROC

    @(link_name = "__glewScissorIndexedvNV")
    __glewScissorIndexedvNV: PFNGLSCISSORINDEXEDVNVPROC

    @(link_name = "__glewViewportArrayvNV")
    __glewViewportArrayvNV: PFNGLVIEWPORTARRAYVNVPROC

    @(link_name = "__glewViewportIndexedfNV")
    __glewViewportIndexedfNV: PFNGLVIEWPORTINDEXEDFNVPROC

    @(link_name = "__glewViewportIndexedfvNV")
    __glewViewportIndexedfvNV: PFNGLVIEWPORTINDEXEDFVNVPROC

    @(link_name = "__glewViewportSwizzleNV")
    __glewViewportSwizzleNV: PFNGLVIEWPORTSWIZZLENVPROC

    @(link_name = "__glewEGLImageTargetRenderbufferStorageOES")
    __glewEGLImageTargetRenderbufferStorageOES: PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC

    @(link_name = "__glewEGLImageTargetTexture2DOES")
    __glewEGLImageTargetTexture2DOES: PFNGLEGLIMAGETARGETTEXTURE2DOESPROC

    @(link_name = "__glewBlendEquationSeparateOES")
    __glewBlendEquationSeparateOES: PFNGLBLENDEQUATIONSEPARATEOESPROC

    @(link_name = "__glewBlendFuncSeparateOES")
    __glewBlendFuncSeparateOES: PFNGLBLENDFUNCSEPARATEOESPROC

    @(link_name = "__glewBlendEquationOES")
    __glewBlendEquationOES: PFNGLBLENDEQUATIONOESPROC

    @(link_name = "__glewCopyImageSubDataOES")
    __glewCopyImageSubDataOES: PFNGLCOPYIMAGESUBDATAOESPROC

    @(link_name = "__glewBlendEquationSeparateiOES")
    __glewBlendEquationSeparateiOES: PFNGLBLENDEQUATIONSEPARATEIOESPROC

    @(link_name = "__glewBlendEquationiOES")
    __glewBlendEquationiOES: PFNGLBLENDEQUATIONIOESPROC

    @(link_name = "__glewBlendFuncSeparateiOES")
    __glewBlendFuncSeparateiOES: PFNGLBLENDFUNCSEPARATEIOESPROC

    @(link_name = "__glewBlendFunciOES")
    __glewBlendFunciOES: PFNGLBLENDFUNCIOESPROC

    @(link_name = "__glewColorMaskiOES")
    __glewColorMaskiOES: PFNGLCOLORMASKIOESPROC

    @(link_name = "__glewDisableiOES")
    __glewDisableiOES: PFNGLDISABLEIOESPROC

    @(link_name = "__glewEnableiOES")
    __glewEnableiOES: PFNGLENABLEIOESPROC

    @(link_name = "__glewIsEnablediOES")
    __glewIsEnablediOES: PFNGLISENABLEDIOESPROC

    @(link_name = "__glewBindFramebufferOES")
    __glewBindFramebufferOES: PFNGLBINDFRAMEBUFFEROESPROC

    @(link_name = "__glewBindRenderbufferOES")
    __glewBindRenderbufferOES: PFNGLBINDRENDERBUFFEROESPROC

    @(link_name = "__glewCheckFramebufferStatusOES")
    __glewCheckFramebufferStatusOES: PFNGLCHECKFRAMEBUFFERSTATUSOESPROC

    @(link_name = "__glewDeleteFramebuffersOES")
    __glewDeleteFramebuffersOES: PFNGLDELETEFRAMEBUFFERSOESPROC

    @(link_name = "__glewDeleteRenderbuffersOES")
    __glewDeleteRenderbuffersOES: PFNGLDELETERENDERBUFFERSOESPROC

    @(link_name = "__glewFramebufferRenderbufferOES")
    __glewFramebufferRenderbufferOES: PFNGLFRAMEBUFFERRENDERBUFFEROESPROC

    @(link_name = "__glewFramebufferTexture2DOES")
    __glewFramebufferTexture2DOES: PFNGLFRAMEBUFFERTEXTURE2DOESPROC

    @(link_name = "__glewGenFramebuffersOES")
    __glewGenFramebuffersOES: PFNGLGENFRAMEBUFFERSOESPROC

    @(link_name = "__glewGenRenderbuffersOES")
    __glewGenRenderbuffersOES: PFNGLGENRENDERBUFFERSOESPROC

    @(link_name = "__glewGenerateMipmapOES")
    __glewGenerateMipmapOES: PFNGLGENERATEMIPMAPOESPROC

    @(link_name = "__glewGetFramebufferAttachmentParameterivOES")
    __glewGetFramebufferAttachmentParameterivOES: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC

    @(link_name = "__glewGetRenderbufferParameterivOES")
    __glewGetRenderbufferParameterivOES: PFNGLGETRENDERBUFFERPARAMETERIVOESPROC

    @(link_name = "__glewIsFramebufferOES")
    __glewIsFramebufferOES: PFNGLISFRAMEBUFFEROESPROC

    @(link_name = "__glewIsRenderbufferOES")
    __glewIsRenderbufferOES: PFNGLISRENDERBUFFEROESPROC

    @(link_name = "__glewRenderbufferStorageOES")
    __glewRenderbufferStorageOES: PFNGLRENDERBUFFERSTORAGEOESPROC

    @(link_name = "__glewGetProgramBinaryOES")
    __glewGetProgramBinaryOES: PFNGLGETPROGRAMBINARYOESPROC

    @(link_name = "__glewProgramBinaryOES")
    __glewProgramBinaryOES: PFNGLPROGRAMBINARYOESPROC

    @(link_name = "__glewGetBufferPointervOES")
    __glewGetBufferPointervOES: PFNGLGETBUFFERPOINTERVOESPROC

    @(link_name = "__glewMapBufferOES")
    __glewMapBufferOES: PFNGLMAPBUFFEROESPROC

    @(link_name = "__glewUnmapBufferOES")
    __glewUnmapBufferOES: PFNGLUNMAPBUFFEROESPROC

    @(link_name = "__glewCurrentPaletteMatrixOES")
    __glewCurrentPaletteMatrixOES: PFNGLCURRENTPALETTEMATRIXOESPROC

    @(link_name = "__glewLoadPaletteFromModelViewMatrixOES")
    __glewLoadPaletteFromModelViewMatrixOES: PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC

    @(link_name = "__glewMatrixIndexPointerOES")
    __glewMatrixIndexPointerOES: PFNGLMATRIXINDEXPOINTEROESPROC

    @(link_name = "__glewWeightPointerOES")
    __glewWeightPointerOES: PFNGLWEIGHTPOINTEROESPROC

    @(link_name = "__glewMinSampleShadingOES")
    __glewMinSampleShadingOES: PFNGLMINSAMPLESHADINGOESPROC

    @(link_name = "__glewClearDepthfOES")
    __glewClearDepthfOES: PFNGLCLEARDEPTHFOESPROC

    @(link_name = "__glewClipPlanefOES")
    __glewClipPlanefOES: PFNGLCLIPPLANEFOESPROC

    @(link_name = "__glewDepthRangefOES")
    __glewDepthRangefOES: PFNGLDEPTHRANGEFOESPROC

    @(link_name = "__glewFrustumfOES")
    __glewFrustumfOES: PFNGLFRUSTUMFOESPROC

    @(link_name = "__glewGetClipPlanefOES")
    __glewGetClipPlanefOES: PFNGLGETCLIPPLANEFOESPROC

    @(link_name = "__glewOrthofOES")
    __glewOrthofOES: PFNGLORTHOFOESPROC

    @(link_name = "__glewCompressedTexImage3DOES")
    __glewCompressedTexImage3DOES: PFNGLCOMPRESSEDTEXIMAGE3DOESPROC

    @(link_name = "__glewCompressedTexSubImage3DOES")
    __glewCompressedTexSubImage3DOES: PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC

    @(link_name = "__glewCopyTexSubImage3DOES")
    __glewCopyTexSubImage3DOES: PFNGLCOPYTEXSUBIMAGE3DOESPROC

    @(link_name = "__glewFramebufferTexture3DOES")
    __glewFramebufferTexture3DOES: PFNGLFRAMEBUFFERTEXTURE3DOESPROC

    @(link_name = "__glewTexImage3DOES")
    __glewTexImage3DOES: PFNGLTEXIMAGE3DOESPROC

    @(link_name = "__glewTexSubImage3DOES")
    __glewTexSubImage3DOES: PFNGLTEXSUBIMAGE3DOESPROC

    @(link_name = "__glewGetSamplerParameterIivOES")
    __glewGetSamplerParameterIivOES: PFNGLGETSAMPLERPARAMETERIIVOESPROC

    @(link_name = "__glewGetSamplerParameterIuivOES")
    __glewGetSamplerParameterIuivOES: PFNGLGETSAMPLERPARAMETERIUIVOESPROC

    @(link_name = "__glewGetTexParameterIivOES")
    __glewGetTexParameterIivOES: PFNGLGETTEXPARAMETERIIVOESPROC

    @(link_name = "__glewGetTexParameterIuivOES")
    __glewGetTexParameterIuivOES: PFNGLGETTEXPARAMETERIUIVOESPROC

    @(link_name = "__glewSamplerParameterIivOES")
    __glewSamplerParameterIivOES: PFNGLSAMPLERPARAMETERIIVOESPROC

    @(link_name = "__glewSamplerParameterIuivOES")
    __glewSamplerParameterIuivOES: PFNGLSAMPLERPARAMETERIUIVOESPROC

    @(link_name = "__glewTexParameterIivOES")
    __glewTexParameterIivOES: PFNGLTEXPARAMETERIIVOESPROC

    @(link_name = "__glewTexParameterIuivOES")
    __glewTexParameterIuivOES: PFNGLTEXPARAMETERIUIVOESPROC

    @(link_name = "__glewTexBufferOES")
    __glewTexBufferOES: PFNGLTEXBUFFEROESPROC

    @(link_name = "__glewTexBufferRangeOES")
    __glewTexBufferRangeOES: PFNGLTEXBUFFERRANGEOESPROC

    @(link_name = "__glewGetTexGenfvOES")
    __glewGetTexGenfvOES: PFNGLGETTEXGENFVOESPROC

    @(link_name = "__glewGetTexGenivOES")
    __glewGetTexGenivOES: PFNGLGETTEXGENIVOESPROC

    @(link_name = "__glewGetTexGenxvOES")
    __glewGetTexGenxvOES: PFNGLGETTEXGENXVOESPROC

    @(link_name = "__glewTexGenfOES")
    __glewTexGenfOES: PFNGLTEXGENFOESPROC

    @(link_name = "__glewTexGenfvOES")
    __glewTexGenfvOES: PFNGLTEXGENFVOESPROC

    @(link_name = "__glewTexGeniOES")
    __glewTexGeniOES: PFNGLTEXGENIOESPROC

    @(link_name = "__glewTexGenivOES")
    __glewTexGenivOES: PFNGLTEXGENIVOESPROC

    @(link_name = "__glewTexGenxOES")
    __glewTexGenxOES: PFNGLTEXGENXOESPROC

    @(link_name = "__glewTexGenxvOES")
    __glewTexGenxvOES: PFNGLTEXGENXVOESPROC

    @(link_name = "__glewTexStorage3DMultisampleOES")
    __glewTexStorage3DMultisampleOES: PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC

    @(link_name = "__glewTextureViewOES")
    __glewTextureViewOES: PFNGLTEXTUREVIEWOESPROC

    @(link_name = "__glewBindVertexArrayOES")
    __glewBindVertexArrayOES: PFNGLBINDVERTEXARRAYOESPROC

    @(link_name = "__glewDeleteVertexArraysOES")
    __glewDeleteVertexArraysOES: PFNGLDELETEVERTEXARRAYSOESPROC

    @(link_name = "__glewGenVertexArraysOES")
    __glewGenVertexArraysOES: PFNGLGENVERTEXARRAYSOESPROC

    @(link_name = "__glewIsVertexArrayOES")
    __glewIsVertexArrayOES: PFNGLISVERTEXARRAYOESPROC

    @(link_name = "__glewFramebufferTextureMultiviewOVR")
    __glewFramebufferTextureMultiviewOVR: PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC

    @(link_name = "__glewNamedFramebufferTextureMultiviewOVR")
    __glewNamedFramebufferTextureMultiviewOVR: PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC

    @(link_name = "__glewFramebufferTextureMultisampleMultiviewOVR")
    __glewFramebufferTextureMultisampleMultiviewOVR: PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC

    @(link_name = "__glewAlphaFuncQCOM")
    __glewAlphaFuncQCOM: PFNGLALPHAFUNCQCOMPROC

    @(link_name = "__glewDisableDriverControlQCOM")
    __glewDisableDriverControlQCOM: PFNGLDISABLEDRIVERCONTROLQCOMPROC

    @(link_name = "__glewEnableDriverControlQCOM")
    __glewEnableDriverControlQCOM: PFNGLENABLEDRIVERCONTROLQCOMPROC

    @(link_name = "__glewGetDriverControlStringQCOM")
    __glewGetDriverControlStringQCOM: PFNGLGETDRIVERCONTROLSTRINGQCOMPROC

    @(link_name = "__glewGetDriverControlsQCOM")
    __glewGetDriverControlsQCOM: PFNGLGETDRIVERCONTROLSQCOMPROC

    @(link_name = "__glewExtGetBufferPointervQCOM")
    __glewExtGetBufferPointervQCOM: PFNGLEXTGETBUFFERPOINTERVQCOMPROC

    @(link_name = "__glewExtGetBuffersQCOM")
    __glewExtGetBuffersQCOM: PFNGLEXTGETBUFFERSQCOMPROC

    @(link_name = "__glewExtGetFramebuffersQCOM")
    __glewExtGetFramebuffersQCOM: PFNGLEXTGETFRAMEBUFFERSQCOMPROC

    @(link_name = "__glewExtGetRenderbuffersQCOM")
    __glewExtGetRenderbuffersQCOM: PFNGLEXTGETRENDERBUFFERSQCOMPROC

    @(link_name = "__glewExtGetTexLevelParameterivQCOM")
    __glewExtGetTexLevelParameterivQCOM: PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC

    @(link_name = "__glewExtGetTexSubImageQCOM")
    __glewExtGetTexSubImageQCOM: PFNGLEXTGETTEXSUBIMAGEQCOMPROC

    @(link_name = "__glewExtGetTexturesQCOM")
    __glewExtGetTexturesQCOM: PFNGLEXTGETTEXTURESQCOMPROC

    @(link_name = "__glewExtTexObjectStateOverrideiQCOM")
    __glewExtTexObjectStateOverrideiQCOM: PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC

    @(link_name = "__glewExtGetProgramBinarySourceQCOM")
    __glewExtGetProgramBinarySourceQCOM: PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC

    @(link_name = "__glewExtGetProgramsQCOM")
    __glewExtGetProgramsQCOM: PFNGLEXTGETPROGRAMSQCOMPROC

    @(link_name = "__glewExtGetShadersQCOM")
    __glewExtGetShadersQCOM: PFNGLEXTGETSHADERSQCOMPROC

    @(link_name = "__glewExtIsProgramBinaryQCOM")
    __glewExtIsProgramBinaryQCOM: PFNGLEXTISPROGRAMBINARYQCOMPROC

    @(link_name = "__glewExtrapolateTex2DQCOM")
    __glewExtrapolateTex2DQCOM: PFNGLEXTRAPOLATETEX2DQCOMPROC

    @(link_name = "__glewFramebufferFoveationConfigQCOM")
    __glewFramebufferFoveationConfigQCOM: PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC

    @(link_name = "__glewFramebufferFoveationParametersQCOM")
    __glewFramebufferFoveationParametersQCOM: PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC

    @(link_name = "__glewTexEstimateMotionQCOM")
    __glewTexEstimateMotionQCOM: PFNGLTEXESTIMATEMOTIONQCOMPROC

    @(link_name = "__glewTexEstimateMotionRegionsQCOM")
    __glewTexEstimateMotionRegionsQCOM: PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC

    @(link_name = "__glewFramebufferFetchBarrierQCOM")
    __glewFramebufferFetchBarrierQCOM: PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC

    @(link_name = "__glewShadingRateQCOM")
    __glewShadingRateQCOM: PFNGLSHADINGRATEQCOMPROC

    @(link_name = "__glewTextureFoveationParametersQCOM")
    __glewTextureFoveationParametersQCOM: PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC

    @(link_name = "__glewEndTilingQCOM")
    __glewEndTilingQCOM: PFNGLENDTILINGQCOMPROC

    @(link_name = "__glewStartTilingQCOM")
    __glewStartTilingQCOM: PFNGLSTARTTILINGQCOMPROC

    @(link_name = "__glewAlphaFuncx")
    __glewAlphaFuncx: PFNGLALPHAFUNCXPROC

    @(link_name = "__glewClearColorx")
    __glewClearColorx: PFNGLCLEARCOLORXPROC

    @(link_name = "__glewClearDepthx")
    __glewClearDepthx: PFNGLCLEARDEPTHXPROC

    @(link_name = "__glewColor4x")
    __glewColor4x: PFNGLCOLOR4XPROC

    @(link_name = "__glewDepthRangex")
    __glewDepthRangex: PFNGLDEPTHRANGEXPROC

    @(link_name = "__glewFogx")
    __glewFogx: PFNGLFOGXPROC

    @(link_name = "__glewFogxv")
    __glewFogxv: PFNGLFOGXVPROC

    @(link_name = "__glewFrustumf")
    __glewFrustumf: PFNGLFRUSTUMFPROC

    @(link_name = "__glewFrustumx")
    __glewFrustumx: PFNGLFRUSTUMXPROC

    @(link_name = "__glewLightModelx")
    __glewLightModelx: PFNGLLIGHTMODELXPROC

    @(link_name = "__glewLightModelxv")
    __glewLightModelxv: PFNGLLIGHTMODELXVPROC

    @(link_name = "__glewLightx")
    __glewLightx: PFNGLLIGHTXPROC

    @(link_name = "__glewLightxv")
    __glewLightxv: PFNGLLIGHTXVPROC

    @(link_name = "__glewLineWidthx")
    __glewLineWidthx: PFNGLLINEWIDTHXPROC

    @(link_name = "__glewLoadMatrixx")
    __glewLoadMatrixx: PFNGLLOADMATRIXXPROC

    @(link_name = "__glewMaterialx")
    __glewMaterialx: PFNGLMATERIALXPROC

    @(link_name = "__glewMaterialxv")
    __glewMaterialxv: PFNGLMATERIALXVPROC

    @(link_name = "__glewMultMatrixx")
    __glewMultMatrixx: PFNGLMULTMATRIXXPROC

    @(link_name = "__glewMultiTexCoord4x")
    __glewMultiTexCoord4x: PFNGLMULTITEXCOORD4XPROC

    @(link_name = "__glewNormal3x")
    __glewNormal3x: PFNGLNORMAL3XPROC

    @(link_name = "__glewOrthof")
    __glewOrthof: PFNGLORTHOFPROC

    @(link_name = "__glewOrthox")
    __glewOrthox: PFNGLORTHOXPROC

    @(link_name = "__glewPointSizex")
    __glewPointSizex: PFNGLPOINTSIZEXPROC

    @(link_name = "__glewPolygonOffsetx")
    __glewPolygonOffsetx: PFNGLPOLYGONOFFSETXPROC

    @(link_name = "__glewRotatex")
    __glewRotatex: PFNGLROTATEXPROC

    @(link_name = "__glewSampleCoveragex")
    __glewSampleCoveragex: PFNGLSAMPLECOVERAGEXPROC

    @(link_name = "__glewScalex")
    __glewScalex: PFNGLSCALEXPROC

    @(link_name = "__glewTexEnvx")
    __glewTexEnvx: PFNGLTEXENVXPROC

    @(link_name = "__glewTexEnvxv")
    __glewTexEnvxv: PFNGLTEXENVXVPROC

    @(link_name = "__glewTexParameterx")
    __glewTexParameterx: PFNGLTEXPARAMETERXPROC

    @(link_name = "__glewTranslatex")
    __glewTranslatex: PFNGLTRANSLATEXPROC

    @(link_name = "__glewClipPlanef")
    __glewClipPlanef: PFNGLCLIPPLANEFPROC

    @(link_name = "__glewClipPlanex")
    __glewClipPlanex: PFNGLCLIPPLANEXPROC

    @(link_name = "__glewGetClipPlanef")
    __glewGetClipPlanef: PFNGLGETCLIPPLANEFPROC

    @(link_name = "__glewGetClipPlanex")
    __glewGetClipPlanex: PFNGLGETCLIPPLANEXPROC

    @(link_name = "__glewGetFixedv")
    __glewGetFixedv: PFNGLGETFIXEDVPROC

    @(link_name = "__glewGetLightxv")
    __glewGetLightxv: PFNGLGETLIGHTXVPROC

    @(link_name = "__glewGetMaterialxv")
    __glewGetMaterialxv: PFNGLGETMATERIALXVPROC

    @(link_name = "__glewGetTexEnvxv")
    __glewGetTexEnvxv: PFNGLGETTEXENVXVPROC

    @(link_name = "__glewGetTexParameterxv")
    __glewGetTexParameterxv: PFNGLGETTEXPARAMETERXVPROC

    @(link_name = "__glewPointParameterx")
    __glewPointParameterx: PFNGLPOINTPARAMETERXPROC

    @(link_name = "__glewPointParameterxv")
    __glewPointParameterxv: PFNGLPOINTPARAMETERXVPROC

    @(link_name = "__glewPointSizePointerOES")
    __glewPointSizePointerOES: PFNGLPOINTSIZEPOINTEROESPROC

    @(link_name = "__glewTexParameterxv")
    __glewTexParameterxv: PFNGLTEXPARAMETERXVPROC

    @(link_name = "__glewErrorStringREGAL")
    __glewErrorStringREGAL: PFNGLERRORSTRINGREGALPROC

    @(link_name = "__glewGetExtensionREGAL")
    __glewGetExtensionREGAL: PFNGLGETEXTENSIONREGALPROC

    @(link_name = "__glewIsSupportedREGAL")
    __glewIsSupportedREGAL: PFNGLISSUPPORTEDREGALPROC

    @(link_name = "__glewLogMessageCallbackREGAL")
    __glewLogMessageCallbackREGAL: PFNGLLOGMESSAGECALLBACKREGALPROC

    @(link_name = "__glewGetProcAddressREGAL")
    __glewGetProcAddressREGAL: PFNGLGETPROCADDRESSREGALPROC

    @(link_name = "__glewDetailTexFuncSGIS")
    __glewDetailTexFuncSGIS: PFNGLDETAILTEXFUNCSGISPROC

    @(link_name = "__glewGetDetailTexFuncSGIS")
    __glewGetDetailTexFuncSGIS: PFNGLGETDETAILTEXFUNCSGISPROC

    @(link_name = "__glewFogFuncSGIS")
    __glewFogFuncSGIS: PFNGLFOGFUNCSGISPROC

    @(link_name = "__glewGetFogFuncSGIS")
    __glewGetFogFuncSGIS: PFNGLGETFOGFUNCSGISPROC

    @(link_name = "__glewSampleMaskSGIS")
    __glewSampleMaskSGIS: PFNGLSAMPLEMASKSGISPROC

    @(link_name = "__glewSamplePatternSGIS")
    __glewSamplePatternSGIS: PFNGLSAMPLEPATTERNSGISPROC

    @(link_name = "__glewInterleavedTextureCoordSetsSGIS")
    __glewInterleavedTextureCoordSetsSGIS: PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC

    @(link_name = "__glewSelectTextureCoordSetSGIS")
    __glewSelectTextureCoordSetSGIS: PFNGLSELECTTEXTURECOORDSETSGISPROC

    @(link_name = "__glewSelectTextureSGIS")
    __glewSelectTextureSGIS: PFNGLSELECTTEXTURESGISPROC

    @(link_name = "__glewSelectTextureTransformSGIS")
    __glewSelectTextureTransformSGIS: PFNGLSELECTTEXTURETRANSFORMSGISPROC

    @(link_name = "__glewMultisampleSubRectPosSGIS")
    __glewMultisampleSubRectPosSGIS: PFNGLMULTISAMPLESUBRECTPOSSGISPROC

    @(link_name = "__glewGetSharpenTexFuncSGIS")
    __glewGetSharpenTexFuncSGIS: PFNGLGETSHARPENTEXFUNCSGISPROC

    @(link_name = "__glewSharpenTexFuncSGIS")
    __glewSharpenTexFuncSGIS: PFNGLSHARPENTEXFUNCSGISPROC

    @(link_name = "__glewTexImage4DSGIS")
    __glewTexImage4DSGIS: PFNGLTEXIMAGE4DSGISPROC

    @(link_name = "__glewTexSubImage4DSGIS")
    __glewTexSubImage4DSGIS: PFNGLTEXSUBIMAGE4DSGISPROC

    @(link_name = "__glewGetTexFilterFuncSGIS")
    __glewGetTexFilterFuncSGIS: PFNGLGETTEXFILTERFUNCSGISPROC

    @(link_name = "__glewTexFilterFuncSGIS")
    __glewTexFilterFuncSGIS: PFNGLTEXFILTERFUNCSGISPROC

    @(link_name = "__glewAsyncMarkerSGIX")
    __glewAsyncMarkerSGIX: PFNGLASYNCMARKERSGIXPROC

    @(link_name = "__glewDeleteAsyncMarkersSGIX")
    __glewDeleteAsyncMarkersSGIX: PFNGLDELETEASYNCMARKERSSGIXPROC

    @(link_name = "__glewFinishAsyncSGIX")
    __glewFinishAsyncSGIX: PFNGLFINISHASYNCSGIXPROC

    @(link_name = "__glewGenAsyncMarkersSGIX")
    __glewGenAsyncMarkersSGIX: PFNGLGENASYNCMARKERSSGIXPROC

    @(link_name = "__glewIsAsyncMarkerSGIX")
    __glewIsAsyncMarkerSGIX: PFNGLISASYNCMARKERSGIXPROC

    @(link_name = "__glewPollAsyncSGIX")
    __glewPollAsyncSGIX: PFNGLPOLLASYNCSGIXPROC

    @(link_name = "__glewAddressSpace")
    __glewAddressSpace: PFNGLADDRESSSPACEPROC

    @(link_name = "__glewDataPipe")
    __glewDataPipe: PFNGLDATAPIPEPROC

    @(link_name = "__glewFlushRasterSGIX")
    __glewFlushRasterSGIX: PFNGLFLUSHRASTERSGIXPROC

    @(link_name = "__glewFogLayersSGIX")
    __glewFogLayersSGIX: PFNGLFOGLAYERSSGIXPROC

    @(link_name = "__glewGetFogLayersSGIX")
    __glewGetFogLayersSGIX: PFNGLGETFOGLAYERSSGIXPROC

    @(link_name = "__glewTextureFogSGIX")
    __glewTextureFogSGIX: PFNGLTEXTUREFOGSGIXPROC

    @(link_name = "__glewFragmentColorMaterialSGIX")
    __glewFragmentColorMaterialSGIX: PFNGLFRAGMENTCOLORMATERIALSGIXPROC

    @(link_name = "__glewFragmentLightModelfSGIX")
    __glewFragmentLightModelfSGIX: PFNGLFRAGMENTLIGHTMODELFSGIXPROC

    @(link_name = "__glewFragmentLightModelfvSGIX")
    __glewFragmentLightModelfvSGIX: PFNGLFRAGMENTLIGHTMODELFVSGIXPROC

    @(link_name = "__glewFragmentLightModeliSGIX")
    __glewFragmentLightModeliSGIX: PFNGLFRAGMENTLIGHTMODELISGIXPROC

    @(link_name = "__glewFragmentLightModelivSGIX")
    __glewFragmentLightModelivSGIX: PFNGLFRAGMENTLIGHTMODELIVSGIXPROC

    @(link_name = "__glewFragmentLightfSGIX")
    __glewFragmentLightfSGIX: PFNGLFRAGMENTLIGHTFSGIXPROC

    @(link_name = "__glewFragmentLightfvSGIX")
    __glewFragmentLightfvSGIX: PFNGLFRAGMENTLIGHTFVSGIXPROC

    @(link_name = "__glewFragmentLightiSGIX")
    __glewFragmentLightiSGIX: PFNGLFRAGMENTLIGHTISGIXPROC

    @(link_name = "__glewFragmentLightivSGIX")
    __glewFragmentLightivSGIX: PFNGLFRAGMENTLIGHTIVSGIXPROC

    @(link_name = "__glewFragmentMaterialfSGIX")
    __glewFragmentMaterialfSGIX: PFNGLFRAGMENTMATERIALFSGIXPROC

    @(link_name = "__glewFragmentMaterialfvSGIX")
    __glewFragmentMaterialfvSGIX: PFNGLFRAGMENTMATERIALFVSGIXPROC

    @(link_name = "__glewFragmentMaterialiSGIX")
    __glewFragmentMaterialiSGIX: PFNGLFRAGMENTMATERIALISGIXPROC

    @(link_name = "__glewFragmentMaterialivSGIX")
    __glewFragmentMaterialivSGIX: PFNGLFRAGMENTMATERIALIVSGIXPROC

    @(link_name = "__glewGetFragmentLightfvSGIX")
    __glewGetFragmentLightfvSGIX: PFNGLGETFRAGMENTLIGHTFVSGIXPROC

    @(link_name = "__glewGetFragmentLightivSGIX")
    __glewGetFragmentLightivSGIX: PFNGLGETFRAGMENTLIGHTIVSGIXPROC

    @(link_name = "__glewGetFragmentMaterialfvSGIX")
    __glewGetFragmentMaterialfvSGIX: PFNGLGETFRAGMENTMATERIALFVSGIXPROC

    @(link_name = "__glewGetFragmentMaterialivSGIX")
    __glewGetFragmentMaterialivSGIX: PFNGLGETFRAGMENTMATERIALIVSGIXPROC

    @(link_name = "__glewFrameZoomSGIX")
    __glewFrameZoomSGIX: PFNGLFRAMEZOOMSGIXPROC

    @(link_name = "__glewIglooInterfaceSGIX")
    __glewIglooInterfaceSGIX: PFNGLIGLOOINTERFACESGIXPROC

    @(link_name = "__glewAllocMPEGPredictorsSGIX")
    __glewAllocMPEGPredictorsSGIX: PFNGLALLOCMPEGPREDICTORSSGIXPROC

    @(link_name = "__glewDeleteMPEGPredictorsSGIX")
    __glewDeleteMPEGPredictorsSGIX: PFNGLDELETEMPEGPREDICTORSSGIXPROC

    @(link_name = "__glewGenMPEGPredictorsSGIX")
    __glewGenMPEGPredictorsSGIX: PFNGLGENMPEGPREDICTORSSGIXPROC

    @(link_name = "__glewGetMPEGParameterfvSGIX")
    __glewGetMPEGParameterfvSGIX: PFNGLGETMPEGPARAMETERFVSGIXPROC

    @(link_name = "__glewGetMPEGParameterivSGIX")
    __glewGetMPEGParameterivSGIX: PFNGLGETMPEGPARAMETERIVSGIXPROC

    @(link_name = "__glewGetMPEGPredictorSGIX")
    __glewGetMPEGPredictorSGIX: PFNGLGETMPEGPREDICTORSGIXPROC

    @(link_name = "__glewGetMPEGQuantTableubv")
    __glewGetMPEGQuantTableubv: PFNGLGETMPEGQUANTTABLEUBVPROC

    @(link_name = "__glewIsMPEGPredictorSGIX")
    __glewIsMPEGPredictorSGIX: PFNGLISMPEGPREDICTORSGIXPROC

    @(link_name = "__glewMPEGPredictorSGIX")
    __glewMPEGPredictorSGIX: PFNGLMPEGPREDICTORSGIXPROC

    @(link_name = "__glewMPEGQuantTableubv")
    __glewMPEGQuantTableubv: PFNGLMPEGQUANTTABLEUBVPROC

    @(link_name = "__glewSwapMPEGPredictorsSGIX")
    __glewSwapMPEGPredictorsSGIX: PFNGLSWAPMPEGPREDICTORSSGIXPROC

    @(link_name = "__glewGetNonlinLightfvSGIX")
    __glewGetNonlinLightfvSGIX: PFNGLGETNONLINLIGHTFVSGIXPROC

    @(link_name = "__glewGetNonlinMaterialfvSGIX")
    __glewGetNonlinMaterialfvSGIX: PFNGLGETNONLINMATERIALFVSGIXPROC

    @(link_name = "__glewNonlinLightfvSGIX")
    __glewNonlinLightfvSGIX: PFNGLNONLINLIGHTFVSGIXPROC

    @(link_name = "__glewNonlinMaterialfvSGIX")
    __glewNonlinMaterialfvSGIX: PFNGLNONLINMATERIALFVSGIXPROC

    @(link_name = "__glewPixelTexGenSGIX")
    __glewPixelTexGenSGIX: PFNGLPIXELTEXGENSGIXPROC

    @(link_name = "__glewDeformSGIX")
    __glewDeformSGIX: PFNGLDEFORMSGIXPROC

    @(link_name = "__glewLoadIdentityDeformationMapSGIX")
    __glewLoadIdentityDeformationMapSGIX: PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC

    @(link_name = "__glewMeshBreadthSGIX")
    __glewMeshBreadthSGIX: PFNGLMESHBREADTHSGIXPROC

    @(link_name = "__glewMeshStrideSGIX")
    __glewMeshStrideSGIX: PFNGLMESHSTRIDESGIXPROC

    @(link_name = "__glewReferencePlaneSGIX")
    __glewReferencePlaneSGIX: PFNGLREFERENCEPLANESGIXPROC

    @(link_name = "__glewSpriteParameterfSGIX")
    __glewSpriteParameterfSGIX: PFNGLSPRITEPARAMETERFSGIXPROC

    @(link_name = "__glewSpriteParameterfvSGIX")
    __glewSpriteParameterfvSGIX: PFNGLSPRITEPARAMETERFVSGIXPROC

    @(link_name = "__glewSpriteParameteriSGIX")
    __glewSpriteParameteriSGIX: PFNGLSPRITEPARAMETERISGIXPROC

    @(link_name = "__glewSpriteParameterivSGIX")
    __glewSpriteParameterivSGIX: PFNGLSPRITEPARAMETERIVSGIXPROC

    @(link_name = "__glewTagSampleBufferSGIX")
    __glewTagSampleBufferSGIX: PFNGLTAGSAMPLEBUFFERSGIXPROC

    @(link_name = "__glewGetVectorOperationSGIX")
    __glewGetVectorOperationSGIX: PFNGLGETVECTOROPERATIONSGIXPROC

    @(link_name = "__glewVectorOperationSGIX")
    __glewVectorOperationSGIX: PFNGLVECTOROPERATIONSGIXPROC

    @(link_name = "__glewAreVertexArraysResidentSGIX")
    __glewAreVertexArraysResidentSGIX: PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC

    @(link_name = "__glewBindVertexArraySGIX")
    __glewBindVertexArraySGIX: PFNGLBINDVERTEXARRAYSGIXPROC

    @(link_name = "__glewDeleteVertexArraysSGIX")
    __glewDeleteVertexArraysSGIX: PFNGLDELETEVERTEXARRAYSSGIXPROC

    @(link_name = "__glewGenVertexArraysSGIX")
    __glewGenVertexArraysSGIX: PFNGLGENVERTEXARRAYSSGIXPROC

    @(link_name = "__glewIsVertexArraySGIX")
    __glewIsVertexArraySGIX: PFNGLISVERTEXARRAYSGIXPROC

    @(link_name = "__glewPrioritizeVertexArraysSGIX")
    __glewPrioritizeVertexArraysSGIX: PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC

    @(link_name = "__glewColorTableParameterfvSGI")
    __glewColorTableParameterfvSGI: PFNGLCOLORTABLEPARAMETERFVSGIPROC

    @(link_name = "__glewColorTableParameterivSGI")
    __glewColorTableParameterivSGI: PFNGLCOLORTABLEPARAMETERIVSGIPROC

    @(link_name = "__glewColorTableSGI")
    __glewColorTableSGI: PFNGLCOLORTABLESGIPROC

    @(link_name = "__glewCopyColorTableSGI")
    __glewCopyColorTableSGI: PFNGLCOPYCOLORTABLESGIPROC

    @(link_name = "__glewGetColorTableParameterfvSGI")
    __glewGetColorTableParameterfvSGI: PFNGLGETCOLORTABLEPARAMETERFVSGIPROC

    @(link_name = "__glewGetColorTableParameterivSGI")
    __glewGetColorTableParameterivSGI: PFNGLGETCOLORTABLEPARAMETERIVSGIPROC

    @(link_name = "__glewGetColorTableSGI")
    __glewGetColorTableSGI: PFNGLGETCOLORTABLESGIPROC

    @(link_name = "__glewGetPixelTransformParameterfvSGI")
    __glewGetPixelTransformParameterfvSGI: PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC

    @(link_name = "__glewGetPixelTransformParameterivSGI")
    __glewGetPixelTransformParameterivSGI: PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC

    @(link_name = "__glewPixelTransformParameterfSGI")
    __glewPixelTransformParameterfSGI: PFNGLPIXELTRANSFORMPARAMETERFSGIPROC

    @(link_name = "__glewPixelTransformParameterfvSGI")
    __glewPixelTransformParameterfvSGI: PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC

    @(link_name = "__glewPixelTransformParameteriSGI")
    __glewPixelTransformParameteriSGI: PFNGLPIXELTRANSFORMPARAMETERISGIPROC

    @(link_name = "__glewPixelTransformParameterivSGI")
    __glewPixelTransformParameterivSGI: PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC

    @(link_name = "__glewPixelTransformSGI")
    __glewPixelTransformSGI: PFNGLPIXELTRANSFORMSGIPROC

    @(link_name = "__glewFinishTextureSUNX")
    __glewFinishTextureSUNX: PFNGLFINISHTEXTURESUNXPROC

    @(link_name = "__glewGlobalAlphaFactorbSUN")
    __glewGlobalAlphaFactorbSUN: PFNGLGLOBALALPHAFACTORBSUNPROC

    @(link_name = "__glewGlobalAlphaFactordSUN")
    __glewGlobalAlphaFactordSUN: PFNGLGLOBALALPHAFACTORDSUNPROC

    @(link_name = "__glewGlobalAlphaFactorfSUN")
    __glewGlobalAlphaFactorfSUN: PFNGLGLOBALALPHAFACTORFSUNPROC

    @(link_name = "__glewGlobalAlphaFactoriSUN")
    __glewGlobalAlphaFactoriSUN: PFNGLGLOBALALPHAFACTORISUNPROC

    @(link_name = "__glewGlobalAlphaFactorsSUN")
    __glewGlobalAlphaFactorsSUN: PFNGLGLOBALALPHAFACTORSSUNPROC

    @(link_name = "__glewGlobalAlphaFactorubSUN")
    __glewGlobalAlphaFactorubSUN: PFNGLGLOBALALPHAFACTORUBSUNPROC

    @(link_name = "__glewGlobalAlphaFactoruiSUN")
    __glewGlobalAlphaFactoruiSUN: PFNGLGLOBALALPHAFACTORUISUNPROC

    @(link_name = "__glewGlobalAlphaFactorusSUN")
    __glewGlobalAlphaFactorusSUN: PFNGLGLOBALALPHAFACTORUSSUNPROC

    @(link_name = "__glewReadVideoPixelsSUN")
    __glewReadVideoPixelsSUN: PFNGLREADVIDEOPIXELSSUNPROC

    @(link_name = "__glewReplacementCodePointerSUN")
    __glewReplacementCodePointerSUN: PFNGLREPLACEMENTCODEPOINTERSUNPROC

    @(link_name = "__glewReplacementCodeubSUN")
    __glewReplacementCodeubSUN: PFNGLREPLACEMENTCODEUBSUNPROC

    @(link_name = "__glewReplacementCodeubvSUN")
    __glewReplacementCodeubvSUN: PFNGLREPLACEMENTCODEUBVSUNPROC

    @(link_name = "__glewReplacementCodeuiSUN")
    __glewReplacementCodeuiSUN: PFNGLREPLACEMENTCODEUISUNPROC

    @(link_name = "__glewReplacementCodeuivSUN")
    __glewReplacementCodeuivSUN: PFNGLREPLACEMENTCODEUIVSUNPROC

    @(link_name = "__glewReplacementCodeusSUN")
    __glewReplacementCodeusSUN: PFNGLREPLACEMENTCODEUSSUNPROC

    @(link_name = "__glewReplacementCodeusvSUN")
    __glewReplacementCodeusvSUN: PFNGLREPLACEMENTCODEUSVSUNPROC

    @(link_name = "__glewColor3fVertex3fSUN")
    __glewColor3fVertex3fSUN: PFNGLCOLOR3FVERTEX3FSUNPROC

    @(link_name = "__glewColor3fVertex3fvSUN")
    __glewColor3fVertex3fvSUN: PFNGLCOLOR3FVERTEX3FVSUNPROC

    @(link_name = "__glewColor4fNormal3fVertex3fSUN")
    __glewColor4fNormal3fVertex3fSUN: PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewColor4fNormal3fVertex3fvSUN")
    __glewColor4fNormal3fVertex3fvSUN: PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewColor4ubVertex2fSUN")
    __glewColor4ubVertex2fSUN: PFNGLCOLOR4UBVERTEX2FSUNPROC

    @(link_name = "__glewColor4ubVertex2fvSUN")
    __glewColor4ubVertex2fvSUN: PFNGLCOLOR4UBVERTEX2FVSUNPROC

    @(link_name = "__glewColor4ubVertex3fSUN")
    __glewColor4ubVertex3fSUN: PFNGLCOLOR4UBVERTEX3FSUNPROC

    @(link_name = "__glewColor4ubVertex3fvSUN")
    __glewColor4ubVertex3fvSUN: PFNGLCOLOR4UBVERTEX3FVSUNPROC

    @(link_name = "__glewNormal3fVertex3fSUN")
    __glewNormal3fVertex3fSUN: PFNGLNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewNormal3fVertex3fvSUN")
    __glewNormal3fVertex3fvSUN: PFNGLNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiColor3fVertex3fSUN")
    __glewReplacementCodeuiColor3fVertex3fSUN: PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiColor3fVertex3fvSUN")
    __glewReplacementCodeuiColor3fVertex3fvSUN: PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiColor4fNormal3fVertex3fSUN")
    __glewReplacementCodeuiColor4fNormal3fVertex3fSUN: PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN")
    __glewReplacementCodeuiColor4fNormal3fVertex3fvSUN: PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiColor4ubVertex3fSUN")
    __glewReplacementCodeuiColor4ubVertex3fSUN: PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiColor4ubVertex3fvSUN")
    __glewReplacementCodeuiColor4ubVertex3fvSUN: PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiNormal3fVertex3fSUN")
    __glewReplacementCodeuiNormal3fVertex3fSUN: PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiNormal3fVertex3fvSUN")
    __glewReplacementCodeuiNormal3fVertex3fvSUN: PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN")
    __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN")
    __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN")
    __glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN")
    __glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fVertex3fSUN")
    __glewReplacementCodeuiTexCoord2fVertex3fSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiTexCoord2fVertex3fvSUN")
    __glewReplacementCodeuiTexCoord2fVertex3fvSUN: PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC

    @(link_name = "__glewReplacementCodeuiVertex3fSUN")
    __glewReplacementCodeuiVertex3fSUN: PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC

    @(link_name = "__glewReplacementCodeuiVertex3fvSUN")
    __glewReplacementCodeuiVertex3fvSUN: PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord2fColor3fVertex3fSUN")
    __glewTexCoord2fColor3fVertex3fSUN: PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC

    @(link_name = "__glewTexCoord2fColor3fVertex3fvSUN")
    __glewTexCoord2fColor3fVertex3fvSUN: PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord2fColor4fNormal3fVertex3fSUN")
    __glewTexCoord2fColor4fNormal3fVertex3fSUN: PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewTexCoord2fColor4fNormal3fVertex3fvSUN")
    __glewTexCoord2fColor4fNormal3fVertex3fvSUN: PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord2fColor4ubVertex3fSUN")
    __glewTexCoord2fColor4ubVertex3fSUN: PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC

    @(link_name = "__glewTexCoord2fColor4ubVertex3fvSUN")
    __glewTexCoord2fColor4ubVertex3fvSUN: PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord2fNormal3fVertex3fSUN")
    __glewTexCoord2fNormal3fVertex3fSUN: PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC

    @(link_name = "__glewTexCoord2fNormal3fVertex3fvSUN")
    __glewTexCoord2fNormal3fVertex3fvSUN: PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord2fVertex3fSUN")
    __glewTexCoord2fVertex3fSUN: PFNGLTEXCOORD2FVERTEX3FSUNPROC

    @(link_name = "__glewTexCoord2fVertex3fvSUN")
    __glewTexCoord2fVertex3fvSUN: PFNGLTEXCOORD2FVERTEX3FVSUNPROC

    @(link_name = "__glewTexCoord4fColor4fNormal3fVertex4fSUN")
    __glewTexCoord4fColor4fNormal3fVertex4fSUN: PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC

    @(link_name = "__glewTexCoord4fColor4fNormal3fVertex4fvSUN")
    __glewTexCoord4fColor4fNormal3fVertex4fvSUN: PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC

    @(link_name = "__glewTexCoord4fVertex4fSUN")
    __glewTexCoord4fVertex4fSUN: PFNGLTEXCOORD4FVERTEX4FSUNPROC

    @(link_name = "__glewTexCoord4fVertex4fvSUN")
    __glewTexCoord4fVertex4fvSUN: PFNGLTEXCOORD4FVERTEX4FVSUNPROC

    @(link_name = "__glewAddSwapHintRectWIN")
    __glewAddSwapHintRectWIN: PFNGLADDSWAPHINTRECTWINPROC

    @(link_name = "__GLEW_VERSION_1_1")
    __GLEW_VERSION_1_1: GLboolean

    @(link_name = "__GLEW_VERSION_1_2")
    __GLEW_VERSION_1_2: GLboolean

    @(link_name = "__GLEW_VERSION_1_2_1")
    __GLEW_VERSION_1_2_1: GLboolean

    @(link_name = "__GLEW_VERSION_1_3")
    __GLEW_VERSION_1_3: GLboolean

    @(link_name = "__GLEW_VERSION_1_4")
    __GLEW_VERSION_1_4: GLboolean

    @(link_name = "__GLEW_VERSION_1_5")
    __GLEW_VERSION_1_5: GLboolean

    @(link_name = "__GLEW_VERSION_2_0")
    __GLEW_VERSION_2_0: GLboolean

    @(link_name = "__GLEW_VERSION_2_1")
    __GLEW_VERSION_2_1: GLboolean

    @(link_name = "__GLEW_VERSION_3_0")
    __GLEW_VERSION_3_0: GLboolean

    @(link_name = "__GLEW_VERSION_3_1")
    __GLEW_VERSION_3_1: GLboolean

    @(link_name = "__GLEW_VERSION_3_2")
    __GLEW_VERSION_3_2: GLboolean

    @(link_name = "__GLEW_VERSION_3_3")
    __GLEW_VERSION_3_3: GLboolean

    @(link_name = "__GLEW_VERSION_4_0")
    __GLEW_VERSION_4_0: GLboolean

    @(link_name = "__GLEW_VERSION_4_1")
    __GLEW_VERSION_4_1: GLboolean

    @(link_name = "__GLEW_VERSION_4_2")
    __GLEW_VERSION_4_2: GLboolean

    @(link_name = "__GLEW_VERSION_4_3")
    __GLEW_VERSION_4_3: GLboolean

    @(link_name = "__GLEW_VERSION_4_4")
    __GLEW_VERSION_4_4: GLboolean

    @(link_name = "__GLEW_VERSION_4_5")
    __GLEW_VERSION_4_5: GLboolean

    @(link_name = "__GLEW_VERSION_4_6")
    __GLEW_VERSION_4_6: GLboolean

    @(link_name = "__GLEW_3DFX_multisample")
    __GLEW_3DFX_multisample: GLboolean

    @(link_name = "__GLEW_3DFX_tbuffer")
    __GLEW_3DFX_tbuffer: GLboolean

    @(link_name = "__GLEW_3DFX_texture_compression_FXT1")
    __GLEW_3DFX_texture_compression_FXT1: GLboolean

    @(link_name = "__GLEW_AMD_blend_minmax_factor")
    __GLEW_AMD_blend_minmax_factor: GLboolean

    @(link_name = "__GLEW_AMD_compressed_3DC_texture")
    __GLEW_AMD_compressed_3DC_texture: GLboolean

    @(link_name = "__GLEW_AMD_compressed_ATC_texture")
    __GLEW_AMD_compressed_ATC_texture: GLboolean

    @(link_name = "__GLEW_AMD_conservative_depth")
    __GLEW_AMD_conservative_depth: GLboolean

    @(link_name = "__GLEW_AMD_debug_output")
    __GLEW_AMD_debug_output: GLboolean

    @(link_name = "__GLEW_AMD_depth_clamp_separate")
    __GLEW_AMD_depth_clamp_separate: GLboolean

    @(link_name = "__GLEW_AMD_draw_buffers_blend")
    __GLEW_AMD_draw_buffers_blend: GLboolean

    @(link_name = "__GLEW_AMD_framebuffer_multisample_advanced")
    __GLEW_AMD_framebuffer_multisample_advanced: GLboolean

    @(link_name = "__GLEW_AMD_framebuffer_sample_positions")
    __GLEW_AMD_framebuffer_sample_positions: GLboolean

    @(link_name = "__GLEW_AMD_gcn_shader")
    __GLEW_AMD_gcn_shader: GLboolean

    @(link_name = "__GLEW_AMD_gpu_shader_half_float")
    __GLEW_AMD_gpu_shader_half_float: GLboolean

    @(link_name = "__GLEW_AMD_gpu_shader_half_float_fetch")
    __GLEW_AMD_gpu_shader_half_float_fetch: GLboolean

    @(link_name = "__GLEW_AMD_gpu_shader_int16")
    __GLEW_AMD_gpu_shader_int16: GLboolean

    @(link_name = "__GLEW_AMD_gpu_shader_int64")
    __GLEW_AMD_gpu_shader_int64: GLboolean

    @(link_name = "__GLEW_AMD_interleaved_elements")
    __GLEW_AMD_interleaved_elements: GLboolean

    @(link_name = "__GLEW_AMD_multi_draw_indirect")
    __GLEW_AMD_multi_draw_indirect: GLboolean

    @(link_name = "__GLEW_AMD_name_gen_delete")
    __GLEW_AMD_name_gen_delete: GLboolean

    @(link_name = "__GLEW_AMD_occlusion_query_event")
    __GLEW_AMD_occlusion_query_event: GLboolean

    @(link_name = "__GLEW_AMD_performance_monitor")
    __GLEW_AMD_performance_monitor: GLboolean

    @(link_name = "__GLEW_AMD_pinned_memory")
    __GLEW_AMD_pinned_memory: GLboolean

    @(link_name = "__GLEW_AMD_program_binary_Z400")
    __GLEW_AMD_program_binary_Z400: GLboolean

    @(link_name = "__GLEW_AMD_query_buffer_object")
    __GLEW_AMD_query_buffer_object: GLboolean

    @(link_name = "__GLEW_AMD_sample_positions")
    __GLEW_AMD_sample_positions: GLboolean

    @(link_name = "__GLEW_AMD_seamless_cubemap_per_texture")
    __GLEW_AMD_seamless_cubemap_per_texture: GLboolean

    @(link_name = "__GLEW_AMD_shader_atomic_counter_ops")
    __GLEW_AMD_shader_atomic_counter_ops: GLboolean

    @(link_name = "__GLEW_AMD_shader_ballot")
    __GLEW_AMD_shader_ballot: GLboolean

    @(link_name = "__GLEW_AMD_shader_explicit_vertex_parameter")
    __GLEW_AMD_shader_explicit_vertex_parameter: GLboolean

    @(link_name = "__GLEW_AMD_shader_image_load_store_lod")
    __GLEW_AMD_shader_image_load_store_lod: GLboolean

    @(link_name = "__GLEW_AMD_shader_stencil_export")
    __GLEW_AMD_shader_stencil_export: GLboolean

    @(link_name = "__GLEW_AMD_shader_stencil_value_export")
    __GLEW_AMD_shader_stencil_value_export: GLboolean

    @(link_name = "__GLEW_AMD_shader_trinary_minmax")
    __GLEW_AMD_shader_trinary_minmax: GLboolean

    @(link_name = "__GLEW_AMD_sparse_texture")
    __GLEW_AMD_sparse_texture: GLboolean

    @(link_name = "__GLEW_AMD_stencil_operation_extended")
    __GLEW_AMD_stencil_operation_extended: GLboolean

    @(link_name = "__GLEW_AMD_texture_gather_bias_lod")
    __GLEW_AMD_texture_gather_bias_lod: GLboolean

    @(link_name = "__GLEW_AMD_texture_texture4")
    __GLEW_AMD_texture_texture4: GLboolean

    @(link_name = "__GLEW_AMD_transform_feedback3_lines_triangles")
    __GLEW_AMD_transform_feedback3_lines_triangles: GLboolean

    @(link_name = "__GLEW_AMD_transform_feedback4")
    __GLEW_AMD_transform_feedback4: GLboolean

    @(link_name = "__GLEW_AMD_vertex_shader_layer")
    __GLEW_AMD_vertex_shader_layer: GLboolean

    @(link_name = "__GLEW_AMD_vertex_shader_tessellator")
    __GLEW_AMD_vertex_shader_tessellator: GLboolean

    @(link_name = "__GLEW_AMD_vertex_shader_viewport_index")
    __GLEW_AMD_vertex_shader_viewport_index: GLboolean

    @(link_name = "__GLEW_ANDROID_extension_pack_es31a")
    __GLEW_ANDROID_extension_pack_es31a: GLboolean

    @(link_name = "__GLEW_ANGLE_depth_texture")
    __GLEW_ANGLE_depth_texture: GLboolean

    @(link_name = "__GLEW_ANGLE_framebuffer_blit")
    __GLEW_ANGLE_framebuffer_blit: GLboolean

    @(link_name = "__GLEW_ANGLE_framebuffer_multisample")
    __GLEW_ANGLE_framebuffer_multisample: GLboolean

    @(link_name = "__GLEW_ANGLE_instanced_arrays")
    __GLEW_ANGLE_instanced_arrays: GLboolean

    @(link_name = "__GLEW_ANGLE_pack_reverse_row_order")
    __GLEW_ANGLE_pack_reverse_row_order: GLboolean

    @(link_name = "__GLEW_ANGLE_program_binary")
    __GLEW_ANGLE_program_binary: GLboolean

    @(link_name = "__GLEW_ANGLE_texture_compression_dxt1")
    __GLEW_ANGLE_texture_compression_dxt1: GLboolean

    @(link_name = "__GLEW_ANGLE_texture_compression_dxt3")
    __GLEW_ANGLE_texture_compression_dxt3: GLboolean

    @(link_name = "__GLEW_ANGLE_texture_compression_dxt5")
    __GLEW_ANGLE_texture_compression_dxt5: GLboolean

    @(link_name = "__GLEW_ANGLE_texture_usage")
    __GLEW_ANGLE_texture_usage: GLboolean

    @(link_name = "__GLEW_ANGLE_timer_query")
    __GLEW_ANGLE_timer_query: GLboolean

    @(link_name = "__GLEW_ANGLE_translated_shader_source")
    __GLEW_ANGLE_translated_shader_source: GLboolean

    @(link_name = "__GLEW_APPLE_aux_depth_stencil")
    __GLEW_APPLE_aux_depth_stencil: GLboolean

    @(link_name = "__GLEW_APPLE_client_storage")
    __GLEW_APPLE_client_storage: GLboolean

    @(link_name = "__GLEW_APPLE_clip_distance")
    __GLEW_APPLE_clip_distance: GLboolean

    @(link_name = "__GLEW_APPLE_color_buffer_packed_float")
    __GLEW_APPLE_color_buffer_packed_float: GLboolean

    @(link_name = "__GLEW_APPLE_copy_texture_levels")
    __GLEW_APPLE_copy_texture_levels: GLboolean

    @(link_name = "__GLEW_APPLE_element_array")
    __GLEW_APPLE_element_array: GLboolean

    @(link_name = "__GLEW_APPLE_fence")
    __GLEW_APPLE_fence: GLboolean

    @(link_name = "__GLEW_APPLE_float_pixels")
    __GLEW_APPLE_float_pixels: GLboolean

    @(link_name = "__GLEW_APPLE_flush_buffer_range")
    __GLEW_APPLE_flush_buffer_range: GLboolean

    @(link_name = "__GLEW_APPLE_framebuffer_multisample")
    __GLEW_APPLE_framebuffer_multisample: GLboolean

    @(link_name = "__GLEW_APPLE_object_purgeable")
    __GLEW_APPLE_object_purgeable: GLboolean

    @(link_name = "__GLEW_APPLE_pixel_buffer")
    __GLEW_APPLE_pixel_buffer: GLboolean

    @(link_name = "__GLEW_APPLE_rgb_422")
    __GLEW_APPLE_rgb_422: GLboolean

    @(link_name = "__GLEW_APPLE_row_bytes")
    __GLEW_APPLE_row_bytes: GLboolean

    @(link_name = "__GLEW_APPLE_specular_vector")
    __GLEW_APPLE_specular_vector: GLboolean

    @(link_name = "__GLEW_APPLE_sync")
    __GLEW_APPLE_sync: GLboolean

    @(link_name = "__GLEW_APPLE_texture_2D_limited_npot")
    __GLEW_APPLE_texture_2D_limited_npot: GLboolean

    @(link_name = "__GLEW_APPLE_texture_format_BGRA8888")
    __GLEW_APPLE_texture_format_BGRA8888: GLboolean

    @(link_name = "__GLEW_APPLE_texture_max_level")
    __GLEW_APPLE_texture_max_level: GLboolean

    @(link_name = "__GLEW_APPLE_texture_packed_float")
    __GLEW_APPLE_texture_packed_float: GLboolean

    @(link_name = "__GLEW_APPLE_texture_range")
    __GLEW_APPLE_texture_range: GLboolean

    @(link_name = "__GLEW_APPLE_transform_hint")
    __GLEW_APPLE_transform_hint: GLboolean

    @(link_name = "__GLEW_APPLE_vertex_array_object")
    __GLEW_APPLE_vertex_array_object: GLboolean

    @(link_name = "__GLEW_APPLE_vertex_array_range")
    __GLEW_APPLE_vertex_array_range: GLboolean

    @(link_name = "__GLEW_APPLE_vertex_program_evaluators")
    __GLEW_APPLE_vertex_program_evaluators: GLboolean

    @(link_name = "__GLEW_APPLE_ycbcr_422")
    __GLEW_APPLE_ycbcr_422: GLboolean

    @(link_name = "__GLEW_ARB_ES2_compatibility")
    __GLEW_ARB_ES2_compatibility: GLboolean

    @(link_name = "__GLEW_ARB_ES3_1_compatibility")
    __GLEW_ARB_ES3_1_compatibility: GLboolean

    @(link_name = "__GLEW_ARB_ES3_2_compatibility")
    __GLEW_ARB_ES3_2_compatibility: GLboolean

    @(link_name = "__GLEW_ARB_ES3_compatibility")
    __GLEW_ARB_ES3_compatibility: GLboolean

    @(link_name = "__GLEW_ARB_arrays_of_arrays")
    __GLEW_ARB_arrays_of_arrays: GLboolean

    @(link_name = "__GLEW_ARB_base_instance")
    __GLEW_ARB_base_instance: GLboolean

    @(link_name = "__GLEW_ARB_bindless_texture")
    __GLEW_ARB_bindless_texture: GLboolean

    @(link_name = "__GLEW_ARB_blend_func_extended")
    __GLEW_ARB_blend_func_extended: GLboolean

    @(link_name = "__GLEW_ARB_buffer_storage")
    __GLEW_ARB_buffer_storage: GLboolean

    @(link_name = "__GLEW_ARB_cl_event")
    __GLEW_ARB_cl_event: GLboolean

    @(link_name = "__GLEW_ARB_clear_buffer_object")
    __GLEW_ARB_clear_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_clear_texture")
    __GLEW_ARB_clear_texture: GLboolean

    @(link_name = "__GLEW_ARB_clip_control")
    __GLEW_ARB_clip_control: GLboolean

    @(link_name = "__GLEW_ARB_color_buffer_float")
    __GLEW_ARB_color_buffer_float: GLboolean

    @(link_name = "__GLEW_ARB_compatibility")
    __GLEW_ARB_compatibility: GLboolean

    @(link_name = "__GLEW_ARB_compressed_texture_pixel_storage")
    __GLEW_ARB_compressed_texture_pixel_storage: GLboolean

    @(link_name = "__GLEW_ARB_compute_shader")
    __GLEW_ARB_compute_shader: GLboolean

    @(link_name = "__GLEW_ARB_compute_variable_group_size")
    __GLEW_ARB_compute_variable_group_size: GLboolean

    @(link_name = "__GLEW_ARB_conditional_render_inverted")
    __GLEW_ARB_conditional_render_inverted: GLboolean

    @(link_name = "__GLEW_ARB_conservative_depth")
    __GLEW_ARB_conservative_depth: GLboolean

    @(link_name = "__GLEW_ARB_copy_buffer")
    __GLEW_ARB_copy_buffer: GLboolean

    @(link_name = "__GLEW_ARB_copy_image")
    __GLEW_ARB_copy_image: GLboolean

    @(link_name = "__GLEW_ARB_cull_distance")
    __GLEW_ARB_cull_distance: GLboolean

    @(link_name = "__GLEW_ARB_debug_output")
    __GLEW_ARB_debug_output: GLboolean

    @(link_name = "__GLEW_ARB_depth_buffer_float")
    __GLEW_ARB_depth_buffer_float: GLboolean

    @(link_name = "__GLEW_ARB_depth_clamp")
    __GLEW_ARB_depth_clamp: GLboolean

    @(link_name = "__GLEW_ARB_depth_texture")
    __GLEW_ARB_depth_texture: GLboolean

    @(link_name = "__GLEW_ARB_derivative_control")
    __GLEW_ARB_derivative_control: GLboolean

    @(link_name = "__GLEW_ARB_direct_state_access")
    __GLEW_ARB_direct_state_access: GLboolean

    @(link_name = "__GLEW_ARB_draw_buffers")
    __GLEW_ARB_draw_buffers: GLboolean

    @(link_name = "__GLEW_ARB_draw_buffers_blend")
    __GLEW_ARB_draw_buffers_blend: GLboolean

    @(link_name = "__GLEW_ARB_draw_elements_base_vertex")
    __GLEW_ARB_draw_elements_base_vertex: GLboolean

    @(link_name = "__GLEW_ARB_draw_indirect")
    __GLEW_ARB_draw_indirect: GLboolean

    @(link_name = "__GLEW_ARB_draw_instanced")
    __GLEW_ARB_draw_instanced: GLboolean

    @(link_name = "__GLEW_ARB_enhanced_layouts")
    __GLEW_ARB_enhanced_layouts: GLboolean

    @(link_name = "__GLEW_ARB_explicit_attrib_location")
    __GLEW_ARB_explicit_attrib_location: GLboolean

    @(link_name = "__GLEW_ARB_explicit_uniform_location")
    __GLEW_ARB_explicit_uniform_location: GLboolean

    @(link_name = "__GLEW_ARB_fragment_coord_conventions")
    __GLEW_ARB_fragment_coord_conventions: GLboolean

    @(link_name = "__GLEW_ARB_fragment_layer_viewport")
    __GLEW_ARB_fragment_layer_viewport: GLboolean

    @(link_name = "__GLEW_ARB_fragment_program")
    __GLEW_ARB_fragment_program: GLboolean

    @(link_name = "__GLEW_ARB_fragment_program_shadow")
    __GLEW_ARB_fragment_program_shadow: GLboolean

    @(link_name = "__GLEW_ARB_fragment_shader")
    __GLEW_ARB_fragment_shader: GLboolean

    @(link_name = "__GLEW_ARB_fragment_shader_interlock")
    __GLEW_ARB_fragment_shader_interlock: GLboolean

    @(link_name = "__GLEW_ARB_framebuffer_no_attachments")
    __GLEW_ARB_framebuffer_no_attachments: GLboolean

    @(link_name = "__GLEW_ARB_framebuffer_object")
    __GLEW_ARB_framebuffer_object: GLboolean

    @(link_name = "__GLEW_ARB_framebuffer_sRGB")
    __GLEW_ARB_framebuffer_sRGB: GLboolean

    @(link_name = "__GLEW_ARB_geometry_shader4")
    __GLEW_ARB_geometry_shader4: GLboolean

    @(link_name = "__GLEW_ARB_get_program_binary")
    __GLEW_ARB_get_program_binary: GLboolean

    @(link_name = "__GLEW_ARB_get_texture_sub_image")
    __GLEW_ARB_get_texture_sub_image: GLboolean

    @(link_name = "__GLEW_ARB_gl_spirv")
    __GLEW_ARB_gl_spirv: GLboolean

    @(link_name = "__GLEW_ARB_gpu_shader5")
    __GLEW_ARB_gpu_shader5: GLboolean

    @(link_name = "__GLEW_ARB_gpu_shader_fp64")
    __GLEW_ARB_gpu_shader_fp64: GLboolean

    @(link_name = "__GLEW_ARB_gpu_shader_int64")
    __GLEW_ARB_gpu_shader_int64: GLboolean

    @(link_name = "__GLEW_ARB_half_float_pixel")
    __GLEW_ARB_half_float_pixel: GLboolean

    @(link_name = "__GLEW_ARB_half_float_vertex")
    __GLEW_ARB_half_float_vertex: GLboolean

    @(link_name = "__GLEW_ARB_imaging")
    __GLEW_ARB_imaging: GLboolean

    @(link_name = "__GLEW_ARB_indirect_parameters")
    __GLEW_ARB_indirect_parameters: GLboolean

    @(link_name = "__GLEW_ARB_instanced_arrays")
    __GLEW_ARB_instanced_arrays: GLboolean

    @(link_name = "__GLEW_ARB_internalformat_query")
    __GLEW_ARB_internalformat_query: GLboolean

    @(link_name = "__GLEW_ARB_internalformat_query2")
    __GLEW_ARB_internalformat_query2: GLboolean

    @(link_name = "__GLEW_ARB_invalidate_subdata")
    __GLEW_ARB_invalidate_subdata: GLboolean

    @(link_name = "__GLEW_ARB_map_buffer_alignment")
    __GLEW_ARB_map_buffer_alignment: GLboolean

    @(link_name = "__GLEW_ARB_map_buffer_range")
    __GLEW_ARB_map_buffer_range: GLboolean

    @(link_name = "__GLEW_ARB_matrix_palette")
    __GLEW_ARB_matrix_palette: GLboolean

    @(link_name = "__GLEW_ARB_multi_bind")
    __GLEW_ARB_multi_bind: GLboolean

    @(link_name = "__GLEW_ARB_multi_draw_indirect")
    __GLEW_ARB_multi_draw_indirect: GLboolean

    @(link_name = "__GLEW_ARB_multisample")
    __GLEW_ARB_multisample: GLboolean

    @(link_name = "__GLEW_ARB_multitexture")
    __GLEW_ARB_multitexture: GLboolean

    @(link_name = "__GLEW_ARB_occlusion_query")
    __GLEW_ARB_occlusion_query: GLboolean

    @(link_name = "__GLEW_ARB_occlusion_query2")
    __GLEW_ARB_occlusion_query2: GLboolean

    @(link_name = "__GLEW_ARB_parallel_shader_compile")
    __GLEW_ARB_parallel_shader_compile: GLboolean

    @(link_name = "__GLEW_ARB_pipeline_statistics_query")
    __GLEW_ARB_pipeline_statistics_query: GLboolean

    @(link_name = "__GLEW_ARB_pixel_buffer_object")
    __GLEW_ARB_pixel_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_point_parameters")
    __GLEW_ARB_point_parameters: GLboolean

    @(link_name = "__GLEW_ARB_point_sprite")
    __GLEW_ARB_point_sprite: GLboolean

    @(link_name = "__GLEW_ARB_polygon_offset_clamp")
    __GLEW_ARB_polygon_offset_clamp: GLboolean

    @(link_name = "__GLEW_ARB_post_depth_coverage")
    __GLEW_ARB_post_depth_coverage: GLboolean

    @(link_name = "__GLEW_ARB_program_interface_query")
    __GLEW_ARB_program_interface_query: GLboolean

    @(link_name = "__GLEW_ARB_provoking_vertex")
    __GLEW_ARB_provoking_vertex: GLboolean

    @(link_name = "__GLEW_ARB_query_buffer_object")
    __GLEW_ARB_query_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_robust_buffer_access_behavior")
    __GLEW_ARB_robust_buffer_access_behavior: GLboolean

    @(link_name = "__GLEW_ARB_robustness")
    __GLEW_ARB_robustness: GLboolean

    @(link_name = "__GLEW_ARB_robustness_application_isolation")
    __GLEW_ARB_robustness_application_isolation: GLboolean

    @(link_name = "__GLEW_ARB_robustness_share_group_isolation")
    __GLEW_ARB_robustness_share_group_isolation: GLboolean

    @(link_name = "__GLEW_ARB_sample_locations")
    __GLEW_ARB_sample_locations: GLboolean

    @(link_name = "__GLEW_ARB_sample_shading")
    __GLEW_ARB_sample_shading: GLboolean

    @(link_name = "__GLEW_ARB_sampler_objects")
    __GLEW_ARB_sampler_objects: GLboolean

    @(link_name = "__GLEW_ARB_seamless_cube_map")
    __GLEW_ARB_seamless_cube_map: GLboolean

    @(link_name = "__GLEW_ARB_seamless_cubemap_per_texture")
    __GLEW_ARB_seamless_cubemap_per_texture: GLboolean

    @(link_name = "__GLEW_ARB_separate_shader_objects")
    __GLEW_ARB_separate_shader_objects: GLboolean

    @(link_name = "__GLEW_ARB_shader_atomic_counter_ops")
    __GLEW_ARB_shader_atomic_counter_ops: GLboolean

    @(link_name = "__GLEW_ARB_shader_atomic_counters")
    __GLEW_ARB_shader_atomic_counters: GLboolean

    @(link_name = "__GLEW_ARB_shader_ballot")
    __GLEW_ARB_shader_ballot: GLboolean

    @(link_name = "__GLEW_ARB_shader_bit_encoding")
    __GLEW_ARB_shader_bit_encoding: GLboolean

    @(link_name = "__GLEW_ARB_shader_clock")
    __GLEW_ARB_shader_clock: GLboolean

    @(link_name = "__GLEW_ARB_shader_draw_parameters")
    __GLEW_ARB_shader_draw_parameters: GLboolean

    @(link_name = "__GLEW_ARB_shader_group_vote")
    __GLEW_ARB_shader_group_vote: GLboolean

    @(link_name = "__GLEW_ARB_shader_image_load_store")
    __GLEW_ARB_shader_image_load_store: GLboolean

    @(link_name = "__GLEW_ARB_shader_image_size")
    __GLEW_ARB_shader_image_size: GLboolean

    @(link_name = "__GLEW_ARB_shader_objects")
    __GLEW_ARB_shader_objects: GLboolean

    @(link_name = "__GLEW_ARB_shader_precision")
    __GLEW_ARB_shader_precision: GLboolean

    @(link_name = "__GLEW_ARB_shader_stencil_export")
    __GLEW_ARB_shader_stencil_export: GLboolean

    @(link_name = "__GLEW_ARB_shader_storage_buffer_object")
    __GLEW_ARB_shader_storage_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_shader_subroutine")
    __GLEW_ARB_shader_subroutine: GLboolean

    @(link_name = "__GLEW_ARB_shader_texture_image_samples")
    __GLEW_ARB_shader_texture_image_samples: GLboolean

    @(link_name = "__GLEW_ARB_shader_texture_lod")
    __GLEW_ARB_shader_texture_lod: GLboolean

    @(link_name = "__GLEW_ARB_shader_viewport_layer_array")
    __GLEW_ARB_shader_viewport_layer_array: GLboolean

    @(link_name = "__GLEW_ARB_shading_language_100")
    __GLEW_ARB_shading_language_100: GLboolean

    @(link_name = "__GLEW_ARB_shading_language_420pack")
    __GLEW_ARB_shading_language_420pack: GLboolean

    @(link_name = "__GLEW_ARB_shading_language_include")
    __GLEW_ARB_shading_language_include: GLboolean

    @(link_name = "__GLEW_ARB_shading_language_packing")
    __GLEW_ARB_shading_language_packing: GLboolean

    @(link_name = "__GLEW_ARB_shadow")
    __GLEW_ARB_shadow: GLboolean

    @(link_name = "__GLEW_ARB_shadow_ambient")
    __GLEW_ARB_shadow_ambient: GLboolean

    @(link_name = "__GLEW_ARB_sparse_buffer")
    __GLEW_ARB_sparse_buffer: GLboolean

    @(link_name = "__GLEW_ARB_sparse_texture")
    __GLEW_ARB_sparse_texture: GLboolean

    @(link_name = "__GLEW_ARB_sparse_texture2")
    __GLEW_ARB_sparse_texture2: GLboolean

    @(link_name = "__GLEW_ARB_sparse_texture_clamp")
    __GLEW_ARB_sparse_texture_clamp: GLboolean

    @(link_name = "__GLEW_ARB_spirv_extensions")
    __GLEW_ARB_spirv_extensions: GLboolean

    @(link_name = "__GLEW_ARB_stencil_texturing")
    __GLEW_ARB_stencil_texturing: GLboolean

    @(link_name = "__GLEW_ARB_sync")
    __GLEW_ARB_sync: GLboolean

    @(link_name = "__GLEW_ARB_tessellation_shader")
    __GLEW_ARB_tessellation_shader: GLboolean

    @(link_name = "__GLEW_ARB_texture_barrier")
    __GLEW_ARB_texture_barrier: GLboolean

    @(link_name = "__GLEW_ARB_texture_border_clamp")
    __GLEW_ARB_texture_border_clamp: GLboolean

    @(link_name = "__GLEW_ARB_texture_buffer_object")
    __GLEW_ARB_texture_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_texture_buffer_object_rgb32")
    __GLEW_ARB_texture_buffer_object_rgb32: GLboolean

    @(link_name = "__GLEW_ARB_texture_buffer_range")
    __GLEW_ARB_texture_buffer_range: GLboolean

    @(link_name = "__GLEW_ARB_texture_compression")
    __GLEW_ARB_texture_compression: GLboolean

    @(link_name = "__GLEW_ARB_texture_compression_bptc")
    __GLEW_ARB_texture_compression_bptc: GLboolean

    @(link_name = "__GLEW_ARB_texture_compression_rgtc")
    __GLEW_ARB_texture_compression_rgtc: GLboolean

    @(link_name = "__GLEW_ARB_texture_cube_map")
    __GLEW_ARB_texture_cube_map: GLboolean

    @(link_name = "__GLEW_ARB_texture_cube_map_array")
    __GLEW_ARB_texture_cube_map_array: GLboolean

    @(link_name = "__GLEW_ARB_texture_env_add")
    __GLEW_ARB_texture_env_add: GLboolean

    @(link_name = "__GLEW_ARB_texture_env_combine")
    __GLEW_ARB_texture_env_combine: GLboolean

    @(link_name = "__GLEW_ARB_texture_env_crossbar")
    __GLEW_ARB_texture_env_crossbar: GLboolean

    @(link_name = "__GLEW_ARB_texture_env_dot3")
    __GLEW_ARB_texture_env_dot3: GLboolean

    @(link_name = "__GLEW_ARB_texture_filter_anisotropic")
    __GLEW_ARB_texture_filter_anisotropic: GLboolean

    @(link_name = "__GLEW_ARB_texture_filter_minmax")
    __GLEW_ARB_texture_filter_minmax: GLboolean

    @(link_name = "__GLEW_ARB_texture_float")
    __GLEW_ARB_texture_float: GLboolean

    @(link_name = "__GLEW_ARB_texture_gather")
    __GLEW_ARB_texture_gather: GLboolean

    @(link_name = "__GLEW_ARB_texture_mirror_clamp_to_edge")
    __GLEW_ARB_texture_mirror_clamp_to_edge: GLboolean

    @(link_name = "__GLEW_ARB_texture_mirrored_repeat")
    __GLEW_ARB_texture_mirrored_repeat: GLboolean

    @(link_name = "__GLEW_ARB_texture_multisample")
    __GLEW_ARB_texture_multisample: GLboolean

    @(link_name = "__GLEW_ARB_texture_non_power_of_two")
    __GLEW_ARB_texture_non_power_of_two: GLboolean

    @(link_name = "__GLEW_ARB_texture_query_levels")
    __GLEW_ARB_texture_query_levels: GLboolean

    @(link_name = "__GLEW_ARB_texture_query_lod")
    __GLEW_ARB_texture_query_lod: GLboolean

    @(link_name = "__GLEW_ARB_texture_rectangle")
    __GLEW_ARB_texture_rectangle: GLboolean

    @(link_name = "__GLEW_ARB_texture_rg")
    __GLEW_ARB_texture_rg: GLboolean

    @(link_name = "__GLEW_ARB_texture_rgb10_a2ui")
    __GLEW_ARB_texture_rgb10_a2ui: GLboolean

    @(link_name = "__GLEW_ARB_texture_stencil8")
    __GLEW_ARB_texture_stencil8: GLboolean

    @(link_name = "__GLEW_ARB_texture_storage")
    __GLEW_ARB_texture_storage: GLboolean

    @(link_name = "__GLEW_ARB_texture_storage_multisample")
    __GLEW_ARB_texture_storage_multisample: GLboolean

    @(link_name = "__GLEW_ARB_texture_swizzle")
    __GLEW_ARB_texture_swizzle: GLboolean

    @(link_name = "__GLEW_ARB_texture_view")
    __GLEW_ARB_texture_view: GLboolean

    @(link_name = "__GLEW_ARB_timer_query")
    __GLEW_ARB_timer_query: GLboolean

    @(link_name = "__GLEW_ARB_transform_feedback2")
    __GLEW_ARB_transform_feedback2: GLboolean

    @(link_name = "__GLEW_ARB_transform_feedback3")
    __GLEW_ARB_transform_feedback3: GLboolean

    @(link_name = "__GLEW_ARB_transform_feedback_instanced")
    __GLEW_ARB_transform_feedback_instanced: GLboolean

    @(link_name = "__GLEW_ARB_transform_feedback_overflow_query")
    __GLEW_ARB_transform_feedback_overflow_query: GLboolean

    @(link_name = "__GLEW_ARB_transpose_matrix")
    __GLEW_ARB_transpose_matrix: GLboolean

    @(link_name = "__GLEW_ARB_uniform_buffer_object")
    __GLEW_ARB_uniform_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_vertex_array_bgra")
    __GLEW_ARB_vertex_array_bgra: GLboolean

    @(link_name = "__GLEW_ARB_vertex_array_object")
    __GLEW_ARB_vertex_array_object: GLboolean

    @(link_name = "__GLEW_ARB_vertex_attrib_64bit")
    __GLEW_ARB_vertex_attrib_64bit: GLboolean

    @(link_name = "__GLEW_ARB_vertex_attrib_binding")
    __GLEW_ARB_vertex_attrib_binding: GLboolean

    @(link_name = "__GLEW_ARB_vertex_blend")
    __GLEW_ARB_vertex_blend: GLboolean

    @(link_name = "__GLEW_ARB_vertex_buffer_object")
    __GLEW_ARB_vertex_buffer_object: GLboolean

    @(link_name = "__GLEW_ARB_vertex_program")
    __GLEW_ARB_vertex_program: GLboolean

    @(link_name = "__GLEW_ARB_vertex_shader")
    __GLEW_ARB_vertex_shader: GLboolean

    @(link_name = "__GLEW_ARB_vertex_type_10f_11f_11f_rev")
    __GLEW_ARB_vertex_type_10f_11f_11f_rev: GLboolean

    @(link_name = "__GLEW_ARB_vertex_type_2_10_10_10_rev")
    __GLEW_ARB_vertex_type_2_10_10_10_rev: GLboolean

    @(link_name = "__GLEW_ARB_viewport_array")
    __GLEW_ARB_viewport_array: GLboolean

    @(link_name = "__GLEW_ARB_window_pos")
    __GLEW_ARB_window_pos: GLboolean

    @(link_name = "__GLEW_ARM_mali_program_binary")
    __GLEW_ARM_mali_program_binary: GLboolean

    @(link_name = "__GLEW_ARM_mali_shader_binary")
    __GLEW_ARM_mali_shader_binary: GLboolean

    @(link_name = "__GLEW_ARM_rgba8")
    __GLEW_ARM_rgba8: GLboolean

    @(link_name = "__GLEW_ARM_shader_core_properties")
    __GLEW_ARM_shader_core_properties: GLboolean

    @(link_name = "__GLEW_ARM_shader_framebuffer_fetch")
    __GLEW_ARM_shader_framebuffer_fetch: GLboolean

    @(link_name = "__GLEW_ARM_shader_framebuffer_fetch_depth_stencil")
    __GLEW_ARM_shader_framebuffer_fetch_depth_stencil: GLboolean

    @(link_name = "__GLEW_ARM_texture_unnormalized_coordinates")
    __GLEW_ARM_texture_unnormalized_coordinates: GLboolean

    @(link_name = "__GLEW_ATIX_point_sprites")
    __GLEW_ATIX_point_sprites: GLboolean

    @(link_name = "__GLEW_ATIX_texture_env_combine3")
    __GLEW_ATIX_texture_env_combine3: GLboolean

    @(link_name = "__GLEW_ATIX_texture_env_route")
    __GLEW_ATIX_texture_env_route: GLboolean

    @(link_name = "__GLEW_ATIX_vertex_shader_output_point_size")
    __GLEW_ATIX_vertex_shader_output_point_size: GLboolean

    @(link_name = "__GLEW_ATI_draw_buffers")
    __GLEW_ATI_draw_buffers: GLboolean

    @(link_name = "__GLEW_ATI_element_array")
    __GLEW_ATI_element_array: GLboolean

    @(link_name = "__GLEW_ATI_envmap_bumpmap")
    __GLEW_ATI_envmap_bumpmap: GLboolean

    @(link_name = "__GLEW_ATI_fragment_shader")
    __GLEW_ATI_fragment_shader: GLboolean

    @(link_name = "__GLEW_ATI_map_object_buffer")
    __GLEW_ATI_map_object_buffer: GLboolean

    @(link_name = "__GLEW_ATI_meminfo")
    __GLEW_ATI_meminfo: GLboolean

    @(link_name = "__GLEW_ATI_pn_triangles")
    __GLEW_ATI_pn_triangles: GLboolean

    @(link_name = "__GLEW_ATI_separate_stencil")
    __GLEW_ATI_separate_stencil: GLboolean

    @(link_name = "__GLEW_ATI_shader_texture_lod")
    __GLEW_ATI_shader_texture_lod: GLboolean

    @(link_name = "__GLEW_ATI_text_fragment_shader")
    __GLEW_ATI_text_fragment_shader: GLboolean

    @(link_name = "__GLEW_ATI_texture_compression_3dc")
    __GLEW_ATI_texture_compression_3dc: GLboolean

    @(link_name = "__GLEW_ATI_texture_env_combine3")
    __GLEW_ATI_texture_env_combine3: GLboolean

    @(link_name = "__GLEW_ATI_texture_float")
    __GLEW_ATI_texture_float: GLboolean

    @(link_name = "__GLEW_ATI_texture_mirror_once")
    __GLEW_ATI_texture_mirror_once: GLboolean

    @(link_name = "__GLEW_ATI_vertex_array_object")
    __GLEW_ATI_vertex_array_object: GLboolean

    @(link_name = "__GLEW_ATI_vertex_attrib_array_object")
    __GLEW_ATI_vertex_attrib_array_object: GLboolean

    @(link_name = "__GLEW_ATI_vertex_streams")
    __GLEW_ATI_vertex_streams: GLboolean

    @(link_name = "__GLEW_DMP_program_binary")
    __GLEW_DMP_program_binary: GLboolean

    @(link_name = "__GLEW_DMP_shader_binary")
    __GLEW_DMP_shader_binary: GLboolean

    @(link_name = "__GLEW_EXT_422_pixels")
    __GLEW_EXT_422_pixels: GLboolean

    @(link_name = "__GLEW_EXT_Cg_shader")
    __GLEW_EXT_Cg_shader: GLboolean

    @(link_name = "__GLEW_EXT_EGL_image_array")
    __GLEW_EXT_EGL_image_array: GLboolean

    @(link_name = "__GLEW_EXT_EGL_image_external_wrap_modes")
    __GLEW_EXT_EGL_image_external_wrap_modes: GLboolean

    @(link_name = "__GLEW_EXT_EGL_image_storage")
    __GLEW_EXT_EGL_image_storage: GLboolean

    @(link_name = "__GLEW_EXT_EGL_image_storage_compression")
    __GLEW_EXT_EGL_image_storage_compression: GLboolean

    @(link_name = "__GLEW_EXT_EGL_sync")
    __GLEW_EXT_EGL_sync: GLboolean

    @(link_name = "__GLEW_EXT_YUV_target")
    __GLEW_EXT_YUV_target: GLboolean

    @(link_name = "__GLEW_EXT_abgr")
    __GLEW_EXT_abgr: GLboolean

    @(link_name = "__GLEW_EXT_base_instance")
    __GLEW_EXT_base_instance: GLboolean

    @(link_name = "__GLEW_EXT_bgra")
    __GLEW_EXT_bgra: GLboolean

    @(link_name = "__GLEW_EXT_bindable_uniform")
    __GLEW_EXT_bindable_uniform: GLboolean

    @(link_name = "__GLEW_EXT_blend_color")
    __GLEW_EXT_blend_color: GLboolean

    @(link_name = "__GLEW_EXT_blend_equation_separate")
    __GLEW_EXT_blend_equation_separate: GLboolean

    @(link_name = "__GLEW_EXT_blend_func_extended")
    __GLEW_EXT_blend_func_extended: GLboolean

    @(link_name = "__GLEW_EXT_blend_func_separate")
    __GLEW_EXT_blend_func_separate: GLboolean

    @(link_name = "__GLEW_EXT_blend_logic_op")
    __GLEW_EXT_blend_logic_op: GLboolean

    @(link_name = "__GLEW_EXT_blend_minmax")
    __GLEW_EXT_blend_minmax: GLboolean

    @(link_name = "__GLEW_EXT_blend_subtract")
    __GLEW_EXT_blend_subtract: GLboolean

    @(link_name = "__GLEW_EXT_buffer_storage")
    __GLEW_EXT_buffer_storage: GLboolean

    @(link_name = "__GLEW_EXT_clear_texture")
    __GLEW_EXT_clear_texture: GLboolean

    @(link_name = "__GLEW_EXT_clip_control")
    __GLEW_EXT_clip_control: GLboolean

    @(link_name = "__GLEW_EXT_clip_cull_distance")
    __GLEW_EXT_clip_cull_distance: GLboolean

    @(link_name = "__GLEW_EXT_clip_volume_hint")
    __GLEW_EXT_clip_volume_hint: GLboolean

    @(link_name = "__GLEW_EXT_cmyka")
    __GLEW_EXT_cmyka: GLboolean

    @(link_name = "__GLEW_EXT_color_buffer_float")
    __GLEW_EXT_color_buffer_float: GLboolean

    @(link_name = "__GLEW_EXT_color_buffer_half_float")
    __GLEW_EXT_color_buffer_half_float: GLboolean

    @(link_name = "__GLEW_EXT_color_subtable")
    __GLEW_EXT_color_subtable: GLboolean

    @(link_name = "__GLEW_EXT_compiled_vertex_array")
    __GLEW_EXT_compiled_vertex_array: GLboolean

    @(link_name = "__GLEW_EXT_compressed_ETC1_RGB8_sub_texture")
    __GLEW_EXT_compressed_ETC1_RGB8_sub_texture: GLboolean

    @(link_name = "__GLEW_EXT_conservative_depth")
    __GLEW_EXT_conservative_depth: GLboolean

    @(link_name = "__GLEW_EXT_convolution")
    __GLEW_EXT_convolution: GLboolean

    @(link_name = "__GLEW_EXT_coordinate_frame")
    __GLEW_EXT_coordinate_frame: GLboolean

    @(link_name = "__GLEW_EXT_copy_image")
    __GLEW_EXT_copy_image: GLboolean

    @(link_name = "__GLEW_EXT_copy_texture")
    __GLEW_EXT_copy_texture: GLboolean

    @(link_name = "__GLEW_EXT_cull_vertex")
    __GLEW_EXT_cull_vertex: GLboolean

    @(link_name = "__GLEW_EXT_debug_label")
    __GLEW_EXT_debug_label: GLboolean

    @(link_name = "__GLEW_EXT_debug_marker")
    __GLEW_EXT_debug_marker: GLboolean

    @(link_name = "__GLEW_EXT_depth_bounds_test")
    __GLEW_EXT_depth_bounds_test: GLboolean

    @(link_name = "__GLEW_EXT_depth_clamp")
    __GLEW_EXT_depth_clamp: GLboolean

    @(link_name = "__GLEW_EXT_direct_state_access")
    __GLEW_EXT_direct_state_access: GLboolean

    @(link_name = "__GLEW_EXT_discard_framebuffer")
    __GLEW_EXT_discard_framebuffer: GLboolean

    @(link_name = "__GLEW_EXT_disjoint_timer_query")
    __GLEW_EXT_disjoint_timer_query: GLboolean

    @(link_name = "__GLEW_EXT_draw_buffers")
    __GLEW_EXT_draw_buffers: GLboolean

    @(link_name = "__GLEW_EXT_draw_buffers2")
    __GLEW_EXT_draw_buffers2: GLboolean

    @(link_name = "__GLEW_EXT_draw_buffers_indexed")
    __GLEW_EXT_draw_buffers_indexed: GLboolean

    @(link_name = "__GLEW_EXT_draw_elements_base_vertex")
    __GLEW_EXT_draw_elements_base_vertex: GLboolean

    @(link_name = "__GLEW_EXT_draw_instanced")
    __GLEW_EXT_draw_instanced: GLboolean

    @(link_name = "__GLEW_EXT_draw_range_elements")
    __GLEW_EXT_draw_range_elements: GLboolean

    @(link_name = "__GLEW_EXT_draw_transform_feedback")
    __GLEW_EXT_draw_transform_feedback: GLboolean

    @(link_name = "__GLEW_EXT_external_buffer")
    __GLEW_EXT_external_buffer: GLboolean

    @(link_name = "__GLEW_EXT_float_blend")
    __GLEW_EXT_float_blend: GLboolean

    @(link_name = "__GLEW_EXT_fog_coord")
    __GLEW_EXT_fog_coord: GLboolean

    @(link_name = "__GLEW_EXT_frag_depth")
    __GLEW_EXT_frag_depth: GLboolean

    @(link_name = "__GLEW_EXT_fragment_lighting")
    __GLEW_EXT_fragment_lighting: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_blit")
    __GLEW_EXT_framebuffer_blit: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_blit_layers")
    __GLEW_EXT_framebuffer_blit_layers: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_multisample")
    __GLEW_EXT_framebuffer_multisample: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_multisample_blit_scaled")
    __GLEW_EXT_framebuffer_multisample_blit_scaled: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_object")
    __GLEW_EXT_framebuffer_object: GLboolean

    @(link_name = "__GLEW_EXT_framebuffer_sRGB")
    __GLEW_EXT_framebuffer_sRGB: GLboolean

    @(link_name = "__GLEW_EXT_geometry_point_size")
    __GLEW_EXT_geometry_point_size: GLboolean

    @(link_name = "__GLEW_EXT_geometry_shader")
    __GLEW_EXT_geometry_shader: GLboolean

    @(link_name = "__GLEW_EXT_geometry_shader4")
    __GLEW_EXT_geometry_shader4: GLboolean

    @(link_name = "__GLEW_EXT_gpu_program_parameters")
    __GLEW_EXT_gpu_program_parameters: GLboolean

    @(link_name = "__GLEW_EXT_gpu_shader4")
    __GLEW_EXT_gpu_shader4: GLboolean

    @(link_name = "__GLEW_EXT_gpu_shader5")
    __GLEW_EXT_gpu_shader5: GLboolean

    @(link_name = "__GLEW_EXT_histogram")
    __GLEW_EXT_histogram: GLboolean

    @(link_name = "__GLEW_EXT_index_array_formats")
    __GLEW_EXT_index_array_formats: GLboolean

    @(link_name = "__GLEW_EXT_index_func")
    __GLEW_EXT_index_func: GLboolean

    @(link_name = "__GLEW_EXT_index_material")
    __GLEW_EXT_index_material: GLboolean

    @(link_name = "__GLEW_EXT_index_texture")
    __GLEW_EXT_index_texture: GLboolean

    @(link_name = "__GLEW_EXT_instanced_arrays")
    __GLEW_EXT_instanced_arrays: GLboolean

    @(link_name = "__GLEW_EXT_light_texture")
    __GLEW_EXT_light_texture: GLboolean

    @(link_name = "__GLEW_EXT_map_buffer_range")
    __GLEW_EXT_map_buffer_range: GLboolean

    @(link_name = "__GLEW_EXT_memory_object")
    __GLEW_EXT_memory_object: GLboolean

    @(link_name = "__GLEW_EXT_memory_object_fd")
    __GLEW_EXT_memory_object_fd: GLboolean

    @(link_name = "__GLEW_EXT_memory_object_win32")
    __GLEW_EXT_memory_object_win32: GLboolean

    @(link_name = "__GLEW_EXT_misc_attribute")
    __GLEW_EXT_misc_attribute: GLboolean

    @(link_name = "__GLEW_EXT_multi_draw_arrays")
    __GLEW_EXT_multi_draw_arrays: GLboolean

    @(link_name = "__GLEW_EXT_multi_draw_indirect")
    __GLEW_EXT_multi_draw_indirect: GLboolean

    @(link_name = "__GLEW_EXT_multiple_textures")
    __GLEW_EXT_multiple_textures: GLboolean

    @(link_name = "__GLEW_EXT_multisample")
    __GLEW_EXT_multisample: GLboolean

    @(link_name = "__GLEW_EXT_multisample_compatibility")
    __GLEW_EXT_multisample_compatibility: GLboolean

    @(link_name = "__GLEW_EXT_multisampled_render_to_texture")
    __GLEW_EXT_multisampled_render_to_texture: GLboolean

    @(link_name = "__GLEW_EXT_multisampled_render_to_texture2")
    __GLEW_EXT_multisampled_render_to_texture2: GLboolean

    @(link_name = "__GLEW_EXT_multiview_draw_buffers")
    __GLEW_EXT_multiview_draw_buffers: GLboolean

    @(link_name = "__GLEW_EXT_multiview_tessellation_geometry_shader")
    __GLEW_EXT_multiview_tessellation_geometry_shader: GLboolean

    @(link_name = "__GLEW_EXT_multiview_texture_multisample")
    __GLEW_EXT_multiview_texture_multisample: GLboolean

    @(link_name = "__GLEW_EXT_multiview_timer_query")
    __GLEW_EXT_multiview_timer_query: GLboolean

    @(link_name = "__GLEW_EXT_occlusion_query_boolean")
    __GLEW_EXT_occlusion_query_boolean: GLboolean

    @(link_name = "__GLEW_EXT_packed_depth_stencil")
    __GLEW_EXT_packed_depth_stencil: GLboolean

    @(link_name = "__GLEW_EXT_packed_float")
    __GLEW_EXT_packed_float: GLboolean

    @(link_name = "__GLEW_EXT_packed_pixels")
    __GLEW_EXT_packed_pixels: GLboolean

    @(link_name = "__GLEW_EXT_paletted_texture")
    __GLEW_EXT_paletted_texture: GLboolean

    @(link_name = "__GLEW_EXT_pixel_buffer_object")
    __GLEW_EXT_pixel_buffer_object: GLboolean

    @(link_name = "__GLEW_EXT_pixel_transform")
    __GLEW_EXT_pixel_transform: GLboolean

    @(link_name = "__GLEW_EXT_pixel_transform_color_table")
    __GLEW_EXT_pixel_transform_color_table: GLboolean

    @(link_name = "__GLEW_EXT_point_parameters")
    __GLEW_EXT_point_parameters: GLboolean

    @(link_name = "__GLEW_EXT_polygon_offset")
    __GLEW_EXT_polygon_offset: GLboolean

    @(link_name = "__GLEW_EXT_polygon_offset_clamp")
    __GLEW_EXT_polygon_offset_clamp: GLboolean

    @(link_name = "__GLEW_EXT_post_depth_coverage")
    __GLEW_EXT_post_depth_coverage: GLboolean

    @(link_name = "__GLEW_EXT_primitive_bounding_box")
    __GLEW_EXT_primitive_bounding_box: GLboolean

    @(link_name = "__GLEW_EXT_protected_textures")
    __GLEW_EXT_protected_textures: GLboolean

    @(link_name = "__GLEW_EXT_provoking_vertex")
    __GLEW_EXT_provoking_vertex: GLboolean

    @(link_name = "__GLEW_EXT_pvrtc_sRGB")
    __GLEW_EXT_pvrtc_sRGB: GLboolean

    @(link_name = "__GLEW_EXT_raster_multisample")
    __GLEW_EXT_raster_multisample: GLboolean

    @(link_name = "__GLEW_EXT_read_format_bgra")
    __GLEW_EXT_read_format_bgra: GLboolean

    @(link_name = "__GLEW_EXT_render_snorm")
    __GLEW_EXT_render_snorm: GLboolean

    @(link_name = "__GLEW_EXT_rescale_normal")
    __GLEW_EXT_rescale_normal: GLboolean

    @(link_name = "__GLEW_EXT_robustness")
    __GLEW_EXT_robustness: GLboolean

    @(link_name = "__GLEW_EXT_sRGB")
    __GLEW_EXT_sRGB: GLboolean

    @(link_name = "__GLEW_EXT_sRGB_write_control")
    __GLEW_EXT_sRGB_write_control: GLboolean

    @(link_name = "__GLEW_EXT_scene_marker")
    __GLEW_EXT_scene_marker: GLboolean

    @(link_name = "__GLEW_EXT_secondary_color")
    __GLEW_EXT_secondary_color: GLboolean

    @(link_name = "__GLEW_EXT_semaphore")
    __GLEW_EXT_semaphore: GLboolean

    @(link_name = "__GLEW_EXT_semaphore_fd")
    __GLEW_EXT_semaphore_fd: GLboolean

    @(link_name = "__GLEW_EXT_semaphore_win32")
    __GLEW_EXT_semaphore_win32: GLboolean

    @(link_name = "__GLEW_EXT_separate_depth_stencil")
    __GLEW_EXT_separate_depth_stencil: GLboolean

    @(link_name = "__GLEW_EXT_separate_shader_objects")
    __GLEW_EXT_separate_shader_objects: GLboolean

    @(link_name = "__GLEW_EXT_separate_specular_color")
    __GLEW_EXT_separate_specular_color: GLboolean

    @(link_name = "__GLEW_EXT_shader_framebuffer_fetch")
    __GLEW_EXT_shader_framebuffer_fetch: GLboolean

    @(link_name = "__GLEW_EXT_shader_framebuffer_fetch_non_coherent")
    __GLEW_EXT_shader_framebuffer_fetch_non_coherent: GLboolean

    @(link_name = "__GLEW_EXT_shader_group_vote")
    __GLEW_EXT_shader_group_vote: GLboolean

    @(link_name = "__GLEW_EXT_shader_image_load_formatted")
    __GLEW_EXT_shader_image_load_formatted: GLboolean

    @(link_name = "__GLEW_EXT_shader_image_load_store")
    __GLEW_EXT_shader_image_load_store: GLboolean

    @(link_name = "__GLEW_EXT_shader_implicit_conversions")
    __GLEW_EXT_shader_implicit_conversions: GLboolean

    @(link_name = "__GLEW_EXT_shader_integer_mix")
    __GLEW_EXT_shader_integer_mix: GLboolean

    @(link_name = "__GLEW_EXT_shader_io_blocks")
    __GLEW_EXT_shader_io_blocks: GLboolean

    @(link_name = "__GLEW_EXT_shader_non_constant_global_initializers")
    __GLEW_EXT_shader_non_constant_global_initializers: GLboolean

    @(link_name = "__GLEW_EXT_shader_pixel_local_storage")
    __GLEW_EXT_shader_pixel_local_storage: GLboolean

    @(link_name = "__GLEW_EXT_shader_pixel_local_storage2")
    __GLEW_EXT_shader_pixel_local_storage2: GLboolean

    @(link_name = "__GLEW_EXT_shader_samples_identical")
    __GLEW_EXT_shader_samples_identical: GLboolean

    @(link_name = "__GLEW_EXT_shader_texture_lod")
    __GLEW_EXT_shader_texture_lod: GLboolean

    @(link_name = "__GLEW_EXT_shadow_funcs")
    __GLEW_EXT_shadow_funcs: GLboolean

    @(link_name = "__GLEW_EXT_shadow_samplers")
    __GLEW_EXT_shadow_samplers: GLboolean

    @(link_name = "__GLEW_EXT_shared_texture_palette")
    __GLEW_EXT_shared_texture_palette: GLboolean

    @(link_name = "__GLEW_EXT_sparse_texture")
    __GLEW_EXT_sparse_texture: GLboolean

    @(link_name = "__GLEW_EXT_sparse_texture2")
    __GLEW_EXT_sparse_texture2: GLboolean

    @(link_name = "__GLEW_EXT_static_vertex_array")
    __GLEW_EXT_static_vertex_array: GLboolean

    @(link_name = "__GLEW_EXT_stencil_clear_tag")
    __GLEW_EXT_stencil_clear_tag: GLboolean

    @(link_name = "__GLEW_EXT_stencil_two_side")
    __GLEW_EXT_stencil_two_side: GLboolean

    @(link_name = "__GLEW_EXT_stencil_wrap")
    __GLEW_EXT_stencil_wrap: GLboolean

    @(link_name = "__GLEW_EXT_subtexture")
    __GLEW_EXT_subtexture: GLboolean

    @(link_name = "__GLEW_EXT_tessellation_point_size")
    __GLEW_EXT_tessellation_point_size: GLboolean

    @(link_name = "__GLEW_EXT_tessellation_shader")
    __GLEW_EXT_tessellation_shader: GLboolean

    @(link_name = "__GLEW_EXT_texture")
    __GLEW_EXT_texture: GLboolean

    @(link_name = "__GLEW_EXT_texture3D")
    __GLEW_EXT_texture3D: GLboolean

    @(link_name = "__GLEW_EXT_texture_array")
    __GLEW_EXT_texture_array: GLboolean

    @(link_name = "__GLEW_EXT_texture_border_clamp")
    __GLEW_EXT_texture_border_clamp: GLboolean

    @(link_name = "__GLEW_EXT_texture_buffer")
    __GLEW_EXT_texture_buffer: GLboolean

    @(link_name = "__GLEW_EXT_texture_buffer_object")
    __GLEW_EXT_texture_buffer_object: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_astc_decode_mode")
    __GLEW_EXT_texture_compression_astc_decode_mode: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5")
    __GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_bptc")
    __GLEW_EXT_texture_compression_bptc: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_dxt1")
    __GLEW_EXT_texture_compression_dxt1: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_latc")
    __GLEW_EXT_texture_compression_latc: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_rgtc")
    __GLEW_EXT_texture_compression_rgtc: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_s3tc")
    __GLEW_EXT_texture_compression_s3tc: GLboolean

    @(link_name = "__GLEW_EXT_texture_compression_s3tc_srgb")
    __GLEW_EXT_texture_compression_s3tc_srgb: GLboolean

    @(link_name = "__GLEW_EXT_texture_cube_map")
    __GLEW_EXT_texture_cube_map: GLboolean

    @(link_name = "__GLEW_EXT_texture_cube_map_array")
    __GLEW_EXT_texture_cube_map_array: GLboolean

    @(link_name = "__GLEW_EXT_texture_edge_clamp")
    __GLEW_EXT_texture_edge_clamp: GLboolean

    @(link_name = "__GLEW_EXT_texture_env")
    __GLEW_EXT_texture_env: GLboolean

    @(link_name = "__GLEW_EXT_texture_env_add")
    __GLEW_EXT_texture_env_add: GLboolean

    @(link_name = "__GLEW_EXT_texture_env_combine")
    __GLEW_EXT_texture_env_combine: GLboolean

    @(link_name = "__GLEW_EXT_texture_env_dot3")
    __GLEW_EXT_texture_env_dot3: GLboolean

    @(link_name = "__GLEW_EXT_texture_filter_anisotropic")
    __GLEW_EXT_texture_filter_anisotropic: GLboolean

    @(link_name = "__GLEW_EXT_texture_filter_minmax")
    __GLEW_EXT_texture_filter_minmax: GLboolean

    @(link_name = "__GLEW_EXT_texture_format_BGRA8888")
    __GLEW_EXT_texture_format_BGRA8888: GLboolean

    @(link_name = "__GLEW_EXT_texture_format_sRGB_override")
    __GLEW_EXT_texture_format_sRGB_override: GLboolean

    @(link_name = "__GLEW_EXT_texture_integer")
    __GLEW_EXT_texture_integer: GLboolean

    @(link_name = "__GLEW_EXT_texture_lod_bias")
    __GLEW_EXT_texture_lod_bias: GLboolean

    @(link_name = "__GLEW_EXT_texture_mirror_clamp")
    __GLEW_EXT_texture_mirror_clamp: GLboolean

    @(link_name = "__GLEW_EXT_texture_mirror_clamp_to_edge")
    __GLEW_EXT_texture_mirror_clamp_to_edge: GLboolean

    @(link_name = "__GLEW_EXT_texture_norm16")
    __GLEW_EXT_texture_norm16: GLboolean

    @(link_name = "__GLEW_EXT_texture_object")
    __GLEW_EXT_texture_object: GLboolean

    @(link_name = "__GLEW_EXT_texture_perturb_normal")
    __GLEW_EXT_texture_perturb_normal: GLboolean

    @(link_name = "__GLEW_EXT_texture_query_lod")
    __GLEW_EXT_texture_query_lod: GLboolean

    @(link_name = "__GLEW_EXT_texture_rectangle")
    __GLEW_EXT_texture_rectangle: GLboolean

    @(link_name = "__GLEW_EXT_texture_rg")
    __GLEW_EXT_texture_rg: GLboolean

    @(link_name = "__GLEW_EXT_texture_sRGB")
    __GLEW_EXT_texture_sRGB: GLboolean

    @(link_name = "__GLEW_EXT_texture_sRGB_R8")
    __GLEW_EXT_texture_sRGB_R8: GLboolean

    @(link_name = "__GLEW_EXT_texture_sRGB_RG8")
    __GLEW_EXT_texture_sRGB_RG8: GLboolean

    @(link_name = "__GLEW_EXT_texture_sRGB_decode")
    __GLEW_EXT_texture_sRGB_decode: GLboolean

    @(link_name = "__GLEW_EXT_texture_shadow_lod")
    __GLEW_EXT_texture_shadow_lod: GLboolean

    @(link_name = "__GLEW_EXT_texture_shared_exponent")
    __GLEW_EXT_texture_shared_exponent: GLboolean

    @(link_name = "__GLEW_EXT_texture_snorm")
    __GLEW_EXT_texture_snorm: GLboolean

    @(link_name = "__GLEW_EXT_texture_storage")
    __GLEW_EXT_texture_storage: GLboolean

    @(link_name = "__GLEW_EXT_texture_storage_compression")
    __GLEW_EXT_texture_storage_compression: GLboolean

    @(link_name = "__GLEW_EXT_texture_swizzle")
    __GLEW_EXT_texture_swizzle: GLboolean

    @(link_name = "__GLEW_EXT_texture_type_2_10_10_10_REV")
    __GLEW_EXT_texture_type_2_10_10_10_REV: GLboolean

    @(link_name = "__GLEW_EXT_texture_view")
    __GLEW_EXT_texture_view: GLboolean

    @(link_name = "__GLEW_EXT_timer_query")
    __GLEW_EXT_timer_query: GLboolean

    @(link_name = "__GLEW_EXT_transform_feedback")
    __GLEW_EXT_transform_feedback: GLboolean

    @(link_name = "__GLEW_EXT_unpack_subimage")
    __GLEW_EXT_unpack_subimage: GLboolean

    @(link_name = "__GLEW_EXT_vertex_array")
    __GLEW_EXT_vertex_array: GLboolean

    @(link_name = "__GLEW_EXT_vertex_array_bgra")
    __GLEW_EXT_vertex_array_bgra: GLboolean

    @(link_name = "__GLEW_EXT_vertex_array_setXXX")
    __GLEW_EXT_vertex_array_setXXX: GLboolean

    @(link_name = "__GLEW_EXT_vertex_attrib_64bit")
    __GLEW_EXT_vertex_attrib_64bit: GLboolean

    @(link_name = "__GLEW_EXT_vertex_shader")
    __GLEW_EXT_vertex_shader: GLboolean

    @(link_name = "__GLEW_EXT_vertex_weighting")
    __GLEW_EXT_vertex_weighting: GLboolean

    @(link_name = "__GLEW_EXT_win32_keyed_mutex")
    __GLEW_EXT_win32_keyed_mutex: GLboolean

    @(link_name = "__GLEW_EXT_window_rectangles")
    __GLEW_EXT_window_rectangles: GLboolean

    @(link_name = "__GLEW_EXT_x11_sync_object")
    __GLEW_EXT_x11_sync_object: GLboolean

    @(link_name = "__GLEW_FJ_shader_binary_GCCSO")
    __GLEW_FJ_shader_binary_GCCSO: GLboolean

    @(link_name = "__GLEW_GREMEDY_frame_terminator")
    __GLEW_GREMEDY_frame_terminator: GLboolean

    @(link_name = "__GLEW_GREMEDY_string_marker")
    __GLEW_GREMEDY_string_marker: GLboolean

    @(link_name = "__GLEW_HP_convolution_border_modes")
    __GLEW_HP_convolution_border_modes: GLboolean

    @(link_name = "__GLEW_HP_image_transform")
    __GLEW_HP_image_transform: GLboolean

    @(link_name = "__GLEW_HP_occlusion_test")
    __GLEW_HP_occlusion_test: GLboolean

    @(link_name = "__GLEW_HP_texture_lighting")
    __GLEW_HP_texture_lighting: GLboolean

    @(link_name = "__GLEW_IBM_cull_vertex")
    __GLEW_IBM_cull_vertex: GLboolean

    @(link_name = "__GLEW_IBM_multimode_draw_arrays")
    __GLEW_IBM_multimode_draw_arrays: GLboolean

    @(link_name = "__GLEW_IBM_rasterpos_clip")
    __GLEW_IBM_rasterpos_clip: GLboolean

    @(link_name = "__GLEW_IBM_static_data")
    __GLEW_IBM_static_data: GLboolean

    @(link_name = "__GLEW_IBM_texture_mirrored_repeat")
    __GLEW_IBM_texture_mirrored_repeat: GLboolean

    @(link_name = "__GLEW_IBM_vertex_array_lists")
    __GLEW_IBM_vertex_array_lists: GLboolean

    @(link_name = "__GLEW_IMG_bindless_texture")
    __GLEW_IMG_bindless_texture: GLboolean

    @(link_name = "__GLEW_IMG_framebuffer_downsample")
    __GLEW_IMG_framebuffer_downsample: GLboolean

    @(link_name = "__GLEW_IMG_multisampled_render_to_texture")
    __GLEW_IMG_multisampled_render_to_texture: GLboolean

    @(link_name = "__GLEW_IMG_program_binary")
    __GLEW_IMG_program_binary: GLboolean

    @(link_name = "__GLEW_IMG_pvric_end_to_end_signature")
    __GLEW_IMG_pvric_end_to_end_signature: GLboolean

    @(link_name = "__GLEW_IMG_read_format")
    __GLEW_IMG_read_format: GLboolean

    @(link_name = "__GLEW_IMG_shader_binary")
    __GLEW_IMG_shader_binary: GLboolean

    @(link_name = "__GLEW_IMG_texture_compression_pvrtc")
    __GLEW_IMG_texture_compression_pvrtc: GLboolean

    @(link_name = "__GLEW_IMG_texture_compression_pvrtc2")
    __GLEW_IMG_texture_compression_pvrtc2: GLboolean

    @(link_name = "__GLEW_IMG_texture_env_enhanced_fixed_function")
    __GLEW_IMG_texture_env_enhanced_fixed_function: GLboolean

    @(link_name = "__GLEW_IMG_texture_filter_cubic")
    __GLEW_IMG_texture_filter_cubic: GLboolean

    @(link_name = "__GLEW_IMG_tile_region_protection")
    __GLEW_IMG_tile_region_protection: GLboolean

    @(link_name = "__GLEW_INGR_color_clamp")
    __GLEW_INGR_color_clamp: GLboolean

    @(link_name = "__GLEW_INGR_interlace_read")
    __GLEW_INGR_interlace_read: GLboolean

    @(link_name = "__GLEW_INTEL_blackhole_render")
    __GLEW_INTEL_blackhole_render: GLboolean

    @(link_name = "__GLEW_INTEL_conservative_rasterization")
    __GLEW_INTEL_conservative_rasterization: GLboolean

    @(link_name = "__GLEW_INTEL_fragment_shader_ordering")
    __GLEW_INTEL_fragment_shader_ordering: GLboolean

    @(link_name = "__GLEW_INTEL_framebuffer_CMAA")
    __GLEW_INTEL_framebuffer_CMAA: GLboolean

    @(link_name = "__GLEW_INTEL_map_texture")
    __GLEW_INTEL_map_texture: GLboolean

    @(link_name = "__GLEW_INTEL_parallel_arrays")
    __GLEW_INTEL_parallel_arrays: GLboolean

    @(link_name = "__GLEW_INTEL_performance_query")
    __GLEW_INTEL_performance_query: GLboolean

    @(link_name = "__GLEW_INTEL_shader_integer_functions2")
    __GLEW_INTEL_shader_integer_functions2: GLboolean

    @(link_name = "__GLEW_INTEL_texture_scissor")
    __GLEW_INTEL_texture_scissor: GLboolean

    @(link_name = "__GLEW_KHR_blend_equation_advanced")
    __GLEW_KHR_blend_equation_advanced: GLboolean

    @(link_name = "__GLEW_KHR_blend_equation_advanced_coherent")
    __GLEW_KHR_blend_equation_advanced_coherent: GLboolean

    @(link_name = "__GLEW_KHR_context_flush_control")
    __GLEW_KHR_context_flush_control: GLboolean

    @(link_name = "__GLEW_KHR_debug")
    __GLEW_KHR_debug: GLboolean

    @(link_name = "__GLEW_KHR_no_error")
    __GLEW_KHR_no_error: GLboolean

    @(link_name = "__GLEW_KHR_parallel_shader_compile")
    __GLEW_KHR_parallel_shader_compile: GLboolean

    @(link_name = "__GLEW_KHR_robust_buffer_access_behavior")
    __GLEW_KHR_robust_buffer_access_behavior: GLboolean

    @(link_name = "__GLEW_KHR_robustness")
    __GLEW_KHR_robustness: GLboolean

    @(link_name = "__GLEW_KHR_shader_subgroup")
    __GLEW_KHR_shader_subgroup: GLboolean

    @(link_name = "__GLEW_KHR_texture_compression_astc_hdr")
    __GLEW_KHR_texture_compression_astc_hdr: GLboolean

    @(link_name = "__GLEW_KHR_texture_compression_astc_ldr")
    __GLEW_KHR_texture_compression_astc_ldr: GLboolean

    @(link_name = "__GLEW_KHR_texture_compression_astc_sliced_3d")
    __GLEW_KHR_texture_compression_astc_sliced_3d: GLboolean

    @(link_name = "__GLEW_KTX_buffer_region")
    __GLEW_KTX_buffer_region: GLboolean

    @(link_name = "__GLEW_MESAX_texture_stack")
    __GLEW_MESAX_texture_stack: GLboolean

    @(link_name = "__GLEW_MESA_bgra")
    __GLEW_MESA_bgra: GLboolean

    @(link_name = "__GLEW_MESA_framebuffer_flip_x")
    __GLEW_MESA_framebuffer_flip_x: GLboolean

    @(link_name = "__GLEW_MESA_framebuffer_flip_y")
    __GLEW_MESA_framebuffer_flip_y: GLboolean

    @(link_name = "__GLEW_MESA_framebuffer_swap_xy")
    __GLEW_MESA_framebuffer_swap_xy: GLboolean

    @(link_name = "__GLEW_MESA_pack_invert")
    __GLEW_MESA_pack_invert: GLboolean

    @(link_name = "__GLEW_MESA_program_binary_formats")
    __GLEW_MESA_program_binary_formats: GLboolean

    @(link_name = "__GLEW_MESA_resize_buffers")
    __GLEW_MESA_resize_buffers: GLboolean

    @(link_name = "__GLEW_MESA_shader_integer_functions")
    __GLEW_MESA_shader_integer_functions: GLboolean

    @(link_name = "__GLEW_MESA_tile_raster_order")
    __GLEW_MESA_tile_raster_order: GLboolean

    @(link_name = "__GLEW_MESA_window_pos")
    __GLEW_MESA_window_pos: GLboolean

    @(link_name = "__GLEW_MESA_ycbcr_texture")
    __GLEW_MESA_ycbcr_texture: GLboolean

    @(link_name = "__GLEW_NVX_blend_equation_advanced_multi_draw_buffers")
    __GLEW_NVX_blend_equation_advanced_multi_draw_buffers: GLboolean

    @(link_name = "__GLEW_NVX_conditional_render")
    __GLEW_NVX_conditional_render: GLboolean

    @(link_name = "__GLEW_NVX_gpu_memory_info")
    __GLEW_NVX_gpu_memory_info: GLboolean

    @(link_name = "__GLEW_NVX_gpu_multicast2")
    __GLEW_NVX_gpu_multicast2: GLboolean

    @(link_name = "__GLEW_NVX_linked_gpu_multicast")
    __GLEW_NVX_linked_gpu_multicast: GLboolean

    @(link_name = "__GLEW_NVX_progress_fence")
    __GLEW_NVX_progress_fence: GLboolean

    @(link_name = "__GLEW_NV_3dvision_settings")
    __GLEW_NV_3dvision_settings: GLboolean

    @(link_name = "__GLEW_NV_EGL_stream_consumer_external")
    __GLEW_NV_EGL_stream_consumer_external: GLboolean

    @(link_name = "__GLEW_NV_alpha_to_coverage_dither_control")
    __GLEW_NV_alpha_to_coverage_dither_control: GLboolean

    @(link_name = "__GLEW_NV_bgr")
    __GLEW_NV_bgr: GLboolean

    @(link_name = "__GLEW_NV_bindless_multi_draw_indirect")
    __GLEW_NV_bindless_multi_draw_indirect: GLboolean

    @(link_name = "__GLEW_NV_bindless_multi_draw_indirect_count")
    __GLEW_NV_bindless_multi_draw_indirect_count: GLboolean

    @(link_name = "__GLEW_NV_bindless_texture")
    __GLEW_NV_bindless_texture: GLboolean

    @(link_name = "__GLEW_NV_blend_equation_advanced")
    __GLEW_NV_blend_equation_advanced: GLboolean

    @(link_name = "__GLEW_NV_blend_equation_advanced_coherent")
    __GLEW_NV_blend_equation_advanced_coherent: GLboolean

    @(link_name = "__GLEW_NV_blend_minmax_factor")
    __GLEW_NV_blend_minmax_factor: GLboolean

    @(link_name = "__GLEW_NV_blend_square")
    __GLEW_NV_blend_square: GLboolean

    @(link_name = "__GLEW_NV_clip_space_w_scaling")
    __GLEW_NV_clip_space_w_scaling: GLboolean

    @(link_name = "__GLEW_NV_command_list")
    __GLEW_NV_command_list: GLboolean

    @(link_name = "__GLEW_NV_compute_program5")
    __GLEW_NV_compute_program5: GLboolean

    @(link_name = "__GLEW_NV_compute_shader_derivatives")
    __GLEW_NV_compute_shader_derivatives: GLboolean

    @(link_name = "__GLEW_NV_conditional_render")
    __GLEW_NV_conditional_render: GLboolean

    @(link_name = "__GLEW_NV_conservative_raster")
    __GLEW_NV_conservative_raster: GLboolean

    @(link_name = "__GLEW_NV_conservative_raster_dilate")
    __GLEW_NV_conservative_raster_dilate: GLboolean

    @(link_name = "__GLEW_NV_conservative_raster_pre_snap")
    __GLEW_NV_conservative_raster_pre_snap: GLboolean

    @(link_name = "__GLEW_NV_conservative_raster_pre_snap_triangles")
    __GLEW_NV_conservative_raster_pre_snap_triangles: GLboolean

    @(link_name = "__GLEW_NV_conservative_raster_underestimation")
    __GLEW_NV_conservative_raster_underestimation: GLboolean

    @(link_name = "__GLEW_NV_copy_buffer")
    __GLEW_NV_copy_buffer: GLboolean

    @(link_name = "__GLEW_NV_copy_depth_to_color")
    __GLEW_NV_copy_depth_to_color: GLboolean

    @(link_name = "__GLEW_NV_copy_image")
    __GLEW_NV_copy_image: GLboolean

    @(link_name = "__GLEW_NV_deep_texture3D")
    __GLEW_NV_deep_texture3D: GLboolean

    @(link_name = "__GLEW_NV_depth_buffer_float")
    __GLEW_NV_depth_buffer_float: GLboolean

    @(link_name = "__GLEW_NV_depth_clamp")
    __GLEW_NV_depth_clamp: GLboolean

    @(link_name = "__GLEW_NV_depth_nonlinear")
    __GLEW_NV_depth_nonlinear: GLboolean

    @(link_name = "__GLEW_NV_depth_range_unclamped")
    __GLEW_NV_depth_range_unclamped: GLboolean

    @(link_name = "__GLEW_NV_draw_buffers")
    __GLEW_NV_draw_buffers: GLboolean

    @(link_name = "__GLEW_NV_draw_instanced")
    __GLEW_NV_draw_instanced: GLboolean

    @(link_name = "__GLEW_NV_draw_texture")
    __GLEW_NV_draw_texture: GLboolean

    @(link_name = "__GLEW_NV_draw_vulkan_image")
    __GLEW_NV_draw_vulkan_image: GLboolean

    @(link_name = "__GLEW_NV_evaluators")
    __GLEW_NV_evaluators: GLboolean

    @(link_name = "__GLEW_NV_explicit_attrib_location")
    __GLEW_NV_explicit_attrib_location: GLboolean

    @(link_name = "__GLEW_NV_explicit_multisample")
    __GLEW_NV_explicit_multisample: GLboolean

    @(link_name = "__GLEW_NV_fbo_color_attachments")
    __GLEW_NV_fbo_color_attachments: GLboolean

    @(link_name = "__GLEW_NV_fence")
    __GLEW_NV_fence: GLboolean

    @(link_name = "__GLEW_NV_fill_rectangle")
    __GLEW_NV_fill_rectangle: GLboolean

    @(link_name = "__GLEW_NV_float_buffer")
    __GLEW_NV_float_buffer: GLboolean

    @(link_name = "__GLEW_NV_fog_distance")
    __GLEW_NV_fog_distance: GLboolean

    @(link_name = "__GLEW_NV_fragment_coverage_to_color")
    __GLEW_NV_fragment_coverage_to_color: GLboolean

    @(link_name = "__GLEW_NV_fragment_program")
    __GLEW_NV_fragment_program: GLboolean

    @(link_name = "__GLEW_NV_fragment_program2")
    __GLEW_NV_fragment_program2: GLboolean

    @(link_name = "__GLEW_NV_fragment_program4")
    __GLEW_NV_fragment_program4: GLboolean

    @(link_name = "__GLEW_NV_fragment_program_option")
    __GLEW_NV_fragment_program_option: GLboolean

    @(link_name = "__GLEW_NV_fragment_shader_barycentric")
    __GLEW_NV_fragment_shader_barycentric: GLboolean

    @(link_name = "__GLEW_NV_fragment_shader_interlock")
    __GLEW_NV_fragment_shader_interlock: GLboolean

    @(link_name = "__GLEW_NV_framebuffer_blit")
    __GLEW_NV_framebuffer_blit: GLboolean

    @(link_name = "__GLEW_NV_framebuffer_mixed_samples")
    __GLEW_NV_framebuffer_mixed_samples: GLboolean

    @(link_name = "__GLEW_NV_framebuffer_multisample")
    __GLEW_NV_framebuffer_multisample: GLboolean

    @(link_name = "__GLEW_NV_framebuffer_multisample_coverage")
    __GLEW_NV_framebuffer_multisample_coverage: GLboolean

    @(link_name = "__GLEW_NV_generate_mipmap_sRGB")
    __GLEW_NV_generate_mipmap_sRGB: GLboolean

    @(link_name = "__GLEW_NV_geometry_program4")
    __GLEW_NV_geometry_program4: GLboolean

    @(link_name = "__GLEW_NV_geometry_shader4")
    __GLEW_NV_geometry_shader4: GLboolean

    @(link_name = "__GLEW_NV_geometry_shader_passthrough")
    __GLEW_NV_geometry_shader_passthrough: GLboolean

    @(link_name = "__GLEW_NV_gpu_multicast")
    __GLEW_NV_gpu_multicast: GLboolean

    @(link_name = "__GLEW_NV_gpu_program4")
    __GLEW_NV_gpu_program4: GLboolean

    @(link_name = "__GLEW_NV_gpu_program5")
    __GLEW_NV_gpu_program5: GLboolean

    @(link_name = "__GLEW_NV_gpu_program5_mem_extended")
    __GLEW_NV_gpu_program5_mem_extended: GLboolean

    @(link_name = "__GLEW_NV_gpu_program_fp64")
    __GLEW_NV_gpu_program_fp64: GLboolean

    @(link_name = "__GLEW_NV_gpu_shader5")
    __GLEW_NV_gpu_shader5: GLboolean

    @(link_name = "__GLEW_NV_half_float")
    __GLEW_NV_half_float: GLboolean

    @(link_name = "__GLEW_NV_image_formats")
    __GLEW_NV_image_formats: GLboolean

    @(link_name = "__GLEW_NV_instanced_arrays")
    __GLEW_NV_instanced_arrays: GLboolean

    @(link_name = "__GLEW_NV_internalformat_sample_query")
    __GLEW_NV_internalformat_sample_query: GLboolean

    @(link_name = "__GLEW_NV_light_max_exponent")
    __GLEW_NV_light_max_exponent: GLboolean

    @(link_name = "__GLEW_NV_memory_attachment")
    __GLEW_NV_memory_attachment: GLboolean

    @(link_name = "__GLEW_NV_memory_object_sparse")
    __GLEW_NV_memory_object_sparse: GLboolean

    @(link_name = "__GLEW_NV_mesh_shader")
    __GLEW_NV_mesh_shader: GLboolean

    @(link_name = "__GLEW_NV_multisample_coverage")
    __GLEW_NV_multisample_coverage: GLboolean

    @(link_name = "__GLEW_NV_multisample_filter_hint")
    __GLEW_NV_multisample_filter_hint: GLboolean

    @(link_name = "__GLEW_NV_non_square_matrices")
    __GLEW_NV_non_square_matrices: GLboolean

    @(link_name = "__GLEW_NV_occlusion_query")
    __GLEW_NV_occlusion_query: GLboolean

    @(link_name = "__GLEW_NV_pack_subimage")
    __GLEW_NV_pack_subimage: GLboolean

    @(link_name = "__GLEW_NV_packed_depth_stencil")
    __GLEW_NV_packed_depth_stencil: GLboolean

    @(link_name = "__GLEW_NV_packed_float")
    __GLEW_NV_packed_float: GLboolean

    @(link_name = "__GLEW_NV_packed_float_linear")
    __GLEW_NV_packed_float_linear: GLboolean

    @(link_name = "__GLEW_NV_parameter_buffer_object")
    __GLEW_NV_parameter_buffer_object: GLboolean

    @(link_name = "__GLEW_NV_parameter_buffer_object2")
    __GLEW_NV_parameter_buffer_object2: GLboolean

    @(link_name = "__GLEW_NV_path_rendering")
    __GLEW_NV_path_rendering: GLboolean

    @(link_name = "__GLEW_NV_path_rendering_shared_edge")
    __GLEW_NV_path_rendering_shared_edge: GLboolean

    @(link_name = "__GLEW_NV_pixel_buffer_object")
    __GLEW_NV_pixel_buffer_object: GLboolean

    @(link_name = "__GLEW_NV_pixel_data_range")
    __GLEW_NV_pixel_data_range: GLboolean

    @(link_name = "__GLEW_NV_platform_binary")
    __GLEW_NV_platform_binary: GLboolean

    @(link_name = "__GLEW_NV_point_sprite")
    __GLEW_NV_point_sprite: GLboolean

    @(link_name = "__GLEW_NV_polygon_mode")
    __GLEW_NV_polygon_mode: GLboolean

    @(link_name = "__GLEW_NV_present_video")
    __GLEW_NV_present_video: GLboolean

    @(link_name = "__GLEW_NV_primitive_restart")
    __GLEW_NV_primitive_restart: GLboolean

    @(link_name = "__GLEW_NV_primitive_shading_rate")
    __GLEW_NV_primitive_shading_rate: GLboolean

    @(link_name = "__GLEW_NV_query_resource_tag")
    __GLEW_NV_query_resource_tag: GLboolean

    @(link_name = "__GLEW_NV_read_buffer")
    __GLEW_NV_read_buffer: GLboolean

    @(link_name = "__GLEW_NV_read_buffer_front")
    __GLEW_NV_read_buffer_front: GLboolean

    @(link_name = "__GLEW_NV_read_depth")
    __GLEW_NV_read_depth: GLboolean

    @(link_name = "__GLEW_NV_read_depth_stencil")
    __GLEW_NV_read_depth_stencil: GLboolean

    @(link_name = "__GLEW_NV_read_stencil")
    __GLEW_NV_read_stencil: GLboolean

    @(link_name = "__GLEW_NV_register_combiners")
    __GLEW_NV_register_combiners: GLboolean

    @(link_name = "__GLEW_NV_register_combiners2")
    __GLEW_NV_register_combiners2: GLboolean

    @(link_name = "__GLEW_NV_representative_fragment_test")
    __GLEW_NV_representative_fragment_test: GLboolean

    @(link_name = "__GLEW_NV_robustness_video_memory_purge")
    __GLEW_NV_robustness_video_memory_purge: GLboolean

    @(link_name = "__GLEW_NV_sRGB_formats")
    __GLEW_NV_sRGB_formats: GLboolean

    @(link_name = "__GLEW_NV_sample_locations")
    __GLEW_NV_sample_locations: GLboolean

    @(link_name = "__GLEW_NV_sample_mask_override_coverage")
    __GLEW_NV_sample_mask_override_coverage: GLboolean

    @(link_name = "__GLEW_NV_scissor_exclusive")
    __GLEW_NV_scissor_exclusive: GLboolean

    @(link_name = "__GLEW_NV_shader_atomic_counters")
    __GLEW_NV_shader_atomic_counters: GLboolean

    @(link_name = "__GLEW_NV_shader_atomic_float")
    __GLEW_NV_shader_atomic_float: GLboolean

    @(link_name = "__GLEW_NV_shader_atomic_float64")
    __GLEW_NV_shader_atomic_float64: GLboolean

    @(link_name = "__GLEW_NV_shader_atomic_fp16_vector")
    __GLEW_NV_shader_atomic_fp16_vector: GLboolean

    @(link_name = "__GLEW_NV_shader_atomic_int64")
    __GLEW_NV_shader_atomic_int64: GLboolean

    @(link_name = "__GLEW_NV_shader_buffer_load")
    __GLEW_NV_shader_buffer_load: GLboolean

    @(link_name = "__GLEW_NV_shader_noperspective_interpolation")
    __GLEW_NV_shader_noperspective_interpolation: GLboolean

    @(link_name = "__GLEW_NV_shader_storage_buffer_object")
    __GLEW_NV_shader_storage_buffer_object: GLboolean

    @(link_name = "__GLEW_NV_shader_subgroup_partitioned")
    __GLEW_NV_shader_subgroup_partitioned: GLboolean

    @(link_name = "__GLEW_NV_shader_texture_footprint")
    __GLEW_NV_shader_texture_footprint: GLboolean

    @(link_name = "__GLEW_NV_shader_thread_group")
    __GLEW_NV_shader_thread_group: GLboolean

    @(link_name = "__GLEW_NV_shader_thread_shuffle")
    __GLEW_NV_shader_thread_shuffle: GLboolean

    @(link_name = "__GLEW_NV_shading_rate_image")
    __GLEW_NV_shading_rate_image: GLboolean

    @(link_name = "__GLEW_NV_shadow_samplers_array")
    __GLEW_NV_shadow_samplers_array: GLboolean

    @(link_name = "__GLEW_NV_shadow_samplers_cube")
    __GLEW_NV_shadow_samplers_cube: GLboolean

    @(link_name = "__GLEW_NV_stereo_view_rendering")
    __GLEW_NV_stereo_view_rendering: GLboolean

    @(link_name = "__GLEW_NV_tessellation_program5")
    __GLEW_NV_tessellation_program5: GLboolean

    @(link_name = "__GLEW_NV_texgen_emboss")
    __GLEW_NV_texgen_emboss: GLboolean

    @(link_name = "__GLEW_NV_texgen_reflection")
    __GLEW_NV_texgen_reflection: GLboolean

    @(link_name = "__GLEW_NV_texture_array")
    __GLEW_NV_texture_array: GLboolean

    @(link_name = "__GLEW_NV_texture_barrier")
    __GLEW_NV_texture_barrier: GLboolean

    @(link_name = "__GLEW_NV_texture_border_clamp")
    __GLEW_NV_texture_border_clamp: GLboolean

    @(link_name = "__GLEW_NV_texture_compression_latc")
    __GLEW_NV_texture_compression_latc: GLboolean

    @(link_name = "__GLEW_NV_texture_compression_s3tc")
    __GLEW_NV_texture_compression_s3tc: GLboolean

    @(link_name = "__GLEW_NV_texture_compression_s3tc_update")
    __GLEW_NV_texture_compression_s3tc_update: GLboolean

    @(link_name = "__GLEW_NV_texture_compression_vtc")
    __GLEW_NV_texture_compression_vtc: GLboolean

    @(link_name = "__GLEW_NV_texture_env_combine4")
    __GLEW_NV_texture_env_combine4: GLboolean

    @(link_name = "__GLEW_NV_texture_expand_normal")
    __GLEW_NV_texture_expand_normal: GLboolean

    @(link_name = "__GLEW_NV_texture_multisample")
    __GLEW_NV_texture_multisample: GLboolean

    @(link_name = "__GLEW_NV_texture_npot_2D_mipmap")
    __GLEW_NV_texture_npot_2D_mipmap: GLboolean

    @(link_name = "__GLEW_NV_texture_rectangle")
    __GLEW_NV_texture_rectangle: GLboolean

    @(link_name = "__GLEW_NV_texture_rectangle_compressed")
    __GLEW_NV_texture_rectangle_compressed: GLboolean

    @(link_name = "__GLEW_NV_texture_shader")
    __GLEW_NV_texture_shader: GLboolean

    @(link_name = "__GLEW_NV_texture_shader2")
    __GLEW_NV_texture_shader2: GLboolean

    @(link_name = "__GLEW_NV_texture_shader3")
    __GLEW_NV_texture_shader3: GLboolean

    @(link_name = "__GLEW_NV_timeline_semaphore")
    __GLEW_NV_timeline_semaphore: GLboolean

    @(link_name = "__GLEW_NV_transform_feedback")
    __GLEW_NV_transform_feedback: GLboolean

    @(link_name = "__GLEW_NV_transform_feedback2")
    __GLEW_NV_transform_feedback2: GLboolean

    @(link_name = "__GLEW_NV_uniform_buffer_std430_layout")
    __GLEW_NV_uniform_buffer_std430_layout: GLboolean

    @(link_name = "__GLEW_NV_uniform_buffer_unified_memory")
    __GLEW_NV_uniform_buffer_unified_memory: GLboolean

    @(link_name = "__GLEW_NV_vdpau_interop")
    __GLEW_NV_vdpau_interop: GLboolean

    @(link_name = "__GLEW_NV_vdpau_interop2")
    __GLEW_NV_vdpau_interop2: GLboolean

    @(link_name = "__GLEW_NV_vertex_array_range")
    __GLEW_NV_vertex_array_range: GLboolean

    @(link_name = "__GLEW_NV_vertex_array_range2")
    __GLEW_NV_vertex_array_range2: GLboolean

    @(link_name = "__GLEW_NV_vertex_attrib_integer_64bit")
    __GLEW_NV_vertex_attrib_integer_64bit: GLboolean

    @(link_name = "__GLEW_NV_vertex_buffer_unified_memory")
    __GLEW_NV_vertex_buffer_unified_memory: GLboolean

    @(link_name = "__GLEW_NV_vertex_program")
    __GLEW_NV_vertex_program: GLboolean

    @(link_name = "__GLEW_NV_vertex_program1_1")
    __GLEW_NV_vertex_program1_1: GLboolean

    @(link_name = "__GLEW_NV_vertex_program2")
    __GLEW_NV_vertex_program2: GLboolean

    @(link_name = "__GLEW_NV_vertex_program2_option")
    __GLEW_NV_vertex_program2_option: GLboolean

    @(link_name = "__GLEW_NV_vertex_program3")
    __GLEW_NV_vertex_program3: GLboolean

    @(link_name = "__GLEW_NV_vertex_program4")
    __GLEW_NV_vertex_program4: GLboolean

    @(link_name = "__GLEW_NV_video_capture")
    __GLEW_NV_video_capture: GLboolean

    @(link_name = "__GLEW_NV_viewport_array")
    __GLEW_NV_viewport_array: GLboolean

    @(link_name = "__GLEW_NV_viewport_array2")
    __GLEW_NV_viewport_array2: GLboolean

    @(link_name = "__GLEW_NV_viewport_swizzle")
    __GLEW_NV_viewport_swizzle: GLboolean

    @(link_name = "__GLEW_OES_EGL_image")
    __GLEW_OES_EGL_image: GLboolean

    @(link_name = "__GLEW_OES_EGL_image_external")
    __GLEW_OES_EGL_image_external: GLboolean

    @(link_name = "__GLEW_OES_EGL_image_external_essl3")
    __GLEW_OES_EGL_image_external_essl3: GLboolean

    @(link_name = "__GLEW_OES_blend_equation_separate")
    __GLEW_OES_blend_equation_separate: GLboolean

    @(link_name = "__GLEW_OES_blend_func_separate")
    __GLEW_OES_blend_func_separate: GLboolean

    @(link_name = "__GLEW_OES_blend_subtract")
    __GLEW_OES_blend_subtract: GLboolean

    @(link_name = "__GLEW_OES_byte_coordinates")
    __GLEW_OES_byte_coordinates: GLboolean

    @(link_name = "__GLEW_OES_compressed_ETC1_RGB8_texture")
    __GLEW_OES_compressed_ETC1_RGB8_texture: GLboolean

    @(link_name = "__GLEW_OES_compressed_paletted_texture")
    __GLEW_OES_compressed_paletted_texture: GLboolean

    @(link_name = "__GLEW_OES_copy_image")
    __GLEW_OES_copy_image: GLboolean

    @(link_name = "__GLEW_OES_depth24")
    __GLEW_OES_depth24: GLboolean

    @(link_name = "__GLEW_OES_depth32")
    __GLEW_OES_depth32: GLboolean

    @(link_name = "__GLEW_OES_depth_texture")
    __GLEW_OES_depth_texture: GLboolean

    @(link_name = "__GLEW_OES_depth_texture_cube_map")
    __GLEW_OES_depth_texture_cube_map: GLboolean

    @(link_name = "__GLEW_OES_draw_buffers_indexed")
    __GLEW_OES_draw_buffers_indexed: GLboolean

    @(link_name = "__GLEW_OES_draw_texture")
    __GLEW_OES_draw_texture: GLboolean

    @(link_name = "__GLEW_OES_element_index_uint")
    __GLEW_OES_element_index_uint: GLboolean

    @(link_name = "__GLEW_OES_extended_matrix_palette")
    __GLEW_OES_extended_matrix_palette: GLboolean

    @(link_name = "__GLEW_OES_fbo_render_mipmap")
    __GLEW_OES_fbo_render_mipmap: GLboolean

    @(link_name = "__GLEW_OES_fragment_precision_high")
    __GLEW_OES_fragment_precision_high: GLboolean

    @(link_name = "__GLEW_OES_framebuffer_object")
    __GLEW_OES_framebuffer_object: GLboolean

    @(link_name = "__GLEW_OES_geometry_point_size")
    __GLEW_OES_geometry_point_size: GLboolean

    @(link_name = "__GLEW_OES_geometry_shader")
    __GLEW_OES_geometry_shader: GLboolean

    @(link_name = "__GLEW_OES_get_program_binary")
    __GLEW_OES_get_program_binary: GLboolean

    @(link_name = "__GLEW_OES_gpu_shader5")
    __GLEW_OES_gpu_shader5: GLboolean

    @(link_name = "__GLEW_OES_mapbuffer")
    __GLEW_OES_mapbuffer: GLboolean

    @(link_name = "__GLEW_OES_matrix_get")
    __GLEW_OES_matrix_get: GLboolean

    @(link_name = "__GLEW_OES_matrix_palette")
    __GLEW_OES_matrix_palette: GLboolean

    @(link_name = "__GLEW_OES_packed_depth_stencil")
    __GLEW_OES_packed_depth_stencil: GLboolean

    @(link_name = "__GLEW_OES_point_size_array")
    __GLEW_OES_point_size_array: GLboolean

    @(link_name = "__GLEW_OES_point_sprite")
    __GLEW_OES_point_sprite: GLboolean

    @(link_name = "__GLEW_OES_read_format")
    __GLEW_OES_read_format: GLboolean

    @(link_name = "__GLEW_OES_required_internalformat")
    __GLEW_OES_required_internalformat: GLboolean

    @(link_name = "__GLEW_OES_rgb8_rgba8")
    __GLEW_OES_rgb8_rgba8: GLboolean

    @(link_name = "__GLEW_OES_sample_shading")
    __GLEW_OES_sample_shading: GLboolean

    @(link_name = "__GLEW_OES_sample_variables")
    __GLEW_OES_sample_variables: GLboolean

    @(link_name = "__GLEW_OES_shader_image_atomic")
    __GLEW_OES_shader_image_atomic: GLboolean

    @(link_name = "__GLEW_OES_shader_io_blocks")
    __GLEW_OES_shader_io_blocks: GLboolean

    @(link_name = "__GLEW_OES_shader_multisample_interpolation")
    __GLEW_OES_shader_multisample_interpolation: GLboolean

    @(link_name = "__GLEW_OES_single_precision")
    __GLEW_OES_single_precision: GLboolean

    @(link_name = "__GLEW_OES_standard_derivatives")
    __GLEW_OES_standard_derivatives: GLboolean

    @(link_name = "__GLEW_OES_stencil1")
    __GLEW_OES_stencil1: GLboolean

    @(link_name = "__GLEW_OES_stencil4")
    __GLEW_OES_stencil4: GLboolean

    @(link_name = "__GLEW_OES_stencil8")
    __GLEW_OES_stencil8: GLboolean

    @(link_name = "__GLEW_OES_surfaceless_context")
    __GLEW_OES_surfaceless_context: GLboolean

    @(link_name = "__GLEW_OES_tessellation_point_size")
    __GLEW_OES_tessellation_point_size: GLboolean

    @(link_name = "__GLEW_OES_tessellation_shader")
    __GLEW_OES_tessellation_shader: GLboolean

    @(link_name = "__GLEW_OES_texture_3D")
    __GLEW_OES_texture_3D: GLboolean

    @(link_name = "__GLEW_OES_texture_border_clamp")
    __GLEW_OES_texture_border_clamp: GLboolean

    @(link_name = "__GLEW_OES_texture_buffer")
    __GLEW_OES_texture_buffer: GLboolean

    @(link_name = "__GLEW_OES_texture_compression_astc")
    __GLEW_OES_texture_compression_astc: GLboolean

    @(link_name = "__GLEW_OES_texture_cube_map")
    __GLEW_OES_texture_cube_map: GLboolean

    @(link_name = "__GLEW_OES_texture_cube_map_array")
    __GLEW_OES_texture_cube_map_array: GLboolean

    @(link_name = "__GLEW_OES_texture_env_crossbar")
    __GLEW_OES_texture_env_crossbar: GLboolean

    @(link_name = "__GLEW_OES_texture_mirrored_repeat")
    __GLEW_OES_texture_mirrored_repeat: GLboolean

    @(link_name = "__GLEW_OES_texture_npot")
    __GLEW_OES_texture_npot: GLboolean

    @(link_name = "__GLEW_OES_texture_stencil8")
    __GLEW_OES_texture_stencil8: GLboolean

    @(link_name = "__GLEW_OES_texture_storage_multisample_2d_array")
    __GLEW_OES_texture_storage_multisample_2d_array: GLboolean

    @(link_name = "__GLEW_OES_texture_view")
    __GLEW_OES_texture_view: GLboolean

    @(link_name = "__GLEW_OES_vertex_array_object")
    __GLEW_OES_vertex_array_object: GLboolean

    @(link_name = "__GLEW_OES_vertex_half_float")
    __GLEW_OES_vertex_half_float: GLboolean

    @(link_name = "__GLEW_OES_vertex_type_10_10_10_2")
    __GLEW_OES_vertex_type_10_10_10_2: GLboolean

    @(link_name = "__GLEW_OML_interlace")
    __GLEW_OML_interlace: GLboolean

    @(link_name = "__GLEW_OML_resample")
    __GLEW_OML_resample: GLboolean

    @(link_name = "__GLEW_OML_subsample")
    __GLEW_OML_subsample: GLboolean

    @(link_name = "__GLEW_OVR_multiview")
    __GLEW_OVR_multiview: GLboolean

    @(link_name = "__GLEW_OVR_multiview2")
    __GLEW_OVR_multiview2: GLboolean

    @(link_name = "__GLEW_OVR_multiview_multisampled_render_to_texture")
    __GLEW_OVR_multiview_multisampled_render_to_texture: GLboolean

    @(link_name = "__GLEW_PGI_misc_hints")
    __GLEW_PGI_misc_hints: GLboolean

    @(link_name = "__GLEW_PGI_vertex_hints")
    __GLEW_PGI_vertex_hints: GLboolean

    @(link_name = "__GLEW_QCOM_YUV_texture_gather")
    __GLEW_QCOM_YUV_texture_gather: GLboolean

    @(link_name = "__GLEW_QCOM_alpha_test")
    __GLEW_QCOM_alpha_test: GLboolean

    @(link_name = "__GLEW_QCOM_binning_control")
    __GLEW_QCOM_binning_control: GLboolean

    @(link_name = "__GLEW_QCOM_driver_control")
    __GLEW_QCOM_driver_control: GLboolean

    @(link_name = "__GLEW_QCOM_extended_get")
    __GLEW_QCOM_extended_get: GLboolean

    @(link_name = "__GLEW_QCOM_extended_get2")
    __GLEW_QCOM_extended_get2: GLboolean

    @(link_name = "__GLEW_QCOM_frame_extrapolation")
    __GLEW_QCOM_frame_extrapolation: GLboolean

    @(link_name = "__GLEW_QCOM_framebuffer_foveated")
    __GLEW_QCOM_framebuffer_foveated: GLboolean

    @(link_name = "__GLEW_QCOM_motion_estimation")
    __GLEW_QCOM_motion_estimation: GLboolean

    @(link_name = "__GLEW_QCOM_perfmon_global_mode")
    __GLEW_QCOM_perfmon_global_mode: GLboolean

    @(link_name = "__GLEW_QCOM_render_sRGB_R8_RG8")
    __GLEW_QCOM_render_sRGB_R8_RG8: GLboolean

    @(link_name = "__GLEW_QCOM_render_shared_exponent")
    __GLEW_QCOM_render_shared_exponent: GLboolean

    @(link_name = "__GLEW_QCOM_shader_framebuffer_fetch_noncoherent")
    __GLEW_QCOM_shader_framebuffer_fetch_noncoherent: GLboolean

    @(link_name = "__GLEW_QCOM_shader_framebuffer_fetch_rate")
    __GLEW_QCOM_shader_framebuffer_fetch_rate: GLboolean

    @(link_name = "__GLEW_QCOM_shading_rate")
    __GLEW_QCOM_shading_rate: GLboolean

    @(link_name = "__GLEW_QCOM_texture_foveated")
    __GLEW_QCOM_texture_foveated: GLboolean

    @(link_name = "__GLEW_QCOM_texture_foveated2")
    __GLEW_QCOM_texture_foveated2: GLboolean

    @(link_name = "__GLEW_QCOM_texture_foveated_subsampled_layout")
    __GLEW_QCOM_texture_foveated_subsampled_layout: GLboolean

    @(link_name = "__GLEW_QCOM_texture_lod_bias")
    __GLEW_QCOM_texture_lod_bias: GLboolean

    @(link_name = "__GLEW_QCOM_tiled_rendering")
    __GLEW_QCOM_tiled_rendering: GLboolean

    @(link_name = "__GLEW_QCOM_writeonly_rendering")
    __GLEW_QCOM_writeonly_rendering: GLboolean

    @(link_name = "__GLEW_QCOM_ycbcr_degamma")
    __GLEW_QCOM_ycbcr_degamma: GLboolean

    @(link_name = "__GLEW_REGAL_ES1_0_compatibility")
    __GLEW_REGAL_ES1_0_compatibility: GLboolean

    @(link_name = "__GLEW_REGAL_ES1_1_compatibility")
    __GLEW_REGAL_ES1_1_compatibility: GLboolean

    @(link_name = "__GLEW_REGAL_enable")
    __GLEW_REGAL_enable: GLboolean

    @(link_name = "__GLEW_REGAL_error_string")
    __GLEW_REGAL_error_string: GLboolean

    @(link_name = "__GLEW_REGAL_extension_query")
    __GLEW_REGAL_extension_query: GLboolean

    @(link_name = "__GLEW_REGAL_log")
    __GLEW_REGAL_log: GLboolean

    @(link_name = "__GLEW_REGAL_proc_address")
    __GLEW_REGAL_proc_address: GLboolean

    @(link_name = "__GLEW_REND_screen_coordinates")
    __GLEW_REND_screen_coordinates: GLboolean

    @(link_name = "__GLEW_S3_s3tc")
    __GLEW_S3_s3tc: GLboolean

    @(link_name = "__GLEW_SGIS_clip_band_hint")
    __GLEW_SGIS_clip_band_hint: GLboolean

    @(link_name = "__GLEW_SGIS_color_range")
    __GLEW_SGIS_color_range: GLboolean

    @(link_name = "__GLEW_SGIS_detail_texture")
    __GLEW_SGIS_detail_texture: GLboolean

    @(link_name = "__GLEW_SGIS_fog_function")
    __GLEW_SGIS_fog_function: GLboolean

    @(link_name = "__GLEW_SGIS_generate_mipmap")
    __GLEW_SGIS_generate_mipmap: GLboolean

    @(link_name = "__GLEW_SGIS_line_texgen")
    __GLEW_SGIS_line_texgen: GLboolean

    @(link_name = "__GLEW_SGIS_multisample")
    __GLEW_SGIS_multisample: GLboolean

    @(link_name = "__GLEW_SGIS_multitexture")
    __GLEW_SGIS_multitexture: GLboolean

    @(link_name = "__GLEW_SGIS_pixel_texture")
    __GLEW_SGIS_pixel_texture: GLboolean

    @(link_name = "__GLEW_SGIS_point_line_texgen")
    __GLEW_SGIS_point_line_texgen: GLboolean

    @(link_name = "__GLEW_SGIS_shared_multisample")
    __GLEW_SGIS_shared_multisample: GLboolean

    @(link_name = "__GLEW_SGIS_sharpen_texture")
    __GLEW_SGIS_sharpen_texture: GLboolean

    @(link_name = "__GLEW_SGIS_texture4D")
    __GLEW_SGIS_texture4D: GLboolean

    @(link_name = "__GLEW_SGIS_texture_border_clamp")
    __GLEW_SGIS_texture_border_clamp: GLboolean

    @(link_name = "__GLEW_SGIS_texture_edge_clamp")
    __GLEW_SGIS_texture_edge_clamp: GLboolean

    @(link_name = "__GLEW_SGIS_texture_filter4")
    __GLEW_SGIS_texture_filter4: GLboolean

    @(link_name = "__GLEW_SGIS_texture_lod")
    __GLEW_SGIS_texture_lod: GLboolean

    @(link_name = "__GLEW_SGIS_texture_select")
    __GLEW_SGIS_texture_select: GLboolean

    @(link_name = "__GLEW_SGIX_async")
    __GLEW_SGIX_async: GLboolean

    @(link_name = "__GLEW_SGIX_async_histogram")
    __GLEW_SGIX_async_histogram: GLboolean

    @(link_name = "__GLEW_SGIX_async_pixel")
    __GLEW_SGIX_async_pixel: GLboolean

    @(link_name = "__GLEW_SGIX_bali_g_instruments")
    __GLEW_SGIX_bali_g_instruments: GLboolean

    @(link_name = "__GLEW_SGIX_bali_r_instruments")
    __GLEW_SGIX_bali_r_instruments: GLboolean

    @(link_name = "__GLEW_SGIX_bali_timer_instruments")
    __GLEW_SGIX_bali_timer_instruments: GLboolean

    @(link_name = "__GLEW_SGIX_blend_alpha_minmax")
    __GLEW_SGIX_blend_alpha_minmax: GLboolean

    @(link_name = "__GLEW_SGIX_blend_cadd")
    __GLEW_SGIX_blend_cadd: GLboolean

    @(link_name = "__GLEW_SGIX_blend_cmultiply")
    __GLEW_SGIX_blend_cmultiply: GLboolean

    @(link_name = "__GLEW_SGIX_calligraphic_fragment")
    __GLEW_SGIX_calligraphic_fragment: GLboolean

    @(link_name = "__GLEW_SGIX_clipmap")
    __GLEW_SGIX_clipmap: GLboolean

    @(link_name = "__GLEW_SGIX_color_matrix_accuracy")
    __GLEW_SGIX_color_matrix_accuracy: GLboolean

    @(link_name = "__GLEW_SGIX_color_table_index_mode")
    __GLEW_SGIX_color_table_index_mode: GLboolean

    @(link_name = "__GLEW_SGIX_complex_polar")
    __GLEW_SGIX_complex_polar: GLboolean

    @(link_name = "__GLEW_SGIX_convolution_accuracy")
    __GLEW_SGIX_convolution_accuracy: GLboolean

    @(link_name = "__GLEW_SGIX_cube_map")
    __GLEW_SGIX_cube_map: GLboolean

    @(link_name = "__GLEW_SGIX_cylinder_texgen")
    __GLEW_SGIX_cylinder_texgen: GLboolean

    @(link_name = "__GLEW_SGIX_datapipe")
    __GLEW_SGIX_datapipe: GLboolean

    @(link_name = "__GLEW_SGIX_decimation")
    __GLEW_SGIX_decimation: GLboolean

    @(link_name = "__GLEW_SGIX_depth_pass_instrument")
    __GLEW_SGIX_depth_pass_instrument: GLboolean

    @(link_name = "__GLEW_SGIX_depth_texture")
    __GLEW_SGIX_depth_texture: GLboolean

    @(link_name = "__GLEW_SGIX_dvc")
    __GLEW_SGIX_dvc: GLboolean

    @(link_name = "__GLEW_SGIX_flush_raster")
    __GLEW_SGIX_flush_raster: GLboolean

    @(link_name = "__GLEW_SGIX_fog_blend")
    __GLEW_SGIX_fog_blend: GLboolean

    @(link_name = "__GLEW_SGIX_fog_factor_to_alpha")
    __GLEW_SGIX_fog_factor_to_alpha: GLboolean

    @(link_name = "__GLEW_SGIX_fog_layers")
    __GLEW_SGIX_fog_layers: GLboolean

    @(link_name = "__GLEW_SGIX_fog_offset")
    __GLEW_SGIX_fog_offset: GLboolean

    @(link_name = "__GLEW_SGIX_fog_patchy")
    __GLEW_SGIX_fog_patchy: GLboolean

    @(link_name = "__GLEW_SGIX_fog_scale")
    __GLEW_SGIX_fog_scale: GLboolean

    @(link_name = "__GLEW_SGIX_fog_texture")
    __GLEW_SGIX_fog_texture: GLboolean

    @(link_name = "__GLEW_SGIX_fragment_lighting_space")
    __GLEW_SGIX_fragment_lighting_space: GLboolean

    @(link_name = "__GLEW_SGIX_fragment_specular_lighting")
    __GLEW_SGIX_fragment_specular_lighting: GLboolean

    @(link_name = "__GLEW_SGIX_fragments_instrument")
    __GLEW_SGIX_fragments_instrument: GLboolean

    @(link_name = "__GLEW_SGIX_framezoom")
    __GLEW_SGIX_framezoom: GLboolean

    @(link_name = "__GLEW_SGIX_icc_texture")
    __GLEW_SGIX_icc_texture: GLboolean

    @(link_name = "__GLEW_SGIX_igloo_interface")
    __GLEW_SGIX_igloo_interface: GLboolean

    @(link_name = "__GLEW_SGIX_image_compression")
    __GLEW_SGIX_image_compression: GLboolean

    @(link_name = "__GLEW_SGIX_impact_pixel_texture")
    __GLEW_SGIX_impact_pixel_texture: GLboolean

    @(link_name = "__GLEW_SGIX_instrument_error")
    __GLEW_SGIX_instrument_error: GLboolean

    @(link_name = "__GLEW_SGIX_interlace")
    __GLEW_SGIX_interlace: GLboolean

    @(link_name = "__GLEW_SGIX_ir_instrument1")
    __GLEW_SGIX_ir_instrument1: GLboolean

    @(link_name = "__GLEW_SGIX_line_quality_hint")
    __GLEW_SGIX_line_quality_hint: GLboolean

    @(link_name = "__GLEW_SGIX_list_priority")
    __GLEW_SGIX_list_priority: GLboolean

    @(link_name = "__GLEW_SGIX_mpeg1")
    __GLEW_SGIX_mpeg1: GLboolean

    @(link_name = "__GLEW_SGIX_mpeg2")
    __GLEW_SGIX_mpeg2: GLboolean

    @(link_name = "__GLEW_SGIX_nonlinear_lighting_pervertex")
    __GLEW_SGIX_nonlinear_lighting_pervertex: GLboolean

    @(link_name = "__GLEW_SGIX_nurbs_eval")
    __GLEW_SGIX_nurbs_eval: GLboolean

    @(link_name = "__GLEW_SGIX_occlusion_instrument")
    __GLEW_SGIX_occlusion_instrument: GLboolean

    @(link_name = "__GLEW_SGIX_packed_6bytes")
    __GLEW_SGIX_packed_6bytes: GLboolean

    @(link_name = "__GLEW_SGIX_pixel_texture")
    __GLEW_SGIX_pixel_texture: GLboolean

    @(link_name = "__GLEW_SGIX_pixel_texture_bits")
    __GLEW_SGIX_pixel_texture_bits: GLboolean

    @(link_name = "__GLEW_SGIX_pixel_texture_lod")
    __GLEW_SGIX_pixel_texture_lod: GLboolean

    @(link_name = "__GLEW_SGIX_pixel_tiles")
    __GLEW_SGIX_pixel_tiles: GLboolean

    @(link_name = "__GLEW_SGIX_polynomial_ffd")
    __GLEW_SGIX_polynomial_ffd: GLboolean

    @(link_name = "__GLEW_SGIX_quad_mesh")
    __GLEW_SGIX_quad_mesh: GLboolean

    @(link_name = "__GLEW_SGIX_reference_plane")
    __GLEW_SGIX_reference_plane: GLboolean

    @(link_name = "__GLEW_SGIX_resample")
    __GLEW_SGIX_resample: GLboolean

    @(link_name = "__GLEW_SGIX_scalebias_hint")
    __GLEW_SGIX_scalebias_hint: GLboolean

    @(link_name = "__GLEW_SGIX_shadow")
    __GLEW_SGIX_shadow: GLboolean

    @(link_name = "__GLEW_SGIX_shadow_ambient")
    __GLEW_SGIX_shadow_ambient: GLboolean

    @(link_name = "__GLEW_SGIX_slim")
    __GLEW_SGIX_slim: GLboolean

    @(link_name = "__GLEW_SGIX_spotlight_cutoff")
    __GLEW_SGIX_spotlight_cutoff: GLboolean

    @(link_name = "__GLEW_SGIX_sprite")
    __GLEW_SGIX_sprite: GLboolean

    @(link_name = "__GLEW_SGIX_subdiv_patch")
    __GLEW_SGIX_subdiv_patch: GLboolean

    @(link_name = "__GLEW_SGIX_subsample")
    __GLEW_SGIX_subsample: GLboolean

    @(link_name = "__GLEW_SGIX_tag_sample_buffer")
    __GLEW_SGIX_tag_sample_buffer: GLboolean

    @(link_name = "__GLEW_SGIX_texture_add_env")
    __GLEW_SGIX_texture_add_env: GLboolean

    @(link_name = "__GLEW_SGIX_texture_coordinate_clamp")
    __GLEW_SGIX_texture_coordinate_clamp: GLboolean

    @(link_name = "__GLEW_SGIX_texture_lod_bias")
    __GLEW_SGIX_texture_lod_bias: GLboolean

    @(link_name = "__GLEW_SGIX_texture_mipmap_anisotropic")
    __GLEW_SGIX_texture_mipmap_anisotropic: GLboolean

    @(link_name = "__GLEW_SGIX_texture_multi_buffer")
    __GLEW_SGIX_texture_multi_buffer: GLboolean

    @(link_name = "__GLEW_SGIX_texture_phase")
    __GLEW_SGIX_texture_phase: GLboolean

    @(link_name = "__GLEW_SGIX_texture_range")
    __GLEW_SGIX_texture_range: GLboolean

    @(link_name = "__GLEW_SGIX_texture_scale_bias")
    __GLEW_SGIX_texture_scale_bias: GLboolean

    @(link_name = "__GLEW_SGIX_texture_supersample")
    __GLEW_SGIX_texture_supersample: GLboolean

    @(link_name = "__GLEW_SGIX_vector_ops")
    __GLEW_SGIX_vector_ops: GLboolean

    @(link_name = "__GLEW_SGIX_vertex_array_object")
    __GLEW_SGIX_vertex_array_object: GLboolean

    @(link_name = "__GLEW_SGIX_vertex_preclip")
    __GLEW_SGIX_vertex_preclip: GLboolean

    @(link_name = "__GLEW_SGIX_vertex_preclip_hint")
    __GLEW_SGIX_vertex_preclip_hint: GLboolean

    @(link_name = "__GLEW_SGIX_ycrcb")
    __GLEW_SGIX_ycrcb: GLboolean

    @(link_name = "__GLEW_SGIX_ycrcb_subsample")
    __GLEW_SGIX_ycrcb_subsample: GLboolean

    @(link_name = "__GLEW_SGIX_ycrcba")
    __GLEW_SGIX_ycrcba: GLboolean

    @(link_name = "__GLEW_SGI_color_matrix")
    __GLEW_SGI_color_matrix: GLboolean

    @(link_name = "__GLEW_SGI_color_table")
    __GLEW_SGI_color_table: GLboolean

    @(link_name = "__GLEW_SGI_complex")
    __GLEW_SGI_complex: GLboolean

    @(link_name = "__GLEW_SGI_complex_type")
    __GLEW_SGI_complex_type: GLboolean

    @(link_name = "__GLEW_SGI_fft")
    __GLEW_SGI_fft: GLboolean

    @(link_name = "__GLEW_SGI_texture_color_table")
    __GLEW_SGI_texture_color_table: GLboolean

    @(link_name = "__GLEW_SUNX_constant_data")
    __GLEW_SUNX_constant_data: GLboolean

    @(link_name = "__GLEW_SUN_convolution_border_modes")
    __GLEW_SUN_convolution_border_modes: GLboolean

    @(link_name = "__GLEW_SUN_global_alpha")
    __GLEW_SUN_global_alpha: GLboolean

    @(link_name = "__GLEW_SUN_mesh_array")
    __GLEW_SUN_mesh_array: GLboolean

    @(link_name = "__GLEW_SUN_read_video_pixels")
    __GLEW_SUN_read_video_pixels: GLboolean

    @(link_name = "__GLEW_SUN_slice_accum")
    __GLEW_SUN_slice_accum: GLboolean

    @(link_name = "__GLEW_SUN_triangle_list")
    __GLEW_SUN_triangle_list: GLboolean

    @(link_name = "__GLEW_SUN_vertex")
    __GLEW_SUN_vertex: GLboolean

    @(link_name = "__GLEW_VIV_shader_binary")
    __GLEW_VIV_shader_binary: GLboolean

    @(link_name = "__GLEW_WIN_phong_shading")
    __GLEW_WIN_phong_shading: GLboolean

    @(link_name = "__GLEW_WIN_scene_markerXXX")
    __GLEW_WIN_scene_markerXXX: GLboolean

    @(link_name = "__GLEW_WIN_specular_fog")
    __GLEW_WIN_specular_fog: GLboolean

    @(link_name = "__GLEW_WIN_swap_hint")
    __GLEW_WIN_swap_hint: GLboolean

    @(link_name = "glewExperimental")
    ewExperimental: GLboolean

    @(link_name = "glAccum")
    Accum :: proc(op: GLenum, value: GLfloat) ---

    @(link_name = "glAlphaFunc")
    AlphaFunc :: proc(func: GLenum, ref: GLclampf) ---

    @(link_name = "glAreTexturesResident")
    AreTexturesResident :: proc(n: GLsizei, textures: [^]GLuint, residences: [^]GLboolean) -> GLboolean ---

    @(link_name = "glArrayElement")
    ArrayElement :: proc(i: GLint) ---

    @(link_name = "glBegin")
    Begin :: proc(mode: GLenum) ---

    @(link_name = "glBindTexture")
    BindTexture :: proc(target: GLenum, texture: GLuint) ---

    @(link_name = "glBitmap")
    Bitmap :: proc(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: ^GLubyte) ---

    @(link_name = "glBlendFunc")
    BlendFunc :: proc(sfactor: GLenum, dfactor: GLenum) ---

    @(link_name = "glCallList")
    CallList :: proc(list: GLuint) ---

    @(link_name = "glCallLists")
    CallLists :: proc(n: GLsizei, type: GLenum, lists: rawptr) ---

    @(link_name = "glClear")
    Clear :: proc(mask: GLbitfield) ---

    @(link_name = "glClearAccum")
    ClearAccum :: proc(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) ---

    @(link_name = "glClearColor")
    ClearColor :: proc(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) ---

    @(link_name = "glClearDepth")
    ClearDepth :: proc(depth: GLclampd) ---

    @(link_name = "glClearIndex")
    ClearIndex :: proc(c: GLfloat) ---

    @(link_name = "glClearStencil")
    ClearStencil :: proc(s: GLint) ---

    @(link_name = "glClipPlane")
    ClipPlane :: proc(plane: GLenum, equation: ^GLdouble) ---

    @(link_name = "glColor3b")
    Color3b :: proc(red: GLbyte, green: GLbyte, blue: GLbyte) ---

    @(link_name = "glColor3bv")
    Color3bv :: proc(v: ^GLbyte) ---

    @(link_name = "glColor3d")
    Color3d :: proc(red: GLdouble, green: GLdouble, blue: GLdouble) ---

    @(link_name = "glColor3dv")
    Color3dv :: proc(v: ^GLdouble) ---

    @(link_name = "glColor3f")
    Color3f :: proc(red: GLfloat, green: GLfloat, blue: GLfloat) ---

    @(link_name = "glColor3fv")
    Color3fv :: proc(v: ^GLfloat) ---

    @(link_name = "glColor3i")
    Color3i :: proc(red: GLint, green: GLint, blue: GLint) ---

    @(link_name = "glColor3iv")
    Color3iv :: proc(v: ^GLint) ---

    @(link_name = "glColor3s")
    Color3s :: proc(red: GLshort, green: GLshort, blue: GLshort) ---

    @(link_name = "glColor3sv")
    Color3sv :: proc(v: ^GLshort) ---

    @(link_name = "glColor3ub")
    Color3ub :: proc(red: GLubyte, green: GLubyte, blue: GLubyte) ---

    @(link_name = "glColor3ubv")
    Color3ubv :: proc(v: ^GLubyte) ---

    @(link_name = "glColor3ui")
    Color3ui :: proc(red: GLuint, green: GLuint, blue: GLuint) ---

    @(link_name = "glColor3uiv")
    Color3uiv :: proc(v: ^GLuint) ---

    @(link_name = "glColor3us")
    Color3us :: proc(red: GLushort, green: GLushort, blue: GLushort) ---

    @(link_name = "glColor3usv")
    Color3usv :: proc(v: ^GLushort) ---

    @(link_name = "glColor4b")
    Color4b :: proc(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) ---

    @(link_name = "glColor4bv")
    Color4bv :: proc(v: ^GLbyte) ---

    @(link_name = "glColor4d")
    Color4d :: proc(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) ---

    @(link_name = "glColor4dv")
    Color4dv :: proc(v: ^GLdouble) ---

    @(link_name = "glColor4f")
    Color4f :: proc(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) ---

    @(link_name = "glColor4fv")
    Color4fv :: proc(v: ^GLfloat) ---

    @(link_name = "glColor4i")
    Color4i :: proc(red: GLint, green: GLint, blue: GLint, alpha: GLint) ---

    @(link_name = "glColor4iv")
    Color4iv :: proc(v: ^GLint) ---

    @(link_name = "glColor4s")
    Color4s :: proc(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) ---

    @(link_name = "glColor4sv")
    Color4sv :: proc(v: ^GLshort) ---

    @(link_name = "glColor4ub")
    Color4ub :: proc(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) ---

    @(link_name = "glColor4ubv")
    Color4ubv :: proc(v: ^GLubyte) ---

    @(link_name = "glColor4ui")
    Color4ui :: proc(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) ---

    @(link_name = "glColor4uiv")
    Color4uiv :: proc(v: ^GLuint) ---

    @(link_name = "glColor4us")
    Color4us :: proc(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) ---

    @(link_name = "glColor4usv")
    Color4usv :: proc(v: ^GLushort) ---

    @(link_name = "glColorMask")
    ColorMask :: proc(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) ---

    @(link_name = "glColorMaterial")
    ColorMaterial :: proc(face: GLenum, mode: GLenum) ---

    @(link_name = "glColorPointer")
    ColorPointer :: proc(size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glCopyPixels")
    CopyPixels :: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei, type: GLenum) ---

    @(link_name = "glCopyTexImage1D")
    CopyTexImage1D :: proc(target: GLenum, level: GLint, internalFormat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) ---

    @(link_name = "glCopyTexImage2D")
    CopyTexImage2D :: proc(target: GLenum, level: GLint, internalFormat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) ---

    @(link_name = "glCopyTexSubImage1D")
    CopyTexSubImage1D :: proc(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) ---

    @(link_name = "glCopyTexSubImage2D")
    CopyTexSubImage2D :: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) ---

    @(link_name = "glCullFace")
    CullFace :: proc(mode: GLenum) ---

    @(link_name = "glDeleteLists")
    DeleteLists :: proc(list: GLuint, range: GLsizei) ---

    @(link_name = "glDeleteTextures")
    DeleteTextures :: proc(n: GLsizei, textures: [^]GLuint) ---

    @(link_name = "glDepthFunc")
    DepthFunc :: proc(func: GLenum) ---

    @(link_name = "glDepthMask")
    DepthMask :: proc(flag: GLboolean) ---

    @(link_name = "glDepthRange")
    DepthRange :: proc(zNear: GLclampd, zFar: GLclampd) ---

    @(link_name = "glDisable")
    Disable :: proc(cap: GLenum) ---

    @(link_name = "glDisableClientState")
    DisableClientState :: proc(array: GLenum) ---

    @(link_name = "glDrawArrays")
    DrawArrays :: proc(mode: GLenum, first: GLint, count: GLsizei) ---

    @(link_name = "glDrawBuffer")
    DrawBuffer :: proc(mode: GLenum) ---

    @(link_name = "glDrawElements")
    DrawElements :: proc(mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr) ---

    @(link_name = "glDrawPixels")
    DrawPixels :: proc(width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glEdgeFlag")
    EdgeFlag :: proc(flag: GLboolean) ---

    @(link_name = "glEdgeFlagPointer")
    EdgeFlagPointer :: proc(stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glEdgeFlagv")
    EdgeFlagv :: proc(flag: ^GLboolean) ---

    @(link_name = "glEnable")
    Enable :: proc(cap: GLenum) ---

    @(link_name = "glEnableClientState")
    EnableClientState :: proc(array: GLenum) ---

    @(link_name = "glEnd")
    End :: proc() ---

    @(link_name = "glEndList")
    EndList :: proc() ---

    @(link_name = "glEvalCoord1d")
    EvalCoord1d :: proc(u: GLdouble) ---

    @(link_name = "glEvalCoord1dv")
    EvalCoord1dv :: proc(u: ^GLdouble) ---

    @(link_name = "glEvalCoord1f")
    EvalCoord1f :: proc(u: GLfloat) ---

    @(link_name = "glEvalCoord1fv")
    EvalCoord1fv :: proc(u: ^GLfloat) ---

    @(link_name = "glEvalCoord2d")
    EvalCoord2d :: proc(u: GLdouble, v: GLdouble) ---

    @(link_name = "glEvalCoord2dv")
    EvalCoord2dv :: proc(u: ^GLdouble) ---

    @(link_name = "glEvalCoord2f")
    EvalCoord2f :: proc(u: GLfloat, v: GLfloat) ---

    @(link_name = "glEvalCoord2fv")
    EvalCoord2fv :: proc(u: ^GLfloat) ---

    @(link_name = "glEvalMesh1")
    EvalMesh1 :: proc(mode: GLenum, i1: GLint, i2: GLint) ---

    @(link_name = "glEvalMesh2")
    EvalMesh2 :: proc(mode: GLenum, i1: GLint, i2: GLint, j1: GLint, j2: GLint) ---

    @(link_name = "glEvalPoint1")
    EvalPoint1 :: proc(i: GLint) ---

    @(link_name = "glEvalPoint2")
    EvalPoint2 :: proc(i: GLint, j: GLint) ---

    @(link_name = "glFeedbackBuffer")
    FeedbackBuffer :: proc(size: GLsizei, type: GLenum, buffer: ^GLfloat) ---

    @(link_name = "glFinish")
    Finish :: proc() ---

    @(link_name = "glFlush")
    Flush :: proc() ---

    @(link_name = "glFogf")
    Fogf :: proc(pname: GLenum, param: GLfloat) ---

    @(link_name = "glFogfv")
    Fogfv :: proc(pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glFogi")
    Fogi :: proc(pname: GLenum, param: GLint) ---

    @(link_name = "glFogiv")
    Fogiv :: proc(pname: GLenum, params: [^]GLint) ---

    @(link_name = "glFrontFace")
    FrontFace :: proc(mode: GLenum) ---

    @(link_name = "glFrustum")
    Frustum :: proc(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) ---

    @(link_name = "glGenLists")
    GenLists :: proc(range: GLsizei) -> GLuint ---

    @(link_name = "glGenTextures")
    GenTextures :: proc(n: GLsizei, textures: [^]GLuint) ---

    @(link_name = "glGetBooleanv")
    GetBooleanv :: proc(pname: GLenum, params: [^]GLboolean) ---

    @(link_name = "glGetClipPlane")
    GetClipPlane :: proc(plane: GLenum, equation: ^GLdouble) ---

    @(link_name = "glGetDoublev")
    GetDoublev :: proc(pname: GLenum, params: [^]GLdouble) ---

    @(link_name = "glGetError")
    GetError :: proc() -> GLenum ---

    @(link_name = "glGetFloatv")
    GetFloatv :: proc(pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetIntegerv")
    GetIntegerv :: proc(pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetLightfv")
    GetLightfv :: proc(light: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetLightiv")
    GetLightiv :: proc(light: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetMapdv")
    GetMapdv :: proc(target: GLenum, query: GLenum, v: ^GLdouble) ---

    @(link_name = "glGetMapfv")
    GetMapfv :: proc(target: GLenum, query: GLenum, v: ^GLfloat) ---

    @(link_name = "glGetMapiv")
    GetMapiv :: proc(target: GLenum, query: GLenum, v: ^GLint) ---

    @(link_name = "glGetMaterialfv")
    GetMaterialfv :: proc(face: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetMaterialiv")
    GetMaterialiv :: proc(face: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetPixelMapfv")
    GetPixelMapfv :: proc(map_: GLenum, values: [^]GLfloat) ---

    @(link_name = "glGetPixelMapuiv")
    GetPixelMapuiv :: proc(map_: GLenum, values: [^]GLuint) ---

    @(link_name = "glGetPixelMapusv")
    GetPixelMapusv :: proc(map_: GLenum, values: [^]GLushort) ---

    @(link_name = "glGetPointerv")
    GetPointerv :: proc(pname: GLenum, params: [^]rawptr) ---

    @(link_name = "glGetPolygonStipple")
    GetPolygonStipple :: proc(mask: ^GLubyte) ---

    @(link_name = "glGetString")
    GetString :: proc(name: GLenum) -> ^GLubyte ---

    @(link_name = "glGetTexEnvfv")
    GetTexEnvfv :: proc(target: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetTexEnviv")
    GetTexEnviv :: proc(target: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetTexGendv")
    GetTexGendv :: proc(coord: GLenum, pname: GLenum, params: [^]GLdouble) ---

    @(link_name = "glGetTexGenfv")
    GetTexGenfv :: proc(coord: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetTexGeniv")
    GetTexGeniv :: proc(coord: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetTexImage")
    GetTexImage :: proc(target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glGetTexLevelParameterfv")
    GetTexLevelParameterfv :: proc(target: GLenum, level: GLint, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetTexLevelParameteriv")
    GetTexLevelParameteriv :: proc(target: GLenum, level: GLint, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glGetTexParameterfv")
    GetTexParameterfv :: proc(target: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glGetTexParameteriv")
    GetTexParameteriv :: proc(target: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glHint")
    Hint :: proc(target: GLenum, mode: GLenum) ---

    @(link_name = "glIndexMask")
    IndexMask :: proc(mask: GLuint) ---

    @(link_name = "glIndexPointer")
    IndexPointer :: proc(type: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glIndexd")
    Indexd :: proc(c: GLdouble) ---

    @(link_name = "glIndexdv")
    Indexdv :: proc(c: ^GLdouble) ---

    @(link_name = "glIndexf")
    Indexf :: proc(c: GLfloat) ---

    @(link_name = "glIndexfv")
    Indexfv :: proc(c: ^GLfloat) ---

    @(link_name = "glIndexi")
    Indexi :: proc(c: GLint) ---

    @(link_name = "glIndexiv")
    Indexiv :: proc(c: ^GLint) ---

    @(link_name = "glIndexs")
    Indexs :: proc(c: GLshort) ---

    @(link_name = "glIndexsv")
    Indexsv :: proc(c: ^GLshort) ---

    @(link_name = "glIndexub")
    Indexub :: proc(c: GLubyte) ---

    @(link_name = "glIndexubv")
    Indexubv :: proc(c: ^GLubyte) ---

    @(link_name = "glInitNames")
    InitNames :: proc() ---

    @(link_name = "glInterleavedArrays")
    InterleavedArrays :: proc(format: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glIsEnabled")
    IsEnabled :: proc(cap: GLenum) -> GLboolean ---

    @(link_name = "glIsList")
    IsList :: proc(list: GLuint) -> GLboolean ---

    @(link_name = "glIsTexture")
    IsTexture :: proc(texture: GLuint) -> GLboolean ---

    @(link_name = "glLightModelf")
    LightModelf :: proc(pname: GLenum, param: GLfloat) ---

    @(link_name = "glLightModelfv")
    LightModelfv :: proc(pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glLightModeli")
    LightModeli :: proc(pname: GLenum, param: GLint) ---

    @(link_name = "glLightModeliv")
    LightModeliv :: proc(pname: GLenum, params: [^]GLint) ---

    @(link_name = "glLightf")
    Lightf :: proc(light: GLenum, pname: GLenum, param: GLfloat) ---

    @(link_name = "glLightfv")
    Lightfv :: proc(light: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glLighti")
    Lighti :: proc(light: GLenum, pname: GLenum, param: GLint) ---

    @(link_name = "glLightiv")
    Lightiv :: proc(light: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glLineStipple")
    LineStipple :: proc(factor: GLint, pattern: GLushort) ---

    @(link_name = "glLineWidth")
    LineWidth :: proc(width: GLfloat) ---

    @(link_name = "glListBase")
    ListBase :: proc(base: GLuint) ---

    @(link_name = "glLoadIdentity")
    LoadIdentity :: proc() ---

    @(link_name = "glLoadMatrixd")
    LoadMatrixd :: proc(m: ^GLdouble) ---

    @(link_name = "glLoadMatrixf")
    LoadMatrixf :: proc(m: ^GLfloat) ---

    @(link_name = "glLoadName")
    LoadName :: proc(name: GLuint) ---

    @(link_name = "glLogicOp")
    LogicOp :: proc(opcode: GLenum) ---

    @(link_name = "glMap1d")
    Map1d :: proc(target: GLenum, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: [^]GLdouble) ---

    @(link_name = "glMap1f")
    Map1f :: proc(target: GLenum, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: [^]GLfloat) ---

    @(link_name = "glMap2d")
    Map2d :: proc(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: [^]GLdouble) ---

    @(link_name = "glMap2f")
    Map2f :: proc(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: [^]GLfloat) ---

    @(link_name = "glMapGrid1d")
    MapGrid1d :: proc(un: GLint, u1: GLdouble, u2: GLdouble) ---

    @(link_name = "glMapGrid1f")
    MapGrid1f :: proc(un: GLint, u1: GLfloat, u2: GLfloat) ---

    @(link_name = "glMapGrid2d")
    MapGrid2d :: proc(un: GLint, u1: GLdouble, u2: GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) ---

    @(link_name = "glMapGrid2f")
    MapGrid2f :: proc(un: GLint, u1: GLfloat, u2: GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) ---

    @(link_name = "glMaterialf")
    Materialf :: proc(face: GLenum, pname: GLenum, param: GLfloat) ---

    @(link_name = "glMaterialfv")
    Materialfv :: proc(face: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glMateriali")
    Materiali :: proc(face: GLenum, pname: GLenum, param: GLint) ---

    @(link_name = "glMaterialiv")
    Materialiv :: proc(face: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glMatrixMode")
    MatrixMode :: proc(mode: GLenum) ---

    @(link_name = "glMultMatrixd")
    MultMatrixd :: proc(m: ^GLdouble) ---

    @(link_name = "glMultMatrixf")
    MultMatrixf :: proc(m: ^GLfloat) ---

    @(link_name = "glNewList")
    NewList :: proc(list: GLuint, mode: GLenum) ---

    @(link_name = "glNormal3b")
    Normal3b :: proc(nx: GLbyte, ny: GLbyte, nz: GLbyte) ---

    @(link_name = "glNormal3bv")
    Normal3bv :: proc(v: ^GLbyte) ---

    @(link_name = "glNormal3d")
    Normal3d :: proc(nx: GLdouble, ny: GLdouble, nz: GLdouble) ---

    @(link_name = "glNormal3dv")
    Normal3dv :: proc(v: ^GLdouble) ---

    @(link_name = "glNormal3f")
    Normal3f :: proc(nx: GLfloat, ny: GLfloat, nz: GLfloat) ---

    @(link_name = "glNormal3fv")
    Normal3fv :: proc(v: ^GLfloat) ---

    @(link_name = "glNormal3i")
    Normal3i :: proc(nx: GLint, ny: GLint, nz: GLint) ---

    @(link_name = "glNormal3iv")
    Normal3iv :: proc(v: ^GLint) ---

    @(link_name = "glNormal3s")
    Normal3s :: proc(nx: GLshort, ny: GLshort, nz: GLshort) ---

    @(link_name = "glNormal3sv")
    Normal3sv :: proc(v: ^GLshort) ---

    @(link_name = "glNormalPointer")
    NormalPointer :: proc(type: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glOrtho")
    Ortho :: proc(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) ---

    @(link_name = "glPassThrough")
    PassThrough :: proc(token: GLfloat) ---

    @(link_name = "glPixelMapfv")
    PixelMapfv :: proc(map_: GLenum, mapsize: GLsizei, values: [^]GLfloat) ---

    @(link_name = "glPixelMapuiv")
    PixelMapuiv :: proc(map_: GLenum, mapsize: GLsizei, values: [^]GLuint) ---

    @(link_name = "glPixelMapusv")
    PixelMapusv :: proc(map_: GLenum, mapsize: GLsizei, values: [^]GLushort) ---

    @(link_name = "glPixelStoref")
    PixelStoref :: proc(pname: GLenum, param: GLfloat) ---

    @(link_name = "glPixelStorei")
    PixelStorei :: proc(pname: GLenum, param: GLint) ---

    @(link_name = "glPixelTransferf")
    PixelTransferf :: proc(pname: GLenum, param: GLfloat) ---

    @(link_name = "glPixelTransferi")
    PixelTransferi :: proc(pname: GLenum, param: GLint) ---

    @(link_name = "glPixelZoom")
    PixelZoom :: proc(xfactor: GLfloat, yfactor: GLfloat) ---

    @(link_name = "glPointSize")
    PointSize :: proc(size: GLfloat) ---

    @(link_name = "glPolygonMode")
    PolygonMode :: proc(face: GLenum, mode: GLenum) ---

    @(link_name = "glPolygonOffset")
    PolygonOffset :: proc(factor: GLfloat, units: GLfloat) ---

    @(link_name = "glPolygonStipple")
    PolygonStipple :: proc(mask: ^GLubyte) ---

    @(link_name = "glPopAttrib")
    PopAttrib :: proc() ---

    @(link_name = "glPopClientAttrib")
    PopClientAttrib :: proc() ---

    @(link_name = "glPopMatrix")
    PopMatrix :: proc() ---

    @(link_name = "glPopName")
    PopName :: proc() ---

    @(link_name = "glPrioritizeTextures")
    PrioritizeTextures :: proc(n: GLsizei, textures: [^]GLuint, priorities: [^]GLclampf) ---

    @(link_name = "glPushAttrib")
    PushAttrib :: proc(mask: GLbitfield) ---

    @(link_name = "glPushClientAttrib")
    PushClientAttrib :: proc(mask: GLbitfield) ---

    @(link_name = "glPushMatrix")
    PushMatrix :: proc() ---

    @(link_name = "glPushName")
    PushName :: proc(name: GLuint) ---

    @(link_name = "glRasterPos2d")
    RasterPos2d :: proc(x: GLdouble, y: GLdouble) ---

    @(link_name = "glRasterPos2dv")
    RasterPos2dv :: proc(v: ^GLdouble) ---

    @(link_name = "glRasterPos2f")
    RasterPos2f :: proc(x: GLfloat, y: GLfloat) ---

    @(link_name = "glRasterPos2fv")
    RasterPos2fv :: proc(v: ^GLfloat) ---

    @(link_name = "glRasterPos2i")
    RasterPos2i :: proc(x: GLint, y: GLint) ---

    @(link_name = "glRasterPos2iv")
    RasterPos2iv :: proc(v: ^GLint) ---

    @(link_name = "glRasterPos2s")
    RasterPos2s :: proc(x: GLshort, y: GLshort) ---

    @(link_name = "glRasterPos2sv")
    RasterPos2sv :: proc(v: ^GLshort) ---

    @(link_name = "glRasterPos3d")
    RasterPos3d :: proc(x: GLdouble, y: GLdouble, z: GLdouble) ---

    @(link_name = "glRasterPos3dv")
    RasterPos3dv :: proc(v: ^GLdouble) ---

    @(link_name = "glRasterPos3f")
    RasterPos3f :: proc(x: GLfloat, y: GLfloat, z: GLfloat) ---

    @(link_name = "glRasterPos3fv")
    RasterPos3fv :: proc(v: ^GLfloat) ---

    @(link_name = "glRasterPos3i")
    RasterPos3i :: proc(x: GLint, y: GLint, z: GLint) ---

    @(link_name = "glRasterPos3iv")
    RasterPos3iv :: proc(v: ^GLint) ---

    @(link_name = "glRasterPos3s")
    RasterPos3s :: proc(x: GLshort, y: GLshort, z: GLshort) ---

    @(link_name = "glRasterPos3sv")
    RasterPos3sv :: proc(v: ^GLshort) ---

    @(link_name = "glRasterPos4d")
    RasterPos4d :: proc(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) ---

    @(link_name = "glRasterPos4dv")
    RasterPos4dv :: proc(v: ^GLdouble) ---

    @(link_name = "glRasterPos4f")
    RasterPos4f :: proc(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) ---

    @(link_name = "glRasterPos4fv")
    RasterPos4fv :: proc(v: ^GLfloat) ---

    @(link_name = "glRasterPos4i")
    RasterPos4i :: proc(x: GLint, y: GLint, z: GLint, w: GLint) ---

    @(link_name = "glRasterPos4iv")
    RasterPos4iv :: proc(v: ^GLint) ---

    @(link_name = "glRasterPos4s")
    RasterPos4s :: proc(x: GLshort, y: GLshort, z: GLshort, w: GLshort) ---

    @(link_name = "glRasterPos4sv")
    RasterPos4sv :: proc(v: ^GLshort) ---

    @(link_name = "glReadBuffer")
    ReadBuffer :: proc(mode: GLenum) ---

    @(link_name = "glReadPixels")
    ReadPixels :: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glRectd")
    Rectd :: proc(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) ---

    @(link_name = "glRectdv")
    Rectdv :: proc(v1: ^GLdouble, v2: ^GLdouble) ---

    @(link_name = "glRectf")
    Rectf :: proc(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) ---

    @(link_name = "glRectfv")
    Rectfv :: proc(v1: ^GLfloat, v2: ^GLfloat) ---

    @(link_name = "glRecti")
    Recti :: proc(x1: GLint, y1: GLint, x2: GLint, y2: GLint) ---

    @(link_name = "glRectiv")
    Rectiv :: proc(v1: ^GLint, v2: ^GLint) ---

    @(link_name = "glRects")
    Rects :: proc(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) ---

    @(link_name = "glRectsv")
    Rectsv :: proc(v1: ^GLshort, v2: ^GLshort) ---

    @(link_name = "glRenderMode")
    RenderMode :: proc(mode: GLenum) -> GLint ---

    @(link_name = "glRotated")
    Rotated :: proc(angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) ---

    @(link_name = "glRotatef")
    Rotatef :: proc(angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) ---

    @(link_name = "glScaled")
    Scaled :: proc(x: GLdouble, y: GLdouble, z: GLdouble) ---

    @(link_name = "glScalef")
    Scalef :: proc(x: GLfloat, y: GLfloat, z: GLfloat) ---

    @(link_name = "glScissor")
    Scissor :: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei) ---

    @(link_name = "glSelectBuffer")
    SelectBuffer :: proc(size: GLsizei, buffer: ^GLuint) ---

    @(link_name = "glShadeModel")
    ShadeModel :: proc(mode: GLenum) ---

    @(link_name = "glStencilFunc")
    StencilFunc :: proc(func: GLenum, ref: GLint, mask: GLuint) ---

    @(link_name = "glStencilMask")
    StencilMask :: proc(mask: GLuint) ---

    @(link_name = "glStencilOp")
    StencilOp :: proc(fail: GLenum, zfail: GLenum, zpass: GLenum) ---

    @(link_name = "glTexCoord1d")
    TexCoord1d :: proc(s: GLdouble) ---

    @(link_name = "glTexCoord1dv")
    TexCoord1dv :: proc(v: ^GLdouble) ---

    @(link_name = "glTexCoord1f")
    TexCoord1f :: proc(s: GLfloat) ---

    @(link_name = "glTexCoord1fv")
    TexCoord1fv :: proc(v: ^GLfloat) ---

    @(link_name = "glTexCoord1i")
    TexCoord1i :: proc(s: GLint) ---

    @(link_name = "glTexCoord1iv")
    TexCoord1iv :: proc(v: ^GLint) ---

    @(link_name = "glTexCoord1s")
    TexCoord1s :: proc(s: GLshort) ---

    @(link_name = "glTexCoord1sv")
    TexCoord1sv :: proc(v: ^GLshort) ---

    @(link_name = "glTexCoord2d")
    TexCoord2d :: proc(s: GLdouble, t: GLdouble) ---

    @(link_name = "glTexCoord2dv")
    TexCoord2dv :: proc(v: ^GLdouble) ---

    @(link_name = "glTexCoord2f")
    TexCoord2f :: proc(s: GLfloat, t: GLfloat) ---

    @(link_name = "glTexCoord2fv")
    TexCoord2fv :: proc(v: ^GLfloat) ---

    @(link_name = "glTexCoord2i")
    TexCoord2i :: proc(s: GLint, t: GLint) ---

    @(link_name = "glTexCoord2iv")
    TexCoord2iv :: proc(v: ^GLint) ---

    @(link_name = "glTexCoord2s")
    TexCoord2s :: proc(s: GLshort, t: GLshort) ---

    @(link_name = "glTexCoord2sv")
    TexCoord2sv :: proc(v: ^GLshort) ---

    @(link_name = "glTexCoord3d")
    TexCoord3d :: proc(s: GLdouble, t: GLdouble, r: GLdouble) ---

    @(link_name = "glTexCoord3dv")
    TexCoord3dv :: proc(v: ^GLdouble) ---

    @(link_name = "glTexCoord3f")
    TexCoord3f :: proc(s: GLfloat, t: GLfloat, r: GLfloat) ---

    @(link_name = "glTexCoord3fv")
    TexCoord3fv :: proc(v: ^GLfloat) ---

    @(link_name = "glTexCoord3i")
    TexCoord3i :: proc(s: GLint, t: GLint, r: GLint) ---

    @(link_name = "glTexCoord3iv")
    TexCoord3iv :: proc(v: ^GLint) ---

    @(link_name = "glTexCoord3s")
    TexCoord3s :: proc(s: GLshort, t: GLshort, r: GLshort) ---

    @(link_name = "glTexCoord3sv")
    TexCoord3sv :: proc(v: ^GLshort) ---

    @(link_name = "glTexCoord4d")
    TexCoord4d :: proc(s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) ---

    @(link_name = "glTexCoord4dv")
    TexCoord4dv :: proc(v: ^GLdouble) ---

    @(link_name = "glTexCoord4f")
    TexCoord4f :: proc(s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) ---

    @(link_name = "glTexCoord4fv")
    TexCoord4fv :: proc(v: ^GLfloat) ---

    @(link_name = "glTexCoord4i")
    TexCoord4i :: proc(s: GLint, t: GLint, r: GLint, q: GLint) ---

    @(link_name = "glTexCoord4iv")
    TexCoord4iv :: proc(v: ^GLint) ---

    @(link_name = "glTexCoord4s")
    TexCoord4s :: proc(s: GLshort, t: GLshort, r: GLshort, q: GLshort) ---

    @(link_name = "glTexCoord4sv")
    TexCoord4sv :: proc(v: ^GLshort) ---

    @(link_name = "glTexCoordPointer")
    TexCoordPointer :: proc(size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glTexEnvf")
    TexEnvf :: proc(target: GLenum, pname: GLenum, param: GLfloat) ---

    @(link_name = "glTexEnvfv")
    TexEnvfv :: proc(target: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glTexEnvi")
    TexEnvi :: proc(target: GLenum, pname: GLenum, param: GLint) ---

    @(link_name = "glTexEnviv")
    TexEnviv :: proc(target: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glTexGend")
    TexGend :: proc(coord: GLenum, pname: GLenum, param: GLdouble) ---

    @(link_name = "glTexGendv")
    TexGendv :: proc(coord: GLenum, pname: GLenum, params: [^]GLdouble) ---

    @(link_name = "glTexGenf")
    TexGenf :: proc(coord: GLenum, pname: GLenum, param: GLfloat) ---

    @(link_name = "glTexGenfv")
    TexGenfv :: proc(coord: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glTexGeni")
    TexGeni :: proc(coord: GLenum, pname: GLenum, param: GLint) ---

    @(link_name = "glTexGeniv")
    TexGeniv :: proc(coord: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glTexImage1D")
    TexImage1D :: proc(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glTexImage2D")
    TexImage2D :: proc(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glTexParameterf")
    TexParameterf :: proc(target: GLenum, pname: GLenum, param: GLfloat) ---

    @(link_name = "glTexParameterfv")
    TexParameterfv :: proc(target: GLenum, pname: GLenum, params: [^]GLfloat) ---

    @(link_name = "glTexParameteri")
    TexParameteri :: proc(target: GLenum, pname: GLenum, param: GLint) ---

    @(link_name = "glTexParameteriv")
    TexParameteriv :: proc(target: GLenum, pname: GLenum, params: [^]GLint) ---

    @(link_name = "glTexSubImage1D")
    TexSubImage1D :: proc(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glTexSubImage2D")
    TexSubImage2D :: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) ---

    @(link_name = "glTranslated")
    Translated :: proc(x: GLdouble, y: GLdouble, z: GLdouble) ---

    @(link_name = "glTranslatef")
    Translatef :: proc(x: GLfloat, y: GLfloat, z: GLfloat) ---

    @(link_name = "glVertex2d")
    Vertex2d :: proc(x: GLdouble, y: GLdouble) ---

    @(link_name = "glVertex2dv")
    Vertex2dv :: proc(v: ^GLdouble) ---

    @(link_name = "glVertex2f")
    Vertex2f :: proc(x: GLfloat, y: GLfloat) ---

    @(link_name = "glVertex2fv")
    Vertex2fv :: proc(v: ^GLfloat) ---

    @(link_name = "glVertex2i")
    Vertex2i :: proc(x: GLint, y: GLint) ---

    @(link_name = "glVertex2iv")
    Vertex2iv :: proc(v: ^GLint) ---

    @(link_name = "glVertex2s")
    Vertex2s :: proc(x: GLshort, y: GLshort) ---

    @(link_name = "glVertex2sv")
    Vertex2sv :: proc(v: ^GLshort) ---

    @(link_name = "glVertex3d")
    Vertex3d :: proc(x: GLdouble, y: GLdouble, z: GLdouble) ---

    @(link_name = "glVertex3dv")
    Vertex3dv :: proc(v: ^GLdouble) ---

    @(link_name = "glVertex3f")
    Vertex3f :: proc(x: GLfloat, y: GLfloat, z: GLfloat) ---

    @(link_name = "glVertex3fv")
    Vertex3fv :: proc(v: ^GLfloat) ---

    @(link_name = "glVertex3i")
    Vertex3i :: proc(x: GLint, y: GLint, z: GLint) ---

    @(link_name = "glVertex3iv")
    Vertex3iv :: proc(v: ^GLint) ---

    @(link_name = "glVertex3s")
    Vertex3s :: proc(x: GLshort, y: GLshort, z: GLshort) ---

    @(link_name = "glVertex3sv")
    Vertex3sv :: proc(v: ^GLshort) ---

    @(link_name = "glVertex4d")
    Vertex4d :: proc(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) ---

    @(link_name = "glVertex4dv")
    Vertex4dv :: proc(v: ^GLdouble) ---

    @(link_name = "glVertex4f")
    Vertex4f :: proc(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) ---

    @(link_name = "glVertex4fv")
    Vertex4fv :: proc(v: ^GLfloat) ---

    @(link_name = "glVertex4i")
    Vertex4i :: proc(x: GLint, y: GLint, z: GLint, w: GLint) ---

    @(link_name = "glVertex4iv")
    Vertex4iv :: proc(v: ^GLint) ---

    @(link_name = "glVertex4s")
    Vertex4s :: proc(x: GLshort, y: GLshort, z: GLshort, w: GLshort) ---

    @(link_name = "glVertex4sv")
    Vertex4sv :: proc(v: ^GLshort) ---

    @(link_name = "glVertexPointer")
    VertexPointer :: proc(size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) ---

    @(link_name = "glViewport")
    Viewport :: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei) ---

    @(link_name = "glewInit")
    ewInit :: proc() -> GLenum ---

    @(link_name = "glewContextInit")
    ewContextInit :: proc() -> GLenum ---

    @(link_name = "glewIsSupported")
    ewIsSupported :: proc(name: cstring) -> GLboolean ---

    @(link_name = "glewGetExtension")
    ewGetExtension :: proc(name: cstring) -> GLboolean ---

    @(link_name = "glewGetErrorString")
    ewGetErrorString :: proc(error: GLenum) -> ^GLubyte ---

    @(link_name = "glewGetString")
    ewGetString :: proc(name: GLenum) -> ^GLubyte ---

}

CopyTexSubImage3D :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

DrawRangeElements :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr) {
    __glewDrawRangeElements(mode, start, end, count, type, indices)
}

TexImage3D :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels)
}

TexSubImage3D :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

ActiveTexture :: #force_inline proc "contextless" (texture: GLenum) {
    __glewActiveTexture(texture)
}

ClientActiveTexture :: #force_inline proc "contextless" (texture: GLenum) {
    __glewClientActiveTexture(texture)
}

CompressedTexImage1D :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)
}

CompressedTexImage2D :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)
}

CompressedTexImage3D :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedTexSubImage1D :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)
}

CompressedTexSubImage2D :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

CompressedTexSubImage3D :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

GetCompressedTexImage :: #force_inline proc "contextless" (target: GLenum, lod: GLint, img: rawptr) {
    __glewGetCompressedTexImage(target, lod, img)
}

LoadTransposeMatrixd :: #force_inline proc "contextless" (m: [16]GLdouble) {
    __glewLoadTransposeMatrixd(m)
}

LoadTransposeMatrixf :: #force_inline proc "contextless" (m: [16]GLfloat) {
    __glewLoadTransposeMatrixf(m)
}

MultTransposeMatrixd :: #force_inline proc "contextless" (m: [16]GLdouble) {
    __glewMultTransposeMatrixd(m)
}

MultTransposeMatrixf :: #force_inline proc "contextless" (m: [16]GLfloat) {
    __glewMultTransposeMatrixf(m)
}

MultiTexCoord1d :: #force_inline proc "contextless" (target: GLenum, s: GLdouble) {
    __glewMultiTexCoord1d(target, s)
}

MultiTexCoord1dv :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord1dv(target, v)
}

MultiTexCoord1f :: #force_inline proc "contextless" (target: GLenum, s: GLfloat) {
    __glewMultiTexCoord1f(target, s)
}

MultiTexCoord1fv :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord1fv(target, v)
}

MultiTexCoord1i :: #force_inline proc "contextless" (target: GLenum, s: GLint) {
    __glewMultiTexCoord1i(target, s)
}

MultiTexCoord1iv :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord1iv(target, v)
}

MultiTexCoord1s :: #force_inline proc "contextless" (target: GLenum, s: GLshort) {
    __glewMultiTexCoord1s(target, s)
}

MultiTexCoord1sv :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord1sv(target, v)
}

MultiTexCoord2d :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble) {
    __glewMultiTexCoord2d(target, s, t)
}

MultiTexCoord2dv :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord2dv(target, v)
}

MultiTexCoord2f :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat) {
    __glewMultiTexCoord2f(target, s, t)
}

MultiTexCoord2fv :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord2fv(target, v)
}

MultiTexCoord2i :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint) {
    __glewMultiTexCoord2i(target, s, t)
}

MultiTexCoord2iv :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord2iv(target, v)
}

MultiTexCoord2s :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort) {
    __glewMultiTexCoord2s(target, s, t)
}

MultiTexCoord2sv :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord2sv(target, v)
}

MultiTexCoord3d :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) {
    __glewMultiTexCoord3d(target, s, t, r)
}

MultiTexCoord3dv :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord3dv(target, v)
}

MultiTexCoord3f :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) {
    __glewMultiTexCoord3f(target, s, t, r)
}

MultiTexCoord3fv :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord3fv(target, v)
}

MultiTexCoord3i :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint, r: GLint) {
    __glewMultiTexCoord3i(target, s, t, r)
}

MultiTexCoord3iv :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord3iv(target, v)
}

MultiTexCoord3s :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort, r: GLshort) {
    __glewMultiTexCoord3s(target, s, t, r)
}

MultiTexCoord3sv :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord3sv(target, v)
}

MultiTexCoord4d :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) {
    __glewMultiTexCoord4d(target, s, t, r, q)
}

MultiTexCoord4dv :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord4dv(target, v)
}

MultiTexCoord4f :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) {
    __glewMultiTexCoord4f(target, s, t, r, q)
}

MultiTexCoord4fv :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord4fv(target, v)
}

MultiTexCoord4i :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) {
    __glewMultiTexCoord4i(target, s, t, r, q)
}

MultiTexCoord4iv :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord4iv(target, v)
}

MultiTexCoord4s :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) {
    __glewMultiTexCoord4s(target, s, t, r, q)
}

MultiTexCoord4sv :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord4sv(target, v)
}

SampleCoverage :: #force_inline proc "contextless" (value: GLclampf, invert: GLboolean) {
    __glewSampleCoverage(value, invert)
}

BlendColor :: #force_inline proc "contextless" (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) {
    __glewBlendColor(red, green, blue, alpha)
}

BlendEquation :: #force_inline proc "contextless" (mode: GLenum) {
    __glewBlendEquation(mode)
}

BlendFuncSeparate :: #force_inline proc "contextless" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) {
    __glewBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

FogCoordPointer :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewFogCoordPointer(type, stride, pointer)
}

FogCoordd :: #force_inline proc "contextless" (coord: GLdouble) {
    __glewFogCoordd(coord)
}

FogCoorddv :: #force_inline proc "contextless" (coord: ^GLdouble) {
    __glewFogCoorddv(coord)
}

FogCoordf :: #force_inline proc "contextless" (coord: GLfloat) {
    __glewFogCoordf(coord)
}

FogCoordfv :: #force_inline proc "contextless" (coord: ^GLfloat) {
    __glewFogCoordfv(coord)
}

MultiDrawArrays :: #force_inline proc "contextless" (mode: GLenum, first: ^GLint, count: ^GLsizei, drawcount: GLsizei) {
    __glewMultiDrawArrays(mode, first, count, drawcount)
}

MultiDrawElements :: #force_inline proc "contextless" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei) {
    __glewMultiDrawElements(mode, count, type, indices, drawcount)
}

PointParameterf :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewPointParameterf(pname, param)
}

PointParameterfv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewPointParameterfv(pname, params)
}

PointParameteri :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewPointParameteri(pname, param)
}

PointParameteriv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewPointParameteriv(pname, params)
}

SecondaryColor3b :: #force_inline proc "contextless" (red: GLbyte, green: GLbyte, blue: GLbyte) {
    __glewSecondaryColor3b(red, green, blue)
}

SecondaryColor3bv :: #force_inline proc "contextless" (v: ^GLbyte) {
    __glewSecondaryColor3bv(v)
}

SecondaryColor3d :: #force_inline proc "contextless" (red: GLdouble, green: GLdouble, blue: GLdouble) {
    __glewSecondaryColor3d(red, green, blue)
}

SecondaryColor3dv :: #force_inline proc "contextless" (v: ^GLdouble) {
    __glewSecondaryColor3dv(v)
}

SecondaryColor3f :: #force_inline proc "contextless" (red: GLfloat, green: GLfloat, blue: GLfloat) {
    __glewSecondaryColor3f(red, green, blue)
}

SecondaryColor3fv :: #force_inline proc "contextless" (v: ^GLfloat) {
    __glewSecondaryColor3fv(v)
}

SecondaryColor3i :: #force_inline proc "contextless" (red: GLint, green: GLint, blue: GLint) {
    __glewSecondaryColor3i(red, green, blue)
}

SecondaryColor3iv :: #force_inline proc "contextless" (v: ^GLint) {
    __glewSecondaryColor3iv(v)
}

SecondaryColor3s :: #force_inline proc "contextless" (red: GLshort, green: GLshort, blue: GLshort) {
    __glewSecondaryColor3s(red, green, blue)
}

SecondaryColor3sv :: #force_inline proc "contextless" (v: ^GLshort) {
    __glewSecondaryColor3sv(v)
}

SecondaryColor3ub :: #force_inline proc "contextless" (red: GLubyte, green: GLubyte, blue: GLubyte) {
    __glewSecondaryColor3ub(red, green, blue)
}

SecondaryColor3ubv :: #force_inline proc "contextless" (v: ^GLubyte) {
    __glewSecondaryColor3ubv(v)
}

SecondaryColor3ui :: #force_inline proc "contextless" (red: GLuint, green: GLuint, blue: GLuint) {
    __glewSecondaryColor3ui(red, green, blue)
}

SecondaryColor3uiv :: #force_inline proc "contextless" (v: ^GLuint) {
    __glewSecondaryColor3uiv(v)
}

SecondaryColor3us :: #force_inline proc "contextless" (red: GLushort, green: GLushort, blue: GLushort) {
    __glewSecondaryColor3us(red, green, blue)
}

SecondaryColor3usv :: #force_inline proc "contextless" (v: ^GLushort) {
    __glewSecondaryColor3usv(v)
}

SecondaryColorPointer :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewSecondaryColorPointer(size, type, stride, pointer)
}

WindowPos2d :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble) {
    __glewWindowPos2d(x, y)
}

WindowPos2dv :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos2dv(p)
}

WindowPos2f :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat) {
    __glewWindowPos2f(x, y)
}

WindowPos2fv :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos2fv(p)
}

WindowPos2i :: #force_inline proc "contextless" (x: GLint, y: GLint) {
    __glewWindowPos2i(x, y)
}

WindowPos2iv :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos2iv(p)
}

WindowPos2s :: #force_inline proc "contextless" (x: GLshort, y: GLshort) {
    __glewWindowPos2s(x, y)
}

WindowPos2sv :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos2sv(p)
}

WindowPos3d :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewWindowPos3d(x, y, z)
}

WindowPos3dv :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos3dv(p)
}

WindowPos3f :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewWindowPos3f(x, y, z)
}

WindowPos3fv :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos3fv(p)
}

WindowPos3i :: #force_inline proc "contextless" (x: GLint, y: GLint, z: GLint) {
    __glewWindowPos3i(x, y, z)
}

WindowPos3iv :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos3iv(p)
}

WindowPos3s :: #force_inline proc "contextless" (x: GLshort, y: GLshort, z: GLshort) {
    __glewWindowPos3s(x, y, z)
}

WindowPos3sv :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos3sv(p)
}

BeginQuery :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBeginQuery(target, id)
}

BindBuffer :: #force_inline proc "contextless" (target: GLenum, buffer: GLuint) {
    __glewBindBuffer(target, buffer)
}

BufferData :: #force_inline proc "contextless" (target: GLenum, size: GLsizeiptr, data: rawptr, usage: GLenum) {
    __glewBufferData(target, size, data, usage)
}

BufferSubData :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewBufferSubData(target, offset, size, data)
}

DeleteBuffers :: #force_inline proc "contextless" (n: GLsizei, buffers: [^]GLuint) {
    __glewDeleteBuffers(n, buffers)
}

DeleteQueries :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteQueries(n, ids)
}

EndQuery :: #force_inline proc "contextless" (target: GLenum) {
    __glewEndQuery(target)
}

GenBuffers :: #force_inline proc "contextless" (n: GLsizei, buffers: [^]GLuint) {
    __glewGenBuffers(n, buffers)
}

GenQueries :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenQueries(n, ids)
}

GetBufferParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetBufferParameteriv(target, pname, params)
}

GetBufferPointerv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]rawptr) {
    __glewGetBufferPointerv(target, pname, params)
}

GetBufferSubData :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewGetBufferSubData(target, offset, size, data)
}

GetQueryObjectiv :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetQueryObjectiv(id, pname, params)
}

GetQueryObjectuiv :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetQueryObjectuiv(id, pname, params)
}

GetQueryiv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetQueryiv(target, pname, params)
}

IsBuffer :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewIsBuffer(buffer)
}

IsQuery :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsQuery(id)
}

MapBuffer :: #force_inline proc "contextless" (target: GLenum, access: GLenum) -> rawptr {
    return __glewMapBuffer(target, access)
}

UnmapBuffer :: #force_inline proc "contextless" (target: GLenum) -> GLboolean {
    return __glewUnmapBuffer(target)
}

AttachShader :: #force_inline proc "contextless" (program: GLuint, shader: GLuint) {
    __glewAttachShader(program, shader)
}

BindAttribLocation :: #force_inline proc "contextless" (program: GLuint, index: GLuint, name: ^GLchar) {
    __glewBindAttribLocation(program, index, name)
}

BlendEquationSeparate :: #force_inline proc "contextless" (modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparate(modeRGB, modeAlpha)
}

CompileShader :: #force_inline proc "contextless" (shader: GLuint) {
    __glewCompileShader(shader)
}

CreateProgram :: #force_inline proc "contextless" () -> GLuint {
    return __glewCreateProgram()
}

CreateShader :: #force_inline proc "contextless" (type: GLenum) -> GLuint {
    return __glewCreateShader(type)
}

DeleteProgram :: #force_inline proc "contextless" (program: GLuint) {
    __glewDeleteProgram(program)
}

DeleteShader :: #force_inline proc "contextless" (shader: GLuint) {
    __glewDeleteShader(shader)
}

DetachShader :: #force_inline proc "contextless" (program: GLuint, shader: GLuint) {
    __glewDetachShader(program, shader)
}

DisableVertexAttribArray :: #force_inline proc "contextless" (index: GLuint) {
    __glewDisableVertexAttribArray(index)
}

DrawBuffers :: #force_inline proc "contextless" (n: GLsizei, bufs: [^]GLenum) {
    __glewDrawBuffers(n, bufs)
}

EnableVertexAttribArray :: #force_inline proc "contextless" (index: GLuint) {
    __glewEnableVertexAttribArray(index)
}

GetActiveAttrib :: #force_inline proc "contextless" (program: GLuint, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar) {
    __glewGetActiveAttrib(program, index, maxLength, length, size, type, name)
}

GetActiveUniform :: #force_inline proc "contextless" (program: GLuint, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar) {
    __glewGetActiveUniform(program, index, maxLength, length, size, type, name)
}

GetAttachedShaders :: #force_inline proc "contextless" (program: GLuint, maxCount: GLsizei, count: ^GLsizei, shaders: [^]GLuint) {
    __glewGetAttachedShaders(program, maxCount, count, shaders)
}

GetAttribLocation :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetAttribLocation(program, name)
}

GetProgramInfoLog :: #force_inline proc "contextless" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar) {
    __glewGetProgramInfoLog(program, bufSize, length, infoLog)
}

GetProgramiv :: #force_inline proc "contextless" (program: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetProgramiv(program, pname, param)
}

GetShaderInfoLog :: #force_inline proc "contextless" (shader: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar) {
    __glewGetShaderInfoLog(shader, bufSize, length, infoLog)
}

GetShaderSource :: #force_inline proc "contextless" (obj: GLuint, maxLength: GLsizei, length: ^GLsizei, source: ^GLchar) {
    __glewGetShaderSource(obj, maxLength, length, source)
}

GetShaderiv :: #force_inline proc "contextless" (shader: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetShaderiv(shader, pname, param)
}

GetUniformLocation :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetUniformLocation(program, name)
}

GetUniformfv :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLfloat) {
    __glewGetUniformfv(program, location, params)
}

GetUniformiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLint) {
    __glewGetUniformiv(program, location, params)
}

GetVertexAttribPointerv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, pointer: ^rawptr) {
    __glewGetVertexAttribPointerv(index, pname, pointer)
}

GetVertexAttribdv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVertexAttribdv(index, pname, params)
}

GetVertexAttribfv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVertexAttribfv(index, pname, params)
}

GetVertexAttribiv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribiv(index, pname, params)
}

IsProgram :: #force_inline proc "contextless" (program: GLuint) -> GLboolean {
    return __glewIsProgram(program)
}

IsShader :: #force_inline proc "contextless" (shader: GLuint) -> GLboolean {
    return __glewIsShader(shader)
}

LinkProgram :: #force_inline proc "contextless" (program: GLuint) {
    __glewLinkProgram(program)
}

ShaderSource :: #force_inline proc "contextless" (shader: GLuint, count: GLsizei, string_: ^^GLchar, length: ^GLint) {
    __glewShaderSource(shader, count, string_, length)
}

StencilFuncSeparate :: #force_inline proc "contextless" (face: GLenum, func: GLenum, ref: GLint, mask: GLuint) {
    __glewStencilFuncSeparate(face, func, ref, mask)
}

StencilMaskSeparate :: #force_inline proc "contextless" (face: GLenum, mask: GLuint) {
    __glewStencilMaskSeparate(face, mask)
}

StencilOpSeparate :: #force_inline proc "contextless" (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) {
    __glewStencilOpSeparate(face, sfail, dpfail, dppass)
}

Uniform1f :: #force_inline proc "contextless" (location: GLint, v0: GLfloat) {
    __glewUniform1f(location, v0)
}

Uniform1fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform1fv(location, count, value)
}

Uniform1i :: #force_inline proc "contextless" (location: GLint, v0: GLint) {
    __glewUniform1i(location, v0)
}

Uniform1iv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform1iv(location, count, value)
}

Uniform2f :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat) {
    __glewUniform2f(location, v0, v1)
}

Uniform2fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform2fv(location, count, value)
}

Uniform2i :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint) {
    __glewUniform2i(location, v0, v1)
}

Uniform2iv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform2iv(location, count, value)
}

Uniform3f :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) {
    __glewUniform3f(location, v0, v1, v2)
}

Uniform3fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform3fv(location, count, value)
}

Uniform3i :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint, v2: GLint) {
    __glewUniform3i(location, v0, v1, v2)
}

Uniform3iv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform3iv(location, count, value)
}

Uniform4f :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) {
    __glewUniform4f(location, v0, v1, v2, v3)
}

Uniform4fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform4fv(location, count, value)
}

Uniform4i :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) {
    __glewUniform4i(location, v0, v1, v2, v3)
}

Uniform4iv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform4iv(location, count, value)
}

UniformMatrix2fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2fv(location, count, transpose, value)
}

UniformMatrix3fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3fv(location, count, transpose, value)
}

UniformMatrix4fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4fv(location, count, transpose, value)
}

UseProgram :: #force_inline proc "contextless" (program: GLuint) {
    __glewUseProgram(program)
}

ValidateProgram :: #force_inline proc "contextless" (program: GLuint) {
    __glewValidateProgram(program)
}

VertexAttrib1d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble) {
    __glewVertexAttrib1d(index, x)
}

VertexAttrib1dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib1dv(index, v)
}

VertexAttrib1f :: #force_inline proc "contextless" (index: GLuint, x: GLfloat) {
    __glewVertexAttrib1f(index, x)
}

VertexAttrib1fv :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib1fv(index, v)
}

VertexAttrib1s :: #force_inline proc "contextless" (index: GLuint, x: GLshort) {
    __glewVertexAttrib1s(index, x)
}

VertexAttrib1sv :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib1sv(index, v)
}

VertexAttrib2d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble) {
    __glewVertexAttrib2d(index, x, y)
}

VertexAttrib2dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib2dv(index, v)
}

VertexAttrib2f :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat) {
    __glewVertexAttrib2f(index, x, y)
}

VertexAttrib2fv :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib2fv(index, v)
}

VertexAttrib2s :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort) {
    __glewVertexAttrib2s(index, x, y)
}

VertexAttrib2sv :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib2sv(index, v)
}

VertexAttrib3d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexAttrib3d(index, x, y, z)
}

VertexAttrib3dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib3dv(index, v)
}

VertexAttrib3f :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewVertexAttrib3f(index, x, y, z)
}

VertexAttrib3fv :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib3fv(index, v)
}

VertexAttrib3s :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort) {
    __glewVertexAttrib3s(index, x, y, z)
}

VertexAttrib3sv :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib3sv(index, v)
}

VertexAttrib4Nbv :: #force_inline proc "contextless" (index: GLuint, v: ^GLbyte) {
    __glewVertexAttrib4Nbv(index, v)
}

VertexAttrib4Niv :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttrib4Niv(index, v)
}

VertexAttrib4Nsv :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib4Nsv(index, v)
}

VertexAttrib4Nub :: #force_inline proc "contextless" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) {
    __glewVertexAttrib4Nub(index, x, y, z, w)
}

VertexAttrib4Nubv :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttrib4Nubv(index, v)
}

VertexAttrib4Nuiv :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttrib4Nuiv(index, v)
}

VertexAttrib4Nusv :: #force_inline proc "contextless" (index: GLuint, v: ^GLushort) {
    __glewVertexAttrib4Nusv(index, v)
}

VertexAttrib4bv :: #force_inline proc "contextless" (index: GLuint, v: ^GLbyte) {
    __glewVertexAttrib4bv(index, v)
}

VertexAttrib4d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexAttrib4d(index, x, y, z, w)
}

VertexAttrib4dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib4dv(index, v)
}

VertexAttrib4f :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewVertexAttrib4f(index, x, y, z, w)
}

VertexAttrib4fv :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib4fv(index, v)
}

VertexAttrib4iv :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttrib4iv(index, v)
}

VertexAttrib4s :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) {
    __glewVertexAttrib4s(index, x, y, z, w)
}

VertexAttrib4sv :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib4sv(index, v)
}

VertexAttrib4ubv :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttrib4ubv(index, v)
}

VertexAttrib4uiv :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttrib4uiv(index, v)
}

VertexAttrib4usv :: #force_inline proc "contextless" (index: GLuint, v: ^GLushort) {
    __glewVertexAttrib4usv(index, v)
}

VertexAttribPointer :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribPointer(index, size, type, normalized, stride, pointer)
}

UniformMatrix2x3fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2x3fv(location, count, transpose, value)
}

UniformMatrix2x4fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2x4fv(location, count, transpose, value)
}

UniformMatrix3x2fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3x2fv(location, count, transpose, value)
}

UniformMatrix3x4fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3x4fv(location, count, transpose, value)
}

UniformMatrix4x2fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4x2fv(location, count, transpose, value)
}

UniformMatrix4x3fv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4x3fv(location, count, transpose, value)
}

BeginConditionalRender :: #force_inline proc "contextless" (id: GLuint, mode: GLenum) {
    __glewBeginConditionalRender(id, mode)
}

BeginTransformFeedback :: #force_inline proc "contextless" (primitiveMode: GLenum) {
    __glewBeginTransformFeedback(primitiveMode)
}

BindFragDataLocation :: #force_inline proc "contextless" (program: GLuint, colorNumber: GLuint, name: ^GLchar) {
    __glewBindFragDataLocation(program, colorNumber, name)
}

ClampColor :: #force_inline proc "contextless" (target: GLenum, clamp: GLenum) {
    __glewClampColor(target, clamp)
}

ClearBufferfi :: #force_inline proc "contextless" (buffer: GLenum, drawBuffer: GLint, depth: GLfloat, stencil: GLint) {
    __glewClearBufferfi(buffer, drawBuffer, depth, stencil)
}

ClearBufferfv :: #force_inline proc "contextless" (buffer: GLenum, drawBuffer: GLint, value: ^GLfloat) {
    __glewClearBufferfv(buffer, drawBuffer, value)
}

ClearBufferiv :: #force_inline proc "contextless" (buffer: GLenum, drawBuffer: GLint, value: ^GLint) {
    __glewClearBufferiv(buffer, drawBuffer, value)
}

ClearBufferuiv :: #force_inline proc "contextless" (buffer: GLenum, drawBuffer: GLint, value: ^GLuint) {
    __glewClearBufferuiv(buffer, drawBuffer, value)
}

ColorMaski :: #force_inline proc "contextless" (buf: GLuint, red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) {
    __glewColorMaski(buf, red, green, blue, alpha)
}

Disablei :: #force_inline proc "contextless" (cap: GLenum, index: GLuint) {
    __glewDisablei(cap, index)
}

Enablei :: #force_inline proc "contextless" (cap: GLenum, index: GLuint) {
    __glewEnablei(cap, index)
}

EndConditionalRender :: #force_inline proc "contextless" () {
    __glewEndConditionalRender()
}

EndTransformFeedback :: #force_inline proc "contextless" () {
    __glewEndTransformFeedback()
}

GetBooleani_v :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, data: ^GLboolean) {
    __glewGetBooleani_v(pname, index, data)
}

GetFragDataLocation :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetFragDataLocation(program, name)
}

GetStringi :: #force_inline proc "contextless" (name: GLenum, index: GLuint) -> ^GLubyte {
    return __glewGetStringi(name, index)
}

GetTexParameterIiv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTexParameterIiv(target, pname, params)
}

GetTexParameterIuiv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewGetTexParameterIuiv(target, pname, params)
}

GetTransformFeedbackVarying :: #force_inline proc "contextless" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar) {
    __glewGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name)
}

GetUniformuiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLuint) {
    __glewGetUniformuiv(program, location, params)
}

GetVertexAttribIiv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribIiv(index, pname, params)
}

GetVertexAttribIuiv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetVertexAttribIuiv(index, pname, params)
}

IsEnabledi :: #force_inline proc "contextless" (cap: GLenum, index: GLuint) -> GLboolean {
    return __glewIsEnabledi(cap, index)
}

TexParameterIiv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewTexParameterIiv(target, pname, params)
}

TexParameterIuiv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewTexParameterIuiv(target, pname, params)
}

TransformFeedbackVaryings :: #force_inline proc "contextless" (program: GLuint, count: GLsizei, varyings: ^[^]GLchar, bufferMode: GLenum) {
    __glewTransformFeedbackVaryings(program, count, varyings, bufferMode)
}

Uniform1ui :: #force_inline proc "contextless" (location: GLint, v0: GLuint) {
    __glewUniform1ui(location, v0)
}

Uniform1uiv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform1uiv(location, count, value)
}

Uniform2ui :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint) {
    __glewUniform2ui(location, v0, v1)
}

Uniform2uiv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform2uiv(location, count, value)
}

Uniform3ui :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) {
    __glewUniform3ui(location, v0, v1, v2)
}

Uniform3uiv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform3uiv(location, count, value)
}

Uniform4ui :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) {
    __glewUniform4ui(location, v0, v1, v2, v3)
}

Uniform4uiv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform4uiv(location, count, value)
}

VertexAttribI1i :: #force_inline proc "contextless" (index: GLuint, v0: GLint) {
    __glewVertexAttribI1i(index, v0)
}

VertexAttribI1iv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLint) {
    __glewVertexAttribI1iv(index, v0)
}

VertexAttribI1ui :: #force_inline proc "contextless" (index: GLuint, v0: GLuint) {
    __glewVertexAttribI1ui(index, v0)
}

VertexAttribI1uiv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLuint) {
    __glewVertexAttribI1uiv(index, v0)
}

VertexAttribI2i :: #force_inline proc "contextless" (index: GLuint, v0: GLint, v1: GLint) {
    __glewVertexAttribI2i(index, v0, v1)
}

VertexAttribI2iv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLint) {
    __glewVertexAttribI2iv(index, v0)
}

VertexAttribI2ui :: #force_inline proc "contextless" (index: GLuint, v0: GLuint, v1: GLuint) {
    __glewVertexAttribI2ui(index, v0, v1)
}

VertexAttribI2uiv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLuint) {
    __glewVertexAttribI2uiv(index, v0)
}

VertexAttribI3i :: #force_inline proc "contextless" (index: GLuint, v0: GLint, v1: GLint, v2: GLint) {
    __glewVertexAttribI3i(index, v0, v1, v2)
}

VertexAttribI3iv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLint) {
    __glewVertexAttribI3iv(index, v0)
}

VertexAttribI3ui :: #force_inline proc "contextless" (index: GLuint, v0: GLuint, v1: GLuint, v2: GLuint) {
    __glewVertexAttribI3ui(index, v0, v1, v2)
}

VertexAttribI3uiv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLuint) {
    __glewVertexAttribI3uiv(index, v0)
}

VertexAttribI4bv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLbyte) {
    __glewVertexAttribI4bv(index, v0)
}

VertexAttribI4i :: #force_inline proc "contextless" (index: GLuint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) {
    __glewVertexAttribI4i(index, v0, v1, v2, v3)
}

VertexAttribI4iv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLint) {
    __glewVertexAttribI4iv(index, v0)
}

VertexAttribI4sv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLshort) {
    __glewVertexAttribI4sv(index, v0)
}

VertexAttribI4ubv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLubyte) {
    __glewVertexAttribI4ubv(index, v0)
}

VertexAttribI4ui :: #force_inline proc "contextless" (index: GLuint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) {
    __glewVertexAttribI4ui(index, v0, v1, v2, v3)
}

VertexAttribI4uiv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLuint) {
    __glewVertexAttribI4uiv(index, v0)
}

VertexAttribI4usv :: #force_inline proc "contextless" (index: GLuint, v0: ^GLushort) {
    __glewVertexAttribI4usv(index, v0)
}

VertexAttribIPointer :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribIPointer(index, size, type, stride, pointer)
}

DrawArraysInstanced :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) {
    __glewDrawArraysInstanced(mode, first, count, primcount)
}

DrawElementsInstanced :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei) {
    __glewDrawElementsInstanced(mode, count, type, indices, primcount)
}

PrimitiveRestartIndex :: #force_inline proc "contextless" (buffer: GLuint) {
    __glewPrimitiveRestartIndex(buffer)
}

TexBuffer :: #force_inline proc "contextless" (target: GLenum, internalFormat: GLenum, buffer: GLuint) {
    __glewTexBuffer(target, internalFormat, buffer)
}

FramebufferTexture :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture(target, attachment, texture, level)
}

GetBufferParameteri64v :: #force_inline proc "contextless" (target: GLenum, value: GLenum, data: ^GLint64) {
    __glewGetBufferParameteri64v(target, value, data)
}

GetInteger64i_v :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, data: ^GLint64) {
    __glewGetInteger64i_v(pname, index, data)
}

VertexAttribDivisor :: #force_inline proc "contextless" (index: GLuint, divisor: GLuint) {
    __glewVertexAttribDivisor(index, divisor)
}

BlendEquationSeparatei :: #force_inline proc "contextless" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparatei(buf, modeRGB, modeAlpha)
}

BlendEquationi :: #force_inline proc "contextless" (buf: GLuint, mode: GLenum) {
    __glewBlendEquationi(buf, mode)
}

BlendFuncSeparatei :: #force_inline proc "contextless" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) {
    __glewBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

BlendFunci :: #force_inline proc "contextless" (buf: GLuint, src: GLenum, dst: GLenum) {
    __glewBlendFunci(buf, src, dst)
}

MinSampleShading :: #force_inline proc "contextless" (value: GLclampf) {
    __glewMinSampleShading(value)
}

GetGraphicsResetStatus :: #force_inline proc "contextless" () -> GLenum {
    return __glewGetGraphicsResetStatus()
}

GetnCompressedTexImage :: #force_inline proc "contextless" (target: GLenum, lod: GLint, bufSize: GLsizei, pixels: rawptr) {
    __glewGetnCompressedTexImage(target, lod, bufSize, pixels)
}

GetnTexImage :: #force_inline proc "contextless" (tex: GLenum, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr) {
    __glewGetnTexImage(tex, level, format, type, bufSize, pixels)
}

GetnUniformdv :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLdouble) {
    __glewGetnUniformdv(program, location, bufSize, params)
}

MultiDrawArraysIndirectCount :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawArraysIndirectCount(mode, indirect, drawcount, maxdrawcount, stride)
}

MultiDrawElementsIndirectCount :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawElementsIndirectCount(mode, type, indirect, drawcount, maxdrawcount, stride)
}

SpecializeShader :: #force_inline proc "contextless" (shader: GLuint, pEntryPoint: ^GLchar, numSpecializationConstants: GLuint, pConstantIndex: ^GLuint, pConstantValue: ^GLuint) {
    __glewSpecializeShader(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue)
}

TbufferMask3DFX :: #force_inline proc "contextless" (mask: GLuint) {
    __glewTbufferMask3DFX(mask)
}

DebugMessageCallbackAMD :: #force_inline proc "contextless" (callback: GLDEBUGPROCAMD, userParam: rawptr) {
    __glewDebugMessageCallbackAMD(callback, userParam)
}

DebugMessageEnableAMD :: #force_inline proc "contextless" (category: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean) {
    __glewDebugMessageEnableAMD(category, severity, count, ids, enabled)
}

DebugMessageInsertAMD :: #force_inline proc "contextless" (category: GLenum, severity: GLenum, id: GLuint, length: GLsizei, buf: ^GLchar) {
    __glewDebugMessageInsertAMD(category, severity, id, length, buf)
}

GetDebugMessageLogAMD :: #force_inline proc "contextless" (count: GLuint, bufsize: GLsizei, categories: [^]GLenum, severities: [^]GLenum, ids: [^]GLuint, lengths: [^]GLsizei, message: ^GLchar) -> GLuint {
    return __glewGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message)
}

BlendEquationIndexedAMD :: #force_inline proc "contextless" (buf: GLuint, mode: GLenum) {
    __glewBlendEquationIndexedAMD(buf, mode)
}

BlendEquationSeparateIndexedAMD :: #force_inline proc "contextless" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha)
}

BlendFuncIndexedAMD :: #force_inline proc "contextless" (buf: GLuint, src: GLenum, dst: GLenum) {
    __glewBlendFuncIndexedAMD(buf, src, dst)
}

BlendFuncSeparateIndexedAMD :: #force_inline proc "contextless" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) {
    __glewBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

NamedRenderbufferStorageMultisampleAdvancedAMD :: #force_inline proc "contextless" (renderbuffer: GLuint, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorageMultisampleAdvancedAMD(renderbuffer, samples, storageSamples, internalformat, width, height)
}

RenderbufferStorageMultisampleAdvancedAMD :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleAdvancedAMD(target, samples, storageSamples, internalformat, width, height)
}

FramebufferSamplePositionsfvAMD :: #force_inline proc "contextless" (target: GLenum, numsamples: GLuint, pixelindex: GLuint, values: [^]GLfloat) {
    __glewFramebufferSamplePositionsfvAMD(target, numsamples, pixelindex, values)
}

GetFramebufferParameterfvAMD :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, numsamples: GLuint, pixelindex: GLuint, size: GLsizei, values: [^]GLfloat) {
    __glewGetFramebufferParameterfvAMD(target, pname, numsamples, pixelindex, size, values)
}

GetNamedFramebufferParameterfvAMD :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, numsamples: GLuint, pixelindex: GLuint, size: GLsizei, values: [^]GLfloat) {
    __glewGetNamedFramebufferParameterfvAMD(framebuffer, pname, numsamples, pixelindex, size, values)
}

NamedFramebufferSamplePositionsfvAMD :: #force_inline proc "contextless" (framebuffer: GLuint, numsamples: GLuint, pixelindex: GLuint, values: [^]GLfloat) {
    __glewNamedFramebufferSamplePositionsfvAMD(framebuffer, numsamples, pixelindex, values)
}

VertexAttribParameteriAMD :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, param: GLint) {
    __glewVertexAttribParameteriAMD(index, pname, param)
}

MultiDrawArraysIndirectAMD :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride)
}

MultiDrawElementsIndirectAMD :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride)
}

DeleteNamesAMD :: #force_inline proc "contextless" (identifier: GLenum, num: GLuint, names: [^]GLuint) {
    __glewDeleteNamesAMD(identifier, num, names)
}

GenNamesAMD :: #force_inline proc "contextless" (identifier: GLenum, num: GLuint, names: [^]GLuint) {
    __glewGenNamesAMD(identifier, num, names)
}

IsNameAMD :: #force_inline proc "contextless" (identifier: GLenum, name: GLuint) -> GLboolean {
    return __glewIsNameAMD(identifier, name)
}

QueryObjectParameteruiAMD :: #force_inline proc "contextless" (target: GLenum, id: GLuint, pname: GLenum, param: GLuint) {
    __glewQueryObjectParameteruiAMD(target, id, pname, param)
}

BeginPerfMonitorAMD :: #force_inline proc "contextless" (monitor: GLuint) {
    __glewBeginPerfMonitorAMD(monitor)
}

DeletePerfMonitorsAMD :: #force_inline proc "contextless" (n: GLsizei, monitors: [^]GLuint) {
    __glewDeletePerfMonitorsAMD(n, monitors)
}

EndPerfMonitorAMD :: #force_inline proc "contextless" (monitor: GLuint) {
    __glewEndPerfMonitorAMD(monitor)
}

GenPerfMonitorsAMD :: #force_inline proc "contextless" (n: GLsizei, monitors: [^]GLuint) {
    __glewGenPerfMonitorsAMD(n, monitors)
}

GetPerfMonitorCounterDataAMD :: #force_inline proc "contextless" (monitor: GLuint, pname: GLenum, dataSize: GLsizei, data: ^GLuint, bytesWritten: ^GLint) {
    __glewGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten)
}

GetPerfMonitorCounterInfoAMD :: #force_inline proc "contextless" (group: GLuint, counter: GLuint, pname: GLenum, data: rawptr) {
    __glewGetPerfMonitorCounterInfoAMD(group, counter, pname, data)
}

GetPerfMonitorCounterStringAMD :: #force_inline proc "contextless" (group: GLuint, counter: GLuint, bufSize: GLsizei, length: ^GLsizei, counterString: ^GLchar) {
    __glewGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString)
}

GetPerfMonitorCountersAMD :: #force_inline proc "contextless" (group: GLuint, numCounters: [^]GLint, maxActiveCounters: [^]GLint, countersSize: GLsizei, counters: [^]GLuint) {
    __glewGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, countersSize, counters)
}

GetPerfMonitorGroupStringAMD :: #force_inline proc "contextless" (group: GLuint, bufSize: GLsizei, length: ^GLsizei, groupString: ^GLchar) {
    __glewGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString)
}

GetPerfMonitorGroupsAMD :: #force_inline proc "contextless" (numGroups: [^]GLint, groupsSize: GLsizei, groups: [^]GLuint) {
    __glewGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups)
}

SelectPerfMonitorCountersAMD :: #force_inline proc "contextless" (monitor: GLuint, enable: GLboolean, group: GLuint, numCounters: GLint, counterList: ^GLuint) {
    __glewSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList)
}

SetMultisamplefvAMD :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, val: ^GLfloat) {
    __glewSetMultisamplefvAMD(pname, index, val)
}

TexStorageSparseAMD :: #force_inline proc "contextless" (target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) {
    __glewTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags)
}

TextureStorageSparseAMD :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, layers: GLsizei, flags: GLbitfield) {
    __glewTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags)
}

StencilOpValueAMD :: #force_inline proc "contextless" (face: GLenum, value: GLuint) {
    __glewStencilOpValueAMD(face, value)
}

TessellationFactorAMD :: #force_inline proc "contextless" (factor: GLfloat) {
    __glewTessellationFactorAMD(factor)
}

TessellationModeAMD :: #force_inline proc "contextless" (mode: GLenum) {
    __glewTessellationModeAMD(mode)
}

BlitFramebufferANGLE :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

RenderbufferStorageMultisampleANGLE :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height)
}

DrawArraysInstancedANGLE :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) {
    __glewDrawArraysInstancedANGLE(mode, first, count, primcount)
}

DrawElementsInstancedANGLE :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei) {
    __glewDrawElementsInstancedANGLE(mode, count, type, indices, primcount)
}

VertexAttribDivisorANGLE :: #force_inline proc "contextless" (index: GLuint, divisor: GLuint) {
    __glewVertexAttribDivisorANGLE(index, divisor)
}

BeginQueryANGLE :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBeginQueryANGLE(target, id)
}

DeleteQueriesANGLE :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteQueriesANGLE(n, ids)
}

EndQueryANGLE :: #force_inline proc "contextless" (target: GLenum) {
    __glewEndQueryANGLE(target)
}

GenQueriesANGLE :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenQueriesANGLE(n, ids)
}

GetQueryObjecti64vANGLE :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint64) {
    __glewGetQueryObjecti64vANGLE(id, pname, params)
}

GetQueryObjectivANGLE :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetQueryObjectivANGLE(id, pname, params)
}

GetQueryObjectui64vANGLE :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint64) {
    __glewGetQueryObjectui64vANGLE(id, pname, params)
}

GetQueryObjectuivANGLE :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetQueryObjectuivANGLE(id, pname, params)
}

GetQueryivANGLE :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetQueryivANGLE(target, pname, params)
}

IsQueryANGLE :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsQueryANGLE(id)
}

QueryCounterANGLE :: #force_inline proc "contextless" (id: GLuint, target: GLenum) {
    __glewQueryCounterANGLE(id, target)
}

GetTranslatedShaderSourceANGLE :: #force_inline proc "contextless" (shader: GLuint, bufsize: GLsizei, length: ^GLsizei, source: ^GLchar) {
    __glewGetTranslatedShaderSourceANGLE(shader, bufsize, length, source)
}

CopyTextureLevelsAPPLE :: #force_inline proc "contextless" (destinationTexture: GLuint, sourceTexture: GLuint, sourceBaseLevel: GLint, sourceLevelCount: GLsizei) {
    __glewCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
}

DrawElementArrayAPPLE :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei) {
    __glewDrawElementArrayAPPLE(mode, first, count)
}

DrawRangeElementArrayAPPLE :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, first: GLint, count: GLsizei) {
    __glewDrawRangeElementArrayAPPLE(mode, start, end, first, count)
}

ElementPointerAPPLE :: #force_inline proc "contextless" (type: GLenum, pointer: rawptr) {
    __glewElementPointerAPPLE(type, pointer)
}

MultiDrawElementArrayAPPLE :: #force_inline proc "contextless" (mode: GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei) {
    __glewMultiDrawElementArrayAPPLE(mode, first, count, primcount)
}

MultiDrawRangeElementArrayAPPLE :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, first: ^GLint, count: ^GLsizei, primcount: GLsizei) {
    __glewMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount)
}

DeleteFencesAPPLE :: #force_inline proc "contextless" (n: GLsizei, fences: [^]GLuint) {
    __glewDeleteFencesAPPLE(n, fences)
}

FinishFenceAPPLE :: #force_inline proc "contextless" (fence: GLuint) {
    __glewFinishFenceAPPLE(fence)
}

FinishObjectAPPLE :: #force_inline proc "contextless" (object: GLenum, name: GLint) {
    __glewFinishObjectAPPLE(object, name)
}

GenFencesAPPLE :: #force_inline proc "contextless" (n: GLsizei, fences: [^]GLuint) {
    __glewGenFencesAPPLE(n, fences)
}

IsFenceAPPLE :: #force_inline proc "contextless" (fence: GLuint) -> GLboolean {
    return __glewIsFenceAPPLE(fence)
}

SetFenceAPPLE :: #force_inline proc "contextless" (fence: GLuint) {
    __glewSetFenceAPPLE(fence)
}

TestFenceAPPLE :: #force_inline proc "contextless" (fence: GLuint) -> GLboolean {
    return __glewTestFenceAPPLE(fence)
}

TestObjectAPPLE :: #force_inline proc "contextless" (object: GLenum, name: GLuint) -> GLboolean {
    return __glewTestObjectAPPLE(object, name)
}

BufferParameteriAPPLE :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewBufferParameteriAPPLE(target, pname, param)
}

FlushMappedBufferRangeAPPLE :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr) {
    __glewFlushMappedBufferRangeAPPLE(target, offset, size)
}

RenderbufferStorageMultisampleAPPLE :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height)
}

ResolveMultisampleFramebufferAPPLE :: #force_inline proc "contextless" () {
    __glewResolveMultisampleFramebufferAPPLE()
}

GetObjectParameterivAPPLE :: #force_inline proc "contextless" (objectType: GLenum, name: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetObjectParameterivAPPLE(objectType, name, pname, params)
}

ObjectPurgeableAPPLE :: #force_inline proc "contextless" (objectType: GLenum, name: GLuint, option: GLenum) -> GLenum {
    return __glewObjectPurgeableAPPLE(objectType, name, option)
}

ObjectUnpurgeableAPPLE :: #force_inline proc "contextless" (objectType: GLenum, name: GLuint, option: GLenum) -> GLenum {
    return __glewObjectUnpurgeableAPPLE(objectType, name, option)
}

ClientWaitSyncAPPLE :: #force_inline proc "contextless" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum {
    return __glewClientWaitSyncAPPLE(GLsync, flags, timeout)
}

DeleteSyncAPPLE :: #force_inline proc "contextless" (GLsync: GLsync) {
    __glewDeleteSyncAPPLE(GLsync)
}

FenceSyncAPPLE :: #force_inline proc "contextless" (condition: GLenum, flags: GLbitfield) -> GLsync {
    return __glewFenceSyncAPPLE(condition, flags)
}

GetInteger64vAPPLE :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint64) {
    __glewGetInteger64vAPPLE(pname, params)
}

GetSyncivAPPLE :: #force_inline proc "contextless" (GLsync: GLsync, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint) {
    __glewGetSyncivAPPLE(GLsync, pname, bufSize, length, values)
}

IsSyncAPPLE :: #force_inline proc "contextless" (GLsync: GLsync) -> GLboolean {
    return __glewIsSyncAPPLE(GLsync)
}

WaitSyncAPPLE :: #force_inline proc "contextless" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) {
    __glewWaitSyncAPPLE(GLsync, flags, timeout)
}

GetTexParameterPointervAPPLE :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]rawptr) {
    __glewGetTexParameterPointervAPPLE(target, pname, params)
}

TextureRangeAPPLE :: #force_inline proc "contextless" (target: GLenum, length: GLsizei, pointer: rawptr) {
    __glewTextureRangeAPPLE(target, length, pointer)
}

BindVertexArrayAPPLE :: #force_inline proc "contextless" (array: GLuint) {
    __glewBindVertexArrayAPPLE(array)
}

DeleteVertexArraysAPPLE :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewDeleteVertexArraysAPPLE(n, arrays)
}

GenVertexArraysAPPLE :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewGenVertexArraysAPPLE(n, arrays)
}

IsVertexArrayAPPLE :: #force_inline proc "contextless" (array: GLuint) -> GLboolean {
    return __glewIsVertexArrayAPPLE(array)
}

FlushVertexArrayRangeAPPLE :: #force_inline proc "contextless" (length: GLsizei, pointer: rawptr) {
    __glewFlushVertexArrayRangeAPPLE(length, pointer)
}

VertexArrayParameteriAPPLE :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewVertexArrayParameteriAPPLE(pname, param)
}

VertexArrayRangeAPPLE :: #force_inline proc "contextless" (length: GLsizei, pointer: rawptr) {
    __glewVertexArrayRangeAPPLE(length, pointer)
}

DisableVertexAttribAPPLE :: #force_inline proc "contextless" (index: GLuint, pname: GLenum) {
    __glewDisableVertexAttribAPPLE(index, pname)
}

EnableVertexAttribAPPLE :: #force_inline proc "contextless" (index: GLuint, pname: GLenum) {
    __glewEnableVertexAttribAPPLE(index, pname)
}

IsVertexAttribEnabledAPPLE :: #force_inline proc "contextless" (index: GLuint, pname: GLenum) -> GLboolean {
    return __glewIsVertexAttribEnabledAPPLE(index, pname)
}

MapVertexAttrib1dAPPLE :: #force_inline proc "contextless" (index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: [^]GLdouble) {
    __glewMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points)
}

MapVertexAttrib1fAPPLE :: #force_inline proc "contextless" (index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: [^]GLfloat) {
    __glewMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points)
}

MapVertexAttrib2dAPPLE :: #force_inline proc "contextless" (index: GLuint, size: GLuint, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: [^]GLdouble) {
    __glewMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

MapVertexAttrib2fAPPLE :: #force_inline proc "contextless" (index: GLuint, size: GLuint, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: [^]GLfloat) {
    __glewMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
}

ClearDepthf :: #force_inline proc "contextless" (d: GLclampf) {
    __glewClearDepthf(d)
}

DepthRangef :: #force_inline proc "contextless" (n: GLclampf, f: GLclampf) {
    __glewDepthRangef(n, f)
}

GetShaderPrecisionFormat :: #force_inline proc "contextless" (shadertype: GLenum, precisiontype: GLenum, range: ^GLint, precision: ^GLint) {
    __glewGetShaderPrecisionFormat(shadertype, precisiontype, range, precision)
}

ReleaseShaderCompiler :: #force_inline proc "contextless" () {
    __glewReleaseShaderCompiler()
}

ShaderBinary :: #force_inline proc "contextless" (count: GLsizei, shaders: [^]GLuint, binaryformat: GLenum, binary: rawptr, length: GLsizei) {
    __glewShaderBinary(count, shaders, binaryformat, binary, length)
}

MemoryBarrierByRegion :: #force_inline proc "contextless" (barriers: GLbitfield) {
    __glewMemoryBarrierByRegion(barriers)
}

PrimitiveBoundingBoxARB :: #force_inline proc "contextless" (minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat) {
    __glewPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

DrawArraysInstancedBaseInstance :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei, baseinstance: GLuint) {
    __glewDrawArraysInstancedBaseInstance(mode, first, count, primcount, baseinstance)
}

DrawElementsInstancedBaseInstance :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei, baseinstance: GLuint) {
    __glewDrawElementsInstancedBaseInstance(mode, count, type, indices, primcount, baseinstance)
}

DrawElementsInstancedBaseVertexBaseInstance :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei, basevertex: GLint, baseinstance: GLuint) {
    __glewDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, primcount, basevertex, baseinstance)
}

GetImageHandleARB :: #force_inline proc "contextless" (texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64 {
    return __glewGetImageHandleARB(texture, level, layered, layer, format)
}

GetTextureHandleARB :: #force_inline proc "contextless" (texture: GLuint) -> GLuint64 {
    return __glewGetTextureHandleARB(texture)
}

GetTextureSamplerHandleARB :: #force_inline proc "contextless" (texture: GLuint, sampler: GLuint) -> GLuint64 {
    return __glewGetTextureSamplerHandleARB(texture, sampler)
}

GetVertexAttribLui64vARB :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetVertexAttribLui64vARB(index, pname, params)
}

IsImageHandleResidentARB :: #force_inline proc "contextless" (handle: GLuint64) -> GLboolean {
    return __glewIsImageHandleResidentARB(handle)
}

IsTextureHandleResidentARB :: #force_inline proc "contextless" (handle: GLuint64) -> GLboolean {
    return __glewIsTextureHandleResidentARB(handle)
}

MakeImageHandleNonResidentARB :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeImageHandleNonResidentARB(handle)
}

MakeImageHandleResidentARB :: #force_inline proc "contextless" (handle: GLuint64, access: GLenum) {
    __glewMakeImageHandleResidentARB(handle, access)
}

MakeTextureHandleNonResidentARB :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeTextureHandleNonResidentARB(handle)
}

MakeTextureHandleResidentARB :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeTextureHandleResidentARB(handle)
}

ProgramUniformHandleui64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, value: GLuint64) {
    __glewProgramUniformHandleui64ARB(program, location, value)
}

ProgramUniformHandleui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64) {
    __glewProgramUniformHandleui64vARB(program, location, count, values)
}

UniformHandleui64ARB :: #force_inline proc "contextless" (location: GLint, value: GLuint64) {
    __glewUniformHandleui64ARB(location, value)
}

UniformHandleui64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniformHandleui64vARB(location, count, value)
}

VertexAttribL1ui64ARB :: #force_inline proc "contextless" (index: GLuint, x: GLuint64EXT) {
    __glewVertexAttribL1ui64ARB(index, x)
}

VertexAttribL1ui64vARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint64EXT) {
    __glewVertexAttribL1ui64vARB(index, v)
}

BindFragDataLocationIndexed :: #force_inline proc "contextless" (program: GLuint, colorNumber: GLuint, index: GLuint, name: ^GLchar) {
    __glewBindFragDataLocationIndexed(program, colorNumber, index, name)
}

GetFragDataIndex :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetFragDataIndex(program, name)
}

BufferStorage :: #force_inline proc "contextless" (target: GLenum, size: GLsizeiptr, data: rawptr, flags: GLbitfield) {
    __glewBufferStorage(target, size, data, flags)
}

CreateSyncFromCLeventARB :: #force_inline proc "contextless" (context_: cl_context, event: cl_event, flags: GLbitfield) -> GLsync {
    return __glewCreateSyncFromCLeventARB(context_, event, flags)
}

ClearBufferData :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearBufferData(target, internalformat, format, type, data)
}

ClearBufferSubData :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearBufferSubData(target, internalformat, offset, size, format, type, data)
}

ClearNamedBufferDataEXT :: #force_inline proc "contextless" (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearNamedBufferDataEXT(buffer, internalformat, format, type, data)
}

ClearNamedBufferSubDataEXT :: #force_inline proc "contextless" (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data)
}

ClearTexImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearTexImage(texture, level, format, type, data)
}

ClearTexSubImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}

ClipControl :: #force_inline proc "contextless" (origin: GLenum, depth: GLenum) {
    __glewClipControl(origin, depth)
}

ClampColorARB :: #force_inline proc "contextless" (target: GLenum, clamp: GLenum) {
    __glewClampColorARB(target, clamp)
}

DispatchCompute :: #force_inline proc "contextless" (num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint) {
    __glewDispatchCompute(num_groups_x, num_groups_y, num_groups_z)
}

DispatchComputeIndirect :: #force_inline proc "contextless" (indirect: GLintptr) {
    __glewDispatchComputeIndirect(indirect)
}

DispatchComputeGroupSizeARB :: #force_inline proc "contextless" (num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, group_size_x: GLuint, group_size_y: GLuint, group_size_z: GLuint) {
    __glewDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
}

CopyBufferSubData :: #force_inline proc "contextless" (readtarget: GLenum, writetarget: GLenum, readoffset: GLintptr, writeoffset: GLintptr, size: GLsizeiptr) {
    __glewCopyBufferSubData(readtarget, writetarget, readoffset, writeoffset, size)
}

CopyImageSubData :: #force_inline proc "contextless" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) {
    __glewCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

DebugMessageCallbackARB :: #force_inline proc "contextless" (callback: GLDEBUGPROCARB, userParam: rawptr) {
    __glewDebugMessageCallbackARB(callback, userParam)
}

DebugMessageControlARB :: #force_inline proc "contextless" (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean) {
    __glewDebugMessageControlARB(source, type, severity, count, ids, enabled)
}

DebugMessageInsertARB :: #force_inline proc "contextless" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: ^GLchar) {
    __glewDebugMessageInsertARB(source, type, id, severity, length, buf)
}

GetDebugMessageLogARB :: #force_inline proc "contextless" (count: GLuint, bufSize: GLsizei, sources: [^]GLenum, types: [^]GLenum, ids: [^]GLuint, severities: [^]GLenum, lengths: [^]GLsizei, messageLog: ^GLchar) -> GLuint {
    return __glewGetDebugMessageLogARB(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}

BindTextureUnit :: #force_inline proc "contextless" (unit: GLuint, texture: GLuint) {
    __glewBindTextureUnit(unit, texture)
}

BlitNamedFramebuffer :: #force_inline proc "contextless" (readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

CheckNamedFramebufferStatus :: #force_inline proc "contextless" (framebuffer: GLuint, target: GLenum) -> GLenum {
    return __glewCheckNamedFramebufferStatus(framebuffer, target)
}

ClearNamedBufferData :: #force_inline proc "contextless" (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearNamedBufferData(buffer, internalformat, format, type, data)
}

ClearNamedBufferSubData :: #force_inline proc "contextless" (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data)
}

ClearNamedFramebufferfi :: #force_inline proc "contextless" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) {
    __glewClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil)
}

ClearNamedFramebufferfv :: #force_inline proc "contextless" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLfloat) {
    __glewClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value)
}

ClearNamedFramebufferiv :: #force_inline proc "contextless" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLint) {
    __glewClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value)
}

ClearNamedFramebufferuiv :: #force_inline proc "contextless" (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: ^GLuint) {
    __glewClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value)
}

CompressedTextureSubImage1D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data)
}

CompressedTextureSubImage2D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data)
}

CompressedTextureSubImage3D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

CopyNamedBufferSubData :: #force_inline proc "contextless" (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) {
    __glewCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size)
}

CopyTextureSubImage1D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyTextureSubImage1D(texture, level, xoffset, x, y, width)
}

CopyTextureSubImage2D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height)
}

CopyTextureSubImage3D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height)
}

CreateBuffers :: #force_inline proc "contextless" (n: GLsizei, buffers: [^]GLuint) {
    __glewCreateBuffers(n, buffers)
}

CreateFramebuffers :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewCreateFramebuffers(n, framebuffers)
}

CreateProgramPipelines :: #force_inline proc "contextless" (n: GLsizei, pipelines: [^]GLuint) {
    __glewCreateProgramPipelines(n, pipelines)
}

CreateQueries :: #force_inline proc "contextless" (target: GLenum, n: GLsizei, ids: [^]GLuint) {
    __glewCreateQueries(target, n, ids)
}

CreateRenderbuffers :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewCreateRenderbuffers(n, renderbuffers)
}

CreateSamplers :: #force_inline proc "contextless" (n: GLsizei, samplers: [^]GLuint) {
    __glewCreateSamplers(n, samplers)
}

CreateTextures :: #force_inline proc "contextless" (target: GLenum, n: GLsizei, textures: [^]GLuint) {
    __glewCreateTextures(target, n, textures)
}

CreateTransformFeedbacks :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewCreateTransformFeedbacks(n, ids)
}

CreateVertexArrays :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewCreateVertexArrays(n, arrays)
}

DisableVertexArrayAttrib :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint) {
    __glewDisableVertexArrayAttrib(vaobj, index)
}

EnableVertexArrayAttrib :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint) {
    __glewEnableVertexArrayAttrib(vaobj, index)
}

FlushMappedNamedBufferRange :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) {
    __glewFlushMappedNamedBufferRange(buffer, offset, length)
}

GenerateTextureMipmap :: #force_inline proc "contextless" (texture: GLuint) {
    __glewGenerateTextureMipmap(texture)
}

GetCompressedTextureImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, bufSize: GLsizei, pixels: rawptr) {
    __glewGetCompressedTextureImage(texture, level, bufSize, pixels)
}

GetNamedBufferParameteri64v :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLint64) {
    __glewGetNamedBufferParameteri64v(buffer, pname, params)
}

GetNamedBufferParameteriv :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetNamedBufferParameteriv(buffer, pname, params)
}

GetNamedBufferPointerv :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]rawptr) {
    __glewGetNamedBufferPointerv(buffer, pname, params)
}

GetNamedBufferSubData :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewGetNamedBufferSubData(buffer, offset, size, data)
}

GetNamedFramebufferAttachmentParameteriv :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params)
}

GetNamedFramebufferParameteriv :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetNamedFramebufferParameteriv(framebuffer, pname, param)
}

GetNamedRenderbufferParameteriv :: #force_inline proc "contextless" (renderbuffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetNamedRenderbufferParameteriv(renderbuffer, pname, params)
}

GetQueryBufferObjecti64v :: #force_inline proc "contextless" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) {
    __glewGetQueryBufferObjecti64v(id, buffer, pname, offset)
}

GetQueryBufferObjectiv :: #force_inline proc "contextless" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) {
    __glewGetQueryBufferObjectiv(id, buffer, pname, offset)
}

GetQueryBufferObjectui64v :: #force_inline proc "contextless" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) {
    __glewGetQueryBufferObjectui64v(id, buffer, pname, offset)
}

GetQueryBufferObjectuiv :: #force_inline proc "contextless" (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) {
    __glewGetQueryBufferObjectuiv(id, buffer, pname, offset)
}

GetTextureImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr) {
    __glewGetTextureImage(texture, level, format, type, bufSize, pixels)
}

GetTextureLevelParameterfv :: #force_inline proc "contextless" (texture: GLuint, level: GLint, pname: GLenum, params: [^]GLfloat) {
    __glewGetTextureLevelParameterfv(texture, level, pname, params)
}

GetTextureLevelParameteriv :: #force_inline proc "contextless" (texture: GLuint, level: GLint, pname: GLenum, params: [^]GLint) {
    __glewGetTextureLevelParameteriv(texture, level, pname, params)
}

GetTextureParameterIiv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetTextureParameterIiv(texture, pname, params)
}

GetTextureParameterIuiv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetTextureParameterIuiv(texture, pname, params)
}

GetTextureParameterfv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetTextureParameterfv(texture, pname, params)
}

GetTextureParameteriv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetTextureParameteriv(texture, pname, params)
}

GetTransformFeedbacki64_v :: #force_inline proc "contextless" (xfb: GLuint, pname: GLenum, index: GLuint, param: ^GLint64) {
    __glewGetTransformFeedbacki64_v(xfb, pname, index, param)
}

GetTransformFeedbacki_v :: #force_inline proc "contextless" (xfb: GLuint, pname: GLenum, index: GLuint, param: ^GLint) {
    __glewGetTransformFeedbacki_v(xfb, pname, index, param)
}

GetTransformFeedbackiv :: #force_inline proc "contextless" (xfb: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetTransformFeedbackiv(xfb, pname, param)
}

GetVertexArrayIndexed64iv :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint64) {
    __glewGetVertexArrayIndexed64iv(vaobj, index, pname, param)
}

GetVertexArrayIndexediv :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetVertexArrayIndexediv(vaobj, index, pname, param)
}

GetVertexArrayiv :: #force_inline proc "contextless" (vaobj: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetVertexArrayiv(vaobj, pname, param)
}

InvalidateNamedFramebufferData :: #force_inline proc "contextless" (framebuffer: GLuint, numAttachments: GLsizei, attachments: [^]GLenum) {
    __glewInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments)
}

InvalidateNamedFramebufferSubData :: #force_inline proc "contextless" (framebuffer: GLuint, numAttachments: GLsizei, attachments: [^]GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height)
}

MapNamedBuffer :: #force_inline proc "contextless" (buffer: GLuint, access: GLenum) -> rawptr {
    return __glewMapNamedBuffer(buffer, access)
}

MapNamedBufferRange :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr {
    return __glewMapNamedBufferRange(buffer, offset, length, access)
}

NamedBufferData :: #force_inline proc "contextless" (buffer: GLuint, size: GLsizeiptr, data: rawptr, usage: GLenum) {
    __glewNamedBufferData(buffer, size, data, usage)
}

NamedBufferStorage :: #force_inline proc "contextless" (buffer: GLuint, size: GLsizeiptr, data: rawptr, flags: GLbitfield) {
    __glewNamedBufferStorage(buffer, size, data, flags)
}

NamedBufferSubData :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewNamedBufferSubData(buffer, offset, size, data)
}

NamedFramebufferDrawBuffer :: #force_inline proc "contextless" (framebuffer: GLuint, mode: GLenum) {
    __glewNamedFramebufferDrawBuffer(framebuffer, mode)
}

NamedFramebufferDrawBuffers :: #force_inline proc "contextless" (framebuffer: GLuint, n: GLsizei, bufs: [^]GLenum) {
    __glewNamedFramebufferDrawBuffers(framebuffer, n, bufs)
}

NamedFramebufferParameteri :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, param: GLint) {
    __glewNamedFramebufferParameteri(framebuffer, pname, param)
}

NamedFramebufferReadBuffer :: #force_inline proc "contextless" (framebuffer: GLuint, mode: GLenum) {
    __glewNamedFramebufferReadBuffer(framebuffer, mode)
}

NamedFramebufferRenderbuffer :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) {
    __glewNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer)
}

NamedFramebufferTexture :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) {
    __glewNamedFramebufferTexture(framebuffer, attachment, texture, level)
}

NamedFramebufferTextureLayer :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer)
}

NamedRenderbufferStorage :: #force_inline proc "contextless" (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorage(renderbuffer, internalformat, width, height)
}

NamedRenderbufferStorageMultisample :: #force_inline proc "contextless" (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height)
}

TextureBuffer :: #force_inline proc "contextless" (texture: GLuint, internalformat: GLenum, buffer: GLuint) {
    __glewTextureBuffer(texture, internalformat, buffer)
}

TextureBufferRange :: #force_inline proc "contextless" (texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewTextureBufferRange(texture, internalformat, buffer, offset, size)
}

TextureParameterIiv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLint) {
    __glewTextureParameterIiv(texture, pname, params)
}

TextureParameterIuiv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewTextureParameterIuiv(texture, pname, params)
}

TextureParameterf :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, param: GLfloat) {
    __glewTextureParameterf(texture, pname, param)
}

TextureParameterfv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, param: ^GLfloat) {
    __glewTextureParameterfv(texture, pname, param)
}

TextureParameteri :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, param: GLint) {
    __glewTextureParameteri(texture, pname, param)
}

TextureParameteriv :: #force_inline proc "contextless" (texture: GLuint, pname: GLenum, param: ^GLint) {
    __glewTextureParameteriv(texture, pname, param)
}

TextureStorage1D :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei) {
    __glewTextureStorage1D(texture, levels, internalformat, width)
}

TextureStorage2D :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewTextureStorage2D(texture, levels, internalformat, width, height)
}

TextureStorage2DMultisample :: #force_inline proc "contextless" (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations)
}

TextureStorage3D :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewTextureStorage3D(texture, levels, internalformat, width, height, depth)
}

TextureStorage3DMultisample :: #force_inline proc "contextless" (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations)
}

TextureSubImage1D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage1D(texture, level, xoffset, width, format, type, pixels)
}

TextureSubImage2D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels)
}

TextureSubImage3D :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

TransformFeedbackBufferBase :: #force_inline proc "contextless" (xfb: GLuint, index: GLuint, buffer: GLuint) {
    __glewTransformFeedbackBufferBase(xfb, index, buffer)
}

TransformFeedbackBufferRange :: #force_inline proc "contextless" (xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewTransformFeedbackBufferRange(xfb, index, buffer, offset, size)
}

UnmapNamedBuffer :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewUnmapNamedBuffer(buffer)
}

VertexArrayAttribBinding :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) {
    __glewVertexArrayAttribBinding(vaobj, attribindex, bindingindex)
}

VertexArrayAttribFormat :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) {
    __glewVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset)
}

VertexArrayAttribIFormat :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset)
}

VertexArrayAttribLFormat :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset)
}

VertexArrayBindingDivisor :: #force_inline proc "contextless" (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) {
    __glewVertexArrayBindingDivisor(vaobj, bindingindex, divisor)
}

VertexArrayElementBuffer :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint) {
    __glewVertexArrayElementBuffer(vaobj, buffer)
}

VertexArrayVertexBuffer :: #force_inline proc "contextless" (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) {
    __glewVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride)
}

VertexArrayVertexBuffers :: #force_inline proc "contextless" (vaobj: GLuint, first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, strides: [^]GLsizei) {
    __glewVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides)
}

DrawBuffersARB :: #force_inline proc "contextless" (n: GLsizei, bufs: [^]GLenum) {
    __glewDrawBuffersARB(n, bufs)
}

BlendEquationSeparateiARB :: #force_inline proc "contextless" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateiARB(buf, modeRGB, modeAlpha)
}

BlendEquationiARB :: #force_inline proc "contextless" (buf: GLuint, mode: GLenum) {
    __glewBlendEquationiARB(buf, mode)
}

BlendFuncSeparateiARB :: #force_inline proc "contextless" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) {
    __glewBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

BlendFunciARB :: #force_inline proc "contextless" (buf: GLuint, src: GLenum, dst: GLenum) {
    __glewBlendFunciARB(buf, src, dst)
}

DrawElementsBaseVertex :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint) {
    __glewDrawElementsBaseVertex(mode, count, type, indices, basevertex)
}

DrawElementsInstancedBaseVertex :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint) {
    __glewDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex)
}

DrawRangeElementsBaseVertex :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint) {
    __glewDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex)
}

MultiDrawElementsBaseVertex :: #force_inline proc "contextless" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei, basevertex: ^GLint) {
    __glewMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex)
}

DrawArraysIndirect :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr) {
    __glewDrawArraysIndirect(mode, indirect)
}

DrawElementsIndirect :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr) {
    __glewDrawElementsIndirect(mode, type, indirect)
}

FramebufferParameteri :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewFramebufferParameteri(target, pname, param)
}

GetFramebufferParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFramebufferParameteriv(target, pname, params)
}

GetNamedFramebufferParameterivEXT :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetNamedFramebufferParameterivEXT(framebuffer, pname, params)
}

NamedFramebufferParameteriEXT :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, param: GLint) {
    __glewNamedFramebufferParameteriEXT(framebuffer, pname, param)
}

BindFramebuffer :: #force_inline proc "contextless" (target: GLenum, framebuffer: GLuint) {
    __glewBindFramebuffer(target, framebuffer)
}

BindRenderbuffer :: #force_inline proc "contextless" (target: GLenum, renderbuffer: GLuint) {
    __glewBindRenderbuffer(target, renderbuffer)
}

BlitFramebuffer :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

CheckFramebufferStatus :: #force_inline proc "contextless" (target: GLenum) -> GLenum {
    return __glewCheckFramebufferStatus(target)
}

DeleteFramebuffers :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewDeleteFramebuffers(n, framebuffers)
}

DeleteRenderbuffers :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewDeleteRenderbuffers(n, renderbuffers)
}

FramebufferRenderbuffer :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) {
    __glewFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
}

FramebufferTexture1D :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture1D(target, attachment, textarget, texture, level)
}

FramebufferTexture2D :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture2D(target, attachment, textarget, texture, level)
}

FramebufferTexture3D :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewFramebufferTexture3D(target, attachment, textarget, texture, level, layer)
}

FramebufferTextureLayer :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewFramebufferTextureLayer(target, attachment, texture, level, layer)
}

GenFramebuffers :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewGenFramebuffers(n, framebuffers)
}

GenRenderbuffers :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewGenRenderbuffers(n, renderbuffers)
}

GenerateMipmap :: #force_inline proc "contextless" (target: GLenum) {
    __glewGenerateMipmap(target)
}

GetFramebufferAttachmentParameteriv :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFramebufferAttachmentParameteriv(target, attachment, pname, params)
}

GetRenderbufferParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetRenderbufferParameteriv(target, pname, params)
}

IsFramebuffer :: #force_inline proc "contextless" (framebuffer: GLuint) -> GLboolean {
    return __glewIsFramebuffer(framebuffer)
}

IsRenderbuffer :: #force_inline proc "contextless" (renderbuffer: GLuint) -> GLboolean {
    return __glewIsRenderbuffer(renderbuffer)
}

RenderbufferStorage :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorage(target, internalformat, width, height)
}

RenderbufferStorageMultisample :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisample(target, samples, internalformat, width, height)
}

FramebufferTextureARB :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTextureARB(target, attachment, texture, level)
}

FramebufferTextureFaceARB :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) {
    __glewFramebufferTextureFaceARB(target, attachment, texture, level, face)
}

FramebufferTextureLayerARB :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewFramebufferTextureLayerARB(target, attachment, texture, level, layer)
}

ProgramParameteriARB :: #force_inline proc "contextless" (program: GLuint, pname: GLenum, value: GLint) {
    __glewProgramParameteriARB(program, pname, value)
}

GetProgramBinary :: #force_inline proc "contextless" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, binaryFormat: ^GLenum, binary: rawptr) {
    __glewGetProgramBinary(program, bufSize, length, binaryFormat, binary)
}

ProgramBinary :: #force_inline proc "contextless" (program: GLuint, binaryFormat: GLenum, binary: rawptr, length: GLsizei) {
    __glewProgramBinary(program, binaryFormat, binary, length)
}

ProgramParameteri :: #force_inline proc "contextless" (program: GLuint, pname: GLenum, value: GLint) {
    __glewProgramParameteri(program, pname, value)
}

GetCompressedTextureSubImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, bufSize: GLsizei, pixels: rawptr) {
    __glewGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
}

GetTextureSubImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: rawptr) {
    __glewGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
}

SpecializeShaderARB :: #force_inline proc "contextless" (shader: GLuint, pEntryPoint: ^GLchar, numSpecializationConstants: GLuint, pConstantIndex: ^GLuint, pConstantValue: ^GLuint) {
    __glewSpecializeShaderARB(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue)
}

GetUniformdv :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLdouble) {
    __glewGetUniformdv(program, location, params)
}

Uniform1d :: #force_inline proc "contextless" (location: GLint, x: GLdouble) {
    __glewUniform1d(location, x)
}

Uniform1dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewUniform1dv(location, count, value)
}

Uniform2d :: #force_inline proc "contextless" (location: GLint, x: GLdouble, y: GLdouble) {
    __glewUniform2d(location, x, y)
}

Uniform2dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewUniform2dv(location, count, value)
}

Uniform3d :: #force_inline proc "contextless" (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewUniform3d(location, x, y, z)
}

Uniform3dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewUniform3dv(location, count, value)
}

Uniform4d :: #force_inline proc "contextless" (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewUniform4d(location, x, y, z, w)
}

Uniform4dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewUniform4dv(location, count, value)
}

UniformMatrix2dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix2dv(location, count, transpose, value)
}

UniformMatrix2x3dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix2x3dv(location, count, transpose, value)
}

UniformMatrix2x4dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix2x4dv(location, count, transpose, value)
}

UniformMatrix3dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix3dv(location, count, transpose, value)
}

UniformMatrix3x2dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix3x2dv(location, count, transpose, value)
}

UniformMatrix3x4dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix3x4dv(location, count, transpose, value)
}

UniformMatrix4dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix4dv(location, count, transpose, value)
}

UniformMatrix4x2dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix4x2dv(location, count, transpose, value)
}

UniformMatrix4x3dv :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewUniformMatrix4x3dv(location, count, transpose, value)
}

GetUniformi64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLint64) {
    __glewGetUniformi64vARB(program, location, params)
}

GetUniformui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLuint64) {
    __glewGetUniformui64vARB(program, location, params)
}

GetnUniformi64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint64) {
    __glewGetnUniformi64vARB(program, location, bufSize, params)
}

GetnUniformui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint64) {
    __glewGetnUniformui64vARB(program, location, bufSize, params)
}

ProgramUniform1i64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64) {
    __glewProgramUniform1i64ARB(program, location, x)
}

ProgramUniform1i64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64) {
    __glewProgramUniform1i64vARB(program, location, count, value)
}

ProgramUniform1ui64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64) {
    __glewProgramUniform1ui64ARB(program, location, x)
}

ProgramUniform1ui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewProgramUniform1ui64vARB(program, location, count, value)
}

ProgramUniform2i64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64, y: GLint64) {
    __glewProgramUniform2i64ARB(program, location, x, y)
}

ProgramUniform2i64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64) {
    __glewProgramUniform2i64vARB(program, location, count, value)
}

ProgramUniform2ui64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64) {
    __glewProgramUniform2ui64ARB(program, location, x, y)
}

ProgramUniform2ui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewProgramUniform2ui64vARB(program, location, count, value)
}

ProgramUniform3i64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64) {
    __glewProgramUniform3i64ARB(program, location, x, y, z)
}

ProgramUniform3i64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64) {
    __glewProgramUniform3i64vARB(program, location, count, value)
}

ProgramUniform3ui64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64) {
    __glewProgramUniform3ui64ARB(program, location, x, y, z)
}

ProgramUniform3ui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewProgramUniform3ui64vARB(program, location, count, value)
}

ProgramUniform4i64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64) {
    __glewProgramUniform4i64ARB(program, location, x, y, z, w)
}

ProgramUniform4i64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64) {
    __glewProgramUniform4i64vARB(program, location, count, value)
}

ProgramUniform4ui64ARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64) {
    __glewProgramUniform4ui64ARB(program, location, x, y, z, w)
}

ProgramUniform4ui64vARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewProgramUniform4ui64vARB(program, location, count, value)
}

Uniform1i64ARB :: #force_inline proc "contextless" (location: GLint, x: GLint64) {
    __glewUniform1i64ARB(location, x)
}

Uniform1i64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64) {
    __glewUniform1i64vARB(location, count, value)
}

Uniform1ui64ARB :: #force_inline proc "contextless" (location: GLint, x: GLuint64) {
    __glewUniform1ui64ARB(location, x)
}

Uniform1ui64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniform1ui64vARB(location, count, value)
}

Uniform2i64ARB :: #force_inline proc "contextless" (location: GLint, x: GLint64, y: GLint64) {
    __glewUniform2i64ARB(location, x, y)
}

Uniform2i64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64) {
    __glewUniform2i64vARB(location, count, value)
}

Uniform2ui64ARB :: #force_inline proc "contextless" (location: GLint, x: GLuint64, y: GLuint64) {
    __glewUniform2ui64ARB(location, x, y)
}

Uniform2ui64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniform2ui64vARB(location, count, value)
}

Uniform3i64ARB :: #force_inline proc "contextless" (location: GLint, x: GLint64, y: GLint64, z: GLint64) {
    __glewUniform3i64ARB(location, x, y, z)
}

Uniform3i64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64) {
    __glewUniform3i64vARB(location, count, value)
}

Uniform3ui64ARB :: #force_inline proc "contextless" (location: GLint, x: GLuint64, y: GLuint64, z: GLuint64) {
    __glewUniform3ui64ARB(location, x, y, z)
}

Uniform3ui64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniform3ui64vARB(location, count, value)
}

Uniform4i64ARB :: #force_inline proc "contextless" (location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64) {
    __glewUniform4i64ARB(location, x, y, z, w)
}

Uniform4i64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64) {
    __glewUniform4i64vARB(location, count, value)
}

Uniform4ui64ARB :: #force_inline proc "contextless" (location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64) {
    __glewUniform4ui64ARB(location, x, y, z, w)
}

Uniform4ui64vARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniform4ui64vARB(location, count, value)
}

ColorSubTable :: #force_inline proc "contextless" (target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type: GLenum, data: rawptr) {
    __glewColorSubTable(target, start, count, format, type, data)
}

ColorTable :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, table: rawptr) {
    __glewColorTable(target, internalformat, width, format, type, table)
}

ColorTableParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewColorTableParameterfv(target, pname, params)
}

ColorTableParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewColorTableParameteriv(target, pname, params)
}

ConvolutionFilter1D :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, image: rawptr) {
    __glewConvolutionFilter1D(target, internalformat, width, format, type, image)
}

ConvolutionFilter2D :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, image: rawptr) {
    __glewConvolutionFilter2D(target, internalformat, width, height, format, type, image)
}

ConvolutionParameterf :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: GLfloat) {
    __glewConvolutionParameterf(target, pname, params)
}

ConvolutionParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewConvolutionParameterfv(target, pname, params)
}

ConvolutionParameteri :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: GLint) {
    __glewConvolutionParameteri(target, pname, params)
}

ConvolutionParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewConvolutionParameteriv(target, pname, params)
}

CopyColorSubTable :: #force_inline proc "contextless" (target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyColorSubTable(target, start, x, y, width)
}

CopyColorTable :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyColorTable(target, internalformat, x, y, width)
}

CopyConvolutionFilter1D :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyConvolutionFilter1D(target, internalformat, x, y, width)
}

CopyConvolutionFilter2D :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyConvolutionFilter2D(target, internalformat, x, y, width, height)
}

GetColorTable :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, table: rawptr) {
    __glewGetColorTable(target, format, type, table)
}

GetColorTableParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetColorTableParameterfv(target, pname, params)
}

GetColorTableParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetColorTableParameteriv(target, pname, params)
}

GetConvolutionFilter :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, image: rawptr) {
    __glewGetConvolutionFilter(target, format, type, image)
}

GetConvolutionParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetConvolutionParameterfv(target, pname, params)
}

GetConvolutionParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetConvolutionParameteriv(target, pname, params)
}

GetHistogram :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr) {
    __glewGetHistogram(target, reset, format, type, values)
}

GetHistogramParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetHistogramParameterfv(target, pname, params)
}

GetHistogramParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetHistogramParameteriv(target, pname, params)
}

GetMinmax :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, types: GLenum, values: rawptr) {
    __glewGetMinmax(target, reset, format, types, values)
}

GetMinmaxParameterfv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMinmaxParameterfv(target, pname, params)
}

GetMinmaxParameteriv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMinmaxParameteriv(target, pname, params)
}

GetSeparableFilter :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, row: rawptr, column: rawptr, span: rawptr) {
    __glewGetSeparableFilter(target, format, type, row, column, span)
}

Histogram :: #force_inline proc "contextless" (target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) {
    __glewHistogram(target, width, internalformat, sink)
}

Minmax :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, sink: GLboolean) {
    __glewMinmax(target, internalformat, sink)
}

ResetHistogram :: #force_inline proc "contextless" (target: GLenum) {
    __glewResetHistogram(target)
}

ResetMinmax :: #force_inline proc "contextless" (target: GLenum) {
    __glewResetMinmax(target)
}

SeparableFilter2D :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, row: rawptr, column: rawptr) {
    __glewSeparableFilter2D(target, internalformat, width, height, format, type, row, column)
}

MultiDrawArraysIndirectCountARB :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride)
}

MultiDrawElementsIndirectCountARB :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride)
}

DrawArraysInstancedARB :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) {
    __glewDrawArraysInstancedARB(mode, first, count, primcount)
}

DrawElementsInstancedARB :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei) {
    __glewDrawElementsInstancedARB(mode, count, type, indices, primcount)
}

VertexAttribDivisorARB :: #force_inline proc "contextless" (index: GLuint, divisor: GLuint) {
    __glewVertexAttribDivisorARB(index, divisor)
}

GetInternalformativ :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: [^]GLint) {
    __glewGetInternalformativ(target, internalformat, pname, bufSize, params)
}

GetInternalformati64v :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: [^]GLint64) {
    __glewGetInternalformati64v(target, internalformat, pname, bufSize, params)
}

InvalidateBufferData :: #force_inline proc "contextless" (buffer: GLuint) {
    __glewInvalidateBufferData(buffer)
}

InvalidateBufferSubData :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) {
    __glewInvalidateBufferSubData(buffer, offset, length)
}

InvalidateFramebuffer :: #force_inline proc "contextless" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum) {
    __glewInvalidateFramebuffer(target, numAttachments, attachments)
}

InvalidateSubFramebuffer :: #force_inline proc "contextless" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height)
}

InvalidateTexImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint) {
    __glewInvalidateTexImage(texture, level)
}

InvalidateTexSubImage :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth)
}

FlushMappedBufferRange :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, length: GLsizeiptr) {
    __glewFlushMappedBufferRange(target, offset, length)
}

MapBufferRange :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr {
    return __glewMapBufferRange(target, offset, length, access)
}

CurrentPaletteMatrixARB :: #force_inline proc "contextless" (index: GLint) {
    __glewCurrentPaletteMatrixARB(index)
}

MatrixIndexPointerARB :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewMatrixIndexPointerARB(size, type, stride, pointer)
}

MatrixIndexubvARB :: #force_inline proc "contextless" (size: GLint, indices: [^]GLubyte) {
    __glewMatrixIndexubvARB(size, indices)
}

MatrixIndexuivARB :: #force_inline proc "contextless" (size: GLint, indices: [^]GLuint) {
    __glewMatrixIndexuivARB(size, indices)
}

MatrixIndexusvARB :: #force_inline proc "contextless" (size: GLint, indices: [^]GLushort) {
    __glewMatrixIndexusvARB(size, indices)
}

BindBuffersBase :: #force_inline proc "contextless" (target: GLenum, first: GLuint, count: GLsizei, buffers: [^]GLuint) {
    __glewBindBuffersBase(target, first, count, buffers)
}

BindBuffersRange :: #force_inline proc "contextless" (target: GLenum, first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, sizes: [^]GLsizeiptr) {
    __glewBindBuffersRange(target, first, count, buffers, offsets, sizes)
}

BindImageTextures :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, textures: [^]GLuint) {
    __glewBindImageTextures(first, count, textures)
}

BindSamplers :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, samplers: [^]GLuint) {
    __glewBindSamplers(first, count, samplers)
}

BindTextures :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, textures: [^]GLuint) {
    __glewBindTextures(first, count, textures)
}

BindVertexBuffers :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, buffers: [^]GLuint, offsets: [^]GLintptr, strides: [^]GLsizei) {
    __glewBindVertexBuffers(first, count, buffers, offsets, strides)
}

MultiDrawArraysIndirect :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawArraysIndirect(mode, indirect, primcount, stride)
}

MultiDrawElementsIndirect :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, primcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawElementsIndirect(mode, type, indirect, primcount, stride)
}

SampleCoverageARB :: #force_inline proc "contextless" (value: GLclampf, invert: GLboolean) {
    __glewSampleCoverageARB(value, invert)
}

ActiveTextureARB :: #force_inline proc "contextless" (texture: GLenum) {
    __glewActiveTextureARB(texture)
}

ClientActiveTextureARB :: #force_inline proc "contextless" (texture: GLenum) {
    __glewClientActiveTextureARB(texture)
}

MultiTexCoord1dARB :: #force_inline proc "contextless" (target: GLenum, s: GLdouble) {
    __glewMultiTexCoord1dARB(target, s)
}

MultiTexCoord1dvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord1dvARB(target, v)
}

MultiTexCoord1fARB :: #force_inline proc "contextless" (target: GLenum, s: GLfloat) {
    __glewMultiTexCoord1fARB(target, s)
}

MultiTexCoord1fvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord1fvARB(target, v)
}

MultiTexCoord1iARB :: #force_inline proc "contextless" (target: GLenum, s: GLint) {
    __glewMultiTexCoord1iARB(target, s)
}

MultiTexCoord1ivARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord1ivARB(target, v)
}

MultiTexCoord1sARB :: #force_inline proc "contextless" (target: GLenum, s: GLshort) {
    __glewMultiTexCoord1sARB(target, s)
}

MultiTexCoord1svARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord1svARB(target, v)
}

MultiTexCoord2dARB :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble) {
    __glewMultiTexCoord2dARB(target, s, t)
}

MultiTexCoord2dvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord2dvARB(target, v)
}

MultiTexCoord2fARB :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat) {
    __glewMultiTexCoord2fARB(target, s, t)
}

MultiTexCoord2fvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord2fvARB(target, v)
}

MultiTexCoord2iARB :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint) {
    __glewMultiTexCoord2iARB(target, s, t)
}

MultiTexCoord2ivARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord2ivARB(target, v)
}

MultiTexCoord2sARB :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort) {
    __glewMultiTexCoord2sARB(target, s, t)
}

MultiTexCoord2svARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord2svARB(target, v)
}

MultiTexCoord3dARB :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) {
    __glewMultiTexCoord3dARB(target, s, t, r)
}

MultiTexCoord3dvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord3dvARB(target, v)
}

MultiTexCoord3fARB :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) {
    __glewMultiTexCoord3fARB(target, s, t, r)
}

MultiTexCoord3fvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord3fvARB(target, v)
}

MultiTexCoord3iARB :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint, r: GLint) {
    __glewMultiTexCoord3iARB(target, s, t, r)
}

MultiTexCoord3ivARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord3ivARB(target, v)
}

MultiTexCoord3sARB :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort, r: GLshort) {
    __glewMultiTexCoord3sARB(target, s, t, r)
}

MultiTexCoord3svARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord3svARB(target, v)
}

MultiTexCoord4dARB :: #force_inline proc "contextless" (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) {
    __glewMultiTexCoord4dARB(target, s, t, r, q)
}

MultiTexCoord4dvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLdouble) {
    __glewMultiTexCoord4dvARB(target, v)
}

MultiTexCoord4fARB :: #force_inline proc "contextless" (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) {
    __glewMultiTexCoord4fARB(target, s, t, r, q)
}

MultiTexCoord4fvARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLfloat) {
    __glewMultiTexCoord4fvARB(target, v)
}

MultiTexCoord4iARB :: #force_inline proc "contextless" (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) {
    __glewMultiTexCoord4iARB(target, s, t, r, q)
}

MultiTexCoord4ivARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLint) {
    __glewMultiTexCoord4ivARB(target, v)
}

MultiTexCoord4sARB :: #force_inline proc "contextless" (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) {
    __glewMultiTexCoord4sARB(target, s, t, r, q)
}

MultiTexCoord4svARB :: #force_inline proc "contextless" (target: GLenum, v: ^GLshort) {
    __glewMultiTexCoord4svARB(target, v)
}

BeginQueryARB :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBeginQueryARB(target, id)
}

DeleteQueriesARB :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteQueriesARB(n, ids)
}

EndQueryARB :: #force_inline proc "contextless" (target: GLenum) {
    __glewEndQueryARB(target)
}

GenQueriesARB :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenQueriesARB(n, ids)
}

GetQueryObjectivARB :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetQueryObjectivARB(id, pname, params)
}

GetQueryObjectuivARB :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetQueryObjectuivARB(id, pname, params)
}

GetQueryivARB :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetQueryivARB(target, pname, params)
}

IsQueryARB :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsQueryARB(id)
}

MaxShaderCompilerThreadsARB :: #force_inline proc "contextless" (count: GLuint) {
    __glewMaxShaderCompilerThreadsARB(count)
}

PointParameterfARB :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewPointParameterfARB(pname, param)
}

PointParameterfvARB :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewPointParameterfvARB(pname, params)
}

PolygonOffsetClamp :: #force_inline proc "contextless" (factor: GLfloat, units: GLfloat, clamp: GLfloat) {
    __glewPolygonOffsetClamp(factor, units, clamp)
}

GetProgramInterfaceiv :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetProgramInterfaceiv(program, programInterface, pname, params)
}

GetProgramResourceIndex :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLuint {
    return __glewGetProgramResourceIndex(program, programInterface, name)
}

GetProgramResourceLocation :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint {
    return __glewGetProgramResourceLocation(program, programInterface, name)
}

GetProgramResourceLocationIndex :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint {
    return __glewGetProgramResourceLocationIndex(program, programInterface, name)
}

GetProgramResourceName :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: ^GLsizei, name: ^GLchar) {
    __glewGetProgramResourceName(program, programInterface, index, bufSize, length, name)
}

GetProgramResourceiv :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: [^]GLenum, bufSize: GLsizei, length: ^GLsizei, params: [^]GLint) {
    __glewGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params)
}

ProvokingVertex :: #force_inline proc "contextless" (mode: GLenum) {
    __glewProvokingVertex(mode)
}

GetGraphicsResetStatusARB :: #force_inline proc "contextless" () -> GLenum {
    return __glewGetGraphicsResetStatusARB()
}

GetnColorTableARB :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, table: rawptr) {
    __glewGetnColorTableARB(target, format, type, bufSize, table)
}

GetnCompressedTexImageARB :: #force_inline proc "contextless" (target: GLenum, lod: GLint, bufSize: GLsizei, img: rawptr) {
    __glewGetnCompressedTexImageARB(target, lod, bufSize, img)
}

GetnConvolutionFilterARB :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, image: rawptr) {
    __glewGetnConvolutionFilterARB(target, format, type, bufSize, image)
}

GetnHistogramARB :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: rawptr) {
    __glewGetnHistogramARB(target, reset, format, type, bufSize, values)
}

GetnMapdvARB :: #force_inline proc "contextless" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLdouble) {
    __glewGetnMapdvARB(target, query, bufSize, v)
}

GetnMapfvARB :: #force_inline proc "contextless" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLfloat) {
    __glewGetnMapfvARB(target, query, bufSize, v)
}

GetnMapivARB :: #force_inline proc "contextless" (target: GLenum, query: GLenum, bufSize: GLsizei, v: ^GLint) {
    __glewGetnMapivARB(target, query, bufSize, v)
}

GetnMinmaxARB :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: rawptr) {
    __glewGetnMinmaxARB(target, reset, format, type, bufSize, values)
}

GetnPixelMapfvARB :: #force_inline proc "contextless" (map_: GLenum, bufSize: GLsizei, values: [^]GLfloat) {
    __glewGetnPixelMapfvARB(map_, bufSize, values)
}

GetnPixelMapuivARB :: #force_inline proc "contextless" (map_: GLenum, bufSize: GLsizei, values: [^]GLuint) {
    __glewGetnPixelMapuivARB(map_, bufSize, values)
}

GetnPixelMapusvARB :: #force_inline proc "contextless" (map_: GLenum, bufSize: GLsizei, values: [^]GLushort) {
    __glewGetnPixelMapusvARB(map_, bufSize, values)
}

GetnPolygonStippleARB :: #force_inline proc "contextless" (bufSize: GLsizei, pattern: ^GLubyte) {
    __glewGetnPolygonStippleARB(bufSize, pattern)
}

GetnSeparableFilterARB :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, rowBufSize: GLsizei, row: rawptr, columnBufSize: GLsizei, column: rawptr, span: rawptr) {
    __glewGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span)
}

GetnTexImageARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, img: rawptr) {
    __glewGetnTexImageARB(target, level, format, type, bufSize, img)
}

GetnUniformdvARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLdouble) {
    __glewGetnUniformdvARB(program, location, bufSize, params)
}

GetnUniformfvARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat) {
    __glewGetnUniformfvARB(program, location, bufSize, params)
}

GetnUniformivARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint) {
    __glewGetnUniformivARB(program, location, bufSize, params)
}

GetnUniformuivARB :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint) {
    __glewGetnUniformuivARB(program, location, bufSize, params)
}

ReadnPixelsARB :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr) {
    __glewReadnPixelsARB(x, y, width, height, format, type, bufSize, data)
}

EvaluateDepthValuesARB :: #force_inline proc "contextless" () {
    __glewEvaluateDepthValuesARB()
}

FramebufferSampleLocationsfvARB :: #force_inline proc "contextless" (target: GLenum, start: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewFramebufferSampleLocationsfvARB(target, start, count, v)
}

NamedFramebufferSampleLocationsfvARB :: #force_inline proc "contextless" (framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v)
}

MinSampleShadingARB :: #force_inline proc "contextless" (value: GLclampf) {
    __glewMinSampleShadingARB(value)
}

BindSampler :: #force_inline proc "contextless" (unit: GLuint, sampler: GLuint) {
    __glewBindSampler(unit, sampler)
}

DeleteSamplers :: #force_inline proc "contextless" (count: GLsizei, samplers: [^]GLuint) {
    __glewDeleteSamplers(count, samplers)
}

GenSamplers :: #force_inline proc "contextless" (count: GLsizei, samplers: [^]GLuint) {
    __glewGenSamplers(count, samplers)
}

GetSamplerParameterIiv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetSamplerParameterIiv(sampler, pname, params)
}

GetSamplerParameterIuiv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetSamplerParameterIuiv(sampler, pname, params)
}

GetSamplerParameterfv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetSamplerParameterfv(sampler, pname, params)
}

GetSamplerParameteriv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetSamplerParameteriv(sampler, pname, params)
}

IsSampler :: #force_inline proc "contextless" (sampler: GLuint) -> GLboolean {
    return __glewIsSampler(sampler)
}

SamplerParameterIiv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewSamplerParameterIiv(sampler, pname, params)
}

SamplerParameterIuiv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewSamplerParameterIuiv(sampler, pname, params)
}

SamplerParameterf :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, param: GLfloat) {
    __glewSamplerParameterf(sampler, pname, param)
}

SamplerParameterfv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewSamplerParameterfv(sampler, pname, params)
}

SamplerParameteri :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, param: GLint) {
    __glewSamplerParameteri(sampler, pname, param)
}

SamplerParameteriv :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewSamplerParameteriv(sampler, pname, params)
}

ActiveShaderProgram :: #force_inline proc "contextless" (pipeline: GLuint, program: GLuint) {
    __glewActiveShaderProgram(pipeline, program)
}

BindProgramPipeline :: #force_inline proc "contextless" (pipeline: GLuint) {
    __glewBindProgramPipeline(pipeline)
}

CreateShaderProgramv :: #force_inline proc "contextless" (type: GLenum, count: GLsizei, strings: ^[^]GLchar) -> GLuint {
    return __glewCreateShaderProgramv(type, count, strings)
}

DeleteProgramPipelines :: #force_inline proc "contextless" (n: GLsizei, pipelines: [^]GLuint) {
    __glewDeleteProgramPipelines(n, pipelines)
}

GenProgramPipelines :: #force_inline proc "contextless" (n: GLsizei, pipelines: [^]GLuint) {
    __glewGenProgramPipelines(n, pipelines)
}

GetProgramPipelineInfoLog :: #force_inline proc "contextless" (pipeline: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar) {
    __glewGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog)
}

GetProgramPipelineiv :: #force_inline proc "contextless" (pipeline: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetProgramPipelineiv(pipeline, pname, params)
}

IsProgramPipeline :: #force_inline proc "contextless" (pipeline: GLuint) -> GLboolean {
    return __glewIsProgramPipeline(pipeline)
}

ProgramUniform1d :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLdouble) {
    __glewProgramUniform1d(program, location, x)
}

ProgramUniform1dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewProgramUniform1dv(program, location, count, value)
}

ProgramUniform1f :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLfloat) {
    __glewProgramUniform1f(program, location, x)
}

ProgramUniform1fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform1fv(program, location, count, value)
}

ProgramUniform1i :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint) {
    __glewProgramUniform1i(program, location, x)
}

ProgramUniform1iv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform1iv(program, location, count, value)
}

ProgramUniform1ui :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint) {
    __glewProgramUniform1ui(program, location, x)
}

ProgramUniform1uiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform1uiv(program, location, count, value)
}

ProgramUniform2d :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble) {
    __glewProgramUniform2d(program, location, x, y)
}

ProgramUniform2dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewProgramUniform2dv(program, location, count, value)
}

ProgramUniform2f :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat) {
    __glewProgramUniform2f(program, location, x, y)
}

ProgramUniform2fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform2fv(program, location, count, value)
}

ProgramUniform2i :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint, y: GLint) {
    __glewProgramUniform2i(program, location, x, y)
}

ProgramUniform2iv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform2iv(program, location, count, value)
}

ProgramUniform2ui :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint, y: GLuint) {
    __glewProgramUniform2ui(program, location, x, y)
}

ProgramUniform2uiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform2uiv(program, location, count, value)
}

ProgramUniform3d :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewProgramUniform3d(program, location, x, y, z)
}

ProgramUniform3dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewProgramUniform3dv(program, location, count, value)
}

ProgramUniform3f :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewProgramUniform3f(program, location, x, y, z)
}

ProgramUniform3fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform3fv(program, location, count, value)
}

ProgramUniform3i :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint, y: GLint, z: GLint) {
    __glewProgramUniform3i(program, location, x, y, z)
}

ProgramUniform3iv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform3iv(program, location, count, value)
}

ProgramUniform3ui :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint, y: GLuint, z: GLuint) {
    __glewProgramUniform3ui(program, location, x, y, z)
}

ProgramUniform3uiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform3uiv(program, location, count, value)
}

ProgramUniform4d :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewProgramUniform4d(program, location, x, y, z, w)
}

ProgramUniform4dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLdouble) {
    __glewProgramUniform4dv(program, location, count, value)
}

ProgramUniform4f :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewProgramUniform4f(program, location, x, y, z, w)
}

ProgramUniform4fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform4fv(program, location, count, value)
}

ProgramUniform4i :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewProgramUniform4i(program, location, x, y, z, w)
}

ProgramUniform4iv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform4iv(program, location, count, value)
}

ProgramUniform4ui :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) {
    __glewProgramUniform4ui(program, location, x, y, z, w)
}

ProgramUniform4uiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform4uiv(program, location, count, value)
}

ProgramUniformMatrix2dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix2dv(program, location, count, transpose, value)
}

ProgramUniformMatrix2fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2fv(program, location, count, transpose, value)
}

ProgramUniformMatrix2x3dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix2x3dv(program, location, count, transpose, value)
}

ProgramUniformMatrix2x3fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2x3fv(program, location, count, transpose, value)
}

ProgramUniformMatrix2x4dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix2x4dv(program, location, count, transpose, value)
}

ProgramUniformMatrix2x4fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2x4fv(program, location, count, transpose, value)
}

ProgramUniformMatrix3dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix3dv(program, location, count, transpose, value)
}

ProgramUniformMatrix3fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3fv(program, location, count, transpose, value)
}

ProgramUniformMatrix3x2dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix3x2dv(program, location, count, transpose, value)
}

ProgramUniformMatrix3x2fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3x2fv(program, location, count, transpose, value)
}

ProgramUniformMatrix3x4dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix3x4dv(program, location, count, transpose, value)
}

ProgramUniformMatrix3x4fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3x4fv(program, location, count, transpose, value)
}

ProgramUniformMatrix4dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix4dv(program, location, count, transpose, value)
}

ProgramUniformMatrix4fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4fv(program, location, count, transpose, value)
}

ProgramUniformMatrix4x2dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix4x2dv(program, location, count, transpose, value)
}

ProgramUniformMatrix4x2fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4x2fv(program, location, count, transpose, value)
}

ProgramUniformMatrix4x3dv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLdouble) {
    __glewProgramUniformMatrix4x3dv(program, location, count, transpose, value)
}

ProgramUniformMatrix4x3fv :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4x3fv(program, location, count, transpose, value)
}

UseProgramStages :: #force_inline proc "contextless" (pipeline: GLuint, stages: GLbitfield, program: GLuint) {
    __glewUseProgramStages(pipeline, stages, program)
}

ValidateProgramPipeline :: #force_inline proc "contextless" (pipeline: GLuint) {
    __glewValidateProgramPipeline(pipeline)
}

GetActiveAtomicCounterBufferiv :: #force_inline proc "contextless" (program: GLuint, bufferIndex: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params)
}

BindImageTexture :: #force_inline proc "contextless" (unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum) {
    __glewBindImageTexture(unit, texture, level, layered, layer, access, format)
}

MemoryBarrier :: #force_inline proc "contextless" (barriers: GLbitfield) {
    __glewMemoryBarrier(barriers)
}

AttachObjectARB :: #force_inline proc "contextless" (containerObj: GLhandleARB, obj: GLhandleARB) {
    __glewAttachObjectARB(containerObj, obj)
}

CompileShaderARB :: #force_inline proc "contextless" (shaderObj: GLhandleARB) {
    __glewCompileShaderARB(shaderObj)
}

CreateProgramObjectARB :: #force_inline proc "contextless" () -> GLhandleARB {
    return __glewCreateProgramObjectARB()
}

CreateShaderObjectARB :: #force_inline proc "contextless" (shaderType: GLenum) -> GLhandleARB {
    return __glewCreateShaderObjectARB(shaderType)
}

DeleteObjectARB :: #force_inline proc "contextless" (obj: GLhandleARB) {
    __glewDeleteObjectARB(obj)
}

DetachObjectARB :: #force_inline proc "contextless" (containerObj: GLhandleARB, attachedObj: GLhandleARB) {
    __glewDetachObjectARB(containerObj, attachedObj)
}

GetActiveUniformARB :: #force_inline proc "contextless" (programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLcharARB) {
    __glewGetActiveUniformARB(programObj, index, maxLength, length, size, type, name)
}

GetAttachedObjectsARB :: #force_inline proc "contextless" (containerObj: GLhandleARB, maxCount: GLsizei, count: ^GLsizei, obj: ^GLhandleARB) {
    __glewGetAttachedObjectsARB(containerObj, maxCount, count, obj)
}

GetHandleARB :: #force_inline proc "contextless" (pname: GLenum) -> GLhandleARB {
    return __glewGetHandleARB(pname)
}

GetInfoLogARB :: #force_inline proc "contextless" (obj: GLhandleARB, maxLength: GLsizei, length: ^GLsizei, infoLog: ^GLcharARB) {
    __glewGetInfoLogARB(obj, maxLength, length, infoLog)
}

GetObjectParameterfvARB :: #force_inline proc "contextless" (obj: GLhandleARB, pname: GLenum, params: [^]GLfloat) {
    __glewGetObjectParameterfvARB(obj, pname, params)
}

GetObjectParameterivARB :: #force_inline proc "contextless" (obj: GLhandleARB, pname: GLenum, params: [^]GLint) {
    __glewGetObjectParameterivARB(obj, pname, params)
}

GetShaderSourceARB :: #force_inline proc "contextless" (obj: GLhandleARB, maxLength: GLsizei, length: ^GLsizei, source: ^GLcharARB) {
    __glewGetShaderSourceARB(obj, maxLength, length, source)
}

GetUniformLocationARB :: #force_inline proc "contextless" (programObj: GLhandleARB, name: ^GLcharARB) -> GLint {
    return __glewGetUniformLocationARB(programObj, name)
}

GetUniformfvARB :: #force_inline proc "contextless" (programObj: GLhandleARB, location: GLint, params: [^]GLfloat) {
    __glewGetUniformfvARB(programObj, location, params)
}

GetUniformivARB :: #force_inline proc "contextless" (programObj: GLhandleARB, location: GLint, params: [^]GLint) {
    __glewGetUniformivARB(programObj, location, params)
}

LinkProgramARB :: #force_inline proc "contextless" (programObj: GLhandleARB) {
    __glewLinkProgramARB(programObj)
}

ShaderSourceARB :: #force_inline proc "contextless" (shaderObj: GLhandleARB, count: GLsizei, string_: ^^GLcharARB, length: ^GLint) {
    __glewShaderSourceARB(shaderObj, count, string_, length)
}

Uniform1fARB :: #force_inline proc "contextless" (location: GLint, v0: GLfloat) {
    __glewUniform1fARB(location, v0)
}

Uniform1fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform1fvARB(location, count, value)
}

Uniform1iARB :: #force_inline proc "contextless" (location: GLint, v0: GLint) {
    __glewUniform1iARB(location, v0)
}

Uniform1ivARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform1ivARB(location, count, value)
}

Uniform2fARB :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat) {
    __glewUniform2fARB(location, v0, v1)
}

Uniform2fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform2fvARB(location, count, value)
}

Uniform2iARB :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint) {
    __glewUniform2iARB(location, v0, v1)
}

Uniform2ivARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform2ivARB(location, count, value)
}

Uniform3fARB :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) {
    __glewUniform3fARB(location, v0, v1, v2)
}

Uniform3fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform3fvARB(location, count, value)
}

Uniform3iARB :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint, v2: GLint) {
    __glewUniform3iARB(location, v0, v1, v2)
}

Uniform3ivARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform3ivARB(location, count, value)
}

Uniform4fARB :: #force_inline proc "contextless" (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) {
    __glewUniform4fARB(location, v0, v1, v2, v3)
}

Uniform4fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewUniform4fvARB(location, count, value)
}

Uniform4iARB :: #force_inline proc "contextless" (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) {
    __glewUniform4iARB(location, v0, v1, v2, v3)
}

Uniform4ivARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint) {
    __glewUniform4ivARB(location, count, value)
}

UniformMatrix2fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2fvARB(location, count, transpose, value)
}

UniformMatrix3fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3fvARB(location, count, transpose, value)
}

UniformMatrix4fvARB :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4fvARB(location, count, transpose, value)
}

UseProgramObjectARB :: #force_inline proc "contextless" (programObj: GLhandleARB) {
    __glewUseProgramObjectARB(programObj)
}

ValidateProgramARB :: #force_inline proc "contextless" (programObj: GLhandleARB) {
    __glewValidateProgramARB(programObj)
}

ShaderStorageBlockBinding :: #force_inline proc "contextless" (program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint) {
    __glewShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding)
}

GetActiveSubroutineName :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: ^GLsizei, name: ^GLchar) {
    __glewGetActiveSubroutineName(program, shadertype, index, bufsize, length, name)
}

GetActiveSubroutineUniformName :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: ^GLsizei, name: ^GLchar) {
    __glewGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name)
}

GetActiveSubroutineUniformiv :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: [^]GLint) {
    __glewGetActiveSubroutineUniformiv(program, shadertype, index, pname, values)
}

GetProgramStageiv :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, pname: GLenum, values: [^]GLint) {
    __glewGetProgramStageiv(program, shadertype, pname, values)
}

GetSubroutineIndex :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, name: ^GLchar) -> GLuint {
    return __glewGetSubroutineIndex(program, shadertype, name)
}

GetSubroutineUniformLocation :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, name: ^GLchar) -> GLint {
    return __glewGetSubroutineUniformLocation(program, shadertype, name)
}

GetUniformSubroutineuiv :: #force_inline proc "contextless" (shadertype: GLenum, location: GLint, params: [^]GLuint) {
    __glewGetUniformSubroutineuiv(shadertype, location, params)
}

UniformSubroutinesuiv :: #force_inline proc "contextless" (shadertype: GLenum, count: GLsizei, indices: [^]GLuint) {
    __glewUniformSubroutinesuiv(shadertype, count, indices)
}

CompileShaderIncludeARB :: #force_inline proc "contextless" (shader: GLuint, count: GLsizei, path: ^^GLchar, length: ^GLint) {
    __glewCompileShaderIncludeARB(shader, count, path, length)
}

DeleteNamedStringARB :: #force_inline proc "contextless" (namelen: GLint, name: ^GLchar) {
    __glewDeleteNamedStringARB(namelen, name)
}

GetNamedStringARB :: #force_inline proc "contextless" (namelen: GLint, name: ^GLchar, bufSize: GLsizei, stringlen: ^GLint, string_: ^GLchar) {
    __glewGetNamedStringARB(namelen, name, bufSize, stringlen, string_)
}

GetNamedStringivARB :: #force_inline proc "contextless" (namelen: GLint, name: ^GLchar, pname: GLenum, params: [^]GLint) {
    __glewGetNamedStringivARB(namelen, name, pname, params)
}

IsNamedStringARB :: #force_inline proc "contextless" (namelen: GLint, name: ^GLchar) -> GLboolean {
    return __glewIsNamedStringARB(namelen, name)
}

NamedStringARB :: #force_inline proc "contextless" (type: GLenum, namelen: GLint, name: ^GLchar, stringlen: GLint, string_: ^GLchar) {
    __glewNamedStringARB(type, namelen, name, stringlen, string_)
}

BufferPageCommitmentARB :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr, commit: GLboolean) {
    __glewBufferPageCommitmentARB(target, offset, size, commit)
}

TexPageCommitmentARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean) {
    __glewTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

ClientWaitSync :: #force_inline proc "contextless" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum {
    return __glewClientWaitSync(GLsync, flags, timeout)
}

DeleteSync :: #force_inline proc "contextless" (GLsync: GLsync) {
    __glewDeleteSync(GLsync)
}

FenceSync :: #force_inline proc "contextless" (condition: GLenum, flags: GLbitfield) -> GLsync {
    return __glewFenceSync(condition, flags)
}

GetInteger64v :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint64) {
    __glewGetInteger64v(pname, params)
}

GetSynciv :: #force_inline proc "contextless" (GLsync: GLsync, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint) {
    __glewGetSynciv(GLsync, pname, bufSize, length, values)
}

IsSync :: #force_inline proc "contextless" (GLsync: GLsync) -> GLboolean {
    return __glewIsSync(GLsync)
}

WaitSync :: #force_inline proc "contextless" (GLsync: GLsync, flags: GLbitfield, timeout: GLuint64) {
    __glewWaitSync(GLsync, flags, timeout)
}

PatchParameterfv :: #force_inline proc "contextless" (pname: GLenum, values: [^]GLfloat) {
    __glewPatchParameterfv(pname, values)
}

PatchParameteri :: #force_inline proc "contextless" (pname: GLenum, value: GLint) {
    __glewPatchParameteri(pname, value)
}

TextureBarrier :: #force_inline proc "contextless" () {
    __glewTextureBarrier()
}

TexBufferARB :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, buffer: GLuint) {
    __glewTexBufferARB(target, internalformat, buffer)
}

TexBufferRange :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewTexBufferRange(target, internalformat, buffer, offset, size)
}

TextureBufferRangeEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size)
}

CompressedTexImage1DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data)
}

CompressedTexImage2DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data)
}

CompressedTexImage3DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedTexSubImage1DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data)
}

CompressedTexSubImage2DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

CompressedTexSubImage3DARB :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

GetCompressedTexImageARB :: #force_inline proc "contextless" (target: GLenum, lod: GLint, img: rawptr) {
    __glewGetCompressedTexImageARB(target, lod, img)
}

GetMultisamplefv :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, val: ^GLfloat) {
    __glewGetMultisamplefv(pname, index, val)
}

SampleMaski :: #force_inline proc "contextless" (index: GLuint, mask: GLbitfield) {
    __glewSampleMaski(index, mask)
}

TexImage2DMultisample :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}

TexImage3DMultisample :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

TexStorage1D :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) {
    __glewTexStorage1D(target, levels, internalformat, width)
}

TexStorage2D :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewTexStorage2D(target, levels, internalformat, width, height)
}

TexStorage3D :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewTexStorage3D(target, levels, internalformat, width, height, depth)
}

TexStorage2DMultisample :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations)
}

TexStorage3DMultisample :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

TextureStorage2DMultisampleEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations)
}

TextureStorage3DMultisampleEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

TextureView :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) {
    __glewTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

GetQueryObjecti64v :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint64) {
    __glewGetQueryObjecti64v(id, pname, params)
}

GetQueryObjectui64v :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint64) {
    __glewGetQueryObjectui64v(id, pname, params)
}

QueryCounter :: #force_inline proc "contextless" (id: GLuint, target: GLenum) {
    __glewQueryCounter(id, target)
}

BindTransformFeedback :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBindTransformFeedback(target, id)
}

DeleteTransformFeedbacks :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteTransformFeedbacks(n, ids)
}

DrawTransformFeedback :: #force_inline proc "contextless" (mode: GLenum, id: GLuint) {
    __glewDrawTransformFeedback(mode, id)
}

GenTransformFeedbacks :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenTransformFeedbacks(n, ids)
}

IsTransformFeedback :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsTransformFeedback(id)
}

PauseTransformFeedback :: #force_inline proc "contextless" () {
    __glewPauseTransformFeedback()
}

ResumeTransformFeedback :: #force_inline proc "contextless" () {
    __glewResumeTransformFeedback()
}

BeginQueryIndexed :: #force_inline proc "contextless" (target: GLenum, index: GLuint, id: GLuint) {
    __glewBeginQueryIndexed(target, index, id)
}

DrawTransformFeedbackStream :: #force_inline proc "contextless" (mode: GLenum, id: GLuint, stream: GLuint) {
    __glewDrawTransformFeedbackStream(mode, id, stream)
}

EndQueryIndexed :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewEndQueryIndexed(target, index)
}

GetQueryIndexediv :: #force_inline proc "contextless" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetQueryIndexediv(target, index, pname, params)
}

DrawTransformFeedbackInstanced :: #force_inline proc "contextless" (mode: GLenum, id: GLuint, primcount: GLsizei) {
    __glewDrawTransformFeedbackInstanced(mode, id, primcount)
}

DrawTransformFeedbackStreamInstanced :: #force_inline proc "contextless" (mode: GLenum, id: GLuint, stream: GLuint, primcount: GLsizei) {
    __glewDrawTransformFeedbackStreamInstanced(mode, id, stream, primcount)
}

LoadTransposeMatrixdARB :: #force_inline proc "contextless" (m: [16]GLdouble) {
    __glewLoadTransposeMatrixdARB(m)
}

LoadTransposeMatrixfARB :: #force_inline proc "contextless" (m: [16]GLfloat) {
    __glewLoadTransposeMatrixfARB(m)
}

MultTransposeMatrixdARB :: #force_inline proc "contextless" (m: [16]GLdouble) {
    __glewMultTransposeMatrixdARB(m)
}

MultTransposeMatrixfARB :: #force_inline proc "contextless" (m: [16]GLfloat) {
    __glewMultTransposeMatrixfARB(m)
}

BindBufferBase :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint) {
    __glewBindBufferBase(target, index, buffer)
}

BindBufferRange :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewBindBufferRange(target, index, buffer, offset, size)
}

GetActiveUniformBlockName :: #force_inline proc "contextless" (program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformBlockName: ^GLchar) {
    __glewGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName)
}

GetActiveUniformBlockiv :: #force_inline proc "contextless" (program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params)
}

GetActiveUniformName :: #force_inline proc "contextless" (program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformName: ^GLchar) {
    __glewGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName)
}

GetActiveUniformsiv :: #force_inline proc "contextless" (program: GLuint, uniformCount: GLsizei, uniformIndices: [^]GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params)
}

GetIntegeri_v :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLint) {
    __glewGetIntegeri_v(target, index, data)
}

GetUniformBlockIndex :: #force_inline proc "contextless" (program: GLuint, uniformBlockName: ^GLchar) -> GLuint {
    return __glewGetUniformBlockIndex(program, uniformBlockName)
}

GetUniformIndices :: #force_inline proc "contextless" (program: GLuint, uniformCount: GLsizei, uniformNames: ^[^]GLchar, uniformIndices: [^]GLuint) {
    __glewGetUniformIndices(program, uniformCount, uniformNames, uniformIndices)
}

UniformBlockBinding :: #force_inline proc "contextless" (program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint) {
    __glewUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding)
}

BindVertexArray :: #force_inline proc "contextless" (array: GLuint) {
    __glewBindVertexArray(array)
}

DeleteVertexArrays :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewDeleteVertexArrays(n, arrays)
}

GenVertexArrays :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewGenVertexArrays(n, arrays)
}

IsVertexArray :: #force_inline proc "contextless" (array: GLuint) -> GLboolean {
    return __glewIsVertexArray(array)
}

GetVertexAttribLdv :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVertexAttribLdv(index, pname, params)
}

VertexAttribL1d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble) {
    __glewVertexAttribL1d(index, x)
}

VertexAttribL1dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL1dv(index, v)
}

VertexAttribL2d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble) {
    __glewVertexAttribL2d(index, x, y)
}

VertexAttribL2dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL2dv(index, v)
}

VertexAttribL3d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexAttribL3d(index, x, y, z)
}

VertexAttribL3dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL3dv(index, v)
}

VertexAttribL4d :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexAttribL4d(index, x, y, z, w)
}

VertexAttribL4dv :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL4dv(index, v)
}

VertexAttribLPointer :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribLPointer(index, size, type, stride, pointer)
}

BindVertexBuffer :: #force_inline proc "contextless" (bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) {
    __glewBindVertexBuffer(bindingindex, buffer, offset, stride)
}

VertexArrayBindVertexBufferEXT :: #force_inline proc "contextless" (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) {
    __glewVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride)
}

VertexArrayVertexAttribBindingEXT :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) {
    __glewVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex)
}

VertexArrayVertexAttribFormatEXT :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) {
    __glewVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset)
}

VertexArrayVertexAttribIFormatEXT :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}

VertexArrayVertexAttribLFormatEXT :: #force_inline proc "contextless" (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset)
}

VertexArrayVertexBindingDivisorEXT :: #force_inline proc "contextless" (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) {
    __glewVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor)
}

VertexAttribBinding :: #force_inline proc "contextless" (attribindex: GLuint, bindingindex: GLuint) {
    __glewVertexAttribBinding(attribindex, bindingindex)
}

VertexAttribFormat :: #force_inline proc "contextless" (attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) {
    __glewVertexAttribFormat(attribindex, size, type, normalized, relativeoffset)
}

VertexAttribIFormat :: #force_inline proc "contextless" (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexAttribIFormat(attribindex, size, type, relativeoffset)
}

VertexAttribLFormat :: #force_inline proc "contextless" (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) {
    __glewVertexAttribLFormat(attribindex, size, type, relativeoffset)
}

VertexBindingDivisor :: #force_inline proc "contextless" (bindingindex: GLuint, divisor: GLuint) {
    __glewVertexBindingDivisor(bindingindex, divisor)
}

VertexBlendARB :: #force_inline proc "contextless" (count: GLint) {
    __glewVertexBlendARB(count)
}

WeightPointerARB :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewWeightPointerARB(size, type, stride, pointer)
}

WeightbvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLbyte) {
    __glewWeightbvARB(size, weights)
}

WeightdvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLdouble) {
    __glewWeightdvARB(size, weights)
}

WeightfvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLfloat) {
    __glewWeightfvARB(size, weights)
}

WeightivARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLint) {
    __glewWeightivARB(size, weights)
}

WeightsvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLshort) {
    __glewWeightsvARB(size, weights)
}

WeightubvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLubyte) {
    __glewWeightubvARB(size, weights)
}

WeightuivARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLuint) {
    __glewWeightuivARB(size, weights)
}

WeightusvARB :: #force_inline proc "contextless" (size: GLint, weights: [^]GLushort) {
    __glewWeightusvARB(size, weights)
}

BindBufferARB :: #force_inline proc "contextless" (target: GLenum, buffer: GLuint) {
    __glewBindBufferARB(target, buffer)
}

BufferDataARB :: #force_inline proc "contextless" (target: GLenum, size: GLsizeiptrARB, data: rawptr, usage: GLenum) {
    __glewBufferDataARB(target, size, data, usage)
}

BufferSubDataARB :: #force_inline proc "contextless" (target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: rawptr) {
    __glewBufferSubDataARB(target, offset, size, data)
}

DeleteBuffersARB :: #force_inline proc "contextless" (n: GLsizei, buffers: [^]GLuint) {
    __glewDeleteBuffersARB(n, buffers)
}

GenBuffersARB :: #force_inline proc "contextless" (n: GLsizei, buffers: [^]GLuint) {
    __glewGenBuffersARB(n, buffers)
}

GetBufferParameterivARB :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetBufferParameterivARB(target, pname, params)
}

GetBufferPointervARB :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]rawptr) {
    __glewGetBufferPointervARB(target, pname, params)
}

GetBufferSubDataARB :: #force_inline proc "contextless" (target: GLenum, offset: GLintptrARB, size: GLsizeiptrARB, data: rawptr) {
    __glewGetBufferSubDataARB(target, offset, size, data)
}

IsBufferARB :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewIsBufferARB(buffer)
}

MapBufferARB :: #force_inline proc "contextless" (target: GLenum, access: GLenum) -> rawptr {
    return __glewMapBufferARB(target, access)
}

UnmapBufferARB :: #force_inline proc "contextless" (target: GLenum) -> GLboolean {
    return __glewUnmapBufferARB(target)
}

BindProgramARB :: #force_inline proc "contextless" (target: GLenum, program: GLuint) {
    __glewBindProgramARB(target, program)
}

DeleteProgramsARB :: #force_inline proc "contextless" (n: GLsizei, programs: [^]GLuint) {
    __glewDeleteProgramsARB(n, programs)
}

DisableVertexAttribArrayARB :: #force_inline proc "contextless" (index: GLuint) {
    __glewDisableVertexAttribArrayARB(index)
}

EnableVertexAttribArrayARB :: #force_inline proc "contextless" (index: GLuint) {
    __glewEnableVertexAttribArrayARB(index)
}

GenProgramsARB :: #force_inline proc "contextless" (n: GLsizei, programs: [^]GLuint) {
    __glewGenProgramsARB(n, programs)
}

GetProgramEnvParameterdvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewGetProgramEnvParameterdvARB(target, index, params)
}

GetProgramEnvParameterfvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewGetProgramEnvParameterfvARB(target, index, params)
}

GetProgramLocalParameterdvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewGetProgramLocalParameterdvARB(target, index, params)
}

GetProgramLocalParameterfvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewGetProgramLocalParameterfvARB(target, index, params)
}

GetProgramStringARB :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, string_: rawptr) {
    __glewGetProgramStringARB(target, pname, string_)
}

GetProgramivARB :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetProgramivARB(target, pname, params)
}

GetVertexAttribPointervARB :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, pointer: ^rawptr) {
    __glewGetVertexAttribPointervARB(index, pname, pointer)
}

GetVertexAttribdvARB :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVertexAttribdvARB(index, pname, params)
}

GetVertexAttribfvARB :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVertexAttribfvARB(index, pname, params)
}

GetVertexAttribivARB :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribivARB(index, pname, params)
}

IsProgramARB :: #force_inline proc "contextless" (program: GLuint) -> GLboolean {
    return __glewIsProgramARB(program)
}

ProgramEnvParameter4dARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewProgramEnvParameter4dARB(target, index, x, y, z, w)
}

ProgramEnvParameter4dvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewProgramEnvParameter4dvARB(target, index, params)
}

ProgramEnvParameter4fARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewProgramEnvParameter4fARB(target, index, x, y, z, w)
}

ProgramEnvParameter4fvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewProgramEnvParameter4fvARB(target, index, params)
}

ProgramLocalParameter4dARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewProgramLocalParameter4dARB(target, index, x, y, z, w)
}

ProgramLocalParameter4dvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewProgramLocalParameter4dvARB(target, index, params)
}

ProgramLocalParameter4fARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewProgramLocalParameter4fARB(target, index, x, y, z, w)
}

ProgramLocalParameter4fvARB :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewProgramLocalParameter4fvARB(target, index, params)
}

ProgramStringARB :: #force_inline proc "contextless" (target: GLenum, format: GLenum, len: GLsizei, string_: rawptr) {
    __glewProgramStringARB(target, format, len, string_)
}

VertexAttrib1dARB :: #force_inline proc "contextless" (index: GLuint, x: GLdouble) {
    __glewVertexAttrib1dARB(index, x)
}

VertexAttrib1dvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib1dvARB(index, v)
}

VertexAttrib1fARB :: #force_inline proc "contextless" (index: GLuint, x: GLfloat) {
    __glewVertexAttrib1fARB(index, x)
}

VertexAttrib1fvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib1fvARB(index, v)
}

VertexAttrib1sARB :: #force_inline proc "contextless" (index: GLuint, x: GLshort) {
    __glewVertexAttrib1sARB(index, x)
}

VertexAttrib1svARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib1svARB(index, v)
}

VertexAttrib2dARB :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble) {
    __glewVertexAttrib2dARB(index, x, y)
}

VertexAttrib2dvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib2dvARB(index, v)
}

VertexAttrib2fARB :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat) {
    __glewVertexAttrib2fARB(index, x, y)
}

VertexAttrib2fvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib2fvARB(index, v)
}

VertexAttrib2sARB :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort) {
    __glewVertexAttrib2sARB(index, x, y)
}

VertexAttrib2svARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib2svARB(index, v)
}

VertexAttrib3dARB :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexAttrib3dARB(index, x, y, z)
}

VertexAttrib3dvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib3dvARB(index, v)
}

VertexAttrib3fARB :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewVertexAttrib3fARB(index, x, y, z)
}

VertexAttrib3fvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib3fvARB(index, v)
}

VertexAttrib3sARB :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort) {
    __glewVertexAttrib3sARB(index, x, y, z)
}

VertexAttrib3svARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib3svARB(index, v)
}

VertexAttrib4NbvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLbyte) {
    __glewVertexAttrib4NbvARB(index, v)
}

VertexAttrib4NivARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttrib4NivARB(index, v)
}

VertexAttrib4NsvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib4NsvARB(index, v)
}

VertexAttrib4NubARB :: #force_inline proc "contextless" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) {
    __glewVertexAttrib4NubARB(index, x, y, z, w)
}

VertexAttrib4NubvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttrib4NubvARB(index, v)
}

VertexAttrib4NuivARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttrib4NuivARB(index, v)
}

VertexAttrib4NusvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLushort) {
    __glewVertexAttrib4NusvARB(index, v)
}

VertexAttrib4bvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLbyte) {
    __glewVertexAttrib4bvARB(index, v)
}

VertexAttrib4dARB :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexAttrib4dARB(index, x, y, z, w)
}

VertexAttrib4dvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib4dvARB(index, v)
}

VertexAttrib4fARB :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewVertexAttrib4fARB(index, x, y, z, w)
}

VertexAttrib4fvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib4fvARB(index, v)
}

VertexAttrib4ivARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttrib4ivARB(index, v)
}

VertexAttrib4sARB :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) {
    __glewVertexAttrib4sARB(index, x, y, z, w)
}

VertexAttrib4svARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib4svARB(index, v)
}

VertexAttrib4ubvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttrib4ubvARB(index, v)
}

VertexAttrib4uivARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttrib4uivARB(index, v)
}

VertexAttrib4usvARB :: #force_inline proc "contextless" (index: GLuint, v: ^GLushort) {
    __glewVertexAttrib4usvARB(index, v)
}

VertexAttribPointerARB :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribPointerARB(index, size, type, normalized, stride, pointer)
}

BindAttribLocationARB :: #force_inline proc "contextless" (programObj: GLhandleARB, index: GLuint, name: ^GLcharARB) {
    __glewBindAttribLocationARB(programObj, index, name)
}

GetActiveAttribARB :: #force_inline proc "contextless" (programObj: GLhandleARB, index: GLuint, maxLength: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLcharARB) {
    __glewGetActiveAttribARB(programObj, index, maxLength, length, size, type, name)
}

GetAttribLocationARB :: #force_inline proc "contextless" (programObj: GLhandleARB, name: ^GLcharARB) -> GLint {
    return __glewGetAttribLocationARB(programObj, name)
}

ColorP3ui :: #force_inline proc "contextless" (type: GLenum, color: GLuint) {
    __glewColorP3ui(type, color)
}

ColorP3uiv :: #force_inline proc "contextless" (type: GLenum, color: ^GLuint) {
    __glewColorP3uiv(type, color)
}

ColorP4ui :: #force_inline proc "contextless" (type: GLenum, color: GLuint) {
    __glewColorP4ui(type, color)
}

ColorP4uiv :: #force_inline proc "contextless" (type: GLenum, color: ^GLuint) {
    __glewColorP4uiv(type, color)
}

MultiTexCoordP1ui :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: GLuint) {
    __glewMultiTexCoordP1ui(texture, type, coords)
}

MultiTexCoordP1uiv :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: [^]GLuint) {
    __glewMultiTexCoordP1uiv(texture, type, coords)
}

MultiTexCoordP2ui :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: GLuint) {
    __glewMultiTexCoordP2ui(texture, type, coords)
}

MultiTexCoordP2uiv :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: [^]GLuint) {
    __glewMultiTexCoordP2uiv(texture, type, coords)
}

MultiTexCoordP3ui :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: GLuint) {
    __glewMultiTexCoordP3ui(texture, type, coords)
}

MultiTexCoordP3uiv :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: [^]GLuint) {
    __glewMultiTexCoordP3uiv(texture, type, coords)
}

MultiTexCoordP4ui :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: GLuint) {
    __glewMultiTexCoordP4ui(texture, type, coords)
}

MultiTexCoordP4uiv :: #force_inline proc "contextless" (texture: GLenum, type: GLenum, coords: [^]GLuint) {
    __glewMultiTexCoordP4uiv(texture, type, coords)
}

NormalP3ui :: #force_inline proc "contextless" (type: GLenum, coords: GLuint) {
    __glewNormalP3ui(type, coords)
}

NormalP3uiv :: #force_inline proc "contextless" (type: GLenum, coords: [^]GLuint) {
    __glewNormalP3uiv(type, coords)
}

SecondaryColorP3ui :: #force_inline proc "contextless" (type: GLenum, color: GLuint) {
    __glewSecondaryColorP3ui(type, color)
}

SecondaryColorP3uiv :: #force_inline proc "contextless" (type: GLenum, color: ^GLuint) {
    __glewSecondaryColorP3uiv(type, color)
}

TexCoordP1ui :: #force_inline proc "contextless" (type: GLenum, coords: GLuint) {
    __glewTexCoordP1ui(type, coords)
}

TexCoordP1uiv :: #force_inline proc "contextless" (type: GLenum, coords: [^]GLuint) {
    __glewTexCoordP1uiv(type, coords)
}

TexCoordP2ui :: #force_inline proc "contextless" (type: GLenum, coords: GLuint) {
    __glewTexCoordP2ui(type, coords)
}

TexCoordP2uiv :: #force_inline proc "contextless" (type: GLenum, coords: [^]GLuint) {
    __glewTexCoordP2uiv(type, coords)
}

TexCoordP3ui :: #force_inline proc "contextless" (type: GLenum, coords: GLuint) {
    __glewTexCoordP3ui(type, coords)
}

TexCoordP3uiv :: #force_inline proc "contextless" (type: GLenum, coords: [^]GLuint) {
    __glewTexCoordP3uiv(type, coords)
}

TexCoordP4ui :: #force_inline proc "contextless" (type: GLenum, coords: GLuint) {
    __glewTexCoordP4ui(type, coords)
}

TexCoordP4uiv :: #force_inline proc "contextless" (type: GLenum, coords: [^]GLuint) {
    __glewTexCoordP4uiv(type, coords)
}

VertexAttribP1ui :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) {
    __glewVertexAttribP1ui(index, type, normalized, value)
}

VertexAttribP1uiv :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint) {
    __glewVertexAttribP1uiv(index, type, normalized, value)
}

VertexAttribP2ui :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) {
    __glewVertexAttribP2ui(index, type, normalized, value)
}

VertexAttribP2uiv :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint) {
    __glewVertexAttribP2uiv(index, type, normalized, value)
}

VertexAttribP3ui :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) {
    __glewVertexAttribP3ui(index, type, normalized, value)
}

VertexAttribP3uiv :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint) {
    __glewVertexAttribP3uiv(index, type, normalized, value)
}

VertexAttribP4ui :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) {
    __glewVertexAttribP4ui(index, type, normalized, value)
}

VertexAttribP4uiv :: #force_inline proc "contextless" (index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint) {
    __glewVertexAttribP4uiv(index, type, normalized, value)
}

VertexP2ui :: #force_inline proc "contextless" (type: GLenum, value: GLuint) {
    __glewVertexP2ui(type, value)
}

VertexP2uiv :: #force_inline proc "contextless" (type: GLenum, value: ^GLuint) {
    __glewVertexP2uiv(type, value)
}

VertexP3ui :: #force_inline proc "contextless" (type: GLenum, value: GLuint) {
    __glewVertexP3ui(type, value)
}

VertexP3uiv :: #force_inline proc "contextless" (type: GLenum, value: ^GLuint) {
    __glewVertexP3uiv(type, value)
}

VertexP4ui :: #force_inline proc "contextless" (type: GLenum, value: GLuint) {
    __glewVertexP4ui(type, value)
}

VertexP4uiv :: #force_inline proc "contextless" (type: GLenum, value: ^GLuint) {
    __glewVertexP4uiv(type, value)
}

DepthRangeArrayv :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLclampd) {
    __glewDepthRangeArrayv(first, count, v)
}

DepthRangeIndexed :: #force_inline proc "contextless" (index: GLuint, n: GLclampd, f: GLclampd) {
    __glewDepthRangeIndexed(index, n, f)
}

GetDoublei_v :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLdouble) {
    __glewGetDoublei_v(target, index, data)
}

GetFloati_v :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLfloat) {
    __glewGetFloati_v(target, index, data)
}

ScissorArrayv :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLint) {
    __glewScissorArrayv(first, count, v)
}

ScissorIndexed :: #force_inline proc "contextless" (index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei) {
    __glewScissorIndexed(index, left, bottom, width, height)
}

ScissorIndexedv :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewScissorIndexedv(index, v)
}

ViewportArrayv :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewViewportArrayv(first, count, v)
}

ViewportIndexedf :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat) {
    __glewViewportIndexedf(index, x, y, w, h)
}

ViewportIndexedfv :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewViewportIndexedfv(index, v)
}

WindowPos2dARB :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble) {
    __glewWindowPos2dARB(x, y)
}

WindowPos2dvARB :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos2dvARB(p)
}

WindowPos2fARB :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat) {
    __glewWindowPos2fARB(x, y)
}

WindowPos2fvARB :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos2fvARB(p)
}

WindowPos2iARB :: #force_inline proc "contextless" (x: GLint, y: GLint) {
    __glewWindowPos2iARB(x, y)
}

WindowPos2ivARB :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos2ivARB(p)
}

WindowPos2sARB :: #force_inline proc "contextless" (x: GLshort, y: GLshort) {
    __glewWindowPos2sARB(x, y)
}

WindowPos2svARB :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos2svARB(p)
}

WindowPos3dARB :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewWindowPos3dARB(x, y, z)
}

WindowPos3dvARB :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos3dvARB(p)
}

WindowPos3fARB :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewWindowPos3fARB(x, y, z)
}

WindowPos3fvARB :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos3fvARB(p)
}

WindowPos3iARB :: #force_inline proc "contextless" (x: GLint, y: GLint, z: GLint) {
    __glewWindowPos3iARB(x, y, z)
}

WindowPos3ivARB :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos3ivARB(p)
}

WindowPos3sARB :: #force_inline proc "contextless" (x: GLshort, y: GLshort, z: GLshort) {
    __glewWindowPos3sARB(x, y, z)
}

WindowPos3svARB :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos3svARB(p)
}

MaxActiveShaderCoresARM :: #force_inline proc "contextless" (count: GLuint) {
    __glewMaxActiveShaderCoresARM(count)
}

DrawBuffersATI :: #force_inline proc "contextless" (n: GLsizei, bufs: [^]GLenum) {
    __glewDrawBuffersATI(n, bufs)
}

DrawElementArrayATI :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei) {
    __glewDrawElementArrayATI(mode, count)
}

DrawRangeElementArrayATI :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei) {
    __glewDrawRangeElementArrayATI(mode, start, end, count)
}

ElementPointerATI :: #force_inline proc "contextless" (type: GLenum, pointer: rawptr) {
    __glewElementPointerATI(type, pointer)
}

GetTexBumpParameterfvATI :: #force_inline proc "contextless" (pname: GLenum, param: ^GLfloat) {
    __glewGetTexBumpParameterfvATI(pname, param)
}

GetTexBumpParameterivATI :: #force_inline proc "contextless" (pname: GLenum, param: ^GLint) {
    __glewGetTexBumpParameterivATI(pname, param)
}

TexBumpParameterfvATI :: #force_inline proc "contextless" (pname: GLenum, param: ^GLfloat) {
    __glewTexBumpParameterfvATI(pname, param)
}

TexBumpParameterivATI :: #force_inline proc "contextless" (pname: GLenum, param: ^GLint) {
    __glewTexBumpParameterivATI(pname, param)
}

AlphaFragmentOp1ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) {
    __glewAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod)
}

AlphaFragmentOp2ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) {
    __glewAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}

AlphaFragmentOp3ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) {
    __glewAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}

BeginFragmentShaderATI :: #force_inline proc "contextless" () {
    __glewBeginFragmentShaderATI()
}

BindFragmentShaderATI :: #force_inline proc "contextless" (id: GLuint) {
    __glewBindFragmentShaderATI(id)
}

ColorFragmentOp1ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint) {
    __glewColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
}

ColorFragmentOp2ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint) {
    __glewColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
}

ColorFragmentOp3ATI :: #force_inline proc "contextless" (op: GLenum, dst: GLuint, dstMask: GLuint, dstMod: GLuint, arg1: GLuint, arg1Rep: GLuint, arg1Mod: GLuint, arg2: GLuint, arg2Rep: GLuint, arg2Mod: GLuint, arg3: GLuint, arg3Rep: GLuint, arg3Mod: GLuint) {
    __glewColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
}

DeleteFragmentShaderATI :: #force_inline proc "contextless" (id: GLuint) {
    __glewDeleteFragmentShaderATI(id)
}

EndFragmentShaderATI :: #force_inline proc "contextless" () {
    __glewEndFragmentShaderATI()
}

GenFragmentShadersATI :: #force_inline proc "contextless" (range: GLuint) -> GLuint {
    return __glewGenFragmentShadersATI(range)
}

PassTexCoordATI :: #force_inline proc "contextless" (dst: GLuint, coord: GLuint, swizzle: GLenum) {
    __glewPassTexCoordATI(dst, coord, swizzle)
}

SampleMapATI :: #force_inline proc "contextless" (dst: GLuint, interp: GLuint, swizzle: GLenum) {
    __glewSampleMapATI(dst, interp, swizzle)
}

SetFragmentShaderConstantATI :: #force_inline proc "contextless" (dst: GLuint, value: ^GLfloat) {
    __glewSetFragmentShaderConstantATI(dst, value)
}

MapObjectBufferATI :: #force_inline proc "contextless" (buffer: GLuint) -> rawptr {
    return __glewMapObjectBufferATI(buffer)
}

UnmapObjectBufferATI :: #force_inline proc "contextless" (buffer: GLuint) {
    __glewUnmapObjectBufferATI(buffer)
}

PNTrianglesfATI :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewPNTrianglesfATI(pname, param)
}

PNTrianglesiATI :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewPNTrianglesiATI(pname, param)
}

StencilFuncSeparateATI :: #force_inline proc "contextless" (frontfunc: GLenum, backfunc: GLenum, ref: GLint, mask: GLuint) {
    __glewStencilFuncSeparateATI(frontfunc, backfunc, ref, mask)
}

StencilOpSeparateATI :: #force_inline proc "contextless" (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) {
    __glewStencilOpSeparateATI(face, sfail, dpfail, dppass)
}

ArrayObjectATI :: #force_inline proc "contextless" (array: GLenum, size: GLint, type: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) {
    __glewArrayObjectATI(array, size, type, stride, buffer, offset)
}

FreeObjectBufferATI :: #force_inline proc "contextless" (buffer: GLuint) {
    __glewFreeObjectBufferATI(buffer)
}

GetArrayObjectfvATI :: #force_inline proc "contextless" (array: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetArrayObjectfvATI(array, pname, params)
}

GetArrayObjectivATI :: #force_inline proc "contextless" (array: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetArrayObjectivATI(array, pname, params)
}

GetObjectBufferfvATI :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetObjectBufferfvATI(buffer, pname, params)
}

GetObjectBufferivATI :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetObjectBufferivATI(buffer, pname, params)
}

GetVariantArrayObjectfvATI :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVariantArrayObjectfvATI(id, pname, params)
}

GetVariantArrayObjectivATI :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVariantArrayObjectivATI(id, pname, params)
}

IsObjectBufferATI :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewIsObjectBufferATI(buffer)
}

NewObjectBufferATI :: #force_inline proc "contextless" (size: GLsizei, pointer: rawptr, usage: GLenum) -> GLuint {
    return __glewNewObjectBufferATI(size, pointer, usage)
}

UpdateObjectBufferATI :: #force_inline proc "contextless" (buffer: GLuint, offset: GLuint, size: GLsizei, pointer: rawptr, preserve: GLenum) {
    __glewUpdateObjectBufferATI(buffer, offset, size, pointer, preserve)
}

VariantArrayObjectATI :: #force_inline proc "contextless" (id: GLuint, type: GLenum, stride: GLsizei, buffer: GLuint, offset: GLuint) {
    __glewVariantArrayObjectATI(id, type, stride, buffer, offset)
}

GetVertexAttribArrayObjectfvATI :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVertexAttribArrayObjectfvATI(index, pname, params)
}

GetVertexAttribArrayObjectivATI :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribArrayObjectivATI(index, pname, params)
}

VertexAttribArrayObjectATI :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, buffer: GLuint, offset: GLuint) {
    __glewVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset)
}

ClientActiveVertexStreamATI :: #force_inline proc "contextless" (stream: GLenum) {
    __glewClientActiveVertexStreamATI(stream)
}

NormalStream3bATI :: #force_inline proc "contextless" (stream: GLenum, x: GLbyte, y: GLbyte, z: GLbyte) {
    __glewNormalStream3bATI(stream, x, y, z)
}

NormalStream3bvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLbyte) {
    __glewNormalStream3bvATI(stream, coords)
}

NormalStream3dATI :: #force_inline proc "contextless" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewNormalStream3dATI(stream, x, y, z)
}

NormalStream3dvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLdouble) {
    __glewNormalStream3dvATI(stream, coords)
}

NormalStream3fATI :: #force_inline proc "contextless" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewNormalStream3fATI(stream, x, y, z)
}

NormalStream3fvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLfloat) {
    __glewNormalStream3fvATI(stream, coords)
}

NormalStream3iATI :: #force_inline proc "contextless" (stream: GLenum, x: GLint, y: GLint, z: GLint) {
    __glewNormalStream3iATI(stream, x, y, z)
}

NormalStream3ivATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLint) {
    __glewNormalStream3ivATI(stream, coords)
}

NormalStream3sATI :: #force_inline proc "contextless" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort) {
    __glewNormalStream3sATI(stream, x, y, z)
}

NormalStream3svATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLshort) {
    __glewNormalStream3svATI(stream, coords)
}

VertexBlendEnvfATI :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewVertexBlendEnvfATI(pname, param)
}

VertexBlendEnviATI :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewVertexBlendEnviATI(pname, param)
}

VertexStream1dATI :: #force_inline proc "contextless" (stream: GLenum, x: GLdouble) {
    __glewVertexStream1dATI(stream, x)
}

VertexStream1dvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLdouble) {
    __glewVertexStream1dvATI(stream, coords)
}

VertexStream1fATI :: #force_inline proc "contextless" (stream: GLenum, x: GLfloat) {
    __glewVertexStream1fATI(stream, x)
}

VertexStream1fvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLfloat) {
    __glewVertexStream1fvATI(stream, coords)
}

VertexStream1iATI :: #force_inline proc "contextless" (stream: GLenum, x: GLint) {
    __glewVertexStream1iATI(stream, x)
}

VertexStream1ivATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLint) {
    __glewVertexStream1ivATI(stream, coords)
}

VertexStream1sATI :: #force_inline proc "contextless" (stream: GLenum, x: GLshort) {
    __glewVertexStream1sATI(stream, x)
}

VertexStream1svATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLshort) {
    __glewVertexStream1svATI(stream, coords)
}

VertexStream2dATI :: #force_inline proc "contextless" (stream: GLenum, x: GLdouble, y: GLdouble) {
    __glewVertexStream2dATI(stream, x, y)
}

VertexStream2dvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLdouble) {
    __glewVertexStream2dvATI(stream, coords)
}

VertexStream2fATI :: #force_inline proc "contextless" (stream: GLenum, x: GLfloat, y: GLfloat) {
    __glewVertexStream2fATI(stream, x, y)
}

VertexStream2fvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLfloat) {
    __glewVertexStream2fvATI(stream, coords)
}

VertexStream2iATI :: #force_inline proc "contextless" (stream: GLenum, x: GLint, y: GLint) {
    __glewVertexStream2iATI(stream, x, y)
}

VertexStream2ivATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLint) {
    __glewVertexStream2ivATI(stream, coords)
}

VertexStream2sATI :: #force_inline proc "contextless" (stream: GLenum, x: GLshort, y: GLshort) {
    __glewVertexStream2sATI(stream, x, y)
}

VertexStream2svATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLshort) {
    __glewVertexStream2svATI(stream, coords)
}

VertexStream3dATI :: #force_inline proc "contextless" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexStream3dATI(stream, x, y, z)
}

VertexStream3dvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLdouble) {
    __glewVertexStream3dvATI(stream, coords)
}

VertexStream3fATI :: #force_inline proc "contextless" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewVertexStream3fATI(stream, x, y, z)
}

VertexStream3fvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLfloat) {
    __glewVertexStream3fvATI(stream, coords)
}

VertexStream3iATI :: #force_inline proc "contextless" (stream: GLenum, x: GLint, y: GLint, z: GLint) {
    __glewVertexStream3iATI(stream, x, y, z)
}

VertexStream3ivATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLint) {
    __glewVertexStream3ivATI(stream, coords)
}

VertexStream3sATI :: #force_inline proc "contextless" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort) {
    __glewVertexStream3sATI(stream, x, y, z)
}

VertexStream3svATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLshort) {
    __glewVertexStream3svATI(stream, coords)
}

VertexStream4dATI :: #force_inline proc "contextless" (stream: GLenum, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexStream4dATI(stream, x, y, z, w)
}

VertexStream4dvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLdouble) {
    __glewVertexStream4dvATI(stream, coords)
}

VertexStream4fATI :: #force_inline proc "contextless" (stream: GLenum, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewVertexStream4fATI(stream, x, y, z, w)
}

VertexStream4fvATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLfloat) {
    __glewVertexStream4fvATI(stream, coords)
}

VertexStream4iATI :: #force_inline proc "contextless" (stream: GLenum, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewVertexStream4iATI(stream, x, y, z, w)
}

VertexStream4ivATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLint) {
    __glewVertexStream4ivATI(stream, coords)
}

VertexStream4sATI :: #force_inline proc "contextless" (stream: GLenum, x: GLshort, y: GLshort, z: GLshort, w: GLshort) {
    __glewVertexStream4sATI(stream, x, y, z, w)
}

VertexStream4svATI :: #force_inline proc "contextless" (stream: GLenum, coords: [^]GLshort) {
    __glewVertexStream4svATI(stream, coords)
}

EGLImageTargetTexStorageEXT :: #force_inline proc "contextless" (target: GLenum, image: GLeglImageOES, attrib_list: ^GLint) {
    __glewEGLImageTargetTexStorageEXT(target, image, attrib_list)
}

EGLImageTargetTextureStorageEXT :: #force_inline proc "contextless" (texture: GLuint, image: GLeglImageOES, attrib_list: ^GLint) {
    __glewEGLImageTargetTextureStorageEXT(texture, image, attrib_list)
}

DrawArraysInstancedBaseInstanceEXT :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint) {
    __glewDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance)
}

DrawElementsInstancedBaseInstanceEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, baseinstance: GLuint) {
    __glewDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance)
}

DrawElementsInstancedBaseVertexBaseInstanceEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint) {
    __glewDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance)
}

GetUniformBufferSizeEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint) -> GLint {
    return __glewGetUniformBufferSizeEXT(program, location)
}

GetUniformOffsetEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint) -> GLintptr {
    return __glewGetUniformOffsetEXT(program, location)
}

UniformBufferEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, buffer: GLuint) {
    __glewUniformBufferEXT(program, location, buffer)
}

BlendColorEXT :: #force_inline proc "contextless" (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) {
    __glewBlendColorEXT(red, green, blue, alpha)
}

BlendEquationSeparateEXT :: #force_inline proc "contextless" (modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateEXT(modeRGB, modeAlpha)
}

BindFragDataLocationIndexedEXT :: #force_inline proc "contextless" (program: GLuint, colorNumber: GLuint, index: GLuint, name: ^GLchar) {
    __glewBindFragDataLocationIndexedEXT(program, colorNumber, index, name)
}

GetFragDataIndexEXT :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetFragDataIndexEXT(program, name)
}

GetProgramResourceLocationIndexEXT :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, name: ^GLchar) -> GLint {
    return __glewGetProgramResourceLocationIndexEXT(program, programInterface, name)
}

BlendFuncSeparateEXT :: #force_inline proc "contextless" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) {
    __glewBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

BlendEquationEXT :: #force_inline proc "contextless" (mode: GLenum) {
    __glewBlendEquationEXT(mode)
}

BufferStorageEXT :: #force_inline proc "contextless" (target: GLenum, size: GLsizeiptr, data: rawptr, flags: GLbitfield) {
    __glewBufferStorageEXT(target, size, data, flags)
}

NamedBufferStorageEXT :: #force_inline proc "contextless" (buffer: GLuint, size: GLsizeiptr, data: rawptr, flags: GLbitfield) {
    __glewNamedBufferStorageEXT(buffer, size, data, flags)
}

ClearTexImageEXT :: #force_inline proc "contextless" (texture: GLuint, level: GLint, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearTexImageEXT(texture, level, format, type, data)
}

ClearTexSubImageEXT :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, data: rawptr) {
    __glewClearTexSubImageEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
}

ClipControlEXT :: #force_inline proc "contextless" (origin: GLenum, depth: GLenum) {
    __glewClipControlEXT(origin, depth)
}

ColorSubTableEXT :: #force_inline proc "contextless" (target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, type: GLenum, data: rawptr) {
    __glewColorSubTableEXT(target, start, count, format, type, data)
}

CopyColorSubTableEXT :: #force_inline proc "contextless" (target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyColorSubTableEXT(target, start, x, y, width)
}

LockArraysEXT :: #force_inline proc "contextless" (first: GLint, count: GLsizei) {
    __glewLockArraysEXT(first, count)
}

UnlockArraysEXT :: #force_inline proc "contextless" () {
    __glewUnlockArraysEXT()
}

ConvolutionFilter1DEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, image: rawptr) {
    __glewConvolutionFilter1DEXT(target, internalformat, width, format, type, image)
}

ConvolutionFilter2DEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, image: rawptr) {
    __glewConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image)
}

ConvolutionParameterfEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfloat) {
    __glewConvolutionParameterfEXT(target, pname, param)
}

ConvolutionParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewConvolutionParameterfvEXT(target, pname, params)
}

ConvolutionParameteriEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewConvolutionParameteriEXT(target, pname, param)
}

ConvolutionParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewConvolutionParameterivEXT(target, pname, params)
}

CopyConvolutionFilter1DEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyConvolutionFilter1DEXT(target, internalformat, x, y, width)
}

CopyConvolutionFilter2DEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height)
}

GetConvolutionFilterEXT :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, image: rawptr) {
    __glewGetConvolutionFilterEXT(target, format, type, image)
}

GetConvolutionParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetConvolutionParameterfvEXT(target, pname, params)
}

GetConvolutionParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetConvolutionParameterivEXT(target, pname, params)
}

GetSeparableFilterEXT :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, row: rawptr, column: rawptr, span: rawptr) {
    __glewGetSeparableFilterEXT(target, format, type, row, column, span)
}

SeparableFilter2DEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, row: rawptr, column: rawptr) {
    __glewSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column)
}

BinormalPointerEXT :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewBinormalPointerEXT(type, stride, pointer)
}

TangentPointerEXT :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewTangentPointerEXT(type, stride, pointer)
}

CopyImageSubDataEXT :: #force_inline proc "contextless" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) {
    __glewCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

CopyTexImage1DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) {
    __glewCopyTexImage1DEXT(target, level, internalformat, x, y, width, border)
}

CopyTexImage2DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) {
    __glewCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border)
}

CopyTexSubImage1DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyTexSubImage1DEXT(target, level, xoffset, x, y, width)
}

CopyTexSubImage2DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height)
}

CopyTexSubImage3DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

CullParameterdvEXT :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLdouble) {
    __glewCullParameterdvEXT(pname, params)
}

CullParameterfvEXT :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewCullParameterfvEXT(pname, params)
}

GetObjectLabelEXT :: #force_inline proc "contextless" (type: GLenum, object: GLuint, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar) {
    __glewGetObjectLabelEXT(type, object, bufSize, length, label)
}

LabelObjectEXT :: #force_inline proc "contextless" (type: GLenum, object: GLuint, length: GLsizei, label: ^GLchar) {
    __glewLabelObjectEXT(type, object, length, label)
}

InsertEventMarkerEXT :: #force_inline proc "contextless" (length: GLsizei, marker: ^GLchar) {
    __glewInsertEventMarkerEXT(length, marker)
}

PopGroupMarkerEXT :: #force_inline proc "contextless" () {
    __glewPopGroupMarkerEXT()
}

PushGroupMarkerEXT :: #force_inline proc "contextless" (length: GLsizei, marker: ^GLchar) {
    __glewPushGroupMarkerEXT(length, marker)
}

DepthBoundsEXT :: #force_inline proc "contextless" (zmin: GLclampd, zmax: GLclampd) {
    __glewDepthBoundsEXT(zmin, zmax)
}

BindMultiTextureEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, texture: GLuint) {
    __glewBindMultiTextureEXT(texunit, target, texture)
}

CheckNamedFramebufferStatusEXT :: #force_inline proc "contextless" (framebuffer: GLuint, target: GLenum) -> GLenum {
    return __glewCheckNamedFramebufferStatusEXT(framebuffer, target)
}

ClientAttribDefaultEXT :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewClientAttribDefaultEXT(mask)
}

CompressedMultiTexImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, data)
}

CompressedMultiTexImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, data)
}

CompressedMultiTexImage3DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedMultiTexSubImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, data)
}

CompressedMultiTexSubImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

CompressedMultiTexSubImage3DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

CompressedTextureImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, data)
}

CompressedTextureImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, data)
}

CompressedTextureImage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedTextureSubImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, data)
}

CompressedTextureSubImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, data)
}

CompressedTextureSubImage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

CopyMultiTexImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) {
    __glewCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border)
}

CopyMultiTexImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) {
    __glewCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border)
}

CopyMultiTexSubImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width)
}

CopyMultiTexSubImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height)
}

CopyMultiTexSubImage3DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

CopyTextureImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) {
    __glewCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border)
}

CopyTextureImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) {
    __glewCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border)
}

CopyTextureSubImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width)
}

CopyTextureSubImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height)
}

CopyTextureSubImage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

DisableClientStateIndexedEXT :: #force_inline proc "contextless" (array: GLenum, index: GLuint) {
    __glewDisableClientStateIndexedEXT(array, index)
}

DisableClientStateiEXT :: #force_inline proc "contextless" (array: GLenum, index: GLuint) {
    __glewDisableClientStateiEXT(array, index)
}

DisableVertexArrayAttribEXT :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint) {
    __glewDisableVertexArrayAttribEXT(vaobj, index)
}

DisableVertexArrayEXT :: #force_inline proc "contextless" (vaobj: GLuint, array: GLenum) {
    __glewDisableVertexArrayEXT(vaobj, array)
}

EnableClientStateIndexedEXT :: #force_inline proc "contextless" (array: GLenum, index: GLuint) {
    __glewEnableClientStateIndexedEXT(array, index)
}

EnableClientStateiEXT :: #force_inline proc "contextless" (array: GLenum, index: GLuint) {
    __glewEnableClientStateiEXT(array, index)
}

EnableVertexArrayAttribEXT :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint) {
    __glewEnableVertexArrayAttribEXT(vaobj, index)
}

EnableVertexArrayEXT :: #force_inline proc "contextless" (vaobj: GLuint, array: GLenum) {
    __glewEnableVertexArrayEXT(vaobj, array)
}

FlushMappedNamedBufferRangeEXT :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) {
    __glewFlushMappedNamedBufferRangeEXT(buffer, offset, length)
}

FramebufferDrawBufferEXT :: #force_inline proc "contextless" (framebuffer: GLuint, mode: GLenum) {
    __glewFramebufferDrawBufferEXT(framebuffer, mode)
}

FramebufferDrawBuffersEXT :: #force_inline proc "contextless" (framebuffer: GLuint, n: GLsizei, bufs: [^]GLenum) {
    __glewFramebufferDrawBuffersEXT(framebuffer, n, bufs)
}

FramebufferReadBufferEXT :: #force_inline proc "contextless" (framebuffer: GLuint, mode: GLenum) {
    __glewFramebufferReadBufferEXT(framebuffer, mode)
}

GenerateMultiTexMipmapEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum) {
    __glewGenerateMultiTexMipmapEXT(texunit, target)
}

GenerateTextureMipmapEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum) {
    __glewGenerateTextureMipmapEXT(texture, target)
}

GetCompressedMultiTexImageEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, img: rawptr) {
    __glewGetCompressedMultiTexImageEXT(texunit, target, level, img)
}

GetCompressedTextureImageEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, img: rawptr) {
    __glewGetCompressedTextureImageEXT(texture, target, level, img)
}

GetDoubleIndexedvEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewGetDoubleIndexedvEXT(target, index, params)
}

GetDoublei_vEXT :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewGetDoublei_vEXT(pname, index, params)
}

GetFloatIndexedvEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewGetFloatIndexedvEXT(target, index, params)
}

GetFloati_vEXT :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewGetFloati_vEXT(pname, index, params)
}

GetFramebufferParameterivEXT :: #force_inline proc "contextless" (framebuffer: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetFramebufferParameterivEXT(framebuffer, pname, param)
}

GetMultiTexEnvfvEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMultiTexEnvfvEXT(texunit, target, pname, params)
}

GetMultiTexEnvivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMultiTexEnvivEXT(texunit, target, pname, params)
}

GetMultiTexGendvEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLdouble) {
    __glewGetMultiTexGendvEXT(texunit, coord, pname, params)
}

GetMultiTexGenfvEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMultiTexGenfvEXT(texunit, coord, pname, params)
}

GetMultiTexGenivEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMultiTexGenivEXT(texunit, coord, pname, params)
}

GetMultiTexImageEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewGetMultiTexImageEXT(texunit, target, level, format, type, pixels)
}

GetMultiTexLevelParameterfvEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: [^]GLfloat) {
    __glewGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params)
}

GetMultiTexLevelParameterivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: [^]GLint) {
    __glewGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params)
}

GetMultiTexParameterIivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMultiTexParameterIivEXT(texunit, target, pname, params)
}

GetMultiTexParameterIuivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewGetMultiTexParameterIuivEXT(texunit, target, pname, params)
}

GetMultiTexParameterfvEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMultiTexParameterfvEXT(texunit, target, pname, params)
}

GetMultiTexParameterivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMultiTexParameterivEXT(texunit, target, pname, params)
}

GetNamedBufferParameterivEXT :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetNamedBufferParameterivEXT(buffer, pname, params)
}

GetNamedBufferPointervEXT :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]rawptr) {
    __glewGetNamedBufferPointervEXT(buffer, pname, params)
}

GetNamedBufferSubDataEXT :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewGetNamedBufferSubDataEXT(buffer, offset, size, data)
}

GetNamedFramebufferAttachmentParameterivEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params)
}

GetNamedProgramLocalParameterIivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLint) {
    __glewGetNamedProgramLocalParameterIivEXT(program, target, index, params)
}

GetNamedProgramLocalParameterIuivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLuint) {
    __glewGetNamedProgramLocalParameterIuivEXT(program, target, index, params)
}

GetNamedProgramLocalParameterdvEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewGetNamedProgramLocalParameterdvEXT(program, target, index, params)
}

GetNamedProgramLocalParameterfvEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewGetNamedProgramLocalParameterfvEXT(program, target, index, params)
}

GetNamedProgramStringEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, pname: GLenum, string_: rawptr) {
    __glewGetNamedProgramStringEXT(program, target, pname, string_)
}

GetNamedProgramivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetNamedProgramivEXT(program, target, pname, params)
}

GetNamedRenderbufferParameterivEXT :: #force_inline proc "contextless" (renderbuffer: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params)
}

GetPointerIndexedvEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]rawptr) {
    __glewGetPointerIndexedvEXT(target, index, params)
}

GetPointeri_vEXT :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, params: [^]rawptr) {
    __glewGetPointeri_vEXT(pname, index, params)
}

GetTextureImageEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewGetTextureImageEXT(texture, target, level, format, type, pixels)
}

GetTextureLevelParameterfvEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: [^]GLfloat) {
    __glewGetTextureLevelParameterfvEXT(texture, target, level, pname, params)
}

GetTextureLevelParameterivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: [^]GLint) {
    __glewGetTextureLevelParameterivEXT(texture, target, level, pname, params)
}

GetTextureParameterIivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTextureParameterIivEXT(texture, target, pname, params)
}

GetTextureParameterIuivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewGetTextureParameterIuivEXT(texture, target, pname, params)
}

GetTextureParameterfvEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetTextureParameterfvEXT(texture, target, pname, params)
}

GetTextureParameterivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTextureParameterivEXT(texture, target, pname, params)
}

GetVertexArrayIntegeri_vEXT :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param)
}

GetVertexArrayIntegervEXT :: #force_inline proc "contextless" (vaobj: GLuint, pname: GLenum, param: ^GLint) {
    __glewGetVertexArrayIntegervEXT(vaobj, pname, param)
}

GetVertexArrayPointeri_vEXT :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint, pname: GLenum, param: ^rawptr) {
    __glewGetVertexArrayPointeri_vEXT(vaobj, index, pname, param)
}

GetVertexArrayPointervEXT :: #force_inline proc "contextless" (vaobj: GLuint, pname: GLenum, param: ^rawptr) {
    __glewGetVertexArrayPointervEXT(vaobj, pname, param)
}

MapNamedBufferEXT :: #force_inline proc "contextless" (buffer: GLuint, access: GLenum) -> rawptr {
    return __glewMapNamedBufferEXT(buffer, access)
}

MapNamedBufferRangeEXT :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr {
    return __glewMapNamedBufferRangeEXT(buffer, offset, length, access)
}

MatrixFrustumEXT :: #force_inline proc "contextless" (matrixMode: GLenum, l: GLdouble, r: GLdouble, b: GLdouble, t: GLdouble, n: GLdouble, f: GLdouble) {
    __glewMatrixFrustumEXT(matrixMode, l, r, b, t, n, f)
}

MatrixLoadIdentityEXT :: #force_inline proc "contextless" (matrixMode: GLenum) {
    __glewMatrixLoadIdentityEXT(matrixMode)
}

MatrixLoadTransposedEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLdouble) {
    __glewMatrixLoadTransposedEXT(matrixMode, m)
}

MatrixLoadTransposefEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixLoadTransposefEXT(matrixMode, m)
}

MatrixLoaddEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLdouble) {
    __glewMatrixLoaddEXT(matrixMode, m)
}

MatrixLoadfEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixLoadfEXT(matrixMode, m)
}

MatrixMultTransposedEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLdouble) {
    __glewMatrixMultTransposedEXT(matrixMode, m)
}

MatrixMultTransposefEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixMultTransposefEXT(matrixMode, m)
}

MatrixMultdEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLdouble) {
    __glewMatrixMultdEXT(matrixMode, m)
}

MatrixMultfEXT :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixMultfEXT(matrixMode, m)
}

MatrixOrthoEXT :: #force_inline proc "contextless" (matrixMode: GLenum, l: GLdouble, r: GLdouble, b: GLdouble, t: GLdouble, n: GLdouble, f: GLdouble) {
    __glewMatrixOrthoEXT(matrixMode, l, r, b, t, n, f)
}

MatrixPopEXT :: #force_inline proc "contextless" (matrixMode: GLenum) {
    __glewMatrixPopEXT(matrixMode)
}

MatrixPushEXT :: #force_inline proc "contextless" (matrixMode: GLenum) {
    __glewMatrixPushEXT(matrixMode)
}

MatrixRotatedEXT :: #force_inline proc "contextless" (matrixMode: GLenum, angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewMatrixRotatedEXT(matrixMode, angle, x, y, z)
}

MatrixRotatefEXT :: #force_inline proc "contextless" (matrixMode: GLenum, angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewMatrixRotatefEXT(matrixMode, angle, x, y, z)
}

MatrixScaledEXT :: #force_inline proc "contextless" (matrixMode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewMatrixScaledEXT(matrixMode, x, y, z)
}

MatrixScalefEXT :: #force_inline proc "contextless" (matrixMode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewMatrixScalefEXT(matrixMode, x, y, z)
}

MatrixTranslatedEXT :: #force_inline proc "contextless" (matrixMode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewMatrixTranslatedEXT(matrixMode, x, y, z)
}

MatrixTranslatefEXT :: #force_inline proc "contextless" (matrixMode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewMatrixTranslatefEXT(matrixMode, x, y, z)
}

MultiTexBufferEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, internalformat: GLenum, buffer: GLuint) {
    __glewMultiTexBufferEXT(texunit, target, internalformat, buffer)
}

MultiTexCoordPointerEXT :: #force_inline proc "contextless" (texunit: GLenum, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewMultiTexCoordPointerEXT(texunit, size, type, stride, pointer)
}

MultiTexEnvfEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) {
    __glewMultiTexEnvfEXT(texunit, target, pname, param)
}

MultiTexEnvfvEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewMultiTexEnvfvEXT(texunit, target, pname, params)
}

MultiTexEnviEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) {
    __glewMultiTexEnviEXT(texunit, target, pname, param)
}

MultiTexEnvivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewMultiTexEnvivEXT(texunit, target, pname, params)
}

MultiTexGendEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLdouble) {
    __glewMultiTexGendEXT(texunit, coord, pname, param)
}

MultiTexGendvEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLdouble) {
    __glewMultiTexGendvEXT(texunit, coord, pname, params)
}

MultiTexGenfEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLfloat) {
    __glewMultiTexGenfEXT(texunit, coord, pname, param)
}

MultiTexGenfvEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewMultiTexGenfvEXT(texunit, coord, pname, params)
}

MultiTexGeniEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, param: GLint) {
    __glewMultiTexGeniEXT(texunit, coord, pname, param)
}

MultiTexGenivEXT :: #force_inline proc "contextless" (texunit: GLenum, coord: GLenum, pname: GLenum, params: [^]GLint) {
    __glewMultiTexGenivEXT(texunit, coord, pname, params)
}

MultiTexImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels)
}

MultiTexImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels)
}

MultiTexImage3DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
}

MultiTexParameterIivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewMultiTexParameterIivEXT(texunit, target, pname, params)
}

MultiTexParameterIuivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewMultiTexParameterIuivEXT(texunit, target, pname, params)
}

MultiTexParameterfEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat) {
    __glewMultiTexParameterfEXT(texunit, target, pname, param)
}

MultiTexParameterfvEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: ^GLfloat) {
    __glewMultiTexParameterfvEXT(texunit, target, pname, param)
}

MultiTexParameteriEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: GLint) {
    __glewMultiTexParameteriEXT(texunit, target, pname, param)
}

MultiTexParameterivEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, pname: GLenum, param: ^GLint) {
    __glewMultiTexParameterivEXT(texunit, target, pname, param)
}

MultiTexRenderbufferEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, renderbuffer: GLuint) {
    __glewMultiTexRenderbufferEXT(texunit, target, renderbuffer)
}

MultiTexSubImage1DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels)
}

MultiTexSubImage2DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
}

MultiTexSubImage3DEXT :: #force_inline proc "contextless" (texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

NamedBufferDataEXT :: #force_inline proc "contextless" (buffer: GLuint, size: GLsizeiptr, data: rawptr, usage: GLenum) {
    __glewNamedBufferDataEXT(buffer, size, data, usage)
}

NamedBufferSubDataEXT :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewNamedBufferSubDataEXT(buffer, offset, size, data)
}

NamedCopyBufferSubDataEXT :: #force_inline proc "contextless" (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) {
    __glewNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size)
}

NamedFramebufferRenderbufferEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) {
    __glewNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer)
}

NamedFramebufferTexture1DEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level)
}

NamedFramebufferTexture2DEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level)
}

NamedFramebufferTexture3DEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) {
    __glewNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset)
}

NamedFramebufferTextureEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) {
    __glewNamedFramebufferTextureEXT(framebuffer, attachment, texture, level)
}

NamedFramebufferTextureFaceEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) {
    __glewNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face)
}

NamedFramebufferTextureLayerEXT :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer)
}

NamedProgramLocalParameter4dEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w)
}

NamedProgramLocalParameter4dvEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewNamedProgramLocalParameter4dvEXT(program, target, index, params)
}

NamedProgramLocalParameter4fEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w)
}

NamedProgramLocalParameter4fvEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewNamedProgramLocalParameter4fvEXT(program, target, index, params)
}

NamedProgramLocalParameterI4iEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w)
}

NamedProgramLocalParameterI4ivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLint) {
    __glewNamedProgramLocalParameterI4ivEXT(program, target, index, params)
}

NamedProgramLocalParameterI4uiEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) {
    __glewNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w)
}

NamedProgramLocalParameterI4uivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, params: [^]GLuint) {
    __glewNamedProgramLocalParameterI4uivEXT(program, target, index, params)
}

NamedProgramLocalParameters4fvEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat) {
    __glewNamedProgramLocalParameters4fvEXT(program, target, index, count, params)
}

NamedProgramLocalParametersI4ivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint) {
    __glewNamedProgramLocalParametersI4ivEXT(program, target, index, count, params)
}

NamedProgramLocalParametersI4uivEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint) {
    __glewNamedProgramLocalParametersI4uivEXT(program, target, index, count, params)
}

NamedProgramStringEXT :: #force_inline proc "contextless" (program: GLuint, target: GLenum, format: GLenum, len: GLsizei, string_: rawptr) {
    __glewNamedProgramStringEXT(program, target, format, len, string_)
}

NamedRenderbufferStorageEXT :: #force_inline proc "contextless" (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height)
}

NamedRenderbufferStorageMultisampleCoverageEXT :: #force_inline proc "contextless" (renderbuffer: GLuint, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
}

NamedRenderbufferStorageMultisampleEXT :: #force_inline proc "contextless" (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height)
}

ProgramUniform1fEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLfloat) {
    __glewProgramUniform1fEXT(program, location, v0)
}

ProgramUniform1fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform1fvEXT(program, location, count, value)
}

ProgramUniform1iEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLint) {
    __glewProgramUniform1iEXT(program, location, v0)
}

ProgramUniform1ivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform1ivEXT(program, location, count, value)
}

ProgramUniform1uiEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLuint) {
    __glewProgramUniform1uiEXT(program, location, v0)
}

ProgramUniform1uivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform1uivEXT(program, location, count, value)
}

ProgramUniform2fEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) {
    __glewProgramUniform2fEXT(program, location, v0, v1)
}

ProgramUniform2fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform2fvEXT(program, location, count, value)
}

ProgramUniform2iEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLint, v1: GLint) {
    __glewProgramUniform2iEXT(program, location, v0, v1)
}

ProgramUniform2ivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform2ivEXT(program, location, count, value)
}

ProgramUniform2uiEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint) {
    __glewProgramUniform2uiEXT(program, location, v0, v1)
}

ProgramUniform2uivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform2uivEXT(program, location, count, value)
}

ProgramUniform3fEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) {
    __glewProgramUniform3fEXT(program, location, v0, v1, v2)
}

ProgramUniform3fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform3fvEXT(program, location, count, value)
}

ProgramUniform3iEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) {
    __glewProgramUniform3iEXT(program, location, v0, v1, v2)
}

ProgramUniform3ivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform3ivEXT(program, location, count, value)
}

ProgramUniform3uiEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) {
    __glewProgramUniform3uiEXT(program, location, v0, v1, v2)
}

ProgramUniform3uivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform3uivEXT(program, location, count, value)
}

ProgramUniform4fEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) {
    __glewProgramUniform4fEXT(program, location, v0, v1, v2, v3)
}

ProgramUniform4fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLfloat) {
    __glewProgramUniform4fvEXT(program, location, count, value)
}

ProgramUniform4iEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) {
    __glewProgramUniform4iEXT(program, location, v0, v1, v2, v3)
}

ProgramUniform4ivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint) {
    __glewProgramUniform4ivEXT(program, location, count, value)
}

ProgramUniform4uiEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) {
    __glewProgramUniform4uiEXT(program, location, v0, v1, v2, v3)
}

ProgramUniform4uivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint) {
    __glewProgramUniform4uivEXT(program, location, count, value)
}

ProgramUniformMatrix2fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix2x3fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix2x4fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix3fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix3x2fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix3x4fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix4fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix4x2fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value)
}

ProgramUniformMatrix4x3fvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value)
}

PushClientAttribDefaultEXT :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewPushClientAttribDefaultEXT(mask)
}

TextureBufferEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint) {
    __glewTextureBufferEXT(texture, target, internalformat, buffer)
}

TextureImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels)
}

TextureImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels)
}

TextureImage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
}

TextureParameterIivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewTextureParameterIivEXT(texture, target, pname, params)
}

TextureParameterIuivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewTextureParameterIuivEXT(texture, target, pname, params)
}

TextureParameterfEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, param: GLfloat) {
    __glewTextureParameterfEXT(texture, target, pname, param)
}

TextureParameterfvEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, param: ^GLfloat) {
    __glewTextureParameterfvEXT(texture, target, pname, param)
}

TextureParameteriEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, param: GLint) {
    __glewTextureParameteriEXT(texture, target, pname, param)
}

TextureParameterivEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, pname: GLenum, param: ^GLint) {
    __glewTextureParameterivEXT(texture, target, pname, param)
}

TextureRenderbufferEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, renderbuffer: GLuint) {
    __glewTextureRenderbufferEXT(texture, target, renderbuffer)
}

TextureSubImage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels)
}

TextureSubImage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
}

TextureSubImage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

UnmapNamedBufferEXT :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewUnmapNamedBufferEXT(buffer)
}

VertexArrayColorOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

VertexArrayEdgeFlagOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset)
}

VertexArrayFogCoordOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset)
}

VertexArrayIndexOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset)
}

VertexArrayMultiTexCoordOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, texunit: GLenum, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset)
}

VertexArrayNormalOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset)
}

VertexArraySecondaryColorOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

VertexArrayTexCoordOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

VertexArrayVertexAttribDivisorEXT :: #force_inline proc "contextless" (vaobj: GLuint, index: GLuint, divisor: GLuint) {
    __glewVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor)
}

VertexArrayVertexAttribIOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}

VertexArrayVertexAttribOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset)
}

VertexArrayVertexOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset)
}

DiscardFramebufferEXT :: #force_inline proc "contextless" (target: GLenum, numAttachments: GLsizei, attachments: [^]GLenum) {
    __glewDiscardFramebufferEXT(target, numAttachments, attachments)
}

BeginQueryEXT :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBeginQueryEXT(target, id)
}

DeleteQueriesEXT :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteQueriesEXT(n, ids)
}

EndQueryEXT :: #force_inline proc "contextless" (target: GLenum) {
    __glewEndQueryEXT(target)
}

GenQueriesEXT :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenQueriesEXT(n, ids)
}

GetInteger64vEXT :: #force_inline proc "contextless" (pname: GLenum, data: ^GLint64) {
    __glewGetInteger64vEXT(pname, data)
}

GetQueryObjectivEXT :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetQueryObjectivEXT(id, pname, params)
}

GetQueryObjectuivEXT :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetQueryObjectuivEXT(id, pname, params)
}

GetQueryivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetQueryivEXT(target, pname, params)
}

IsQueryEXT :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsQueryEXT(id)
}

QueryCounterEXT :: #force_inline proc "contextless" (id: GLuint, target: GLenum) {
    __glewQueryCounterEXT(id, target)
}

DrawBuffersEXT :: #force_inline proc "contextless" (n: GLsizei, bufs: [^]GLenum) {
    __glewDrawBuffersEXT(n, bufs)
}

ColorMaskIndexedEXT :: #force_inline proc "contextless" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) {
    __glewColorMaskIndexedEXT(buf, r, g, b, a)
}

DisableIndexedEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewDisableIndexedEXT(target, index)
}

EnableIndexedEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewEnableIndexedEXT(target, index)
}

GetBooleanIndexedvEXT :: #force_inline proc "contextless" (value: GLenum, index: GLuint, data: ^GLboolean) {
    __glewGetBooleanIndexedvEXT(value, index, data)
}

GetIntegerIndexedvEXT :: #force_inline proc "contextless" (value: GLenum, index: GLuint, data: ^GLint) {
    __glewGetIntegerIndexedvEXT(value, index, data)
}

IsEnabledIndexedEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) -> GLboolean {
    return __glewIsEnabledIndexedEXT(target, index)
}

BlendEquationSeparateiEXT :: #force_inline proc "contextless" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha)
}

BlendEquationiEXT :: #force_inline proc "contextless" (buf: GLuint, mode: GLenum) {
    __glewBlendEquationiEXT(buf, mode)
}

BlendFuncSeparateiEXT :: #force_inline proc "contextless" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) {
    __glewBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

BlendFunciEXT :: #force_inline proc "contextless" (buf: GLuint, src: GLenum, dst: GLenum) {
    __glewBlendFunciEXT(buf, src, dst)
}

ColorMaskiEXT :: #force_inline proc "contextless" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) {
    __glewColorMaskiEXT(buf, r, g, b, a)
}

DisableiEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewDisableiEXT(target, index)
}

EnableiEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewEnableiEXT(target, index)
}

IsEnablediEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint) -> GLboolean {
    return __glewIsEnablediEXT(target, index)
}

DrawElementsBaseVertexEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint) {
    __glewDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex)
}

DrawElementsInstancedBaseVertexEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, instancecount: GLsizei, basevertex: GLint) {
    __glewDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex)
}

DrawRangeElementsBaseVertexEXT :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr, basevertex: GLint) {
    __glewDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex)
}

MultiDrawElementsBaseVertexEXT :: #force_inline proc "contextless" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, drawcount: GLsizei, basevertex: ^GLint) {
    __glewMultiDrawElementsBaseVertexEXT(mode, count, type, indices, drawcount, basevertex)
}

DrawArraysInstancedEXT :: #force_inline proc "contextless" (mode: GLenum, start: GLint, count: GLsizei, primcount: GLsizei) {
    __glewDrawArraysInstancedEXT(mode, start, count, primcount)
}

DrawElementsInstancedEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei) {
    __glewDrawElementsInstancedEXT(mode, count, type, indices, primcount)
}

DrawRangeElementsEXT :: #force_inline proc "contextless" (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: rawptr) {
    __glewDrawRangeElementsEXT(mode, start, end, count, type, indices)
}

DrawTransformFeedbackEXT :: #force_inline proc "contextless" (mode: GLenum, id: GLuint) {
    __glewDrawTransformFeedbackEXT(mode, id)
}

DrawTransformFeedbackInstancedEXT :: #force_inline proc "contextless" (mode: GLenum, id: GLuint, instancecount: GLsizei) {
    __glewDrawTransformFeedbackInstancedEXT(mode, id, instancecount)
}

BufferStorageExternalEXT :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr, clientBuffer: GLeglClientBufferEXT, flags: GLbitfield) {
    __glewBufferStorageExternalEXT(target, offset, size, clientBuffer, flags)
}

NamedBufferStorageExternalEXT :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, clientBuffer: GLeglClientBufferEXT, flags: GLbitfield) {
    __glewNamedBufferStorageExternalEXT(buffer, offset, size, clientBuffer, flags)
}

FogCoordPointerEXT :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewFogCoordPointerEXT(type, stride, pointer)
}

FogCoorddEXT :: #force_inline proc "contextless" (coord: GLdouble) {
    __glewFogCoorddEXT(coord)
}

FogCoorddvEXT :: #force_inline proc "contextless" (coord: ^GLdouble) {
    __glewFogCoorddvEXT(coord)
}

FogCoordfEXT :: #force_inline proc "contextless" (coord: GLfloat) {
    __glewFogCoordfEXT(coord)
}

FogCoordfvEXT :: #force_inline proc "contextless" (coord: ^GLfloat) {
    __glewFogCoordfvEXT(coord)
}

FragmentColorMaterialEXT :: #force_inline proc "contextless" (face: GLenum, mode: GLenum) {
    __glewFragmentColorMaterialEXT(face, mode)
}

FragmentLightModelfEXT :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewFragmentLightModelfEXT(pname, param)
}

FragmentLightModelfvEXT :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewFragmentLightModelfvEXT(pname, params)
}

FragmentLightModeliEXT :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewFragmentLightModeliEXT(pname, param)
}

FragmentLightModelivEXT :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewFragmentLightModelivEXT(pname, params)
}

FragmentLightfEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, param: GLfloat) {
    __glewFragmentLightfEXT(light, pname, param)
}

FragmentLightfvEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewFragmentLightfvEXT(light, pname, params)
}

FragmentLightiEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, param: GLint) {
    __glewFragmentLightiEXT(light, pname, param)
}

FragmentLightivEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLint) {
    __glewFragmentLightivEXT(light, pname, params)
}

FragmentMaterialfEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, param: GLfloat) {
    __glewFragmentMaterialfEXT(face, pname, param)
}

FragmentMaterialfvEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewFragmentMaterialfvEXT(face, pname, params)
}

FragmentMaterialiEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, param: GLint) {
    __glewFragmentMaterialiEXT(face, pname, param)
}

FragmentMaterialivEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLint) {
    __glewFragmentMaterialivEXT(face, pname, params)
}

GetFragmentLightfvEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetFragmentLightfvEXT(light, pname, params)
}

GetFragmentLightivEXT :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFragmentLightivEXT(light, pname, params)
}

GetFragmentMaterialfvEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetFragmentMaterialfvEXT(face, pname, params)
}

GetFragmentMaterialivEXT :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFragmentMaterialivEXT(face, pname, params)
}

LightEnviEXT :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewLightEnviEXT(pname, param)
}

BlitFramebufferEXT :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

BlitFramebufferLayerEXT :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, srcLayer: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, dstLayer: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebufferLayerEXT(srcX0, srcY0, srcX1, srcY1, srcLayer, dstX0, dstY0, dstX1, dstY1, dstLayer, mask, filter)
}

BlitFramebufferLayersEXT :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebufferLayersEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

RenderbufferStorageMultisampleEXT :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height)
}

BindFramebufferEXT :: #force_inline proc "contextless" (target: GLenum, framebuffer: GLuint) {
    __glewBindFramebufferEXT(target, framebuffer)
}

BindRenderbufferEXT :: #force_inline proc "contextless" (target: GLenum, renderbuffer: GLuint) {
    __glewBindRenderbufferEXT(target, renderbuffer)
}

CheckFramebufferStatusEXT :: #force_inline proc "contextless" (target: GLenum) -> GLenum {
    return __glewCheckFramebufferStatusEXT(target)
}

DeleteFramebuffersEXT :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewDeleteFramebuffersEXT(n, framebuffers)
}

DeleteRenderbuffersEXT :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewDeleteRenderbuffersEXT(n, renderbuffers)
}

FramebufferRenderbufferEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) {
    __glewFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer)
}

FramebufferTexture1DEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture1DEXT(target, attachment, textarget, texture, level)
}

FramebufferTexture2DEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture2DEXT(target, attachment, textarget, texture, level)
}

FramebufferTexture3DEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) {
    __glewFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset)
}

GenFramebuffersEXT :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewGenFramebuffersEXT(n, framebuffers)
}

GenRenderbuffersEXT :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewGenRenderbuffersEXT(n, renderbuffers)
}

GenerateMipmapEXT :: #force_inline proc "contextless" (target: GLenum) {
    __glewGenerateMipmapEXT(target)
}

GetFramebufferAttachmentParameterivEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params)
}

GetRenderbufferParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetRenderbufferParameterivEXT(target, pname, params)
}

IsFramebufferEXT :: #force_inline proc "contextless" (framebuffer: GLuint) -> GLboolean {
    return __glewIsFramebufferEXT(framebuffer)
}

IsRenderbufferEXT :: #force_inline proc "contextless" (renderbuffer: GLuint) -> GLboolean {
    return __glewIsRenderbufferEXT(renderbuffer)
}

RenderbufferStorageEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageEXT(target, internalformat, width, height)
}

FramebufferTextureEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTextureEXT(target, attachment, texture, level)
}

FramebufferTextureFaceEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum) {
    __glewFramebufferTextureFaceEXT(target, attachment, texture, level, face)
}

ProgramParameteriEXT :: #force_inline proc "contextless" (program: GLuint, pname: GLenum, value: GLint) {
    __glewProgramParameteriEXT(program, pname, value)
}

ProgramEnvParameters4fvEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat) {
    __glewProgramEnvParameters4fvEXT(target, index, count, params)
}

ProgramLocalParameters4fvEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLfloat) {
    __glewProgramLocalParameters4fvEXT(target, index, count, params)
}

BindFragDataLocationEXT :: #force_inline proc "contextless" (program: GLuint, color: GLuint, name: ^GLchar) {
    __glewBindFragDataLocationEXT(program, color, name)
}

GetFragDataLocationEXT :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetFragDataLocationEXT(program, name)
}

GetUniformuivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLuint) {
    __glewGetUniformuivEXT(program, location, params)
}

GetVertexAttribIivEXT :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribIivEXT(index, pname, params)
}

GetVertexAttribIuivEXT :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetVertexAttribIuivEXT(index, pname, params)
}

Uniform1uiEXT :: #force_inline proc "contextless" (location: GLint, v0: GLuint) {
    __glewUniform1uiEXT(location, v0)
}

Uniform1uivEXT :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform1uivEXT(location, count, value)
}

Uniform2uiEXT :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint) {
    __glewUniform2uiEXT(location, v0, v1)
}

Uniform2uivEXT :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform2uivEXT(location, count, value)
}

Uniform3uiEXT :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) {
    __glewUniform3uiEXT(location, v0, v1, v2)
}

Uniform3uivEXT :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform3uivEXT(location, count, value)
}

Uniform4uiEXT :: #force_inline proc "contextless" (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) {
    __glewUniform4uiEXT(location, v0, v1, v2, v3)
}

Uniform4uivEXT :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint) {
    __glewUniform4uivEXT(location, count, value)
}

VertexAttribI1iEXT :: #force_inline proc "contextless" (index: GLuint, x: GLint) {
    __glewVertexAttribI1iEXT(index, x)
}

VertexAttribI1ivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttribI1ivEXT(index, v)
}

VertexAttribI1uiEXT :: #force_inline proc "contextless" (index: GLuint, x: GLuint) {
    __glewVertexAttribI1uiEXT(index, x)
}

VertexAttribI1uivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttribI1uivEXT(index, v)
}

VertexAttribI2iEXT :: #force_inline proc "contextless" (index: GLuint, x: GLint, y: GLint) {
    __glewVertexAttribI2iEXT(index, x, y)
}

VertexAttribI2ivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttribI2ivEXT(index, v)
}

VertexAttribI2uiEXT :: #force_inline proc "contextless" (index: GLuint, x: GLuint, y: GLuint) {
    __glewVertexAttribI2uiEXT(index, x, y)
}

VertexAttribI2uivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttribI2uivEXT(index, v)
}

VertexAttribI3iEXT :: #force_inline proc "contextless" (index: GLuint, x: GLint, y: GLint, z: GLint) {
    __glewVertexAttribI3iEXT(index, x, y, z)
}

VertexAttribI3ivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttribI3ivEXT(index, v)
}

VertexAttribI3uiEXT :: #force_inline proc "contextless" (index: GLuint, x: GLuint, y: GLuint, z: GLuint) {
    __glewVertexAttribI3uiEXT(index, x, y, z)
}

VertexAttribI3uivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttribI3uivEXT(index, v)
}

VertexAttribI4bvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLbyte) {
    __glewVertexAttribI4bvEXT(index, v)
}

VertexAttribI4iEXT :: #force_inline proc "contextless" (index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewVertexAttribI4iEXT(index, x, y, z, w)
}

VertexAttribI4ivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewVertexAttribI4ivEXT(index, v)
}

VertexAttribI4svEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttribI4svEXT(index, v)
}

VertexAttribI4ubvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttribI4ubvEXT(index, v)
}

VertexAttribI4uiEXT :: #force_inline proc "contextless" (index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) {
    __glewVertexAttribI4uiEXT(index, x, y, z, w)
}

VertexAttribI4uivEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint) {
    __glewVertexAttribI4uivEXT(index, v)
}

VertexAttribI4usvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLushort) {
    __glewVertexAttribI4usvEXT(index, v)
}

VertexAttribIPointerEXT :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribIPointerEXT(index, size, type, stride, pointer)
}

GetHistogramEXT :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr) {
    __glewGetHistogramEXT(target, reset, format, type, values)
}

GetHistogramParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetHistogramParameterfvEXT(target, pname, params)
}

GetHistogramParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetHistogramParameterivEXT(target, pname, params)
}

GetMinmaxEXT :: #force_inline proc "contextless" (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, values: rawptr) {
    __glewGetMinmaxEXT(target, reset, format, type, values)
}

GetMinmaxParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMinmaxParameterfvEXT(target, pname, params)
}

GetMinmaxParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMinmaxParameterivEXT(target, pname, params)
}

HistogramEXT :: #force_inline proc "contextless" (target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) {
    __glewHistogramEXT(target, width, internalformat, sink)
}

MinmaxEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, sink: GLboolean) {
    __glewMinmaxEXT(target, internalformat, sink)
}

ResetHistogramEXT :: #force_inline proc "contextless" (target: GLenum) {
    __glewResetHistogramEXT(target)
}

ResetMinmaxEXT :: #force_inline proc "contextless" (target: GLenum) {
    __glewResetMinmaxEXT(target)
}

IndexFuncEXT :: #force_inline proc "contextless" (func: GLenum, ref: GLfloat) {
    __glewIndexFuncEXT(func, ref)
}

IndexMaterialEXT :: #force_inline proc "contextless" (face: GLenum, mode: GLenum) {
    __glewIndexMaterialEXT(face, mode)
}

VertexAttribDivisorEXT :: #force_inline proc "contextless" (index: GLuint, divisor: GLuint) {
    __glewVertexAttribDivisorEXT(index, divisor)
}

ApplyTextureEXT :: #force_inline proc "contextless" (mode: GLenum) {
    __glewApplyTextureEXT(mode)
}

TextureLightEXT :: #force_inline proc "contextless" (pname: GLenum) {
    __glewTextureLightEXT(pname)
}

TextureMaterialEXT :: #force_inline proc "contextless" (face: GLenum, mode: GLenum) {
    __glewTextureMaterialEXT(face, mode)
}

FlushMappedBufferRangeEXT :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, length: GLsizeiptr) {
    __glewFlushMappedBufferRangeEXT(target, offset, length)
}

MapBufferRangeEXT :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> rawptr {
    return __glewMapBufferRangeEXT(target, offset, length, access)
}

BufferStorageMemEXT :: #force_inline proc "contextless" (target: GLenum, size: GLsizeiptr, memory: GLuint, offset: GLuint64) {
    __glewBufferStorageMemEXT(target, size, memory, offset)
}

CreateMemoryObjectsEXT :: #force_inline proc "contextless" (n: GLsizei, memoryObjects: [^]GLuint) {
    __glewCreateMemoryObjectsEXT(n, memoryObjects)
}

DeleteMemoryObjectsEXT :: #force_inline proc "contextless" (n: GLsizei, memoryObjects: [^]GLuint) {
    __glewDeleteMemoryObjectsEXT(n, memoryObjects)
}

GetMemoryObjectParameterivEXT :: #force_inline proc "contextless" (memoryObject: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetMemoryObjectParameterivEXT(memoryObject, pname, params)
}

GetUnsignedBytei_vEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLubyte) {
    __glewGetUnsignedBytei_vEXT(target, index, data)
}

GetUnsignedBytevEXT :: #force_inline proc "contextless" (pname: GLenum, data: ^GLubyte) {
    __glewGetUnsignedBytevEXT(pname, data)
}

IsMemoryObjectEXT :: #force_inline proc "contextless" (memoryObject: GLuint) -> GLboolean {
    return __glewIsMemoryObjectEXT(memoryObject)
}

MemoryObjectParameterivEXT :: #force_inline proc "contextless" (memoryObject: GLuint, pname: GLenum, params: [^]GLint) {
    __glewMemoryObjectParameterivEXT(memoryObject, pname, params)
}

NamedBufferStorageMemEXT :: #force_inline proc "contextless" (buffer: GLuint, size: GLsizeiptr, memory: GLuint, offset: GLuint64) {
    __glewNamedBufferStorageMemEXT(buffer, size, memory, offset)
}

TexStorageMem1DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTexStorageMem1DEXT(target, levels, internalFormat, width, memory, offset)
}

TexStorageMem2DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTexStorageMem2DEXT(target, levels, internalFormat, width, height, memory, offset)
}

TexStorageMem2DMultisampleEXT :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64) {
    __glewTexStorageMem2DMultisampleEXT(target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset)
}

TexStorageMem3DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTexStorageMem3DEXT(target, levels, internalFormat, width, height, depth, memory, offset)
}

TexStorageMem3DMultisampleEXT :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64) {
    __glewTexStorageMem3DMultisampleEXT(target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset)
}

TextureStorageMem1DEXT :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTextureStorageMem1DEXT(texture, levels, internalFormat, width, memory, offset)
}

TextureStorageMem2DEXT :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTextureStorageMem2DEXT(texture, levels, internalFormat, width, height, memory, offset)
}

TextureStorageMem2DMultisampleEXT :: #force_inline proc "contextless" (texture: GLuint, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64) {
    __glewTextureStorageMem2DMultisampleEXT(texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset)
}

TextureStorageMem3DEXT :: #force_inline proc "contextless" (texture: GLuint, levels: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64) {
    __glewTextureStorageMem3DEXT(texture, levels, internalFormat, width, height, depth, memory, offset)
}

TextureStorageMem3DMultisampleEXT :: #force_inline proc "contextless" (texture: GLuint, samples: GLsizei, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean, memory: GLuint, offset: GLuint64) {
    __glewTextureStorageMem3DMultisampleEXT(texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset)
}

ImportMemoryFdEXT :: #force_inline proc "contextless" (memory: GLuint, size: GLuint64, handleType: GLenum, fd: GLint) {
    __glewImportMemoryFdEXT(memory, size, handleType, fd)
}

ImportMemoryWin32HandleEXT :: #force_inline proc "contextless" (memory: GLuint, size: GLuint64, handleType: GLenum, handle: rawptr) {
    __glewImportMemoryWin32HandleEXT(memory, size, handleType, handle)
}

ImportMemoryWin32NameEXT :: #force_inline proc "contextless" (memory: GLuint, size: GLuint64, handleType: GLenum, name: rawptr) {
    __glewImportMemoryWin32NameEXT(memory, size, handleType, name)
}

MultiDrawArraysEXT :: #force_inline proc "contextless" (mode: GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei) {
    __glewMultiDrawArraysEXT(mode, first, count, primcount)
}

MultiDrawElementsEXT :: #force_inline proc "contextless" (mode: GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, primcount: GLsizei) {
    __glewMultiDrawElementsEXT(mode, count, type, indices, primcount)
}

MultiDrawArraysIndirectEXT :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, drawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride)
}

MultiDrawElementsIndirectEXT :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, drawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride)
}

SampleMaskEXT :: #force_inline proc "contextless" (value: GLclampf, invert: GLboolean) {
    __glewSampleMaskEXT(value, invert)
}

SamplePatternEXT :: #force_inline proc "contextless" (pattern: GLenum) {
    __glewSamplePatternEXT(pattern)
}

FramebufferTexture2DMultisampleEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) {
    __glewFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples)
}

DrawBuffersIndexedEXT :: #force_inline proc "contextless" (n: GLint, location: ^GLenum, indices: [^]GLint) {
    __glewDrawBuffersIndexedEXT(n, location, indices)
}

GetIntegeri_vEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLint) {
    __glewGetIntegeri_vEXT(target, index, data)
}

ReadBufferIndexedEXT :: #force_inline proc "contextless" (src: GLenum, index: GLint) {
    __glewReadBufferIndexedEXT(src, index)
}

ColorTableEXT :: #force_inline proc "contextless" (target: GLenum, internalFormat: GLenum, width: GLsizei, format: GLenum, type: GLenum, data: rawptr) {
    __glewColorTableEXT(target, internalFormat, width, format, type, data)
}

GetColorTableEXT :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, data: rawptr) {
    __glewGetColorTableEXT(target, format, type, data)
}

GetColorTableParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetColorTableParameterfvEXT(target, pname, params)
}

GetColorTableParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetColorTableParameterivEXT(target, pname, params)
}

GetPixelTransformParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetPixelTransformParameterfvEXT(target, pname, params)
}

GetPixelTransformParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetPixelTransformParameterivEXT(target, pname, params)
}

PixelTransformParameterfEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfloat) {
    __glewPixelTransformParameterfEXT(target, pname, param)
}

PixelTransformParameterfvEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewPixelTransformParameterfvEXT(target, pname, params)
}

PixelTransformParameteriEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewPixelTransformParameteriEXT(target, pname, param)
}

PixelTransformParameterivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewPixelTransformParameterivEXT(target, pname, params)
}

PointParameterfEXT :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewPointParameterfEXT(pname, param)
}

PointParameterfvEXT :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewPointParameterfvEXT(pname, params)
}

PolygonOffsetEXT :: #force_inline proc "contextless" (factor: GLfloat, bias: GLfloat) {
    __glewPolygonOffsetEXT(factor, bias)
}

PolygonOffsetClampEXT :: #force_inline proc "contextless" (factor: GLfloat, units: GLfloat, clamp: GLfloat) {
    __glewPolygonOffsetClampEXT(factor, units, clamp)
}

PrimitiveBoundingBoxEXT :: #force_inline proc "contextless" (minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat) {
    __glewPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
}

ProvokingVertexEXT :: #force_inline proc "contextless" (mode: GLenum) {
    __glewProvokingVertexEXT(mode)
}

CoverageModulationNV :: #force_inline proc "contextless" (components: GLenum) {
    __glewCoverageModulationNV(components)
}

CoverageModulationTableNV :: #force_inline proc "contextless" (n: GLsizei, v: ^GLfloat) {
    __glewCoverageModulationTableNV(n, v)
}

GetCoverageModulationTableNV :: #force_inline proc "contextless" (bufsize: GLsizei, v: ^GLfloat) {
    __glewGetCoverageModulationTableNV(bufsize, v)
}

RasterSamplesEXT :: #force_inline proc "contextless" (samples: GLuint, fixedsamplelocations: GLboolean) {
    __glewRasterSamplesEXT(samples, fixedsamplelocations)
}

GetGraphicsResetStatusEXT :: #force_inline proc "contextless" () -> GLenum {
    return __glewGetGraphicsResetStatusEXT()
}

GetnUniformfvEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat) {
    __glewGetnUniformfvEXT(program, location, bufSize, params)
}

GetnUniformivEXT :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint) {
    __glewGetnUniformivEXT(program, location, bufSize, params)
}

ReadnPixelsEXT :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr) {
    __glewReadnPixelsEXT(x, y, width, height, format, type, bufSize, data)
}

BeginSceneEXT :: #force_inline proc "contextless" () {
    __glewBeginSceneEXT()
}

EndSceneEXT :: #force_inline proc "contextless" () {
    __glewEndSceneEXT()
}

SecondaryColor3bEXT :: #force_inline proc "contextless" (red: GLbyte, green: GLbyte, blue: GLbyte) {
    __glewSecondaryColor3bEXT(red, green, blue)
}

SecondaryColor3bvEXT :: #force_inline proc "contextless" (v: ^GLbyte) {
    __glewSecondaryColor3bvEXT(v)
}

SecondaryColor3dEXT :: #force_inline proc "contextless" (red: GLdouble, green: GLdouble, blue: GLdouble) {
    __glewSecondaryColor3dEXT(red, green, blue)
}

SecondaryColor3dvEXT :: #force_inline proc "contextless" (v: ^GLdouble) {
    __glewSecondaryColor3dvEXT(v)
}

SecondaryColor3fEXT :: #force_inline proc "contextless" (red: GLfloat, green: GLfloat, blue: GLfloat) {
    __glewSecondaryColor3fEXT(red, green, blue)
}

SecondaryColor3fvEXT :: #force_inline proc "contextless" (v: ^GLfloat) {
    __glewSecondaryColor3fvEXT(v)
}

SecondaryColor3iEXT :: #force_inline proc "contextless" (red: GLint, green: GLint, blue: GLint) {
    __glewSecondaryColor3iEXT(red, green, blue)
}

SecondaryColor3ivEXT :: #force_inline proc "contextless" (v: ^GLint) {
    __glewSecondaryColor3ivEXT(v)
}

SecondaryColor3sEXT :: #force_inline proc "contextless" (red: GLshort, green: GLshort, blue: GLshort) {
    __glewSecondaryColor3sEXT(red, green, blue)
}

SecondaryColor3svEXT :: #force_inline proc "contextless" (v: ^GLshort) {
    __glewSecondaryColor3svEXT(v)
}

SecondaryColor3ubEXT :: #force_inline proc "contextless" (red: GLubyte, green: GLubyte, blue: GLubyte) {
    __glewSecondaryColor3ubEXT(red, green, blue)
}

SecondaryColor3ubvEXT :: #force_inline proc "contextless" (v: ^GLubyte) {
    __glewSecondaryColor3ubvEXT(v)
}

SecondaryColor3uiEXT :: #force_inline proc "contextless" (red: GLuint, green: GLuint, blue: GLuint) {
    __glewSecondaryColor3uiEXT(red, green, blue)
}

SecondaryColor3uivEXT :: #force_inline proc "contextless" (v: ^GLuint) {
    __glewSecondaryColor3uivEXT(v)
}

SecondaryColor3usEXT :: #force_inline proc "contextless" (red: GLushort, green: GLushort, blue: GLushort) {
    __glewSecondaryColor3usEXT(red, green, blue)
}

SecondaryColor3usvEXT :: #force_inline proc "contextless" (v: ^GLushort) {
    __glewSecondaryColor3usvEXT(v)
}

SecondaryColorPointerEXT :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewSecondaryColorPointerEXT(size, type, stride, pointer)
}

DeleteSemaphoresEXT :: #force_inline proc "contextless" (n: GLsizei, semaphores: [^]GLuint) {
    __glewDeleteSemaphoresEXT(n, semaphores)
}

GenSemaphoresEXT :: #force_inline proc "contextless" (n: GLsizei, semaphores: [^]GLuint) {
    __glewGenSemaphoresEXT(n, semaphores)
}

GetSemaphoreParameterui64vEXT :: #force_inline proc "contextless" (semaphore: GLuint, pname: GLenum, params: [^]GLuint64) {
    __glewGetSemaphoreParameterui64vEXT(semaphore, pname, params)
}

IsSemaphoreEXT :: #force_inline proc "contextless" (semaphore: GLuint) -> GLboolean {
    return __glewIsSemaphoreEXT(semaphore)
}

SemaphoreParameterui64vEXT :: #force_inline proc "contextless" (semaphore: GLuint, pname: GLenum, params: [^]GLuint64) {
    __glewSemaphoreParameterui64vEXT(semaphore, pname, params)
}

SignalSemaphoreEXT :: #force_inline proc "contextless" (semaphore: GLuint, numBufferBarriers: GLuint, buffers: [^]GLuint, numTextureBarriers: GLuint, textures: [^]GLuint, dstLayouts: [^]GLenum) {
    __glewSignalSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts)
}

WaitSemaphoreEXT :: #force_inline proc "contextless" (semaphore: GLuint, numBufferBarriers: GLuint, buffers: [^]GLuint, numTextureBarriers: GLuint, textures: [^]GLuint, srcLayouts: [^]GLenum) {
    __glewWaitSemaphoreEXT(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts)
}

ImportSemaphoreFdEXT :: #force_inline proc "contextless" (semaphore: GLuint, handleType: GLenum, fd: GLint) {
    __glewImportSemaphoreFdEXT(semaphore, handleType, fd)
}

ImportSemaphoreWin32HandleEXT :: #force_inline proc "contextless" (semaphore: GLuint, handleType: GLenum, handle: rawptr) {
    __glewImportSemaphoreWin32HandleEXT(semaphore, handleType, handle)
}

ImportSemaphoreWin32NameEXT :: #force_inline proc "contextless" (semaphore: GLuint, handleType: GLenum, name: rawptr) {
    __glewImportSemaphoreWin32NameEXT(semaphore, handleType, name)
}

ActiveProgramEXT :: #force_inline proc "contextless" (program: GLuint) {
    __glewActiveProgramEXT(program)
}

CreateShaderProgramEXT :: #force_inline proc "contextless" (type: GLenum, string_: ^GLchar) -> GLuint {
    return __glewCreateShaderProgramEXT(type, string_)
}

UseShaderProgramEXT :: #force_inline proc "contextless" (type: GLenum, program: GLuint) {
    __glewUseShaderProgramEXT(type, program)
}

FramebufferFetchBarrierEXT :: #force_inline proc "contextless" () {
    __glewFramebufferFetchBarrierEXT()
}

BindImageTextureEXT :: #force_inline proc "contextless" (index: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLint) {
    __glewBindImageTextureEXT(index, texture, level, layered, layer, access, format)
}

MemoryBarrierEXT :: #force_inline proc "contextless" (barriers: GLbitfield) {
    __glewMemoryBarrierEXT(barriers)
}

ClearPixelLocalStorageuiEXT :: #force_inline proc "contextless" (offset: GLsizei, n: GLsizei, values: [^]GLuint) {
    __glewClearPixelLocalStorageuiEXT(offset, n, values)
}

FramebufferPixelLocalStorageSizeEXT :: #force_inline proc "contextless" (target: GLuint, size: GLsizei) {
    __glewFramebufferPixelLocalStorageSizeEXT(target, size)
}

GetFramebufferPixelLocalStorageSizeEXT :: #force_inline proc "contextless" (target: GLuint) -> GLsizei {
    return __glewGetFramebufferPixelLocalStorageSizeEXT(target)
}

TexPageCommitmentEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean) {
    __glewTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

TexturePageCommitmentEXT :: #force_inline proc "contextless" (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean) {
    __glewTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
}

ActiveStencilFaceEXT :: #force_inline proc "contextless" (face: GLenum) {
    __glewActiveStencilFaceEXT(face)
}

TexSubImage1DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels)
}

TexSubImage2DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels)
}

TexSubImage3DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

PatchParameteriEXT :: #force_inline proc "contextless" (pname: GLenum, value: GLint) {
    __glewPatchParameteriEXT(pname, value)
}

TexImage3DEXT :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels)
}

FramebufferTextureLayerEXT :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewFramebufferTextureLayerEXT(target, attachment, texture, level, layer)
}

GetSamplerParameterIivEXT :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetSamplerParameterIivEXT(sampler, pname, params)
}

GetSamplerParameterIuivEXT :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetSamplerParameterIuivEXT(sampler, pname, params)
}

SamplerParameterIivEXT :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewSamplerParameterIivEXT(sampler, pname, params)
}

SamplerParameterIuivEXT :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewSamplerParameterIuivEXT(sampler, pname, params)
}

TexBufferEXT :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, buffer: GLuint) {
    __glewTexBufferEXT(target, internalformat, buffer)
}

ClearColorIiEXT :: #force_inline proc "contextless" (red: GLint, green: GLint, blue: GLint, alpha: GLint) {
    __glewClearColorIiEXT(red, green, blue, alpha)
}

ClearColorIuiEXT :: #force_inline proc "contextless" (red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) {
    __glewClearColorIuiEXT(red, green, blue, alpha)
}

GetTexParameterIivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTexParameterIivEXT(target, pname, params)
}

GetTexParameterIuivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewGetTexParameterIuivEXT(target, pname, params)
}

TexParameterIivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewTexParameterIivEXT(target, pname, params)
}

TexParameterIuivEXT :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewTexParameterIuivEXT(target, pname, params)
}

AreTexturesResidentEXT :: #force_inline proc "contextless" (n: GLsizei, textures: [^]GLuint, residences: [^]GLboolean) -> GLboolean {
    return __glewAreTexturesResidentEXT(n, textures, residences)
}

BindTextureEXT :: #force_inline proc "contextless" (target: GLenum, texture: GLuint) {
    __glewBindTextureEXT(target, texture)
}

DeleteTexturesEXT :: #force_inline proc "contextless" (n: GLsizei, textures: [^]GLuint) {
    __glewDeleteTexturesEXT(n, textures)
}

GenTexturesEXT :: #force_inline proc "contextless" (n: GLsizei, textures: [^]GLuint) {
    __glewGenTexturesEXT(n, textures)
}

IsTextureEXT :: #force_inline proc "contextless" (texture: GLuint) -> GLboolean {
    return __glewIsTextureEXT(texture)
}

PrioritizeTexturesEXT :: #force_inline proc "contextless" (n: GLsizei, textures: [^]GLuint, priorities: [^]GLclampf) {
    __glewPrioritizeTexturesEXT(n, textures, priorities)
}

TextureNormalEXT :: #force_inline proc "contextless" (mode: GLenum) {
    __glewTextureNormalEXT(mode)
}

TexStorage1DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) {
    __glewTexStorage1DEXT(target, levels, internalformat, width)
}

TexStorage2DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewTexStorage2DEXT(target, levels, internalformat, width, height)
}

TexStorage3DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewTexStorage3DEXT(target, levels, internalformat, width, height, depth)
}

TextureStorage1DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) {
    __glewTextureStorage1DEXT(texture, target, levels, internalformat, width)
}

TextureStorage2DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewTextureStorage2DEXT(texture, target, levels, internalformat, width, height)
}

TextureStorage3DEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth)
}

TexStorageAttribs2DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, attrib_list: ^GLint) {
    __glewTexStorageAttribs2DEXT(target, levels, internalformat, width, height, attrib_list)
}

TexStorageAttribs3DEXT :: #force_inline proc "contextless" (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, attrib_list: ^GLint) {
    __glewTexStorageAttribs3DEXT(target, levels, internalformat, width, height, depth, attrib_list)
}

TextureViewEXT :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) {
    __glewTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

GetQueryObjecti64vEXT :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint64EXT) {
    __glewGetQueryObjecti64vEXT(id, pname, params)
}

GetQueryObjectui64vEXT :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetQueryObjectui64vEXT(id, pname, params)
}

BeginTransformFeedbackEXT :: #force_inline proc "contextless" (primitiveMode: GLenum) {
    __glewBeginTransformFeedbackEXT(primitiveMode)
}

BindBufferBaseEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint) {
    __glewBindBufferBaseEXT(target, index, buffer)
}

BindBufferOffsetEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) {
    __glewBindBufferOffsetEXT(target, index, buffer, offset)
}

BindBufferRangeEXT :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewBindBufferRangeEXT(target, index, buffer, offset, size)
}

EndTransformFeedbackEXT :: #force_inline proc "contextless" () {
    __glewEndTransformFeedbackEXT()
}

GetTransformFeedbackVaryingEXT :: #force_inline proc "contextless" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar) {
    __glewGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name)
}

TransformFeedbackVaryingsEXT :: #force_inline proc "contextless" (program: GLuint, count: GLsizei, varyings: ^[^]GLchar, bufferMode: GLenum) {
    __glewTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode)
}

ArrayElementEXT :: #force_inline proc "contextless" (i: GLint) {
    __glewArrayElementEXT(i)
}

ColorPointerEXT :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr) {
    __glewColorPointerEXT(size, type, stride, count, pointer)
}

DrawArraysEXT :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei) {
    __glewDrawArraysEXT(mode, first, count)
}

EdgeFlagPointerEXT :: #force_inline proc "contextless" (stride: GLsizei, count: GLsizei, pointer: ^GLboolean) {
    __glewEdgeFlagPointerEXT(stride, count, pointer)
}

IndexPointerEXT :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr) {
    __glewIndexPointerEXT(type, stride, count, pointer)
}

NormalPointerEXT :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr) {
    __glewNormalPointerEXT(type, stride, count, pointer)
}

TexCoordPointerEXT :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr) {
    __glewTexCoordPointerEXT(size, type, stride, count, pointer)
}

VertexPointerEXT :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, count: GLsizei, pointer: rawptr) {
    __glewVertexPointerEXT(size, type, stride, count, pointer)
}

BindArraySetEXT :: #force_inline proc "contextless" (arrayset: rawptr) {
    __glewBindArraySetEXT(arrayset)
}

CreateArraySetExt :: #force_inline proc "contextless" () -> rawptr {
    return __glewCreateArraySetExt()
}

DeleteArraySetsEXT :: #force_inline proc "contextless" (n: GLsizei, arrayset: [^]rawptr) {
    __glewDeleteArraySetsEXT(n, arrayset)
}

GetVertexAttribLdvEXT :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVertexAttribLdvEXT(index, pname, params)
}

VertexArrayVertexAttribLOffsetEXT :: #force_inline proc "contextless" (vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr) {
    __glewVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset)
}

VertexAttribL1dEXT :: #force_inline proc "contextless" (index: GLuint, x: GLdouble) {
    __glewVertexAttribL1dEXT(index, x)
}

VertexAttribL1dvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL1dvEXT(index, v)
}

VertexAttribL2dEXT :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble) {
    __glewVertexAttribL2dEXT(index, x, y)
}

VertexAttribL2dvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL2dvEXT(index, v)
}

VertexAttribL3dEXT :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexAttribL3dEXT(index, x, y, z)
}

VertexAttribL3dvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL3dvEXT(index, v)
}

VertexAttribL4dEXT :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexAttribL4dEXT(index, x, y, z, w)
}

VertexAttribL4dvEXT :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttribL4dvEXT(index, v)
}

VertexAttribLPointerEXT :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribLPointerEXT(index, size, type, stride, pointer)
}

BeginVertexShaderEXT :: #force_inline proc "contextless" () {
    __glewBeginVertexShaderEXT()
}

BindLightParameterEXT :: #force_inline proc "contextless" (light: GLenum, value: GLenum) -> GLuint {
    return __glewBindLightParameterEXT(light, value)
}

BindMaterialParameterEXT :: #force_inline proc "contextless" (face: GLenum, value: GLenum) -> GLuint {
    return __glewBindMaterialParameterEXT(face, value)
}

BindParameterEXT :: #force_inline proc "contextless" (value: GLenum) -> GLuint {
    return __glewBindParameterEXT(value)
}

BindTexGenParameterEXT :: #force_inline proc "contextless" (unit: GLenum, coord: GLenum, value: GLenum) -> GLuint {
    return __glewBindTexGenParameterEXT(unit, coord, value)
}

BindTextureUnitParameterEXT :: #force_inline proc "contextless" (unit: GLenum, value: GLenum) -> GLuint {
    return __glewBindTextureUnitParameterEXT(unit, value)
}

BindVertexShaderEXT :: #force_inline proc "contextless" (id: GLuint) {
    __glewBindVertexShaderEXT(id)
}

DeleteVertexShaderEXT :: #force_inline proc "contextless" (id: GLuint) {
    __glewDeleteVertexShaderEXT(id)
}

DisableVariantClientStateEXT :: #force_inline proc "contextless" (id: GLuint) {
    __glewDisableVariantClientStateEXT(id)
}

EnableVariantClientStateEXT :: #force_inline proc "contextless" (id: GLuint) {
    __glewEnableVariantClientStateEXT(id)
}

EndVertexShaderEXT :: #force_inline proc "contextless" () {
    __glewEndVertexShaderEXT()
}

ExtractComponentEXT :: #force_inline proc "contextless" (res: GLuint, src: GLuint, num: GLuint) {
    __glewExtractComponentEXT(res, src, num)
}

GenSymbolsEXT :: #force_inline proc "contextless" (dataType: GLenum, storageType: GLenum, range: GLenum, components: GLuint) -> GLuint {
    return __glewGenSymbolsEXT(dataType, storageType, range, components)
}

GenVertexShadersEXT :: #force_inline proc "contextless" (range: GLuint) -> GLuint {
    return __glewGenVertexShadersEXT(range)
}

GetInvariantBooleanvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLboolean) {
    __glewGetInvariantBooleanvEXT(id, value, data)
}

GetInvariantFloatvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLfloat) {
    __glewGetInvariantFloatvEXT(id, value, data)
}

GetInvariantIntegervEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLint) {
    __glewGetInvariantIntegervEXT(id, value, data)
}

GetLocalConstantBooleanvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLboolean) {
    __glewGetLocalConstantBooleanvEXT(id, value, data)
}

GetLocalConstantFloatvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLfloat) {
    __glewGetLocalConstantFloatvEXT(id, value, data)
}

GetLocalConstantIntegervEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLint) {
    __glewGetLocalConstantIntegervEXT(id, value, data)
}

GetVariantBooleanvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLboolean) {
    __glewGetVariantBooleanvEXT(id, value, data)
}

GetVariantFloatvEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLfloat) {
    __glewGetVariantFloatvEXT(id, value, data)
}

GetVariantIntegervEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^GLint) {
    __glewGetVariantIntegervEXT(id, value, data)
}

GetVariantPointervEXT :: #force_inline proc "contextless" (id: GLuint, value: GLenum, data: ^rawptr) {
    __glewGetVariantPointervEXT(id, value, data)
}

InsertComponentEXT :: #force_inline proc "contextless" (res: GLuint, src: GLuint, num: GLuint) {
    __glewInsertComponentEXT(res, src, num)
}

IsVariantEnabledEXT :: #force_inline proc "contextless" (id: GLuint, cap: GLenum) -> GLboolean {
    return __glewIsVariantEnabledEXT(id, cap)
}

SetInvariantEXT :: #force_inline proc "contextless" (id: GLuint, type: GLenum, addr: rawptr) {
    __glewSetInvariantEXT(id, type, addr)
}

SetLocalConstantEXT :: #force_inline proc "contextless" (id: GLuint, type: GLenum, addr: rawptr) {
    __glewSetLocalConstantEXT(id, type, addr)
}

ShaderOp1EXT :: #force_inline proc "contextless" (op: GLenum, res: GLuint, arg1: GLuint) {
    __glewShaderOp1EXT(op, res, arg1)
}

ShaderOp2EXT :: #force_inline proc "contextless" (op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint) {
    __glewShaderOp2EXT(op, res, arg1, arg2)
}

ShaderOp3EXT :: #force_inline proc "contextless" (op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint, arg3: GLuint) {
    __glewShaderOp3EXT(op, res, arg1, arg2, arg3)
}

SwizzleEXT :: #force_inline proc "contextless" (res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) {
    __glewSwizzleEXT(res, in_, outX, outY, outZ, outW)
}

VariantPointerEXT :: #force_inline proc "contextless" (id: GLuint, type: GLenum, stride: GLuint, addr: rawptr) {
    __glewVariantPointerEXT(id, type, stride, addr)
}

VariantbvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLbyte) {
    __glewVariantbvEXT(id, addr)
}

VariantdvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLdouble) {
    __glewVariantdvEXT(id, addr)
}

VariantfvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLfloat) {
    __glewVariantfvEXT(id, addr)
}

VariantivEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLint) {
    __glewVariantivEXT(id, addr)
}

VariantsvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLshort) {
    __glewVariantsvEXT(id, addr)
}

VariantubvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLubyte) {
    __glewVariantubvEXT(id, addr)
}

VariantuivEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLuint) {
    __glewVariantuivEXT(id, addr)
}

VariantusvEXT :: #force_inline proc "contextless" (id: GLuint, addr: ^GLushort) {
    __glewVariantusvEXT(id, addr)
}

WriteMaskEXT :: #force_inline proc "contextless" (res: GLuint, in_: GLuint, outX: GLenum, outY: GLenum, outZ: GLenum, outW: GLenum) {
    __glewWriteMaskEXT(res, in_, outX, outY, outZ, outW)
}

VertexWeightPointerEXT :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexWeightPointerEXT(size, type, stride, pointer)
}

VertexWeightfEXT :: #force_inline proc "contextless" (weight: GLfloat) {
    __glewVertexWeightfEXT(weight)
}

VertexWeightfvEXT :: #force_inline proc "contextless" (weight: ^GLfloat) {
    __glewVertexWeightfvEXT(weight)
}

AcquireKeyedMutexWin32EXT :: #force_inline proc "contextless" (memory: GLuint, key: GLuint64, timeout: GLuint) -> GLboolean {
    return __glewAcquireKeyedMutexWin32EXT(memory, key, timeout)
}

ReleaseKeyedMutexWin32EXT :: #force_inline proc "contextless" (memory: GLuint, key: GLuint64) -> GLboolean {
    return __glewReleaseKeyedMutexWin32EXT(memory, key)
}

WindowRectanglesEXT :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, box: [^]GLint) {
    __glewWindowRectanglesEXT(mode, count, box)
}

ImportSyncEXT :: #force_inline proc "contextless" (external_sync_type: GLenum, external_sync: GLintptr, flags: GLbitfield) -> GLsync {
    return __glewImportSyncEXT(external_sync_type, external_sync, flags)
}

FrameTerminatorGREMEDY :: #force_inline proc "contextless" () {
    __glewFrameTerminatorGREMEDY()
}

StringMarkerGREMEDY :: #force_inline proc "contextless" (len: GLsizei, string_: rawptr) {
    __glewStringMarkerGREMEDY(len, string_)
}

GetImageTransformParameterfvHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetImageTransformParameterfvHP(target, pname, params)
}

GetImageTransformParameterivHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetImageTransformParameterivHP(target, pname, params)
}

ImageTransformParameterfHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfloat) {
    __glewImageTransformParameterfHP(target, pname, param)
}

ImageTransformParameterfvHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewImageTransformParameterfvHP(target, pname, params)
}

ImageTransformParameteriHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewImageTransformParameteriHP(target, pname, param)
}

ImageTransformParameterivHP :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewImageTransformParameterivHP(target, pname, params)
}

MultiModeDrawArraysIBM :: #force_inline proc "contextless" (mode: ^GLenum, first: ^GLint, count: ^GLsizei, primcount: GLsizei, modestride: GLint) {
    __glewMultiModeDrawArraysIBM(mode, first, count, primcount, modestride)
}

MultiModeDrawElementsIBM :: #force_inline proc "contextless" (mode: ^GLenum, count: ^GLsizei, type: GLenum, indices: [^]rawptr, primcount: GLsizei, modestride: GLint) {
    __glewMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride)
}

ColorPointerListIBM :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewColorPointerListIBM(size, type, stride, pointer, ptrstride)
}

EdgeFlagPointerListIBM :: #force_inline proc "contextless" (stride: GLint, pointer: ^^GLboolean, ptrstride: GLint) {
    __glewEdgeFlagPointerListIBM(stride, pointer, ptrstride)
}

FogCoordPointerListIBM :: #force_inline proc "contextless" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewFogCoordPointerListIBM(type, stride, pointer, ptrstride)
}

IndexPointerListIBM :: #force_inline proc "contextless" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewIndexPointerListIBM(type, stride, pointer, ptrstride)
}

NormalPointerListIBM :: #force_inline proc "contextless" (type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewNormalPointerListIBM(type, stride, pointer, ptrstride)
}

SecondaryColorPointerListIBM :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride)
}

TexCoordPointerListIBM :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewTexCoordPointerListIBM(size, type, stride, pointer, ptrstride)
}

VertexPointerListIBM :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLint, pointer: ^rawptr, ptrstride: GLint) {
    __glewVertexPointerListIBM(size, type, stride, pointer, ptrstride)
}

GetTextureHandleIMG :: #force_inline proc "contextless" (texture: GLuint) -> GLuint64 {
    return __glewGetTextureHandleIMG(texture)
}

GetTextureSamplerHandleIMG :: #force_inline proc "contextless" (texture: GLuint, sampler: GLuint) -> GLuint64 {
    return __glewGetTextureSamplerHandleIMG(texture, sampler)
}

ProgramUniformHandleui64IMG :: #force_inline proc "contextless" (program: GLuint, location: GLint, value: GLuint64) {
    __glewProgramUniformHandleui64IMG(program, location, value)
}

ProgramUniformHandleui64vIMG :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64) {
    __glewProgramUniformHandleui64vIMG(program, location, count, values)
}

UniformHandleui64IMG :: #force_inline proc "contextless" (location: GLint, value: GLuint64) {
    __glewUniformHandleui64IMG(location, value)
}

UniformHandleui64vIMG :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniformHandleui64vIMG(location, count, value)
}

FramebufferTexture2DDownsampleIMG :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, xscale: GLint, yscale: GLint) {
    __glewFramebufferTexture2DDownsampleIMG(target, attachment, textarget, texture, level, xscale, yscale)
}

FramebufferTextureLayerDownsampleIMG :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint, xscale: GLint, yscale: GLint) {
    __glewFramebufferTextureLayerDownsampleIMG(target, attachment, texture, level, layer, xscale, yscale)
}

FramebufferTexture2DMultisampleIMG :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, samples: GLsizei) {
    __glewFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples)
}

RenderbufferStorageMultisampleIMG :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height)
}

ApplyFramebufferAttachmentCMAAINTEL :: #force_inline proc "contextless" () {
    __glewApplyFramebufferAttachmentCMAAINTEL()
}

MapTexture2DINTEL :: #force_inline proc "contextless" (texture: GLuint, level: GLint, access: GLbitfield, stride: ^GLint, layout: ^GLenum) -> rawptr {
    return __glewMapTexture2DINTEL(texture, level, access, stride, layout)
}

SyncTextureINTEL :: #force_inline proc "contextless" (texture: GLuint) {
    __glewSyncTextureINTEL(texture)
}

UnmapTexture2DINTEL :: #force_inline proc "contextless" (texture: GLuint, level: GLint) {
    __glewUnmapTexture2DINTEL(texture, level)
}

ColorPointervINTEL :: #force_inline proc "contextless" (size: GLint, type: GLenum, pointer: ^rawptr) {
    __glewColorPointervINTEL(size, type, pointer)
}

NormalPointervINTEL :: #force_inline proc "contextless" (type: GLenum, pointer: ^rawptr) {
    __glewNormalPointervINTEL(type, pointer)
}

TexCoordPointervINTEL :: #force_inline proc "contextless" (size: GLint, type: GLenum, pointer: ^rawptr) {
    __glewTexCoordPointervINTEL(size, type, pointer)
}

VertexPointervINTEL :: #force_inline proc "contextless" (size: GLint, type: GLenum, pointer: ^rawptr) {
    __glewVertexPointervINTEL(size, type, pointer)
}

BeginPerfQueryINTEL :: #force_inline proc "contextless" (queryHandle: GLuint) {
    __glewBeginPerfQueryINTEL(queryHandle)
}

CreatePerfQueryINTEL :: #force_inline proc "contextless" (queryId: GLuint, queryHandle: ^GLuint) {
    __glewCreatePerfQueryINTEL(queryId, queryHandle)
}

DeletePerfQueryINTEL :: #force_inline proc "contextless" (queryHandle: GLuint) {
    __glewDeletePerfQueryINTEL(queryHandle)
}

EndPerfQueryINTEL :: #force_inline proc "contextless" (queryHandle: GLuint) {
    __glewEndPerfQueryINTEL(queryHandle)
}

GetFirstPerfQueryIdINTEL :: #force_inline proc "contextless" (queryId: ^GLuint) {
    __glewGetFirstPerfQueryIdINTEL(queryId)
}

GetNextPerfQueryIdINTEL :: #force_inline proc "contextless" (queryId: GLuint, nextQueryId: ^GLuint) {
    __glewGetNextPerfQueryIdINTEL(queryId, nextQueryId)
}

GetPerfCounterInfoINTEL :: #force_inline proc "contextless" (queryId: GLuint, counterId: GLuint, counterNameLength: GLuint, counterName: ^GLchar, counterDescLength: GLuint, counterDesc: ^GLchar, counterOffset: ^GLuint, counterDataSize: ^GLuint, counterTypeEnum: ^GLuint, counterDataTypeEnum: ^GLuint, rawCounterMaxValue: ^GLuint64) {
    __glewGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
}

GetPerfQueryDataINTEL :: #force_inline proc "contextless" (queryHandle: GLuint, flags: GLuint, dataSize: GLsizei, data: rawptr, bytesWritten: ^GLuint) {
    __glewGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten)
}

GetPerfQueryIdByNameINTEL :: #force_inline proc "contextless" (queryName: ^GLchar, queryId: ^GLuint) {
    __glewGetPerfQueryIdByNameINTEL(queryName, queryId)
}

GetPerfQueryInfoINTEL :: #force_inline proc "contextless" (queryId: GLuint, queryNameLength: GLuint, queryName: ^GLchar, dataSize: ^GLuint, noCounters: [^]GLuint, noInstances: [^]GLuint, capsMask: ^GLuint) {
    __glewGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
}

TexScissorFuncINTEL :: #force_inline proc "contextless" (target: GLenum, lfunc: GLenum, hfunc: GLenum) {
    __glewTexScissorFuncINTEL(target, lfunc, hfunc)
}

TexScissorINTEL :: #force_inline proc "contextless" (target: GLenum, tlow: GLclampf, thigh: GLclampf) {
    __glewTexScissorINTEL(target, tlow, thigh)
}

BlendBarrierKHR :: #force_inline proc "contextless" () {
    __glewBlendBarrierKHR()
}

DebugMessageCallback :: #force_inline proc "contextless" (callback: GLDEBUGPROC, userParam: rawptr) {
    __glewDebugMessageCallback(callback, userParam)
}

DebugMessageControl :: #force_inline proc "contextless" (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: [^]GLuint, enabled: GLboolean) {
    __glewDebugMessageControl(source, type, severity, count, ids, enabled)
}

DebugMessageInsert :: #force_inline proc "contextless" (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: ^GLchar) {
    __glewDebugMessageInsert(source, type, id, severity, length, buf)
}

GetDebugMessageLog :: #force_inline proc "contextless" (count: GLuint, bufSize: GLsizei, sources: [^]GLenum, types: [^]GLenum, ids: [^]GLuint, severities: [^]GLenum, lengths: [^]GLsizei, messageLog: ^GLchar) -> GLuint {
    return __glewGetDebugMessageLog(count, bufSize, sources, types, ids, severities, lengths, messageLog)
}

GetObjectLabel :: #force_inline proc "contextless" (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar) {
    __glewGetObjectLabel(identifier, name, bufSize, length, label)
}

GetObjectPtrLabel :: #force_inline proc "contextless" (ptr: rawptr, bufSize: GLsizei, length: ^GLsizei, label: ^GLchar) {
    __glewGetObjectPtrLabel(ptr, bufSize, length, label)
}

ObjectLabel :: #force_inline proc "contextless" (identifier: GLenum, name: GLuint, length: GLsizei, label: ^GLchar) {
    __glewObjectLabel(identifier, name, length, label)
}

ObjectPtrLabel :: #force_inline proc "contextless" (ptr: rawptr, length: GLsizei, label: ^GLchar) {
    __glewObjectPtrLabel(ptr, length, label)
}

PopDebugGroup :: #force_inline proc "contextless" () {
    __glewPopDebugGroup()
}

PushDebugGroup :: #force_inline proc "contextless" (source: GLenum, id: GLuint, length: GLsizei, message: ^GLchar) {
    __glewPushDebugGroup(source, id, length, message)
}

MaxShaderCompilerThreadsKHR :: #force_inline proc "contextless" (count: GLuint) {
    __glewMaxShaderCompilerThreadsKHR(count)
}

GetnUniformfv :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLfloat) {
    __glewGetnUniformfv(program, location, bufSize, params)
}

GetnUniformiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLint) {
    __glewGetnUniformiv(program, location, bufSize, params)
}

GetnUniformuiv :: #force_inline proc "contextless" (program: GLuint, location: GLint, bufSize: GLsizei, params: [^]GLuint) {
    __glewGetnUniformuiv(program, location, bufSize, params)
}

ReadnPixels :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: rawptr) {
    __glewReadnPixels(x, y, width, height, format, type, bufSize, data)
}

BufferRegionEnabled :: #force_inline proc "contextless" () -> GLuint {
    return __glewBufferRegionEnabled()
}

DeleteBufferRegion :: #force_inline proc "contextless" (region: GLenum) {
    __glewDeleteBufferRegion(region)
}

DrawBufferRegion :: #force_inline proc "contextless" (region: GLuint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, xDest: GLint, yDest: GLint) {
    __glewDrawBufferRegion(region, x, y, width, height, xDest, yDest)
}

NewBufferRegion :: #force_inline proc "contextless" (region: GLenum) -> GLuint {
    return __glewNewBufferRegion(region)
}

ReadBufferRegion :: #force_inline proc "contextless" (region: GLuint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewReadBufferRegion(region, x, y, width, height)
}

FramebufferParameteriMESA :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewFramebufferParameteriMESA(target, pname, param)
}

GetFramebufferParameterivMESA :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFramebufferParameterivMESA(target, pname, params)
}

ResizeBuffersMESA :: #force_inline proc "contextless" () {
    __glewResizeBuffersMESA()
}

WindowPos2dMESA :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble) {
    __glewWindowPos2dMESA(x, y)
}

WindowPos2dvMESA :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos2dvMESA(p)
}

WindowPos2fMESA :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat) {
    __glewWindowPos2fMESA(x, y)
}

WindowPos2fvMESA :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos2fvMESA(p)
}

WindowPos2iMESA :: #force_inline proc "contextless" (x: GLint, y: GLint) {
    __glewWindowPos2iMESA(x, y)
}

WindowPos2ivMESA :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos2ivMESA(p)
}

WindowPos2sMESA :: #force_inline proc "contextless" (x: GLshort, y: GLshort) {
    __glewWindowPos2sMESA(x, y)
}

WindowPos2svMESA :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos2svMESA(p)
}

WindowPos3dMESA :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewWindowPos3dMESA(x, y, z)
}

WindowPos3dvMESA :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos3dvMESA(p)
}

WindowPos3fMESA :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewWindowPos3fMESA(x, y, z)
}

WindowPos3fvMESA :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos3fvMESA(p)
}

WindowPos3iMESA :: #force_inline proc "contextless" (x: GLint, y: GLint, z: GLint) {
    __glewWindowPos3iMESA(x, y, z)
}

WindowPos3ivMESA :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos3ivMESA(p)
}

WindowPos3sMESA :: #force_inline proc "contextless" (x: GLshort, y: GLshort, z: GLshort) {
    __glewWindowPos3sMESA(x, y, z)
}

WindowPos3svMESA :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos3svMESA(p)
}

WindowPos4dMESA :: #force_inline proc "contextless" (x: GLdouble, y: GLdouble, z: GLdouble, param3: GLdouble) {
    __glewWindowPos4dMESA(x, y, z, param3)
}

WindowPos4dvMESA :: #force_inline proc "contextless" (p: ^GLdouble) {
    __glewWindowPos4dvMESA(p)
}

WindowPos4fMESA :: #force_inline proc "contextless" (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewWindowPos4fMESA(x, y, z, w)
}

WindowPos4fvMESA :: #force_inline proc "contextless" (p: ^GLfloat) {
    __glewWindowPos4fvMESA(p)
}

WindowPos4iMESA :: #force_inline proc "contextless" (x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewWindowPos4iMESA(x, y, z, w)
}

WindowPos4ivMESA :: #force_inline proc "contextless" (p: ^GLint) {
    __glewWindowPos4ivMESA(p)
}

WindowPos4sMESA :: #force_inline proc "contextless" (x: GLshort, y: GLshort, z: GLshort, w: GLshort) {
    __glewWindowPos4sMESA(x, y, z, w)
}

WindowPos4svMESA :: #force_inline proc "contextless" (p: ^GLshort) {
    __glewWindowPos4svMESA(p)
}

BeginConditionalRenderNVX :: #force_inline proc "contextless" (id: GLuint) {
    __glewBeginConditionalRenderNVX(id)
}

EndConditionalRenderNVX :: #force_inline proc "contextless" () {
    __glewEndConditionalRenderNVX()
}

AsyncCopyBufferSubDataNVX :: #force_inline proc "contextless" (waitSemaphoreCount: GLsizei, waitSemaphoreArray: ^GLuint, fenceValueArray: ^GLuint64, readGpu: GLuint, writeGpuMask: GLbitfield, readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr, signalSemaphoreCount: GLsizei, signalSemaphoreArray: ^GLuint, signalValueArray: ^GLuint64) -> GLsync {
    return __glewAsyncCopyBufferSubDataNVX(waitSemaphoreCount, waitSemaphoreArray, fenceValueArray, readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size, signalSemaphoreCount, signalSemaphoreArray, signalValueArray)
}

AsyncCopyImageSubDataNVX :: #force_inline proc "contextless" (waitSemaphoreCount: GLsizei, waitSemaphoreArray: ^GLuint, waitValueArray: ^GLuint64, srcGpu: GLuint, dstGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei, signalSemaphoreCount: GLsizei, signalSemaphoreArray: ^GLuint, signalValueArray: ^GLuint64) -> GLuint {
    return __glewAsyncCopyImageSubDataNVX(waitSemaphoreCount, waitSemaphoreArray, waitValueArray, srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth, signalSemaphoreCount, signalSemaphoreArray, signalValueArray)
}

MulticastScissorArrayvNVX :: #force_inline proc "contextless" (gpu: GLuint, first: GLuint, count: GLsizei, v: ^GLint) {
    __glewMulticastScissorArrayvNVX(gpu, first, count, v)
}

MulticastViewportArrayvNVX :: #force_inline proc "contextless" (gpu: GLuint, first: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewMulticastViewportArrayvNVX(gpu, first, count, v)
}

MulticastViewportPositionWScaleNVX :: #force_inline proc "contextless" (gpu: GLuint, index: GLuint, xcoeff: GLfloat, ycoeff: GLfloat) {
    __glewMulticastViewportPositionWScaleNVX(gpu, index, xcoeff, ycoeff)
}

UploadGpuMaskNVX :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewUploadGpuMaskNVX(mask)
}

LGPUCopyImageSubDataNVX :: #force_inline proc "contextless" (sourceGpu: GLuint, destinationGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srxY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewLGPUCopyImageSubDataNVX(sourceGpu, destinationGpuMask, srcName, srcTarget, srcLevel, srcX, srxY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}

LGPUInterlockNVX :: #force_inline proc "contextless" () {
    __glewLGPUInterlockNVX()
}

LGPUNamedBufferSubDataNVX :: #force_inline proc "contextless" (gpuMask: GLbitfield, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewLGPUNamedBufferSubDataNVX(gpuMask, buffer, offset, size, data)
}

ClientWaitSemaphoreui64NVX :: #force_inline proc "contextless" (fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64) {
    __glewClientWaitSemaphoreui64NVX(fenceObjectCount, semaphoreArray, fenceValueArray)
}

CreateProgressFenceNVX :: #force_inline proc "contextless" () -> GLuint {
    return __glewCreateProgressFenceNVX()
}

SignalSemaphoreui64NVX :: #force_inline proc "contextless" (signalGpu: GLuint, fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64) {
    __glewSignalSemaphoreui64NVX(signalGpu, fenceObjectCount, semaphoreArray, fenceValueArray)
}

WaitSemaphoreui64NVX :: #force_inline proc "contextless" (waitGpu: GLuint, fenceObjectCount: GLsizei, semaphoreArray: ^GLuint, fenceValueArray: ^GLuint64) {
    __glewWaitSemaphoreui64NVX(waitGpu, fenceObjectCount, semaphoreArray, fenceValueArray)
}

StereoParameterfNV :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewStereoParameterfNV(pname, param)
}

StereoParameteriNV :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewStereoParameteriNV(pname, param)
}

AlphaToCoverageDitherControlNV :: #force_inline proc "contextless" (mode: GLenum) {
    __glewAlphaToCoverageDitherControlNV(mode)
}

MultiDrawArraysIndirectBindlessNV :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) {
    __glewMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount)
}

MultiDrawElementsIndirectBindlessNV :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) {
    __glewMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount)
}

MultiDrawArraysIndirectBindlessCountNV :: #force_inline proc "contextless" (mode: GLenum, indirect: rawptr, drawCount: GLintptr, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) {
    __glewMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}

MultiDrawElementsIndirectBindlessCountNV :: #force_inline proc "contextless" (mode: GLenum, type: GLenum, indirect: rawptr, drawCount: GLintptr, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint) {
    __glewMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
}

GetImageHandleNV :: #force_inline proc "contextless" (texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum) -> GLuint64 {
    return __glewGetImageHandleNV(texture, level, layered, layer, format)
}

GetTextureHandleNV :: #force_inline proc "contextless" (texture: GLuint) -> GLuint64 {
    return __glewGetTextureHandleNV(texture)
}

GetTextureSamplerHandleNV :: #force_inline proc "contextless" (texture: GLuint, sampler: GLuint) -> GLuint64 {
    return __glewGetTextureSamplerHandleNV(texture, sampler)
}

IsImageHandleResidentNV :: #force_inline proc "contextless" (handle: GLuint64) -> GLboolean {
    return __glewIsImageHandleResidentNV(handle)
}

IsTextureHandleResidentNV :: #force_inline proc "contextless" (handle: GLuint64) -> GLboolean {
    return __glewIsTextureHandleResidentNV(handle)
}

MakeImageHandleNonResidentNV :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeImageHandleNonResidentNV(handle)
}

MakeImageHandleResidentNV :: #force_inline proc "contextless" (handle: GLuint64, access: GLenum) {
    __glewMakeImageHandleResidentNV(handle, access)
}

MakeTextureHandleNonResidentNV :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeTextureHandleNonResidentNV(handle)
}

MakeTextureHandleResidentNV :: #force_inline proc "contextless" (handle: GLuint64) {
    __glewMakeTextureHandleResidentNV(handle)
}

ProgramUniformHandleui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, value: GLuint64) {
    __glewProgramUniformHandleui64NV(program, location, value)
}

ProgramUniformHandleui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, values: [^]GLuint64) {
    __glewProgramUniformHandleui64vNV(program, location, count, values)
}

UniformHandleui64NV :: #force_inline proc "contextless" (location: GLint, value: GLuint64) {
    __glewUniformHandleui64NV(location, value)
}

UniformHandleui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64) {
    __glewUniformHandleui64vNV(location, count, value)
}

BlendBarrierNV :: #force_inline proc "contextless" () {
    __glewBlendBarrierNV()
}

BlendParameteriNV :: #force_inline proc "contextless" (pname: GLenum, value: GLint) {
    __glewBlendParameteriNV(pname, value)
}

ViewportPositionWScaleNV :: #force_inline proc "contextless" (index: GLuint, xcoeff: GLfloat, ycoeff: GLfloat) {
    __glewViewportPositionWScaleNV(index, xcoeff, ycoeff)
}

CallCommandListNV :: #force_inline proc "contextless" (list: GLuint) {
    __glewCallCommandListNV(list)
}

CommandListSegmentsNV :: #force_inline proc "contextless" (list: GLuint, segments: GLuint) {
    __glewCommandListSegmentsNV(list, segments)
}

CompileCommandListNV :: #force_inline proc "contextless" (list: GLuint) {
    __glewCompileCommandListNV(list)
}

CreateCommandListsNV :: #force_inline proc "contextless" (n: GLsizei, lists: [^]GLuint) {
    __glewCreateCommandListsNV(n, lists)
}

CreateStatesNV :: #force_inline proc "contextless" (n: GLsizei, states: [^]GLuint) {
    __glewCreateStatesNV(n, states)
}

DeleteCommandListsNV :: #force_inline proc "contextless" (n: GLsizei, lists: [^]GLuint) {
    __glewDeleteCommandListsNV(n, lists)
}

DeleteStatesNV :: #force_inline proc "contextless" (n: GLsizei, states: [^]GLuint) {
    __glewDeleteStatesNV(n, states)
}

DrawCommandsAddressNV :: #force_inline proc "contextless" (primitiveMode: GLenum, indirects: [^]GLuint64, sizes: [^]GLsizei, count: GLuint) {
    __glewDrawCommandsAddressNV(primitiveMode, indirects, sizes, count)
}

DrawCommandsNV :: #force_inline proc "contextless" (primitiveMode: GLenum, buffer: GLuint, indirects: [^]GLintptr, sizes: [^]GLsizei, count: GLuint) {
    __glewDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count)
}

DrawCommandsStatesAddressNV :: #force_inline proc "contextless" (indirects: [^]GLuint64, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint) {
    __glewDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count)
}

DrawCommandsStatesNV :: #force_inline proc "contextless" (buffer: GLuint, indirects: [^]GLintptr, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint) {
    __glewDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count)
}

GetCommandHeaderNV :: #force_inline proc "contextless" (tokenID: GLenum, size: GLuint) -> GLuint {
    return __glewGetCommandHeaderNV(tokenID, size)
}

GetStageIndexNV :: #force_inline proc "contextless" (shadertype: GLenum) -> GLushort {
    return __glewGetStageIndexNV(shadertype)
}

IsCommandListNV :: #force_inline proc "contextless" (list: GLuint) -> GLboolean {
    return __glewIsCommandListNV(list)
}

IsStateNV :: #force_inline proc "contextless" (state: GLuint) -> GLboolean {
    return __glewIsStateNV(state)
}

ListDrawCommandsStatesClientNV :: #force_inline proc "contextless" (list: GLuint, segment: GLuint, indirects: [^]rawptr, sizes: [^]GLsizei, states: [^]GLuint, fbos: [^]GLuint, count: GLuint) {
    __glewListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count)
}

StateCaptureNV :: #force_inline proc "contextless" (state: GLuint, mode: GLenum) {
    __glewStateCaptureNV(state, mode)
}

BeginConditionalRenderNV :: #force_inline proc "contextless" (id: GLuint, mode: GLenum) {
    __glewBeginConditionalRenderNV(id, mode)
}

EndConditionalRenderNV :: #force_inline proc "contextless" () {
    __glewEndConditionalRenderNV()
}

SubpixelPrecisionBiasNV :: #force_inline proc "contextless" (xbits: GLuint, ybits: GLuint) {
    __glewSubpixelPrecisionBiasNV(xbits, ybits)
}

ConservativeRasterParameterfNV :: #force_inline proc "contextless" (pname: GLenum, value: GLfloat) {
    __glewConservativeRasterParameterfNV(pname, value)
}

ConservativeRasterParameteriNV :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewConservativeRasterParameteriNV(pname, param)
}

CopyBufferSubDataNV :: #force_inline proc "contextless" (readtarget: GLenum, writetarget: GLenum, readoffset: GLintptr, writeoffset: GLintptr, size: GLsizeiptr) {
    __glewCopyBufferSubDataNV(readtarget, writetarget, readoffset, writeoffset, size)
}

CopyImageSubDataNV :: #force_inline proc "contextless" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) {
    __glewCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
}

ClearDepthdNV :: #force_inline proc "contextless" (depth: GLdouble) {
    __glewClearDepthdNV(depth)
}

DepthBoundsdNV :: #force_inline proc "contextless" (zmin: GLdouble, zmax: GLdouble) {
    __glewDepthBoundsdNV(zmin, zmax)
}

DepthRangedNV :: #force_inline proc "contextless" (zNear: GLdouble, zFar: GLdouble) {
    __glewDepthRangedNV(zNear, zFar)
}

DrawBuffersNV :: #force_inline proc "contextless" (n: GLsizei, bufs: [^]GLenum) {
    __glewDrawBuffersNV(n, bufs)
}

DrawArraysInstancedNV :: #force_inline proc "contextless" (mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei) {
    __glewDrawArraysInstancedNV(mode, first, count, primcount)
}

DrawElementsInstancedNV :: #force_inline proc "contextless" (mode: GLenum, count: GLsizei, type: GLenum, indices: rawptr, primcount: GLsizei) {
    __glewDrawElementsInstancedNV(mode, count, type, indices, primcount)
}

DrawTextureNV :: #force_inline proc "contextless" (texture: GLuint, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat) {
    __glewDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}

DrawVkImageNV :: #force_inline proc "contextless" (vkImage: GLuint64, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat) {
    __glewDrawVkImageNV(vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
}

GetVkProcAddrNV :: #force_inline proc "contextless" (name: ^GLchar) -> GLVULKANPROCNV {
    return __glewGetVkProcAddrNV(name)
}

SignalVkFenceNV :: #force_inline proc "contextless" (vkFence: GLuint64) {
    __glewSignalVkFenceNV(vkFence)
}

SignalVkSemaphoreNV :: #force_inline proc "contextless" (vkSemaphore: GLuint64) {
    __glewSignalVkSemaphoreNV(vkSemaphore)
}

WaitVkSemaphoreNV :: #force_inline proc "contextless" (vkSemaphore: GLuint64) {
    __glewWaitVkSemaphoreNV(vkSemaphore)
}

EvalMapsNV :: #force_inline proc "contextless" (target: GLenum, mode: GLenum) {
    __glewEvalMapsNV(target, mode)
}

GetMapAttribParameterfvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetMapAttribParameterfvNV(target, index, pname, params)
}

GetMapAttribParameterivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetMapAttribParameterivNV(target, index, pname, params)
}

GetMapControlPointsNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, type: GLenum, ustride: GLsizei, vstride: GLsizei, packed: GLboolean, points: rawptr) {
    __glewGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points)
}

GetMapParameterfvNV :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMapParameterfvNV(target, pname, params)
}

GetMapParameterivNV :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMapParameterivNV(target, pname, params)
}

MapControlPointsNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, type: GLenum, ustride: GLsizei, vstride: GLsizei, uorder: GLint, vorder: GLint, packed: GLboolean, points: rawptr) {
    __glewMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points)
}

MapParameterfvNV :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewMapParameterfvNV(target, pname, params)
}

MapParameterivNV :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewMapParameterivNV(target, pname, params)
}

GetMultisamplefvNV :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, val: ^GLfloat) {
    __glewGetMultisamplefvNV(pname, index, val)
}

SampleMaskIndexedNV :: #force_inline proc "contextless" (index: GLuint, mask: GLbitfield) {
    __glewSampleMaskIndexedNV(index, mask)
}

TexRenderbufferNV :: #force_inline proc "contextless" (target: GLenum, renderbuffer: GLuint) {
    __glewTexRenderbufferNV(target, renderbuffer)
}

DeleteFencesNV :: #force_inline proc "contextless" (n: GLsizei, fences: [^]GLuint) {
    __glewDeleteFencesNV(n, fences)
}

FinishFenceNV :: #force_inline proc "contextless" (fence: GLuint) {
    __glewFinishFenceNV(fence)
}

GenFencesNV :: #force_inline proc "contextless" (n: GLsizei, fences: [^]GLuint) {
    __glewGenFencesNV(n, fences)
}

GetFenceivNV :: #force_inline proc "contextless" (fence: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetFenceivNV(fence, pname, params)
}

IsFenceNV :: #force_inline proc "contextless" (fence: GLuint) -> GLboolean {
    return __glewIsFenceNV(fence)
}

SetFenceNV :: #force_inline proc "contextless" (fence: GLuint, condition: GLenum) {
    __glewSetFenceNV(fence, condition)
}

TestFenceNV :: #force_inline proc "contextless" (fence: GLuint) -> GLboolean {
    return __glewTestFenceNV(fence)
}

FragmentCoverageColorNV :: #force_inline proc "contextless" (color: GLuint) {
    __glewFragmentCoverageColorNV(color)
}

GetProgramNamedParameterdvNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, params: [^]GLdouble) {
    __glewGetProgramNamedParameterdvNV(id, len, name, params)
}

GetProgramNamedParameterfvNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, params: [^]GLfloat) {
    __glewGetProgramNamedParameterfvNV(id, len, name, params)
}

ProgramNamedParameter4dNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewProgramNamedParameter4dNV(id, len, name, x, y, z, w)
}

ProgramNamedParameter4dvNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, v: [^]GLdouble) {
    __glewProgramNamedParameter4dvNV(id, len, name, v)
}

ProgramNamedParameter4fNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewProgramNamedParameter4fNV(id, len, name, x, y, z, w)
}

ProgramNamedParameter4fvNV :: #force_inline proc "contextless" (id: GLuint, len: GLsizei, name: ^GLubyte, v: [^]GLfloat) {
    __glewProgramNamedParameter4fvNV(id, len, name, v)
}

BlitFramebufferNV :: #force_inline proc "contextless" (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

RenderbufferStorageMultisampleNV :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height)
}

RenderbufferStorageMultisampleCoverageNV :: #force_inline proc "contextless" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height)
}

ProgramVertexLimitNV :: #force_inline proc "contextless" (target: GLenum, limit: GLint) {
    __glewProgramVertexLimitNV(target, limit)
}

MulticastBarrierNV :: #force_inline proc "contextless" () {
    __glewMulticastBarrierNV()
}

MulticastBlitFramebufferNV :: #force_inline proc "contextless" (srcGpu: GLuint, dstGpu: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) {
    __glewMulticastBlitFramebufferNV(srcGpu, dstGpu, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
}

MulticastBufferSubDataNV :: #force_inline proc "contextless" (gpuMask: GLbitfield, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: rawptr) {
    __glewMulticastBufferSubDataNV(gpuMask, buffer, offset, size, data)
}

MulticastCopyBufferSubDataNV :: #force_inline proc "contextless" (readGpu: GLuint, writeGpuMask: GLbitfield, readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) {
    __glewMulticastCopyBufferSubDataNV(readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size)
}

MulticastCopyImageSubDataNV :: #force_inline proc "contextless" (srcGpu: GLuint, dstGpuMask: GLbitfield, srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) {
    __glewMulticastCopyImageSubDataNV(srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

MulticastFramebufferSampleLocationsfvNV :: #force_inline proc "contextless" (gpu: GLuint, framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewMulticastFramebufferSampleLocationsfvNV(gpu, framebuffer, start, count, v)
}

MulticastGetQueryObjecti64vNV :: #force_inline proc "contextless" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLint64) {
    __glewMulticastGetQueryObjecti64vNV(gpu, id, pname, params)
}

MulticastGetQueryObjectivNV :: #force_inline proc "contextless" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewMulticastGetQueryObjectivNV(gpu, id, pname, params)
}

MulticastGetQueryObjectui64vNV :: #force_inline proc "contextless" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLuint64) {
    __glewMulticastGetQueryObjectui64vNV(gpu, id, pname, params)
}

MulticastGetQueryObjectuivNV :: #force_inline proc "contextless" (gpu: GLuint, id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewMulticastGetQueryObjectuivNV(gpu, id, pname, params)
}

MulticastWaitSyncNV :: #force_inline proc "contextless" (signalGpu: GLuint, waitGpuMask: GLbitfield) {
    __glewMulticastWaitSyncNV(signalGpu, waitGpuMask)
}

RenderGpuMaskNV :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewRenderGpuMaskNV(mask)
}

ProgramEnvParameterI4iNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewProgramEnvParameterI4iNV(target, index, x, y, z, w)
}

ProgramEnvParameterI4ivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLint) {
    __glewProgramEnvParameterI4ivNV(target, index, params)
}

ProgramEnvParameterI4uiNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) {
    __glewProgramEnvParameterI4uiNV(target, index, x, y, z, w)
}

ProgramEnvParameterI4uivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLuint) {
    __glewProgramEnvParameterI4uivNV(target, index, params)
}

ProgramEnvParametersI4ivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint) {
    __glewProgramEnvParametersI4ivNV(target, index, count, params)
}

ProgramEnvParametersI4uivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint) {
    __glewProgramEnvParametersI4uivNV(target, index, count, params)
}

ProgramLocalParameterI4iNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) {
    __glewProgramLocalParameterI4iNV(target, index, x, y, z, w)
}

ProgramLocalParameterI4ivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLint) {
    __glewProgramLocalParameterI4ivNV(target, index, params)
}

ProgramLocalParameterI4uiNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) {
    __glewProgramLocalParameterI4uiNV(target, index, x, y, z, w)
}

ProgramLocalParameterI4uivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLuint) {
    __glewProgramLocalParameterI4uivNV(target, index, params)
}

ProgramLocalParametersI4ivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLint) {
    __glewProgramLocalParametersI4ivNV(target, index, count, params)
}

ProgramLocalParametersI4uivNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, count: GLsizei, params: [^]GLuint) {
    __glewProgramLocalParametersI4uivNV(target, index, count, params)
}

GetUniformi64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLint64EXT) {
    __glewGetUniformi64vNV(program, location, params)
}

GetUniformui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, params: [^]GLuint64EXT) {
    __glewGetUniformui64vNV(program, location, params)
}

ProgramUniform1i64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64EXT) {
    __glewProgramUniform1i64NV(program, location, x)
}

ProgramUniform1i64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewProgramUniform1i64vNV(program, location, count, value)
}

ProgramUniform1ui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64EXT) {
    __glewProgramUniform1ui64NV(program, location, x)
}

ProgramUniform1ui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewProgramUniform1ui64vNV(program, location, count, value)
}

ProgramUniform2i64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT) {
    __glewProgramUniform2i64NV(program, location, x, y)
}

ProgramUniform2i64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewProgramUniform2i64vNV(program, location, count, value)
}

ProgramUniform2ui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT) {
    __glewProgramUniform2ui64NV(program, location, x, y)
}

ProgramUniform2ui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewProgramUniform2ui64vNV(program, location, count, value)
}

ProgramUniform3i64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) {
    __glewProgramUniform3i64NV(program, location, x, y, z)
}

ProgramUniform3i64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewProgramUniform3i64vNV(program, location, count, value)
}

ProgramUniform3ui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) {
    __glewProgramUniform3ui64NV(program, location, x, y, z)
}

ProgramUniform3ui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewProgramUniform3ui64vNV(program, location, count, value)
}

ProgramUniform4i64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) {
    __glewProgramUniform4i64NV(program, location, x, y, z, w)
}

ProgramUniform4i64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewProgramUniform4i64vNV(program, location, count, value)
}

ProgramUniform4ui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) {
    __glewProgramUniform4ui64NV(program, location, x, y, z, w)
}

ProgramUniform4ui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewProgramUniform4ui64vNV(program, location, count, value)
}

Uniform1i64NV :: #force_inline proc "contextless" (location: GLint, x: GLint64EXT) {
    __glewUniform1i64NV(location, x)
}

Uniform1i64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewUniform1i64vNV(location, count, value)
}

Uniform1ui64NV :: #force_inline proc "contextless" (location: GLint, x: GLuint64EXT) {
    __glewUniform1ui64NV(location, x)
}

Uniform1ui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewUniform1ui64vNV(location, count, value)
}

Uniform2i64NV :: #force_inline proc "contextless" (location: GLint, x: GLint64EXT, y: GLint64EXT) {
    __glewUniform2i64NV(location, x, y)
}

Uniform2i64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewUniform2i64vNV(location, count, value)
}

Uniform2ui64NV :: #force_inline proc "contextless" (location: GLint, x: GLuint64EXT, y: GLuint64EXT) {
    __glewUniform2ui64NV(location, x, y)
}

Uniform2ui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewUniform2ui64vNV(location, count, value)
}

Uniform3i64NV :: #force_inline proc "contextless" (location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) {
    __glewUniform3i64NV(location, x, y, z)
}

Uniform3i64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewUniform3i64vNV(location, count, value)
}

Uniform3ui64NV :: #force_inline proc "contextless" (location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) {
    __glewUniform3ui64NV(location, x, y, z)
}

Uniform3ui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewUniform3ui64vNV(location, count, value)
}

Uniform4i64NV :: #force_inline proc "contextless" (location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) {
    __glewUniform4i64NV(location, x, y, z, w)
}

Uniform4i64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLint64EXT) {
    __glewUniform4i64vNV(location, count, value)
}

Uniform4ui64NV :: #force_inline proc "contextless" (location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) {
    __glewUniform4ui64NV(location, x, y, z, w)
}

Uniform4ui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewUniform4ui64vNV(location, count, value)
}

Color3hNV :: #force_inline proc "contextless" (red: GLhalf, green: GLhalf, blue: GLhalf) {
    __glewColor3hNV(red, green, blue)
}

Color3hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewColor3hvNV(v)
}

Color4hNV :: #force_inline proc "contextless" (red: GLhalf, green: GLhalf, blue: GLhalf, alpha: GLhalf) {
    __glewColor4hNV(red, green, blue, alpha)
}

Color4hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewColor4hvNV(v)
}

FogCoordhNV :: #force_inline proc "contextless" (fog: GLhalf) {
    __glewFogCoordhNV(fog)
}

FogCoordhvNV :: #force_inline proc "contextless" (fog: ^GLhalf) {
    __glewFogCoordhvNV(fog)
}

MultiTexCoord1hNV :: #force_inline proc "contextless" (target: GLenum, s: GLhalf) {
    __glewMultiTexCoord1hNV(target, s)
}

MultiTexCoord1hvNV :: #force_inline proc "contextless" (target: GLenum, v: ^GLhalf) {
    __glewMultiTexCoord1hvNV(target, v)
}

MultiTexCoord2hNV :: #force_inline proc "contextless" (target: GLenum, s: GLhalf, t: GLhalf) {
    __glewMultiTexCoord2hNV(target, s, t)
}

MultiTexCoord2hvNV :: #force_inline proc "contextless" (target: GLenum, v: ^GLhalf) {
    __glewMultiTexCoord2hvNV(target, v)
}

MultiTexCoord3hNV :: #force_inline proc "contextless" (target: GLenum, s: GLhalf, t: GLhalf, r: GLhalf) {
    __glewMultiTexCoord3hNV(target, s, t, r)
}

MultiTexCoord3hvNV :: #force_inline proc "contextless" (target: GLenum, v: ^GLhalf) {
    __glewMultiTexCoord3hvNV(target, v)
}

MultiTexCoord4hNV :: #force_inline proc "contextless" (target: GLenum, s: GLhalf, t: GLhalf, r: GLhalf, q: GLhalf) {
    __glewMultiTexCoord4hNV(target, s, t, r, q)
}

MultiTexCoord4hvNV :: #force_inline proc "contextless" (target: GLenum, v: ^GLhalf) {
    __glewMultiTexCoord4hvNV(target, v)
}

Normal3hNV :: #force_inline proc "contextless" (nx: GLhalf, ny: GLhalf, nz: GLhalf) {
    __glewNormal3hNV(nx, ny, nz)
}

Normal3hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewNormal3hvNV(v)
}

SecondaryColor3hNV :: #force_inline proc "contextless" (red: GLhalf, green: GLhalf, blue: GLhalf) {
    __glewSecondaryColor3hNV(red, green, blue)
}

SecondaryColor3hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewSecondaryColor3hvNV(v)
}

TexCoord1hNV :: #force_inline proc "contextless" (s: GLhalf) {
    __glewTexCoord1hNV(s)
}

TexCoord1hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewTexCoord1hvNV(v)
}

TexCoord2hNV :: #force_inline proc "contextless" (s: GLhalf, t: GLhalf) {
    __glewTexCoord2hNV(s, t)
}

TexCoord2hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewTexCoord2hvNV(v)
}

TexCoord3hNV :: #force_inline proc "contextless" (s: GLhalf, t: GLhalf, r: GLhalf) {
    __glewTexCoord3hNV(s, t, r)
}

TexCoord3hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewTexCoord3hvNV(v)
}

TexCoord4hNV :: #force_inline proc "contextless" (s: GLhalf, t: GLhalf, r: GLhalf, q: GLhalf) {
    __glewTexCoord4hNV(s, t, r, q)
}

TexCoord4hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewTexCoord4hvNV(v)
}

Vertex2hNV :: #force_inline proc "contextless" (x: GLhalf, y: GLhalf) {
    __glewVertex2hNV(x, y)
}

Vertex2hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewVertex2hvNV(v)
}

Vertex3hNV :: #force_inline proc "contextless" (x: GLhalf, y: GLhalf, z: GLhalf) {
    __glewVertex3hNV(x, y, z)
}

Vertex3hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewVertex3hvNV(v)
}

Vertex4hNV :: #force_inline proc "contextless" (x: GLhalf, y: GLhalf, z: GLhalf, w: GLhalf) {
    __glewVertex4hNV(x, y, z, w)
}

Vertex4hvNV :: #force_inline proc "contextless" (v: ^GLhalf) {
    __glewVertex4hvNV(v)
}

VertexAttrib1hNV :: #force_inline proc "contextless" (index: GLuint, x: GLhalf) {
    __glewVertexAttrib1hNV(index, x)
}

VertexAttrib1hvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLhalf) {
    __glewVertexAttrib1hvNV(index, v)
}

VertexAttrib2hNV :: #force_inline proc "contextless" (index: GLuint, x: GLhalf, y: GLhalf) {
    __glewVertexAttrib2hNV(index, x, y)
}

VertexAttrib2hvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLhalf) {
    __glewVertexAttrib2hvNV(index, v)
}

VertexAttrib3hNV :: #force_inline proc "contextless" (index: GLuint, x: GLhalf, y: GLhalf, z: GLhalf) {
    __glewVertexAttrib3hNV(index, x, y, z)
}

VertexAttrib3hvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLhalf) {
    __glewVertexAttrib3hvNV(index, v)
}

VertexAttrib4hNV :: #force_inline proc "contextless" (index: GLuint, x: GLhalf, y: GLhalf, z: GLhalf, w: GLhalf) {
    __glewVertexAttrib4hNV(index, x, y, z, w)
}

VertexAttrib4hvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLhalf) {
    __glewVertexAttrib4hvNV(index, v)
}

VertexAttribs1hvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLhalf) {
    __glewVertexAttribs1hvNV(index, n, v)
}

VertexAttribs2hvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLhalf) {
    __glewVertexAttribs2hvNV(index, n, v)
}

VertexAttribs3hvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLhalf) {
    __glewVertexAttribs3hvNV(index, n, v)
}

VertexAttribs4hvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLhalf) {
    __glewVertexAttribs4hvNV(index, n, v)
}

VertexWeighthNV :: #force_inline proc "contextless" (weight: GLhalf) {
    __glewVertexWeighthNV(weight)
}

VertexWeighthvNV :: #force_inline proc "contextless" (weight: ^GLhalf) {
    __glewVertexWeighthvNV(weight)
}

VertexAttribDivisorNV :: #force_inline proc "contextless" (index: GLuint, divisor: GLuint) {
    __glewVertexAttribDivisorNV(index, divisor)
}

GetInternalformatSampleivNV :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, samples: GLsizei, pname: GLenum, bufSize: GLsizei, params: [^]GLint) {
    __glewGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params)
}

BufferAttachMemoryNV :: #force_inline proc "contextless" (target: GLenum, memory: GLuint, offset: GLuint64) {
    __glewBufferAttachMemoryNV(target, memory, offset)
}

GetMemoryObjectDetachedResourcesuivNV :: #force_inline proc "contextless" (memory: GLuint, pname: GLenum, first: GLint, count: GLsizei, params: [^]GLuint) {
    __glewGetMemoryObjectDetachedResourcesuivNV(memory, pname, first, count, params)
}

NamedBufferAttachMemoryNV :: #force_inline proc "contextless" (buffer: GLuint, memory: GLuint, offset: GLuint64) {
    __glewNamedBufferAttachMemoryNV(buffer, memory, offset)
}

ResetMemoryObjectParameterNV :: #force_inline proc "contextless" (memory: GLuint, pname: GLenum) {
    __glewResetMemoryObjectParameterNV(memory, pname)
}

TexAttachMemoryNV :: #force_inline proc "contextless" (target: GLenum, memory: GLuint, offset: GLuint64) {
    __glewTexAttachMemoryNV(target, memory, offset)
}

TextureAttachMemoryNV :: #force_inline proc "contextless" (texture: GLuint, memory: GLuint, offset: GLuint64) {
    __glewTextureAttachMemoryNV(texture, memory, offset)
}

BufferPageCommitmentMemNV :: #force_inline proc "contextless" (target: GLenum, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean) {
    __glewBufferPageCommitmentMemNV(target, offset, size, memory, memOffset, commit)
}

NamedBufferPageCommitmentMemNV :: #force_inline proc "contextless" (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean) {
    __glewNamedBufferPageCommitmentMemNV(buffer, offset, size, memory, memOffset, commit)
}

TexPageCommitmentMemNV :: #force_inline proc "contextless" (target: GLenum, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean) {
    __glewTexPageCommitmentMemNV(target, layer, level, xoffset, yoffset, zoffset, width, height, depth, memory, offset, commit)
}

TexturePageCommitmentMemNV :: #force_inline proc "contextless" (texture: GLuint, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean) {
    __glewTexturePageCommitmentMemNV(texture, layer, level, xoffset, yoffset, zoffset, width, height, depth, memory, offset, commit)
}

DrawMeshTasksIndirectNV :: #force_inline proc "contextless" (indirect: GLintptr) {
    __glewDrawMeshTasksIndirectNV(indirect)
}

DrawMeshTasksNV :: #force_inline proc "contextless" (first: GLuint, count: GLuint) {
    __glewDrawMeshTasksNV(first, count)
}

MultiDrawMeshTasksIndirectCountNV :: #force_inline proc "contextless" (indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawMeshTasksIndirectCountNV(indirect, drawcount, maxdrawcount, stride)
}

MultiDrawMeshTasksIndirectNV :: #force_inline proc "contextless" (indirect: GLintptr, drawcount: GLsizei, stride: GLsizei) {
    __glewMultiDrawMeshTasksIndirectNV(indirect, drawcount, stride)
}

UniformMatrix2x3fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2x3fvNV(location, count, transpose, value)
}

UniformMatrix2x4fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix2x4fvNV(location, count, transpose, value)
}

UniformMatrix3x2fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3x2fvNV(location, count, transpose, value)
}

UniformMatrix3x4fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix3x4fvNV(location, count, transpose, value)
}

UniformMatrix4x2fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4x2fvNV(location, count, transpose, value)
}

UniformMatrix4x3fvNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat) {
    __glewUniformMatrix4x3fvNV(location, count, transpose, value)
}

BeginOcclusionQueryNV :: #force_inline proc "contextless" (id: GLuint) {
    __glewBeginOcclusionQueryNV(id)
}

DeleteOcclusionQueriesNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteOcclusionQueriesNV(n, ids)
}

EndOcclusionQueryNV :: #force_inline proc "contextless" () {
    __glewEndOcclusionQueryNV()
}

GenOcclusionQueriesNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenOcclusionQueriesNV(n, ids)
}

GetOcclusionQueryivNV :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetOcclusionQueryivNV(id, pname, params)
}

GetOcclusionQueryuivNV :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetOcclusionQueryuivNV(id, pname, params)
}

IsOcclusionQueryNV :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsOcclusionQueryNV(id)
}

ProgramBufferParametersIivNV :: #force_inline proc "contextless" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLint) {
    __glewProgramBufferParametersIivNV(target, buffer, index, count, params)
}

ProgramBufferParametersIuivNV :: #force_inline proc "contextless" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLuint) {
    __glewProgramBufferParametersIuivNV(target, buffer, index, count, params)
}

ProgramBufferParametersfvNV :: #force_inline proc "contextless" (target: GLenum, buffer: GLuint, index: GLuint, count: GLsizei, params: [^]GLfloat) {
    __glewProgramBufferParametersfvNV(target, buffer, index, count, params)
}

CopyPathNV :: #force_inline proc "contextless" (resultPath: GLuint, srcPath: GLuint) {
    __glewCopyPathNV(resultPath, srcPath)
}

CoverFillPathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}

CoverFillPathNV :: #force_inline proc "contextless" (path: GLuint, coverMode: GLenum) {
    __glewCoverFillPathNV(path, coverMode)
}

CoverStrokePathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
}

CoverStrokePathNV :: #force_inline proc "contextless" (path: GLuint, coverMode: GLenum) {
    __glewCoverStrokePathNV(path, coverMode)
}

DeletePathsNV :: #force_inline proc "contextless" (path: GLuint, range: GLsizei) {
    __glewDeletePathsNV(path, range)
}

GenPathsNV :: #force_inline proc "contextless" (range: GLsizei) -> GLuint {
    return __glewGenPathsNV(range)
}

GetPathColorGenfvNV :: #force_inline proc "contextless" (color: GLenum, pname: GLenum, value: ^GLfloat) {
    __glewGetPathColorGenfvNV(color, pname, value)
}

GetPathColorGenivNV :: #force_inline proc "contextless" (color: GLenum, pname: GLenum, value: ^GLint) {
    __glewGetPathColorGenivNV(color, pname, value)
}

GetPathCommandsNV :: #force_inline proc "contextless" (path: GLuint, commands: [^]GLubyte) {
    __glewGetPathCommandsNV(path, commands)
}

GetPathCoordsNV :: #force_inline proc "contextless" (path: GLuint, coords: [^]GLfloat) {
    __glewGetPathCoordsNV(path, coords)
}

GetPathDashArrayNV :: #force_inline proc "contextless" (path: GLuint, dashArray: ^GLfloat) {
    __glewGetPathDashArrayNV(path, dashArray)
}

GetPathLengthNV :: #force_inline proc "contextless" (path: GLuint, startSegment: GLsizei, numSegments: GLsizei) -> GLfloat {
    return __glewGetPathLengthNV(path, startSegment, numSegments)
}

GetPathMetricRangeNV :: #force_inline proc "contextless" (metricQueryMask: GLbitfield, firstPathName: GLuint, numPaths: GLsizei, stride: GLsizei, metrics: [^]GLfloat) {
    __glewGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics)
}

GetPathMetricsNV :: #force_inline proc "contextless" (metricQueryMask: GLbitfield, numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, stride: GLsizei, metrics: [^]GLfloat) {
    __glewGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
}

GetPathParameterfvNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: ^GLfloat) {
    __glewGetPathParameterfvNV(path, pname, value)
}

GetPathParameterivNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: ^GLint) {
    __glewGetPathParameterivNV(path, pname, value)
}

GetPathSpacingNV :: #force_inline proc "contextless" (pathListMode: GLenum, numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, advanceScale: GLfloat, kerningScale: GLfloat, transformType: GLenum, returnedSpacing: ^GLfloat) {
    __glewGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
}

GetPathTexGenfvNV :: #force_inline proc "contextless" (texCoordSet: GLenum, pname: GLenum, value: ^GLfloat) {
    __glewGetPathTexGenfvNV(texCoordSet, pname, value)
}

GetPathTexGenivNV :: #force_inline proc "contextless" (texCoordSet: GLenum, pname: GLenum, value: ^GLint) {
    __glewGetPathTexGenivNV(texCoordSet, pname, value)
}

GetProgramResourcefvNV :: #force_inline proc "contextless" (program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: [^]GLenum, bufSize: GLsizei, length: ^GLsizei, params: [^]GLfloat) {
    __glewGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params)
}

InterpolatePathsNV :: #force_inline proc "contextless" (resultPath: GLuint, pathA: GLuint, pathB: GLuint, weight: GLfloat) {
    __glewInterpolatePathsNV(resultPath, pathA, pathB, weight)
}

IsPathNV :: #force_inline proc "contextless" (path: GLuint) -> GLboolean {
    return __glewIsPathNV(path)
}

IsPointInFillPathNV :: #force_inline proc "contextless" (path: GLuint, mask: GLuint, x: GLfloat, y: GLfloat) -> GLboolean {
    return __glewIsPointInFillPathNV(path, mask, x, y)
}

IsPointInStrokePathNV :: #force_inline proc "contextless" (path: GLuint, x: GLfloat, y: GLfloat) -> GLboolean {
    return __glewIsPointInStrokePathNV(path, x, y)
}

MatrixLoad3x2fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixLoad3x2fNV(matrixMode, m)
}

MatrixLoad3x3fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixLoad3x3fNV(matrixMode, m)
}

MatrixLoadTranspose3x3fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixLoadTranspose3x3fNV(matrixMode, m)
}

MatrixMult3x2fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixMult3x2fNV(matrixMode, m)
}

MatrixMult3x3fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixMult3x3fNV(matrixMode, m)
}

MatrixMultTranspose3x3fNV :: #force_inline proc "contextless" (matrixMode: GLenum, m: ^GLfloat) {
    __glewMatrixMultTranspose3x3fNV(matrixMode, m)
}

PathColorGenNV :: #force_inline proc "contextless" (color: GLenum, genMode: GLenum, colorFormat: GLenum, coeffs: [^]GLfloat) {
    __glewPathColorGenNV(color, genMode, colorFormat, coeffs)
}

PathCommandsNV :: #force_inline proc "contextless" (path: GLuint, numCommands: GLsizei, commands: [^]GLubyte, numCoords: GLsizei, coordType: GLenum, coords: rawptr) {
    __glewPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords)
}

PathCoordsNV :: #force_inline proc "contextless" (path: GLuint, numCoords: GLsizei, coordType: GLenum, coords: rawptr) {
    __glewPathCoordsNV(path, numCoords, coordType, coords)
}

PathCoverDepthFuncNV :: #force_inline proc "contextless" (zfunc: GLenum) {
    __glewPathCoverDepthFuncNV(zfunc)
}

PathDashArrayNV :: #force_inline proc "contextless" (path: GLuint, dashCount: GLsizei, dashArray: ^GLfloat) {
    __glewPathDashArrayNV(path, dashCount, dashArray)
}

PathFogGenNV :: #force_inline proc "contextless" (genMode: GLenum) {
    __glewPathFogGenNV(genMode)
}

PathGlyphIndexArrayNV :: #force_inline proc "contextless" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat) -> GLenum {
    return __glewPathGlyphIndexArrayNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}

PathGlyphIndexRangeNV :: #force_inline proc "contextless" (fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, pathParameterTemplate: GLuint, emScale: GLfloat, baseAndCount: ^GLuint) -> GLenum {
    return __glewPathGlyphIndexRangeNV(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount)
}

PathGlyphRangeNV :: #force_inline proc "contextless" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, firstGlyph: GLuint, numGlyphs: GLsizei, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) {
    __glewPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
}

PathGlyphsNV :: #force_inline proc "contextless" (firstPathName: GLuint, fontTarget: GLenum, fontName: rawptr, fontStyle: GLbitfield, numGlyphs: GLsizei, type: GLenum, charcodes: rawptr, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat) {
    __glewPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
}

PathMemoryGlyphIndexArrayNV :: #force_inline proc "contextless" (firstPathName: GLuint, fontTarget: GLenum, fontSize: GLsizeiptr, fontData: rawptr, faceIndex: GLsizei, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat) -> GLenum {
    return __glewPathMemoryGlyphIndexArrayNV(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale)
}

PathParameterfNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: GLfloat) {
    __glewPathParameterfNV(path, pname, value)
}

PathParameterfvNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: ^GLfloat) {
    __glewPathParameterfvNV(path, pname, value)
}

PathParameteriNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: GLint) {
    __glewPathParameteriNV(path, pname, value)
}

PathParameterivNV :: #force_inline proc "contextless" (path: GLuint, pname: GLenum, value: ^GLint) {
    __glewPathParameterivNV(path, pname, value)
}

PathStencilDepthOffsetNV :: #force_inline proc "contextless" (factor: GLfloat, units: GLfloat) {
    __glewPathStencilDepthOffsetNV(factor, units)
}

PathStencilFuncNV :: #force_inline proc "contextless" (func: GLenum, ref: GLint, mask: GLuint) {
    __glewPathStencilFuncNV(func, ref, mask)
}

PathStringNV :: #force_inline proc "contextless" (path: GLuint, format: GLenum, length: GLsizei, pathString: rawptr) {
    __glewPathStringNV(path, format, length, pathString)
}

PathSubCommandsNV :: #force_inline proc "contextless" (path: GLuint, commandStart: GLsizei, commandsToDelete: GLsizei, numCommands: GLsizei, commands: [^]GLubyte, numCoords: GLsizei, coordType: GLenum, coords: rawptr) {
    __glewPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
}

PathSubCoordsNV :: #force_inline proc "contextless" (path: GLuint, coordStart: GLsizei, numCoords: GLsizei, coordType: GLenum, coords: rawptr) {
    __glewPathSubCoordsNV(path, coordStart, numCoords, coordType, coords)
}

PathTexGenNV :: #force_inline proc "contextless" (texCoordSet: GLenum, genMode: GLenum, components: GLint, coeffs: [^]GLfloat) {
    __glewPathTexGenNV(texCoordSet, genMode, components, coeffs)
}

PointAlongPathNV :: #force_inline proc "contextless" (path: GLuint, startSegment: GLsizei, numSegments: GLsizei, distance: GLfloat, x: ^GLfloat, y: ^GLfloat, tangentX: ^GLfloat, tangentY: ^GLfloat) -> GLboolean {
    return __glewPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY)
}

ProgramPathFragmentInputGenNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, genMode: GLenum, components: GLint, coeffs: [^]GLfloat) {
    __glewProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs)
}

StencilFillPathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, fillMode: GLenum, mask: GLuint, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
}

StencilFillPathNV :: #force_inline proc "contextless" (path: GLuint, fillMode: GLenum, mask: GLuint) {
    __glewStencilFillPathNV(path, fillMode, mask)
}

StencilStrokePathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, reference: GLint, mask: GLuint, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
}

StencilStrokePathNV :: #force_inline proc "contextless" (path: GLuint, reference: GLint, mask: GLuint) {
    __glewStencilStrokePathNV(path, reference, mask)
}

StencilThenCoverFillPathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
}

StencilThenCoverFillPathNV :: #force_inline proc "contextless" (path: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum) {
    __glewStencilThenCoverFillPathNV(path, fillMode, mask, coverMode)
}

StencilThenCoverStrokePathInstancedNV :: #force_inline proc "contextless" (numPaths: GLsizei, pathNameType: GLenum, paths: rawptr, pathBase: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
}

StencilThenCoverStrokePathNV :: #force_inline proc "contextless" (path: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum) {
    __glewStencilThenCoverStrokePathNV(path, reference, mask, coverMode)
}

TransformPathNV :: #force_inline proc "contextless" (resultPath: GLuint, srcPath: GLuint, transformType: GLenum, transformValues: [^]GLfloat) {
    __glewTransformPathNV(resultPath, srcPath, transformType, transformValues)
}

WeightPathsNV :: #force_inline proc "contextless" (resultPath: GLuint, numPaths: GLsizei, paths: [^]GLuint, weights: [^]GLfloat) {
    __glewWeightPathsNV(resultPath, numPaths, paths, weights)
}

FlushPixelDataRangeNV :: #force_inline proc "contextless" (target: GLenum) {
    __glewFlushPixelDataRangeNV(target)
}

PixelDataRangeNV :: #force_inline proc "contextless" (target: GLenum, length: GLsizei, pointer: rawptr) {
    __glewPixelDataRangeNV(target, length, pointer)
}

PointParameteriNV :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewPointParameteriNV(pname, param)
}

PointParameterivNV :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewPointParameterivNV(pname, params)
}

PolygonModeNV :: #force_inline proc "contextless" (face: GLenum, mode: GLenum) {
    __glewPolygonModeNV(face, mode)
}

GetVideoi64vNV :: #force_inline proc "contextless" (video_slot: GLuint, pname: GLenum, params: [^]GLint64EXT) {
    __glewGetVideoi64vNV(video_slot, pname, params)
}

GetVideoivNV :: #force_inline proc "contextless" (video_slot: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVideoivNV(video_slot, pname, params)
}

GetVideoui64vNV :: #force_inline proc "contextless" (video_slot: GLuint, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetVideoui64vNV(video_slot, pname, params)
}

GetVideouivNV :: #force_inline proc "contextless" (video_slot: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetVideouivNV(video_slot, pname, params)
}

PresentFrameDualFillNV :: #force_inline proc "contextless" (video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type: GLenum, target0: GLenum, fill0: GLuint, target1: GLenum, fill1: GLuint, target2: GLenum, fill2: GLuint, target3: GLenum, fill3: GLuint) {
    __glewPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
}

PresentFrameKeyedNV :: #force_inline proc "contextless" (video_slot: GLuint, minPresentTime: GLuint64EXT, beginPresentTimeId: GLuint, presentDurationId: GLuint, type: GLenum, target0: GLenum, fill0: GLuint, key0: GLuint, target1: GLenum, fill1: GLuint, key1: GLuint) {
    __glewPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
}

PrimitiveRestartIndexNV :: #force_inline proc "contextless" (index: GLuint) {
    __glewPrimitiveRestartIndexNV(index)
}

PrimitiveRestartNV :: #force_inline proc "contextless" () {
    __glewPrimitiveRestartNV()
}

ReadBufferNV :: #force_inline proc "contextless" (mode: GLenum) {
    __glewReadBufferNV(mode)
}

CombinerInputNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) {
    __glewCombinerInputNV(stage, portion, variable, input, mapping, componentUsage)
}

CombinerOutputNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, abOutput: GLenum, cdOutput: GLenum, sumOutput: GLenum, scale: GLenum, bias: GLenum, abDotProduct: GLboolean, cdDotProduct: GLboolean, muxSum: GLboolean) {
    __glewCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
}

CombinerParameterfNV :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewCombinerParameterfNV(pname, param)
}

CombinerParameterfvNV :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewCombinerParameterfvNV(pname, params)
}

CombinerParameteriNV :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewCombinerParameteriNV(pname, param)
}

CombinerParameterivNV :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewCombinerParameterivNV(pname, params)
}

FinalCombinerInputNV :: #force_inline proc "contextless" (variable: GLenum, input: GLenum, mapping: GLenum, componentUsage: GLenum) {
    __glewFinalCombinerInputNV(variable, input, mapping, componentUsage)
}

GetCombinerInputParameterfvNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetCombinerInputParameterfvNV(stage, portion, variable, pname, params)
}

GetCombinerInputParameterivNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, variable: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetCombinerInputParameterivNV(stage, portion, variable, pname, params)
}

GetCombinerOutputParameterfvNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetCombinerOutputParameterfvNV(stage, portion, pname, params)
}

GetCombinerOutputParameterivNV :: #force_inline proc "contextless" (stage: GLenum, portion: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetCombinerOutputParameterivNV(stage, portion, pname, params)
}

GetFinalCombinerInputParameterfvNV :: #force_inline proc "contextless" (variable: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetFinalCombinerInputParameterfvNV(variable, pname, params)
}

GetFinalCombinerInputParameterivNV :: #force_inline proc "contextless" (variable: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFinalCombinerInputParameterivNV(variable, pname, params)
}

CombinerStageParameterfvNV :: #force_inline proc "contextless" (stage: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewCombinerStageParameterfvNV(stage, pname, params)
}

GetCombinerStageParameterfvNV :: #force_inline proc "contextless" (stage: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetCombinerStageParameterfvNV(stage, pname, params)
}

FramebufferSampleLocationsfvNV :: #force_inline proc "contextless" (target: GLenum, start: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewFramebufferSampleLocationsfvNV(target, start, count, v)
}

NamedFramebufferSampleLocationsfvNV :: #force_inline proc "contextless" (framebuffer: GLuint, start: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v)
}

ResolveDepthValuesNV :: #force_inline proc "contextless" () {
    __glewResolveDepthValuesNV()
}

ScissorExclusiveArrayvNV :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLint) {
    __glewScissorExclusiveArrayvNV(first, count, v)
}

ScissorExclusiveNV :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewScissorExclusiveNV(x, y, width, height)
}

GetBufferParameterui64vNV :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetBufferParameterui64vNV(target, pname, params)
}

GetIntegerui64vNV :: #force_inline proc "contextless" (value: GLenum, result: ^GLuint64EXT) {
    __glewGetIntegerui64vNV(value, result)
}

GetNamedBufferParameterui64vNV :: #force_inline proc "contextless" (buffer: GLuint, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetNamedBufferParameterui64vNV(buffer, pname, params)
}

IsBufferResidentNV :: #force_inline proc "contextless" (target: GLenum) -> GLboolean {
    return __glewIsBufferResidentNV(target)
}

IsNamedBufferResidentNV :: #force_inline proc "contextless" (buffer: GLuint) -> GLboolean {
    return __glewIsNamedBufferResidentNV(buffer)
}

MakeBufferNonResidentNV :: #force_inline proc "contextless" (target: GLenum) {
    __glewMakeBufferNonResidentNV(target)
}

MakeBufferResidentNV :: #force_inline proc "contextless" (target: GLenum, access: GLenum) {
    __glewMakeBufferResidentNV(target, access)
}

MakeNamedBufferNonResidentNV :: #force_inline proc "contextless" (buffer: GLuint) {
    __glewMakeNamedBufferNonResidentNV(buffer)
}

MakeNamedBufferResidentNV :: #force_inline proc "contextless" (buffer: GLuint, access: GLenum) {
    __glewMakeNamedBufferResidentNV(buffer, access)
}

ProgramUniformui64NV :: #force_inline proc "contextless" (program: GLuint, location: GLint, value: GLuint64EXT) {
    __glewProgramUniformui64NV(program, location, value)
}

ProgramUniformui64vNV :: #force_inline proc "contextless" (program: GLuint, location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewProgramUniformui64vNV(program, location, count, value)
}

Uniformui64NV :: #force_inline proc "contextless" (location: GLint, value: GLuint64EXT) {
    __glewUniformui64NV(location, value)
}

Uniformui64vNV :: #force_inline proc "contextless" (location: GLint, count: GLsizei, value: ^GLuint64EXT) {
    __glewUniformui64vNV(location, count, value)
}

BindShadingRateImageNV :: #force_inline proc "contextless" (texture: GLuint) {
    __glewBindShadingRateImageNV(texture)
}

GetShadingRateImagePaletteNV :: #force_inline proc "contextless" (viewport: GLuint, entry: GLuint, rate: ^GLenum) {
    __glewGetShadingRateImagePaletteNV(viewport, entry, rate)
}

GetShadingRateSampleLocationivNV :: #force_inline proc "contextless" (rate: GLenum, samples: GLuint, index: GLuint, location: ^GLint) {
    __glewGetShadingRateSampleLocationivNV(rate, samples, index, location)
}

ShadingRateImageBarrierNV :: #force_inline proc "contextless" (synchronize: GLboolean) {
    __glewShadingRateImageBarrierNV(synchronize)
}

ShadingRateImagePaletteNV :: #force_inline proc "contextless" (viewport: GLuint, first: GLuint, count: GLsizei, rates: [^]GLenum) {
    __glewShadingRateImagePaletteNV(viewport, first, count, rates)
}

ShadingRateSampleOrderCustomNV :: #force_inline proc "contextless" (rate: GLenum, samples: GLuint, locations: [^]GLint) {
    __glewShadingRateSampleOrderCustomNV(rate, samples, locations)
}

ShadingRateSampleOrderNV :: #force_inline proc "contextless" (order: GLenum) {
    __glewShadingRateSampleOrderNV(order)
}

CompressedTexImage3DNV :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage3DNV(target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedTexSubImage3DNV :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage3DNV(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

CopyTexSubImage3DNV :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTexSubImage3DNV(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

FramebufferTextureLayerNV :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) {
    __glewFramebufferTextureLayerNV(target, attachment, texture, level, layer)
}

TexImage3DNV :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexImage3DNV(target, level, internalFormat, width, height, depth, border, format, type, pixels)
}

TexSubImage3DNV :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage3DNV(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

TextureBarrierNV :: #force_inline proc "contextless" () {
    __glewTextureBarrierNV()
}

TexImage2DMultisampleCoverageNV :: #force_inline proc "contextless" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}

TexImage3DMultisampleCoverageNV :: #force_inline proc "contextless" (target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}

TextureImage2DMultisampleCoverageNV :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
}

TextureImage2DMultisampleNV :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations)
}

TextureImage3DMultisampleCoverageNV :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
}

TextureImage3DMultisampleNV :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, samples: GLsizei, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, fixedSampleLocations: GLboolean) {
    __glewTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
}

CreateSemaphoresNV :: #force_inline proc "contextless" (n: GLsizei, semaphores: [^]GLuint) {
    __glewCreateSemaphoresNV(n, semaphores)
}

GetSemaphoreParameterivNV :: #force_inline proc "contextless" (semaphore: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetSemaphoreParameterivNV(semaphore, pname, params)
}

SemaphoreParameterivNV :: #force_inline proc "contextless" (semaphore: GLuint, pname: GLenum, params: [^]GLint) {
    __glewSemaphoreParameterivNV(semaphore, pname, params)
}

ActiveVaryingNV :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) {
    __glewActiveVaryingNV(program, name)
}

BeginTransformFeedbackNV :: #force_inline proc "contextless" (primitiveMode: GLenum) {
    __glewBeginTransformFeedbackNV(primitiveMode)
}

BindBufferBaseNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint) {
    __glewBindBufferBaseNV(target, index, buffer)
}

BindBufferOffsetNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr) {
    __glewBindBufferOffsetNV(target, index, buffer, offset)
}

BindBufferRangeNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewBindBufferRangeNV(target, index, buffer, offset, size)
}

EndTransformFeedbackNV :: #force_inline proc "contextless" () {
    __glewEndTransformFeedbackNV()
}

GetActiveVaryingNV :: #force_inline proc "contextless" (program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar) {
    __glewGetActiveVaryingNV(program, index, bufSize, length, size, type, name)
}

GetTransformFeedbackVaryingNV :: #force_inline proc "contextless" (program: GLuint, index: GLuint, location: ^GLint) {
    __glewGetTransformFeedbackVaryingNV(program, index, location)
}

GetVaryingLocationNV :: #force_inline proc "contextless" (program: GLuint, name: ^GLchar) -> GLint {
    return __glewGetVaryingLocationNV(program, name)
}

TransformFeedbackAttribsNV :: #force_inline proc "contextless" (count: GLuint, attribs: [^]GLint, bufferMode: GLenum) {
    __glewTransformFeedbackAttribsNV(count, attribs, bufferMode)
}

TransformFeedbackVaryingsNV :: #force_inline proc "contextless" (program: GLuint, count: GLsizei, locations: [^]GLint, bufferMode: GLenum) {
    __glewTransformFeedbackVaryingsNV(program, count, locations, bufferMode)
}

BindTransformFeedbackNV :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBindTransformFeedbackNV(target, id)
}

DeleteTransformFeedbacksNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteTransformFeedbacksNV(n, ids)
}

DrawTransformFeedbackNV :: #force_inline proc "contextless" (mode: GLenum, id: GLuint) {
    __glewDrawTransformFeedbackNV(mode, id)
}

GenTransformFeedbacksNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenTransformFeedbacksNV(n, ids)
}

IsTransformFeedbackNV :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsTransformFeedbackNV(id)
}

PauseTransformFeedbackNV :: #force_inline proc "contextless" () {
    __glewPauseTransformFeedbackNV()
}

ResumeTransformFeedbackNV :: #force_inline proc "contextless" () {
    __glewResumeTransformFeedbackNV()
}

VDPAUFiniNV :: #force_inline proc "contextless" () {
    __glewVDPAUFiniNV()
}

VDPAUGetSurfaceivNV :: #force_inline proc "contextless" (surface: GLvdpauSurfaceNV, pname: GLenum, bufSize: GLsizei, length: ^GLsizei, values: [^]GLint) {
    __glewVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values)
}

VDPAUInitNV :: #force_inline proc "contextless" (vdpDevice: rawptr, getProcAddress: rawptr) {
    __glewVDPAUInitNV(vdpDevice, getProcAddress)
}

VDPAUIsSurfaceNV :: #force_inline proc "contextless" (surface: GLvdpauSurfaceNV) {
    __glewVDPAUIsSurfaceNV(surface)
}

VDPAUMapSurfacesNV :: #force_inline proc "contextless" (numSurfaces: GLsizei, surfaces: [^]GLvdpauSurfaceNV) {
    __glewVDPAUMapSurfacesNV(numSurfaces, surfaces)
}

VDPAURegisterOutputSurfaceNV :: #force_inline proc "contextless" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint) -> GLvdpauSurfaceNV {
    return __glewVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}

VDPAURegisterVideoSurfaceNV :: #force_inline proc "contextless" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint) -> GLvdpauSurfaceNV {
    return __glewVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames)
}

VDPAUSurfaceAccessNV :: #force_inline proc "contextless" (surface: GLvdpauSurfaceNV, access: GLenum) {
    __glewVDPAUSurfaceAccessNV(surface, access)
}

VDPAUUnmapSurfacesNV :: #force_inline proc "contextless" (numSurface: GLsizei, surfaces: [^]GLvdpauSurfaceNV) {
    __glewVDPAUUnmapSurfacesNV(numSurface, surfaces)
}

VDPAUUnregisterSurfaceNV :: #force_inline proc "contextless" (surface: GLvdpauSurfaceNV) {
    __glewVDPAUUnregisterSurfaceNV(surface)
}

VDPAURegisterVideoSurfaceWithPictureStructureNV :: #force_inline proc "contextless" (vdpSurface: rawptr, target: GLenum, numTextureNames: GLsizei, textureNames: [^]GLuint, isFrameStructure: GLboolean) -> GLvdpauSurfaceNV {
    return __glewVDPAURegisterVideoSurfaceWithPictureStructureNV(vdpSurface, target, numTextureNames, textureNames, isFrameStructure)
}

FlushVertexArrayRangeNV :: #force_inline proc "contextless" () {
    __glewFlushVertexArrayRangeNV()
}

VertexArrayRangeNV :: #force_inline proc "contextless" (length: GLsizei, pointer: rawptr) {
    __glewVertexArrayRangeNV(length, pointer)
}

GetVertexAttribLi64vNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint64EXT) {
    __glewGetVertexAttribLi64vNV(index, pname, params)
}

GetVertexAttribLui64vNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLuint64EXT) {
    __glewGetVertexAttribLui64vNV(index, pname, params)
}

VertexAttribL1i64NV :: #force_inline proc "contextless" (index: GLuint, x: GLint64EXT) {
    __glewVertexAttribL1i64NV(index, x)
}

VertexAttribL1i64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLint64EXT) {
    __glewVertexAttribL1i64vNV(index, v)
}

VertexAttribL1ui64NV :: #force_inline proc "contextless" (index: GLuint, x: GLuint64EXT) {
    __glewVertexAttribL1ui64NV(index, x)
}

VertexAttribL1ui64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint64EXT) {
    __glewVertexAttribL1ui64vNV(index, v)
}

VertexAttribL2i64NV :: #force_inline proc "contextless" (index: GLuint, x: GLint64EXT, y: GLint64EXT) {
    __glewVertexAttribL2i64NV(index, x, y)
}

VertexAttribL2i64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLint64EXT) {
    __glewVertexAttribL2i64vNV(index, v)
}

VertexAttribL2ui64NV :: #force_inline proc "contextless" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT) {
    __glewVertexAttribL2ui64NV(index, x, y)
}

VertexAttribL2ui64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint64EXT) {
    __glewVertexAttribL2ui64vNV(index, v)
}

VertexAttribL3i64NV :: #force_inline proc "contextless" (index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT) {
    __glewVertexAttribL3i64NV(index, x, y, z)
}

VertexAttribL3i64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLint64EXT) {
    __glewVertexAttribL3i64vNV(index, v)
}

VertexAttribL3ui64NV :: #force_inline proc "contextless" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT) {
    __glewVertexAttribL3ui64NV(index, x, y, z)
}

VertexAttribL3ui64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint64EXT) {
    __glewVertexAttribL3ui64vNV(index, v)
}

VertexAttribL4i64NV :: #force_inline proc "contextless" (index: GLuint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT) {
    __glewVertexAttribL4i64NV(index, x, y, z, w)
}

VertexAttribL4i64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLint64EXT) {
    __glewVertexAttribL4i64vNV(index, v)
}

VertexAttribL4ui64NV :: #force_inline proc "contextless" (index: GLuint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT) {
    __glewVertexAttribL4ui64NV(index, x, y, z, w)
}

VertexAttribL4ui64vNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLuint64EXT) {
    __glewVertexAttribL4ui64vNV(index, v)
}

VertexAttribLFormatNV :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei) {
    __glewVertexAttribLFormatNV(index, size, type, stride)
}

BufferAddressRangeNV :: #force_inline proc "contextless" (pname: GLenum, index: GLuint, address: GLuint64EXT, length: GLsizeiptr) {
    __glewBufferAddressRangeNV(pname, index, address, length)
}

ColorFormatNV :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei) {
    __glewColorFormatNV(size, type, stride)
}

EdgeFlagFormatNV :: #force_inline proc "contextless" (stride: GLsizei) {
    __glewEdgeFlagFormatNV(stride)
}

FogCoordFormatNV :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei) {
    __glewFogCoordFormatNV(type, stride)
}

GetIntegerui64i_vNV :: #force_inline proc "contextless" (value: GLenum, index: GLuint, result: [^]GLuint64EXT) {
    __glewGetIntegerui64i_vNV(value, index, result)
}

IndexFormatNV :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei) {
    __glewIndexFormatNV(type, stride)
}

NormalFormatNV :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei) {
    __glewNormalFormatNV(type, stride)
}

SecondaryColorFormatNV :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei) {
    __glewSecondaryColorFormatNV(size, type, stride)
}

TexCoordFormatNV :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei) {
    __glewTexCoordFormatNV(size, type, stride)
}

VertexAttribFormatNV :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei) {
    __glewVertexAttribFormatNV(index, size, type, normalized, stride)
}

VertexAttribIFormatNV :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei) {
    __glewVertexAttribIFormatNV(index, size, type, stride)
}

VertexFormatNV :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei) {
    __glewVertexFormatNV(size, type, stride)
}

AreProgramsResidentNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint, residences: [^]GLboolean) -> GLboolean {
    return __glewAreProgramsResidentNV(n, ids, residences)
}

BindProgramNV :: #force_inline proc "contextless" (target: GLenum, id: GLuint) {
    __glewBindProgramNV(target, id)
}

DeleteProgramsNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewDeleteProgramsNV(n, ids)
}

ExecuteProgramNV :: #force_inline proc "contextless" (target: GLenum, id: GLuint, params: [^]GLfloat) {
    __glewExecuteProgramNV(target, id, params)
}

GenProgramsNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewGenProgramsNV(n, ids)
}

GetProgramParameterdvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetProgramParameterdvNV(target, index, pname, params)
}

GetProgramParameterfvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetProgramParameterfvNV(target, index, pname, params)
}

GetProgramStringNV :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, program: ^GLubyte) {
    __glewGetProgramStringNV(id, pname, program)
}

GetProgramivNV :: #force_inline proc "contextless" (id: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetProgramivNV(id, pname, params)
}

GetTrackMatrixivNV :: #force_inline proc "contextless" (target: GLenum, address: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetTrackMatrixivNV(target, address, pname, params)
}

GetVertexAttribPointervNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, pointer: ^rawptr) {
    __glewGetVertexAttribPointervNV(index, pname, pointer)
}

GetVertexAttribdvNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVertexAttribdvNV(index, pname, params)
}

GetVertexAttribfvNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVertexAttribfvNV(index, pname, params)
}

GetVertexAttribivNV :: #force_inline proc "contextless" (index: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVertexAttribivNV(index, pname, params)
}

IsProgramNV :: #force_inline proc "contextless" (id: GLuint) -> GLboolean {
    return __glewIsProgramNV(id)
}

LoadProgramNV :: #force_inline proc "contextless" (target: GLenum, id: GLuint, len: GLsizei, program: ^GLubyte) {
    __glewLoadProgramNV(target, id, len, program)
}

ProgramParameter4dNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewProgramParameter4dNV(target, index, x, y, z, w)
}

ProgramParameter4dvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLdouble) {
    __glewProgramParameter4dvNV(target, index, params)
}

ProgramParameter4fNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewProgramParameter4fNV(target, index, x, y, z, w)
}

ProgramParameter4fvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, params: [^]GLfloat) {
    __glewProgramParameter4fvNV(target, index, params)
}

ProgramParameters4dvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, num: GLsizei, params: [^]GLdouble) {
    __glewProgramParameters4dvNV(target, index, num, params)
}

ProgramParameters4fvNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, num: GLsizei, params: [^]GLfloat) {
    __glewProgramParameters4fvNV(target, index, num, params)
}

RequestResidentProgramsNV :: #force_inline proc "contextless" (n: GLsizei, ids: [^]GLuint) {
    __glewRequestResidentProgramsNV(n, ids)
}

TrackMatrixNV :: #force_inline proc "contextless" (target: GLenum, address: GLuint, matrix_: GLenum, transform: GLenum) {
    __glewTrackMatrixNV(target, address, matrix_, transform)
}

VertexAttrib1dNV :: #force_inline proc "contextless" (index: GLuint, x: GLdouble) {
    __glewVertexAttrib1dNV(index, x)
}

VertexAttrib1dvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib1dvNV(index, v)
}

VertexAttrib1fNV :: #force_inline proc "contextless" (index: GLuint, x: GLfloat) {
    __glewVertexAttrib1fNV(index, x)
}

VertexAttrib1fvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib1fvNV(index, v)
}

VertexAttrib1sNV :: #force_inline proc "contextless" (index: GLuint, x: GLshort) {
    __glewVertexAttrib1sNV(index, x)
}

VertexAttrib1svNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib1svNV(index, v)
}

VertexAttrib2dNV :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble) {
    __glewVertexAttrib2dNV(index, x, y)
}

VertexAttrib2dvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib2dvNV(index, v)
}

VertexAttrib2fNV :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat) {
    __glewVertexAttrib2fNV(index, x, y)
}

VertexAttrib2fvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib2fvNV(index, v)
}

VertexAttrib2sNV :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort) {
    __glewVertexAttrib2sNV(index, x, y)
}

VertexAttrib2svNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib2svNV(index, v)
}

VertexAttrib3dNV :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) {
    __glewVertexAttrib3dNV(index, x, y, z)
}

VertexAttrib3dvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib3dvNV(index, v)
}

VertexAttrib3fNV :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewVertexAttrib3fNV(index, x, y, z)
}

VertexAttrib3fvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib3fvNV(index, v)
}

VertexAttrib3sNV :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort) {
    __glewVertexAttrib3sNV(index, x, y, z)
}

VertexAttrib3svNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib3svNV(index, v)
}

VertexAttrib4dNV :: #force_inline proc "contextless" (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) {
    __glewVertexAttrib4dNV(index, x, y, z, w)
}

VertexAttrib4dvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLdouble) {
    __glewVertexAttrib4dvNV(index, v)
}

VertexAttrib4fNV :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewVertexAttrib4fNV(index, x, y, z, w)
}

VertexAttrib4fvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewVertexAttrib4fvNV(index, v)
}

VertexAttrib4sNV :: #force_inline proc "contextless" (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) {
    __glewVertexAttrib4sNV(index, x, y, z, w)
}

VertexAttrib4svNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLshort) {
    __glewVertexAttrib4svNV(index, v)
}

VertexAttrib4ubNV :: #force_inline proc "contextless" (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) {
    __glewVertexAttrib4ubNV(index, x, y, z, w)
}

VertexAttrib4ubvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLubyte) {
    __glewVertexAttrib4ubvNV(index, v)
}

VertexAttribPointerNV :: #force_inline proc "contextless" (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewVertexAttribPointerNV(index, size, type, stride, pointer)
}

VertexAttribs1dvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLdouble) {
    __glewVertexAttribs1dvNV(index, n, v)
}

VertexAttribs1fvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLfloat) {
    __glewVertexAttribs1fvNV(index, n, v)
}

VertexAttribs1svNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLshort) {
    __glewVertexAttribs1svNV(index, n, v)
}

VertexAttribs2dvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLdouble) {
    __glewVertexAttribs2dvNV(index, n, v)
}

VertexAttribs2fvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLfloat) {
    __glewVertexAttribs2fvNV(index, n, v)
}

VertexAttribs2svNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLshort) {
    __glewVertexAttribs2svNV(index, n, v)
}

VertexAttribs3dvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLdouble) {
    __glewVertexAttribs3dvNV(index, n, v)
}

VertexAttribs3fvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLfloat) {
    __glewVertexAttribs3fvNV(index, n, v)
}

VertexAttribs3svNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLshort) {
    __glewVertexAttribs3svNV(index, n, v)
}

VertexAttribs4dvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLdouble) {
    __glewVertexAttribs4dvNV(index, n, v)
}

VertexAttribs4fvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLfloat) {
    __glewVertexAttribs4fvNV(index, n, v)
}

VertexAttribs4svNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLshort) {
    __glewVertexAttribs4svNV(index, n, v)
}

VertexAttribs4ubvNV :: #force_inline proc "contextless" (index: GLuint, n: GLsizei, v: ^GLubyte) {
    __glewVertexAttribs4ubvNV(index, n, v)
}

BeginVideoCaptureNV :: #force_inline proc "contextless" (video_capture_slot: GLuint) {
    __glewBeginVideoCaptureNV(video_capture_slot)
}

BindVideoCaptureStreamBufferNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, offset: GLintptrARB) {
    __glewBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset)
}

BindVideoCaptureStreamTextureNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, frame_region: GLenum, target: GLenum, texture: GLuint) {
    __glewBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture)
}

EndVideoCaptureNV :: #force_inline proc "contextless" (video_capture_slot: GLuint) {
    __glewEndVideoCaptureNV(video_capture_slot)
}

GetVideoCaptureStreamdvNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params)
}

GetVideoCaptureStreamfvNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params)
}

GetVideoCaptureStreamivNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params)
}

GetVideoCaptureivNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetVideoCaptureivNV(video_capture_slot, pname, params)
}

VideoCaptureNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, sequence_num: ^GLuint, capture_time: ^GLuint64EXT) -> GLenum {
    return __glewVideoCaptureNV(video_capture_slot, sequence_num, capture_time)
}

VideoCaptureStreamParameterdvNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLdouble) {
    __glewVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params)
}

VideoCaptureStreamParameterfvNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLfloat) {
    __glewVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params)
}

VideoCaptureStreamParameterivNV :: #force_inline proc "contextless" (video_capture_slot: GLuint, stream: GLuint, pname: GLenum, params: [^]GLint) {
    __glewVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params)
}

DepthRangeArrayfvNV :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewDepthRangeArrayfvNV(first, count, v)
}

DepthRangeIndexedfNV :: #force_inline proc "contextless" (index: GLuint, n: GLfloat, f: GLfloat) {
    __glewDepthRangeIndexedfNV(index, n, f)
}

DisableiNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewDisableiNV(target, index)
}

EnableiNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewEnableiNV(target, index)
}

GetFloati_vNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint, data: ^GLfloat) {
    __glewGetFloati_vNV(target, index, data)
}

IsEnablediNV :: #force_inline proc "contextless" (target: GLenum, index: GLuint) -> GLboolean {
    return __glewIsEnablediNV(target, index)
}

ScissorArrayvNV :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLint) {
    __glewScissorArrayvNV(first, count, v)
}

ScissorIndexedNV :: #force_inline proc "contextless" (index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei) {
    __glewScissorIndexedNV(index, left, bottom, width, height)
}

ScissorIndexedvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLint) {
    __glewScissorIndexedvNV(index, v)
}

ViewportArrayvNV :: #force_inline proc "contextless" (first: GLuint, count: GLsizei, v: ^GLfloat) {
    __glewViewportArrayvNV(first, count, v)
}

ViewportIndexedfNV :: #force_inline proc "contextless" (index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat) {
    __glewViewportIndexedfNV(index, x, y, w, h)
}

ViewportIndexedfvNV :: #force_inline proc "contextless" (index: GLuint, v: ^GLfloat) {
    __glewViewportIndexedfvNV(index, v)
}

ViewportSwizzleNV :: #force_inline proc "contextless" (index: GLuint, swizzlex: GLenum, swizzley: GLenum, swizzlez: GLenum, swizzlew: GLenum) {
    __glewViewportSwizzleNV(index, swizzlex, swizzley, swizzlez, swizzlew)
}

EGLImageTargetRenderbufferStorageOES :: #force_inline proc "contextless" (target: GLenum, image: GLeglImageOES) {
    __glewEGLImageTargetRenderbufferStorageOES(target, image)
}

EGLImageTargetTexture2DOES :: #force_inline proc "contextless" (target: GLenum, image: GLeglImageOES) {
    __glewEGLImageTargetTexture2DOES(target, image)
}

BlendEquationSeparateOES :: #force_inline proc "contextless" (modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateOES(modeRGB, modeAlpha)
}

BlendFuncSeparateOES :: #force_inline proc "contextless" (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) {
    __glewBlendFuncSeparateOES(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
}

BlendEquationOES :: #force_inline proc "contextless" (mode: GLenum) {
    __glewBlendEquationOES(mode)
}

CopyImageSubDataOES :: #force_inline proc "contextless" (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) {
    __glewCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
}

BlendEquationSeparateiOES :: #force_inline proc "contextless" (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) {
    __glewBlendEquationSeparateiOES(buf, modeRGB, modeAlpha)
}

BlendEquationiOES :: #force_inline proc "contextless" (buf: GLuint, mode: GLenum) {
    __glewBlendEquationiOES(buf, mode)
}

BlendFuncSeparateiOES :: #force_inline proc "contextless" (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) {
    __glewBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
}

BlendFunciOES :: #force_inline proc "contextless" (buf: GLuint, src: GLenum, dst: GLenum) {
    __glewBlendFunciOES(buf, src, dst)
}

ColorMaskiOES :: #force_inline proc "contextless" (buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) {
    __glewColorMaskiOES(buf, r, g, b, a)
}

DisableiOES :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewDisableiOES(target, index)
}

EnableiOES :: #force_inline proc "contextless" (target: GLenum, index: GLuint) {
    __glewEnableiOES(target, index)
}

IsEnablediOES :: #force_inline proc "contextless" (target: GLenum, index: GLuint) -> GLboolean {
    return __glewIsEnablediOES(target, index)
}

BindFramebufferOES :: #force_inline proc "contextless" (target: GLenum, framebuffer: GLuint) {
    __glewBindFramebufferOES(target, framebuffer)
}

BindRenderbufferOES :: #force_inline proc "contextless" (target: GLenum, renderbuffer: GLuint) {
    __glewBindRenderbufferOES(target, renderbuffer)
}

CheckFramebufferStatusOES :: #force_inline proc "contextless" (target: GLenum) -> GLenum {
    return __glewCheckFramebufferStatusOES(target)
}

DeleteFramebuffersOES :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewDeleteFramebuffersOES(n, framebuffers)
}

DeleteRenderbuffersOES :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewDeleteRenderbuffersOES(n, renderbuffers)
}

FramebufferRenderbufferOES :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) {
    __glewFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer)
}

FramebufferTexture2DOES :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) {
    __glewFramebufferTexture2DOES(target, attachment, textarget, texture, level)
}

GenFramebuffersOES :: #force_inline proc "contextless" (n: GLsizei, framebuffers: [^]GLuint) {
    __glewGenFramebuffersOES(n, framebuffers)
}

GenRenderbuffersOES :: #force_inline proc "contextless" (n: GLsizei, renderbuffers: [^]GLuint) {
    __glewGenRenderbuffersOES(n, renderbuffers)
}

GenerateMipmapOES :: #force_inline proc "contextless" (target: GLenum) {
    __glewGenerateMipmapOES(target)
}

GetFramebufferAttachmentParameterivOES :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetFramebufferAttachmentParameterivOES(target, attachment, pname, params)
}

GetRenderbufferParameterivOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetRenderbufferParameterivOES(target, pname, params)
}

IsFramebufferOES :: #force_inline proc "contextless" (framebuffer: GLuint) -> GLboolean {
    return __glewIsFramebufferOES(framebuffer)
}

IsRenderbufferOES :: #force_inline proc "contextless" (renderbuffer: GLuint) -> GLboolean {
    return __glewIsRenderbufferOES(renderbuffer)
}

RenderbufferStorageOES :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) {
    __glewRenderbufferStorageOES(target, internalformat, width, height)
}

GetProgramBinaryOES :: #force_inline proc "contextless" (program: GLuint, bufSize: GLsizei, length: ^GLsizei, binaryFormat: ^GLenum, binary: rawptr) {
    __glewGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary)
}

ProgramBinaryOES :: #force_inline proc "contextless" (program: GLuint, binaryFormat: GLenum, binary: rawptr, length: GLint) {
    __glewProgramBinaryOES(program, binaryFormat, binary, length)
}

GetBufferPointervOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]rawptr) {
    __glewGetBufferPointervOES(target, pname, params)
}

MapBufferOES :: #force_inline proc "contextless" (target: GLenum, access: GLenum) -> rawptr {
    return __glewMapBufferOES(target, access)
}

UnmapBufferOES :: #force_inline proc "contextless" (target: GLenum) -> GLboolean {
    return __glewUnmapBufferOES(target)
}

CurrentPaletteMatrixOES :: #force_inline proc "contextless" (index: GLuint) {
    __glewCurrentPaletteMatrixOES(index)
}

LoadPaletteFromModelViewMatrixOES :: #force_inline proc "contextless" () {
    __glewLoadPaletteFromModelViewMatrixOES()
}

MatrixIndexPointerOES :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewMatrixIndexPointerOES(size, type, stride, pointer)
}

WeightPointerOES :: #force_inline proc "contextless" (size: GLint, type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewWeightPointerOES(size, type, stride, pointer)
}

MinSampleShadingOES :: #force_inline proc "contextless" (value: GLfloat) {
    __glewMinSampleShadingOES(value)
}

ClearDepthfOES :: #force_inline proc "contextless" (depth: GLclampf) {
    __glewClearDepthfOES(depth)
}

ClipPlanefOES :: #force_inline proc "contextless" (plane: GLenum, equation: ^GLfloat) {
    __glewClipPlanefOES(plane, equation)
}

DepthRangefOES :: #force_inline proc "contextless" (n: GLclampf, f: GLclampf) {
    __glewDepthRangefOES(n, f)
}

FrustumfOES :: #force_inline proc "contextless" (l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) {
    __glewFrustumfOES(l, r, b, t, n, f)
}

GetClipPlanefOES :: #force_inline proc "contextless" (plane: GLenum, equation: ^GLfloat) {
    __glewGetClipPlanefOES(plane, equation)
}

OrthofOES :: #force_inline proc "contextless" (l: GLfloat, r: GLfloat, b: GLfloat, t: GLfloat, n: GLfloat, f: GLfloat) {
    __glewOrthofOES(l, r, b, t, n, f)
}

CompressedTexImage3DOES :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data)
}

CompressedTexSubImage3DOES :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: rawptr) {
    __glewCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
}

CopyTexSubImage3DOES :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height)
}

FramebufferTexture3DOES :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) {
    __glewFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset)
}

TexImage3DOES :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalFormat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexImage3DOES(target, level, internalFormat, width, height, depth, border, format, type, pixels)
}

TexSubImage3DOES :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
}

GetSamplerParameterIivOES :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewGetSamplerParameterIivOES(sampler, pname, params)
}

GetSamplerParameterIuivOES :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewGetSamplerParameterIuivOES(sampler, pname, params)
}

GetTexParameterIivOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTexParameterIivOES(target, pname, params)
}

GetTexParameterIuivOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewGetTexParameterIuivOES(target, pname, params)
}

SamplerParameterIivOES :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLint) {
    __glewSamplerParameterIivOES(sampler, pname, params)
}

SamplerParameterIuivOES :: #force_inline proc "contextless" (sampler: GLuint, pname: GLenum, params: [^]GLuint) {
    __glewSamplerParameterIuivOES(sampler, pname, params)
}

TexParameterIivOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewTexParameterIivOES(target, pname, params)
}

TexParameterIuivOES :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLuint) {
    __glewTexParameterIuivOES(target, pname, params)
}

TexBufferOES :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, buffer: GLuint) {
    __glewTexBufferOES(target, internalformat, buffer)
}

TexBufferRangeOES :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) {
    __glewTexBufferRangeOES(target, internalformat, buffer, offset, size)
}

GetTexGenfvOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetTexGenfvOES(coord, pname, params)
}

GetTexGenivOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetTexGenivOES(coord, pname, params)
}

GetTexGenxvOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewGetTexGenxvOES(coord, pname, params)
}

TexGenfOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, param: GLfloat) {
    __glewTexGenfOES(coord, pname, param)
}

TexGenfvOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewTexGenfvOES(coord, pname, params)
}

TexGeniOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, param: GLint) {
    __glewTexGeniOES(coord, pname, param)
}

TexGenivOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLint) {
    __glewTexGenivOES(coord, pname, params)
}

TexGenxOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, param: GLfixed) {
    __glewTexGenxOES(coord, pname, param)
}

TexGenxvOES :: #force_inline proc "contextless" (coord: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewTexGenxvOES(coord, pname, params)
}

TexStorage3DMultisampleOES :: #force_inline proc "contextless" (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) {
    __glewTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations)
}

TextureViewOES :: #force_inline proc "contextless" (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) {
    __glewTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
}

BindVertexArrayOES :: #force_inline proc "contextless" (array: GLuint) {
    __glewBindVertexArrayOES(array)
}

DeleteVertexArraysOES :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewDeleteVertexArraysOES(n, arrays)
}

GenVertexArraysOES :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewGenVertexArraysOES(n, arrays)
}

IsVertexArrayOES :: #force_inline proc "contextless" (array: GLuint) -> GLboolean {
    return __glewIsVertexArrayOES(array)
}

FramebufferTextureMultiviewOVR :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, baseViewIndex: GLint, numViews: GLsizei) {
    __glewFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews)
}

NamedFramebufferTextureMultiviewOVR :: #force_inline proc "contextless" (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, baseViewIndex: GLint, numViews: GLsizei) {
    __glewNamedFramebufferTextureMultiviewOVR(framebuffer, attachment, texture, level, baseViewIndex, numViews)
}

FramebufferTextureMultisampleMultiviewOVR :: #force_inline proc "contextless" (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, samples: GLsizei, baseViewIndex: GLint, numViews: GLsizei) {
    __glewFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews)
}

AlphaFuncQCOM :: #force_inline proc "contextless" (func: GLenum, ref: GLclampf) {
    __glewAlphaFuncQCOM(func, ref)
}

DisableDriverControlQCOM :: #force_inline proc "contextless" (driverControl: GLuint) {
    __glewDisableDriverControlQCOM(driverControl)
}

EnableDriverControlQCOM :: #force_inline proc "contextless" (driverControl: GLuint) {
    __glewEnableDriverControlQCOM(driverControl)
}

GetDriverControlStringQCOM :: #force_inline proc "contextless" (driverControl: GLuint, bufSize: GLsizei, length: ^GLsizei, driverControlString: ^GLchar) {
    __glewGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString)
}

GetDriverControlsQCOM :: #force_inline proc "contextless" (num: ^GLint, size: GLsizei, driverControls: [^]GLuint) {
    __glewGetDriverControlsQCOM(num, size, driverControls)
}

ExtGetBufferPointervQCOM :: #force_inline proc "contextless" (target: GLenum, params: [^]rawptr) {
    __glewExtGetBufferPointervQCOM(target, params)
}

ExtGetBuffersQCOM :: #force_inline proc "contextless" (buffers: [^]GLuint, maxBuffers: GLint, numBuffers: [^]GLint) {
    __glewExtGetBuffersQCOM(buffers, maxBuffers, numBuffers)
}

ExtGetFramebuffersQCOM :: #force_inline proc "contextless" (framebuffers: [^]GLuint, maxFramebuffers: GLint, numFramebuffers: [^]GLint) {
    __glewExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers)
}

ExtGetRenderbuffersQCOM :: #force_inline proc "contextless" (renderbuffers: [^]GLuint, maxRenderbuffers: GLint, numRenderbuffers: [^]GLint) {
    __glewExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers)
}

ExtGetTexLevelParameterivQCOM :: #force_inline proc "contextless" (texture: GLuint, face: GLenum, level: GLint, pname: GLenum, params: [^]GLint) {
    __glewExtGetTexLevelParameterivQCOM(texture, face, level, pname, params)
}

ExtGetTexSubImageQCOM :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, texels: rawptr) {
    __glewExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
}

ExtGetTexturesQCOM :: #force_inline proc "contextless" (textures: [^]GLuint, maxTextures: GLint, numTextures: [^]GLint) {
    __glewExtGetTexturesQCOM(textures, maxTextures, numTextures)
}

ExtTexObjectStateOverrideiQCOM :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewExtTexObjectStateOverrideiQCOM(target, pname, param)
}

ExtGetProgramBinarySourceQCOM :: #force_inline proc "contextless" (program: GLuint, shadertype: GLenum, source: ^GLchar, length: ^GLint) {
    __glewExtGetProgramBinarySourceQCOM(program, shadertype, source, length)
}

ExtGetProgramsQCOM :: #force_inline proc "contextless" (programs: [^]GLuint, maxPrograms: GLint, numPrograms: [^]GLint) {
    __glewExtGetProgramsQCOM(programs, maxPrograms, numPrograms)
}

ExtGetShadersQCOM :: #force_inline proc "contextless" (shaders: [^]GLuint, maxShaders: GLint, numShaders: [^]GLint) {
    __glewExtGetShadersQCOM(shaders, maxShaders, numShaders)
}

ExtIsProgramBinaryQCOM :: #force_inline proc "contextless" (program: GLuint) -> GLboolean {
    return __glewExtIsProgramBinaryQCOM(program)
}

ExtrapolateTex2DQCOM :: #force_inline proc "contextless" (src1: GLuint, src2: GLuint, output: GLuint, scaleFactor: GLfloat) {
    __glewExtrapolateTex2DQCOM(src1, src2, output, scaleFactor)
}

FramebufferFoveationConfigQCOM :: #force_inline proc "contextless" (fbo: GLuint, numLayers: GLuint, focalPointsPerLayer: GLuint, requestedFeatures: GLuint, providedFeatures: [^]GLuint) {
    __glewFramebufferFoveationConfigQCOM(fbo, numLayers, focalPointsPerLayer, requestedFeatures, providedFeatures)
}

FramebufferFoveationParametersQCOM :: #force_inline proc "contextless" (fbo: GLuint, layer: GLuint, focalPoint: GLuint, focalX: GLfloat, focalY: GLfloat, gainX: GLfloat, gainY: GLfloat, foveaArea: GLfloat) {
    __glewFramebufferFoveationParametersQCOM(fbo, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea)
}

TexEstimateMotionQCOM :: #force_inline proc "contextless" (ref: GLuint, target: GLuint, output: GLuint) {
    __glewTexEstimateMotionQCOM(ref, target, output)
}

TexEstimateMotionRegionsQCOM :: #force_inline proc "contextless" (ref: GLuint, target: GLuint, output: GLuint, mask: GLuint) {
    __glewTexEstimateMotionRegionsQCOM(ref, target, output, mask)
}

FramebufferFetchBarrierQCOM :: #force_inline proc "contextless" () {
    __glewFramebufferFetchBarrierQCOM()
}

ShadingRateQCOM :: #force_inline proc "contextless" (rate: GLenum) {
    __glewShadingRateQCOM(rate)
}

TextureFoveationParametersQCOM :: #force_inline proc "contextless" (texture: GLuint, layer: GLuint, focalPoint: GLuint, focalX: GLfloat, focalY: GLfloat, gainX: GLfloat, gainY: GLfloat, foveaArea: GLfloat) {
    __glewTextureFoveationParametersQCOM(texture, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea)
}

EndTilingQCOM :: #force_inline proc "contextless" (preserveMask: GLbitfield) {
    __glewEndTilingQCOM(preserveMask)
}

StartTilingQCOM :: #force_inline proc "contextless" (x: GLuint, y: GLuint, width: GLuint, height: GLuint, preserveMask: GLbitfield) {
    __glewStartTilingQCOM(x, y, width, height, preserveMask)
}

AlphaFuncx :: #force_inline proc "contextless" (func: GLenum, ref: GLclampx) {
    __glewAlphaFuncx(func, ref)
}

ClearColorx :: #force_inline proc "contextless" (red: GLclampx, green: GLclampx, blue: GLclampx, alpha: GLclampx) {
    __glewClearColorx(red, green, blue, alpha)
}

ClearDepthx :: #force_inline proc "contextless" (depth: GLclampx) {
    __glewClearDepthx(depth)
}

Color4x :: #force_inline proc "contextless" (red: GLfixed, green: GLfixed, blue: GLfixed, alpha: GLfixed) {
    __glewColor4x(red, green, blue, alpha)
}

DepthRangex :: #force_inline proc "contextless" (zNear: GLclampx, zFar: GLclampx) {
    __glewDepthRangex(zNear, zFar)
}

Fogx :: #force_inline proc "contextless" (pname: GLenum, param: GLfixed) {
    __glewFogx(pname, param)
}

Fogxv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfixed) {
    __glewFogxv(pname, params)
}

Frustumf :: #force_inline proc "contextless" (left: GLfloat, right: GLfloat, bottom: GLfloat, top: GLfloat, zNear: GLfloat, zFar: GLfloat) {
    __glewFrustumf(left, right, bottom, top, zNear, zFar)
}

Frustumx :: #force_inline proc "contextless" (left: GLfixed, right: GLfixed, bottom: GLfixed, top: GLfixed, zNear: GLfixed, zFar: GLfixed) {
    __glewFrustumx(left, right, bottom, top, zNear, zFar)
}

LightModelx :: #force_inline proc "contextless" (pname: GLenum, param: GLfixed) {
    __glewLightModelx(pname, param)
}

LightModelxv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfixed) {
    __glewLightModelxv(pname, params)
}

Lightx :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, param: GLfixed) {
    __glewLightx(light, pname, param)
}

Lightxv :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewLightxv(light, pname, params)
}

LineWidthx :: #force_inline proc "contextless" (width: GLfixed) {
    __glewLineWidthx(width)
}

LoadMatrixx :: #force_inline proc "contextless" (m: ^GLfixed) {
    __glewLoadMatrixx(m)
}

Materialx :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, param: GLfixed) {
    __glewMaterialx(face, pname, param)
}

Materialxv :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewMaterialxv(face, pname, params)
}

MultMatrixx :: #force_inline proc "contextless" (m: ^GLfixed) {
    __glewMultMatrixx(m)
}

MultiTexCoord4x :: #force_inline proc "contextless" (target: GLenum, s: GLfixed, t: GLfixed, r: GLfixed, q: GLfixed) {
    __glewMultiTexCoord4x(target, s, t, r, q)
}

Normal3x :: #force_inline proc "contextless" (nx: GLfixed, ny: GLfixed, nz: GLfixed) {
    __glewNormal3x(nx, ny, nz)
}

Orthof :: #force_inline proc "contextless" (left: GLfloat, right: GLfloat, bottom: GLfloat, top: GLfloat, zNear: GLfloat, zFar: GLfloat) {
    __glewOrthof(left, right, bottom, top, zNear, zFar)
}

Orthox :: #force_inline proc "contextless" (left: GLfixed, right: GLfixed, bottom: GLfixed, top: GLfixed, zNear: GLfixed, zFar: GLfixed) {
    __glewOrthox(left, right, bottom, top, zNear, zFar)
}

PointSizex :: #force_inline proc "contextless" (size: GLfixed) {
    __glewPointSizex(size)
}

PolygonOffsetx :: #force_inline proc "contextless" (factor: GLfixed, units: GLfixed) {
    __glewPolygonOffsetx(factor, units)
}

Rotatex :: #force_inline proc "contextless" (angle: GLfixed, x: GLfixed, y: GLfixed, z: GLfixed) {
    __glewRotatex(angle, x, y, z)
}

SampleCoveragex :: #force_inline proc "contextless" (value: GLclampx, invert: GLboolean) {
    __glewSampleCoveragex(value, invert)
}

Scalex :: #force_inline proc "contextless" (x: GLfixed, y: GLfixed, z: GLfixed) {
    __glewScalex(x, y, z)
}

TexEnvx :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfixed) {
    __glewTexEnvx(target, pname, param)
}

TexEnvxv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewTexEnvxv(target, pname, params)
}

TexParameterx :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfixed) {
    __glewTexParameterx(target, pname, param)
}

Translatex :: #force_inline proc "contextless" (x: GLfixed, y: GLfixed, z: GLfixed) {
    __glewTranslatex(x, y, z)
}

ClipPlanef :: #force_inline proc "contextless" (plane: GLenum, equation: ^GLfloat) {
    __glewClipPlanef(plane, equation)
}

ClipPlanex :: #force_inline proc "contextless" (plane: GLenum, equation: ^GLfixed) {
    __glewClipPlanex(plane, equation)
}

GetClipPlanef :: #force_inline proc "contextless" (pname: GLenum, eqn: [4]GLfloat) {
    __glewGetClipPlanef(pname, eqn)
}

GetClipPlanex :: #force_inline proc "contextless" (pname: GLenum, eqn: [4]GLfixed) {
    __glewGetClipPlanex(pname, eqn)
}

GetFixedv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfixed) {
    __glewGetFixedv(pname, params)
}

GetLightxv :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewGetLightxv(light, pname, params)
}

GetMaterialxv :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewGetMaterialxv(face, pname, params)
}

GetTexEnvxv :: #force_inline proc "contextless" (env: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewGetTexEnvxv(env, pname, params)
}

GetTexParameterxv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewGetTexParameterxv(target, pname, params)
}

PointParameterx :: #force_inline proc "contextless" (pname: GLenum, param: GLfixed) {
    __glewPointParameterx(pname, param)
}

PointParameterxv :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfixed) {
    __glewPointParameterxv(pname, params)
}

PointSizePointerOES :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewPointSizePointerOES(type, stride, pointer)
}

TexParameterxv :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfixed) {
    __glewTexParameterxv(target, pname, params)
}

ErrorStringREGAL :: #force_inline proc "contextless" (error: GLenum) -> ^GLchar {
    return __glewErrorStringREGAL(error)
}

GetExtensionREGAL :: #force_inline proc "contextless" (ext: ^GLchar) -> GLboolean {
    return __glewGetExtensionREGAL(ext)
}

IsSupportedREGAL :: #force_inline proc "contextless" (ext: ^GLchar) -> GLboolean {
    return __glewIsSupportedREGAL(ext)
}

LogMessageCallbackREGAL :: #force_inline proc "contextless" (callback: GLLOGPROCREGAL) {
    __glewLogMessageCallbackREGAL(callback)
}

GetProcAddressREGAL :: #force_inline proc "contextless" (name: ^GLchar) -> rawptr {
    return __glewGetProcAddressREGAL(name)
}

DetailTexFuncSGIS :: #force_inline proc "contextless" (target: GLenum, n: GLsizei, points: [^]GLfloat) {
    __glewDetailTexFuncSGIS(target, n, points)
}

GetDetailTexFuncSGIS :: #force_inline proc "contextless" (target: GLenum, points: [^]GLfloat) {
    __glewGetDetailTexFuncSGIS(target, points)
}

FogFuncSGIS :: #force_inline proc "contextless" (n: GLsizei, points: [^]GLfloat) {
    __glewFogFuncSGIS(n, points)
}

GetFogFuncSGIS :: #force_inline proc "contextless" (points: [^]GLfloat) {
    __glewGetFogFuncSGIS(points)
}

SampleMaskSGIS :: #force_inline proc "contextless" (value: GLclampf, invert: GLboolean) {
    __glewSampleMaskSGIS(value, invert)
}

SamplePatternSGIS :: #force_inline proc "contextless" (pattern: GLenum) {
    __glewSamplePatternSGIS(pattern)
}

InterleavedTextureCoordSetsSGIS :: #force_inline proc "contextless" (factor: GLint) {
    __glewInterleavedTextureCoordSetsSGIS(factor)
}

SelectTextureCoordSetSGIS :: #force_inline proc "contextless" (target: GLenum) {
    __glewSelectTextureCoordSetSGIS(target)
}

SelectTextureSGIS :: #force_inline proc "contextless" (target: GLenum) {
    __glewSelectTextureSGIS(target)
}

SelectTextureTransformSGIS :: #force_inline proc "contextless" (target: GLenum) {
    __glewSelectTextureTransformSGIS(target)
}

MultisampleSubRectPosSGIS :: #force_inline proc "contextless" (x: GLint, y: GLint) {
    __glewMultisampleSubRectPosSGIS(x, y)
}

GetSharpenTexFuncSGIS :: #force_inline proc "contextless" (target: GLenum, points: [^]GLfloat) {
    __glewGetSharpenTexFuncSGIS(target, points)
}

SharpenTexFuncSGIS :: #force_inline proc "contextless" (target: GLenum, n: GLsizei, points: [^]GLfloat) {
    __glewSharpenTexFuncSGIS(target, n, points)
}

TexImage4DSGIS :: #force_inline proc "contextless" (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, extent: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexImage4DSGIS(target, level, internalformat, width, height, depth, extent, border, format, type, pixels)
}

TexSubImage4DSGIS :: #force_inline proc "contextless" (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, woffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, extent: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, extent, format, type, pixels)
}

GetTexFilterFuncSGIS :: #force_inline proc "contextless" (target: GLenum, filter: GLenum, weights: [^]GLfloat) {
    __glewGetTexFilterFuncSGIS(target, filter, weights)
}

TexFilterFuncSGIS :: #force_inline proc "contextless" (target: GLenum, filter: GLenum, n: GLsizei, weights: [^]GLfloat) {
    __glewTexFilterFuncSGIS(target, filter, n, weights)
}

AsyncMarkerSGIX :: #force_inline proc "contextless" (marker: GLuint) {
    __glewAsyncMarkerSGIX(marker)
}

DeleteAsyncMarkersSGIX :: #force_inline proc "contextless" (marker: GLuint, range: GLsizei) {
    __glewDeleteAsyncMarkersSGIX(marker, range)
}

FinishAsyncSGIX :: #force_inline proc "contextless" (markerp: ^GLuint) -> GLint {
    return __glewFinishAsyncSGIX(markerp)
}

GenAsyncMarkersSGIX :: #force_inline proc "contextless" (range: GLsizei) -> GLuint {
    return __glewGenAsyncMarkersSGIX(range)
}

IsAsyncMarkerSGIX :: #force_inline proc "contextless" (marker: GLuint) -> GLboolean {
    return __glewIsAsyncMarkerSGIX(marker)
}

PollAsyncSGIX :: #force_inline proc "contextless" (markerp: ^GLuint) -> GLint {
    return __glewPollAsyncSGIX(markerp)
}

AddressSpace :: #force_inline proc "contextless" (space: GLenum, mask: GLbitfield) {
    __glewAddressSpace(space, mask)
}

DataPipe :: #force_inline proc "contextless" (space: GLenum) -> GLint {
    return __glewDataPipe(space)
}

FlushRasterSGIX :: #force_inline proc "contextless" () {
    __glewFlushRasterSGIX()
}

FogLayersSGIX :: #force_inline proc "contextless" (n: GLsizei, points: [^]GLfloat) {
    __glewFogLayersSGIX(n, points)
}

GetFogLayersSGIX :: #force_inline proc "contextless" (points: [^]GLfloat) {
    __glewGetFogLayersSGIX(points)
}

TextureFogSGIX :: #force_inline proc "contextless" (pname: GLenum) {
    __glewTextureFogSGIX(pname)
}

FragmentColorMaterialSGIX :: #force_inline proc "contextless" (face: GLenum, mode: GLenum) {
    __glewFragmentColorMaterialSGIX(face, mode)
}

FragmentLightModelfSGIX :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewFragmentLightModelfSGIX(pname, param)
}

FragmentLightModelfvSGIX :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewFragmentLightModelfvSGIX(pname, params)
}

FragmentLightModeliSGIX :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewFragmentLightModeliSGIX(pname, param)
}

FragmentLightModelivSGIX :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewFragmentLightModelivSGIX(pname, params)
}

FragmentLightfSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, param: GLfloat) {
    __glewFragmentLightfSGIX(light, pname, param)
}

FragmentLightfvSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewFragmentLightfvSGIX(light, pname, params)
}

FragmentLightiSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, param: GLint) {
    __glewFragmentLightiSGIX(light, pname, param)
}

FragmentLightivSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, params: [^]GLint) {
    __glewFragmentLightivSGIX(light, pname, params)
}

FragmentMaterialfSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, param: GLfloat) {
    __glewFragmentMaterialfSGIX(face, pname, param)
}

FragmentMaterialfvSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewFragmentMaterialfvSGIX(face, pname, params)
}

FragmentMaterialiSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, param: GLint) {
    __glewFragmentMaterialiSGIX(face, pname, param)
}

FragmentMaterialivSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, params: [^]GLint) {
    __glewFragmentMaterialivSGIX(face, pname, params)
}

GetFragmentLightfvSGIX :: #force_inline proc "contextless" (light: GLenum, value: GLenum, data: ^GLfloat) {
    __glewGetFragmentLightfvSGIX(light, value, data)
}

GetFragmentLightivSGIX :: #force_inline proc "contextless" (light: GLenum, value: GLenum, data: ^GLint) {
    __glewGetFragmentLightivSGIX(light, value, data)
}

GetFragmentMaterialfvSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, data: ^GLfloat) {
    __glewGetFragmentMaterialfvSGIX(face, pname, data)
}

GetFragmentMaterialivSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, data: ^GLint) {
    __glewGetFragmentMaterialivSGIX(face, pname, data)
}

FrameZoomSGIX :: #force_inline proc "contextless" (factor: GLint) {
    __glewFrameZoomSGIX(factor)
}

IglooInterfaceSGIX :: #force_inline proc "contextless" (pname: GLenum, param: rawptr) {
    __glewIglooInterfaceSGIX(pname, param)
}

AllocMPEGPredictorsSGIX :: #force_inline proc "contextless" (width: GLsizei, height: GLsizei, n: GLsizei, predictors: [^]GLuint) {
    __glewAllocMPEGPredictorsSGIX(width, height, n, predictors)
}

DeleteMPEGPredictorsSGIX :: #force_inline proc "contextless" (n: GLsizei, predictors: [^]GLuint) {
    __glewDeleteMPEGPredictorsSGIX(n, predictors)
}

GenMPEGPredictorsSGIX :: #force_inline proc "contextless" (n: GLsizei, predictors: [^]GLuint) {
    __glewGenMPEGPredictorsSGIX(n, predictors)
}

GetMPEGParameterfvSGIX :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetMPEGParameterfvSGIX(target, pname, params)
}

GetMPEGParameterivSGIX :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetMPEGParameterivSGIX(target, pname, params)
}

GetMPEGPredictorSGIX :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewGetMPEGPredictorSGIX(target, format, type, pixels)
}

GetMPEGQuantTableubv :: #force_inline proc "contextless" (target: GLenum, values: [^]GLubyte) {
    __glewGetMPEGQuantTableubv(target, values)
}

IsMPEGPredictorSGIX :: #force_inline proc "contextless" (predictor: GLuint) -> GLboolean {
    return __glewIsMPEGPredictorSGIX(predictor)
}

MPEGPredictorSGIX :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewMPEGPredictorSGIX(target, format, type, pixels)
}

MPEGQuantTableubv :: #force_inline proc "contextless" (target: GLenum, values: [^]GLubyte) {
    __glewMPEGQuantTableubv(target, values)
}

SwapMPEGPredictorsSGIX :: #force_inline proc "contextless" (target0: GLenum, target1: GLenum) {
    __glewSwapMPEGPredictorsSGIX(target0, target1)
}

GetNonlinLightfvSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, terms: [^]GLint, data: ^GLfloat) {
    __glewGetNonlinLightfvSGIX(light, pname, terms, data)
}

GetNonlinMaterialfvSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, terms: [^]GLint, data: ^GLfloat) {
    __glewGetNonlinMaterialfvSGIX(face, pname, terms, data)
}

NonlinLightfvSGIX :: #force_inline proc "contextless" (light: GLenum, pname: GLenum, terms: GLint, params: [^]GLfloat) {
    __glewNonlinLightfvSGIX(light, pname, terms, params)
}

NonlinMaterialfvSGIX :: #force_inline proc "contextless" (face: GLenum, pname: GLenum, terms: GLint, params: [^]GLfloat) {
    __glewNonlinMaterialfvSGIX(face, pname, terms, params)
}

PixelTexGenSGIX :: #force_inline proc "contextless" (mode: GLenum) {
    __glewPixelTexGenSGIX(mode)
}

DeformSGIX :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewDeformSGIX(mask)
}

LoadIdentityDeformationMapSGIX :: #force_inline proc "contextless" (mask: GLbitfield) {
    __glewLoadIdentityDeformationMapSGIX(mask)
}

MeshBreadthSGIX :: #force_inline proc "contextless" (breadth: GLint) {
    __glewMeshBreadthSGIX(breadth)
}

MeshStrideSGIX :: #force_inline proc "contextless" (stride: GLint) {
    __glewMeshStrideSGIX(stride)
}

ReferencePlaneSGIX :: #force_inline proc "contextless" (equation: ^GLdouble) {
    __glewReferencePlaneSGIX(equation)
}

SpriteParameterfSGIX :: #force_inline proc "contextless" (pname: GLenum, param: GLfloat) {
    __glewSpriteParameterfSGIX(pname, param)
}

SpriteParameterfvSGIX :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLfloat) {
    __glewSpriteParameterfvSGIX(pname, params)
}

SpriteParameteriSGIX :: #force_inline proc "contextless" (pname: GLenum, param: GLint) {
    __glewSpriteParameteriSGIX(pname, param)
}

SpriteParameterivSGIX :: #force_inline proc "contextless" (pname: GLenum, params: [^]GLint) {
    __glewSpriteParameterivSGIX(pname, params)
}

TagSampleBufferSGIX :: #force_inline proc "contextless" () {
    __glewTagSampleBufferSGIX()
}

GetVectorOperationSGIX :: #force_inline proc "contextless" (operation: GLenum) {
    __glewGetVectorOperationSGIX(operation)
}

VectorOperationSGIX :: #force_inline proc "contextless" (operation: GLenum) {
    __glewVectorOperationSGIX(operation)
}

AreVertexArraysResidentSGIX :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint, residences: [^]GLboolean) -> GLboolean {
    return __glewAreVertexArraysResidentSGIX(n, arrays, residences)
}

BindVertexArraySGIX :: #force_inline proc "contextless" (array: GLuint) {
    __glewBindVertexArraySGIX(array)
}

DeleteVertexArraysSGIX :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewDeleteVertexArraysSGIX(n, arrays)
}

GenVertexArraysSGIX :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint) {
    __glewGenVertexArraysSGIX(n, arrays)
}

IsVertexArraySGIX :: #force_inline proc "contextless" (array: GLuint) -> GLboolean {
    return __glewIsVertexArraySGIX(array)
}

PrioritizeVertexArraysSGIX :: #force_inline proc "contextless" (n: GLsizei, arrays: [^]GLuint, priorities: [^]GLclampf) {
    __glewPrioritizeVertexArraysSGIX(n, arrays, priorities)
}

ColorTableParameterfvSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewColorTableParameterfvSGI(target, pname, params)
}

ColorTableParameterivSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewColorTableParameterivSGI(target, pname, params)
}

ColorTableSGI :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, type: GLenum, table: rawptr) {
    __glewColorTableSGI(target, internalformat, width, format, type, table)
}

CopyColorTableSGI :: #force_inline proc "contextless" (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) {
    __glewCopyColorTableSGI(target, internalformat, x, y, width)
}

GetColorTableParameterfvSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetColorTableParameterfvSGI(target, pname, params)
}

GetColorTableParameterivSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetColorTableParameterivSGI(target, pname, params)
}

GetColorTableSGI :: #force_inline proc "contextless" (target: GLenum, format: GLenum, type: GLenum, table: rawptr) {
    __glewGetColorTableSGI(target, format, type, table)
}

GetPixelTransformParameterfvSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewGetPixelTransformParameterfvSGI(target, pname, params)
}

GetPixelTransformParameterivSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewGetPixelTransformParameterivSGI(target, pname, params)
}

PixelTransformParameterfSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLfloat) {
    __glewPixelTransformParameterfSGI(target, pname, param)
}

PixelTransformParameterfvSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLfloat) {
    __glewPixelTransformParameterfvSGI(target, pname, params)
}

PixelTransformParameteriSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, param: GLint) {
    __glewPixelTransformParameteriSGI(target, pname, param)
}

PixelTransformParameterivSGI :: #force_inline proc "contextless" (target: GLenum, pname: GLenum, params: [^]GLint) {
    __glewPixelTransformParameterivSGI(target, pname, params)
}

PixelTransformSGI :: #force_inline proc "contextless" (target: GLenum) {
    __glewPixelTransformSGI(target)
}

FinishTextureSUNX :: #force_inline proc "contextless" () {
    __glewFinishTextureSUNX()
}

GlobalAlphaFactorbSUN :: #force_inline proc "contextless" (factor: GLbyte) {
    __glewGlobalAlphaFactorbSUN(factor)
}

GlobalAlphaFactordSUN :: #force_inline proc "contextless" (factor: GLdouble) {
    __glewGlobalAlphaFactordSUN(factor)
}

GlobalAlphaFactorfSUN :: #force_inline proc "contextless" (factor: GLfloat) {
    __glewGlobalAlphaFactorfSUN(factor)
}

GlobalAlphaFactoriSUN :: #force_inline proc "contextless" (factor: GLint) {
    __glewGlobalAlphaFactoriSUN(factor)
}

GlobalAlphaFactorsSUN :: #force_inline proc "contextless" (factor: GLshort) {
    __glewGlobalAlphaFactorsSUN(factor)
}

GlobalAlphaFactorubSUN :: #force_inline proc "contextless" (factor: GLubyte) {
    __glewGlobalAlphaFactorubSUN(factor)
}

GlobalAlphaFactoruiSUN :: #force_inline proc "contextless" (factor: GLuint) {
    __glewGlobalAlphaFactoruiSUN(factor)
}

GlobalAlphaFactorusSUN :: #force_inline proc "contextless" (factor: GLushort) {
    __glewGlobalAlphaFactorusSUN(factor)
}

ReadVideoPixelsSUN :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: rawptr) {
    __glewReadVideoPixelsSUN(x, y, width, height, format, type, pixels)
}

ReplacementCodePointerSUN :: #force_inline proc "contextless" (type: GLenum, stride: GLsizei, pointer: rawptr) {
    __glewReplacementCodePointerSUN(type, stride, pointer)
}

ReplacementCodeubSUN :: #force_inline proc "contextless" (code: GLubyte) {
    __glewReplacementCodeubSUN(code)
}

ReplacementCodeubvSUN :: #force_inline proc "contextless" (code: ^GLubyte) {
    __glewReplacementCodeubvSUN(code)
}

ReplacementCodeuiSUN :: #force_inline proc "contextless" (code: GLuint) {
    __glewReplacementCodeuiSUN(code)
}

ReplacementCodeuivSUN :: #force_inline proc "contextless" (code: ^GLuint) {
    __glewReplacementCodeuivSUN(code)
}

ReplacementCodeusSUN :: #force_inline proc "contextless" (code: GLushort) {
    __glewReplacementCodeusSUN(code)
}

ReplacementCodeusvSUN :: #force_inline proc "contextless" (code: ^GLushort) {
    __glewReplacementCodeusvSUN(code)
}

Color3fVertex3fSUN :: #force_inline proc "contextless" (r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewColor3fVertex3fSUN(r, g, b, x, y, z)
}

Color3fVertex3fvSUN :: #force_inline proc "contextless" (c: ^GLfloat, v: ^GLfloat) {
    __glewColor3fVertex3fvSUN(c, v)
}

Color4fNormal3fVertex3fSUN :: #force_inline proc "contextless" (r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z)
}

Color4fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (c: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewColor4fNormal3fVertex3fvSUN(c, n, v)
}

Color4ubVertex2fSUN :: #force_inline proc "contextless" (r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat) {
    __glewColor4ubVertex2fSUN(r, g, b, a, x, y)
}

Color4ubVertex2fvSUN :: #force_inline proc "contextless" (c: ^GLubyte, v: ^GLfloat) {
    __glewColor4ubVertex2fvSUN(c, v)
}

Color4ubVertex3fSUN :: #force_inline proc "contextless" (r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewColor4ubVertex3fSUN(r, g, b, a, x, y, z)
}

Color4ubVertex3fvSUN :: #force_inline proc "contextless" (c: ^GLubyte, v: ^GLfloat) {
    __glewColor4ubVertex3fvSUN(c, v)
}

Normal3fVertex3fSUN :: #force_inline proc "contextless" (nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewNormal3fVertex3fSUN(nx, ny, nz, x, y, z)
}

Normal3fVertex3fvSUN :: #force_inline proc "contextless" (n: ^GLfloat, v: ^GLfloat) {
    __glewNormal3fVertex3fvSUN(n, v)
}

ReplacementCodeuiColor3fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z)
}

ReplacementCodeuiColor3fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, c: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiColor3fVertex3fvSUN(rc, c, v)
}

ReplacementCodeuiColor4fNormal3fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z)
}

ReplacementCodeuiColor4fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v)
}

ReplacementCodeuiColor4ubVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z)
}

ReplacementCodeuiColor4ubVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, c: ^GLubyte, v: ^GLfloat) {
    __glewReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v)
}

ReplacementCodeuiNormal3fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z)
}

ReplacementCodeuiNormal3fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, n: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v)
}

ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
}

ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v)
}

ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z)
}

ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, tc: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v)
}

ReplacementCodeuiTexCoord2fVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z)
}

ReplacementCodeuiTexCoord2fVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, tc: ^GLfloat, v: ^GLfloat) {
    __glewReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v)
}

ReplacementCodeuiVertex3fSUN :: #force_inline proc "contextless" (rc: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewReplacementCodeuiVertex3fSUN(rc, x, y, z)
}

ReplacementCodeuiVertex3fvSUN :: #force_inline proc "contextless" (rc: ^GLuint, v: ^GLfloat) {
    __glewReplacementCodeuiVertex3fvSUN(rc, v)
}

TexCoord2fColor3fVertex3fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z)
}

TexCoord2fColor3fVertex3fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, c: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord2fColor3fVertex3fvSUN(tc, c, v)
}

TexCoord2fColor4fNormal3fVertex3fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z)
}

TexCoord2fColor4fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v)
}

TexCoord2fColor4ubVertex3fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, r: GLubyte, g: GLubyte, b: GLubyte, a: GLubyte, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z)
}

TexCoord2fColor4ubVertex3fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, c: ^GLubyte, v: ^GLfloat) {
    __glewTexCoord2fColor4ubVertex3fvSUN(tc, c, v)
}

TexCoord2fNormal3fVertex3fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z)
}

TexCoord2fNormal3fVertex3fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord2fNormal3fVertex3fvSUN(tc, n, v)
}

TexCoord2fVertex3fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) {
    __glewTexCoord2fVertex3fSUN(s, t, x, y, z)
}

TexCoord2fVertex3fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord2fVertex3fvSUN(tc, v)
}

TexCoord4fColor4fNormal3fVertex4fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, r: GLfloat, g: GLfloat, b: GLfloat, a: GLfloat, nx: GLfloat, ny: GLfloat, nz: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
}

TexCoord4fColor4fNormal3fVertex4fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, c: ^GLfloat, n: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v)
}

TexCoord4fVertex4fSUN :: #force_inline proc "contextless" (s: GLfloat, t: GLfloat, p: GLfloat, q: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) {
    __glewTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w)
}

TexCoord4fVertex4fvSUN :: #force_inline proc "contextless" (tc: ^GLfloat, v: ^GLfloat) {
    __glewTexCoord4fVertex4fvSUN(tc, v)
}

AddSwapHintRectWIN :: #force_inline proc "contextless" (x: GLint, y: GLint, width: GLsizei, height: GLsizei) {
    __glewAddSwapHintRectWIN(x, y, width, height)
}

EW_VERSION_1_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_1
}

EW_VERSION_1_2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_2
}

EW_VERSION_1_2_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_2_1
}

EW_VERSION_1_3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_3
}

EW_VERSION_1_4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_4
}

EW_VERSION_1_5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_1_5
}

EW_VERSION_2_0 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_2_0
}

EW_VERSION_2_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_2_1
}

EW_VERSION_3_0 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_3_0
}

EW_VERSION_3_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_3_1
}

EW_VERSION_3_2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_3_2
}

EW_VERSION_3_3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_3_3
}

EW_VERSION_4_0 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_0
}

EW_VERSION_4_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_1
}

EW_VERSION_4_2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_2
}

EW_VERSION_4_3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_3
}

EW_VERSION_4_4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_4
}

EW_VERSION_4_5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_5
}

EW_VERSION_4_6 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VERSION_4_6
}

EW_3DFX_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_3DFX_multisample
}

EW_3DFX_tbuffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_3DFX_tbuffer
}

EW_3DFX_texture_compression_FXT1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_3DFX_texture_compression_FXT1
}

EW_AMD_blend_minmax_factor :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_blend_minmax_factor
}

EW_AMD_compressed_3DC_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_compressed_3DC_texture
}

EW_AMD_compressed_ATC_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_compressed_ATC_texture
}

EW_AMD_conservative_depth :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_conservative_depth
}

EW_AMD_debug_output :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_debug_output
}

EW_AMD_depth_clamp_separate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_depth_clamp_separate
}

EW_AMD_draw_buffers_blend :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_draw_buffers_blend
}

EW_AMD_framebuffer_multisample_advanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_framebuffer_multisample_advanced
}

EW_AMD_framebuffer_sample_positions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_framebuffer_sample_positions
}

EW_AMD_gcn_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_gcn_shader
}

EW_AMD_gpu_shader_half_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_gpu_shader_half_float
}

EW_AMD_gpu_shader_half_float_fetch :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_gpu_shader_half_float_fetch
}

EW_AMD_gpu_shader_int16 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_gpu_shader_int16
}

EW_AMD_gpu_shader_int64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_gpu_shader_int64
}

EW_AMD_interleaved_elements :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_interleaved_elements
}

EW_AMD_multi_draw_indirect :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_multi_draw_indirect
}

EW_AMD_name_gen_delete :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_name_gen_delete
}

EW_AMD_occlusion_query_event :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_occlusion_query_event
}

EW_AMD_performance_monitor :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_performance_monitor
}

EW_AMD_pinned_memory :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_pinned_memory
}

EW_AMD_program_binary_Z400 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_program_binary_Z400
}

EW_AMD_query_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_query_buffer_object
}

EW_AMD_sample_positions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_sample_positions
}

EW_AMD_seamless_cubemap_per_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_seamless_cubemap_per_texture
}

EW_AMD_shader_atomic_counter_ops :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_atomic_counter_ops
}

EW_AMD_shader_ballot :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_ballot
}

EW_AMD_shader_explicit_vertex_parameter :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_explicit_vertex_parameter
}

EW_AMD_shader_image_load_store_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_image_load_store_lod
}

EW_AMD_shader_stencil_export :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_stencil_export
}

EW_AMD_shader_stencil_value_export :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_stencil_value_export
}

EW_AMD_shader_trinary_minmax :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_shader_trinary_minmax
}

EW_AMD_sparse_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_sparse_texture
}

EW_AMD_stencil_operation_extended :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_stencil_operation_extended
}

EW_AMD_texture_gather_bias_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_texture_gather_bias_lod
}

EW_AMD_texture_texture4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_texture_texture4
}

EW_AMD_transform_feedback3_lines_triangles :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_transform_feedback3_lines_triangles
}

EW_AMD_transform_feedback4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_transform_feedback4
}

EW_AMD_vertex_shader_layer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_vertex_shader_layer
}

EW_AMD_vertex_shader_tessellator :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_vertex_shader_tessellator
}

EW_AMD_vertex_shader_viewport_index :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_AMD_vertex_shader_viewport_index
}

EW_ANDROID_extension_pack_es31a :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANDROID_extension_pack_es31a
}

EW_ANGLE_depth_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_depth_texture
}

EW_ANGLE_framebuffer_blit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_framebuffer_blit
}

EW_ANGLE_framebuffer_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_framebuffer_multisample
}

EW_ANGLE_instanced_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_instanced_arrays
}

EW_ANGLE_pack_reverse_row_order :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_pack_reverse_row_order
}

EW_ANGLE_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_program_binary
}

EW_ANGLE_texture_compression_dxt1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_texture_compression_dxt1
}

EW_ANGLE_texture_compression_dxt3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_texture_compression_dxt3
}

EW_ANGLE_texture_compression_dxt5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_texture_compression_dxt5
}

EW_ANGLE_texture_usage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_texture_usage
}

EW_ANGLE_timer_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_timer_query
}

EW_ANGLE_translated_shader_source :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ANGLE_translated_shader_source
}

EW_APPLE_aux_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_aux_depth_stencil
}

EW_APPLE_client_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_client_storage
}

EW_APPLE_clip_distance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_clip_distance
}

EW_APPLE_color_buffer_packed_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_color_buffer_packed_float
}

EW_APPLE_copy_texture_levels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_copy_texture_levels
}

EW_APPLE_element_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_element_array
}

EW_APPLE_fence :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_fence
}

EW_APPLE_float_pixels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_float_pixels
}

EW_APPLE_flush_buffer_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_flush_buffer_range
}

EW_APPLE_framebuffer_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_framebuffer_multisample
}

EW_APPLE_object_purgeable :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_object_purgeable
}

EW_APPLE_pixel_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_pixel_buffer
}

EW_APPLE_rgb_422 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_rgb_422
}

EW_APPLE_row_bytes :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_row_bytes
}

EW_APPLE_specular_vector :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_specular_vector
}

EW_APPLE_sync :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_sync
}

EW_APPLE_texture_2D_limited_npot :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_texture_2D_limited_npot
}

EW_APPLE_texture_format_BGRA8888 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_texture_format_BGRA8888
}

EW_APPLE_texture_max_level :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_texture_max_level
}

EW_APPLE_texture_packed_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_texture_packed_float
}

EW_APPLE_texture_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_texture_range
}

EW_APPLE_transform_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_transform_hint
}

EW_APPLE_vertex_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_vertex_array_object
}

EW_APPLE_vertex_array_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_vertex_array_range
}

EW_APPLE_vertex_program_evaluators :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_vertex_program_evaluators
}

EW_APPLE_ycbcr_422 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_APPLE_ycbcr_422
}

EW_ARB_ES2_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_ES2_compatibility
}

EW_ARB_ES3_1_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_ES3_1_compatibility
}

EW_ARB_ES3_2_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_ES3_2_compatibility
}

EW_ARB_ES3_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_ES3_compatibility
}

EW_ARB_arrays_of_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_arrays_of_arrays
}

EW_ARB_base_instance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_base_instance
}

EW_ARB_bindless_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_bindless_texture
}

EW_ARB_blend_func_extended :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_blend_func_extended
}

EW_ARB_buffer_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_buffer_storage
}

EW_ARB_cl_event :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_cl_event
}

EW_ARB_clear_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_clear_buffer_object
}

EW_ARB_clear_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_clear_texture
}

EW_ARB_clip_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_clip_control
}

EW_ARB_color_buffer_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_color_buffer_float
}

EW_ARB_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_compatibility
}

EW_ARB_compressed_texture_pixel_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_compressed_texture_pixel_storage
}

EW_ARB_compute_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_compute_shader
}

EW_ARB_compute_variable_group_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_compute_variable_group_size
}

EW_ARB_conditional_render_inverted :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_conditional_render_inverted
}

EW_ARB_conservative_depth :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_conservative_depth
}

EW_ARB_copy_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_copy_buffer
}

EW_ARB_copy_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_copy_image
}

EW_ARB_cull_distance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_cull_distance
}

EW_ARB_debug_output :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_debug_output
}

EW_ARB_depth_buffer_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_depth_buffer_float
}

EW_ARB_depth_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_depth_clamp
}

EW_ARB_depth_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_depth_texture
}

EW_ARB_derivative_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_derivative_control
}

EW_ARB_direct_state_access :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_direct_state_access
}

EW_ARB_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_draw_buffers
}

EW_ARB_draw_buffers_blend :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_draw_buffers_blend
}

EW_ARB_draw_elements_base_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_draw_elements_base_vertex
}

EW_ARB_draw_indirect :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_draw_indirect
}

EW_ARB_draw_instanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_draw_instanced
}

EW_ARB_enhanced_layouts :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_enhanced_layouts
}

EW_ARB_explicit_attrib_location :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_explicit_attrib_location
}

EW_ARB_explicit_uniform_location :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_explicit_uniform_location
}

EW_ARB_fragment_coord_conventions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_coord_conventions
}

EW_ARB_fragment_layer_viewport :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_layer_viewport
}

EW_ARB_fragment_program :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_program
}

EW_ARB_fragment_program_shadow :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_program_shadow
}

EW_ARB_fragment_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_shader
}

EW_ARB_fragment_shader_interlock :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_fragment_shader_interlock
}

EW_ARB_framebuffer_no_attachments :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_framebuffer_no_attachments
}

EW_ARB_framebuffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_framebuffer_object
}

EW_ARB_framebuffer_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_framebuffer_sRGB
}

EW_ARB_geometry_shader4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_geometry_shader4
}

EW_ARB_get_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_get_program_binary
}

EW_ARB_get_texture_sub_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_get_texture_sub_image
}

EW_ARB_gl_spirv :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_gl_spirv
}

EW_ARB_gpu_shader5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_gpu_shader5
}

EW_ARB_gpu_shader_fp64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_gpu_shader_fp64
}

EW_ARB_gpu_shader_int64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_gpu_shader_int64
}

EW_ARB_half_float_pixel :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_half_float_pixel
}

EW_ARB_half_float_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_half_float_vertex
}

EW_ARB_imaging :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_imaging
}

EW_ARB_indirect_parameters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_indirect_parameters
}

EW_ARB_instanced_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_instanced_arrays
}

EW_ARB_internalformat_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_internalformat_query
}

EW_ARB_internalformat_query2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_internalformat_query2
}

EW_ARB_invalidate_subdata :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_invalidate_subdata
}

EW_ARB_map_buffer_alignment :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_map_buffer_alignment
}

EW_ARB_map_buffer_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_map_buffer_range
}

EW_ARB_matrix_palette :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_matrix_palette
}

EW_ARB_multi_bind :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_multi_bind
}

EW_ARB_multi_draw_indirect :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_multi_draw_indirect
}

EW_ARB_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_multisample
}

EW_ARB_multitexture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_multitexture
}

EW_ARB_occlusion_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_occlusion_query
}

EW_ARB_occlusion_query2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_occlusion_query2
}

EW_ARB_parallel_shader_compile :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_parallel_shader_compile
}

EW_ARB_pipeline_statistics_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_pipeline_statistics_query
}

EW_ARB_pixel_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_pixel_buffer_object
}

EW_ARB_point_parameters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_point_parameters
}

EW_ARB_point_sprite :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_point_sprite
}

EW_ARB_polygon_offset_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_polygon_offset_clamp
}

EW_ARB_post_depth_coverage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_post_depth_coverage
}

EW_ARB_program_interface_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_program_interface_query
}

EW_ARB_provoking_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_provoking_vertex
}

EW_ARB_query_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_query_buffer_object
}

EW_ARB_robust_buffer_access_behavior :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_robust_buffer_access_behavior
}

EW_ARB_robustness :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_robustness
}

EW_ARB_robustness_application_isolation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_robustness_application_isolation
}

EW_ARB_robustness_share_group_isolation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_robustness_share_group_isolation
}

EW_ARB_sample_locations :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sample_locations
}

EW_ARB_sample_shading :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sample_shading
}

EW_ARB_sampler_objects :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sampler_objects
}

EW_ARB_seamless_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_seamless_cube_map
}

EW_ARB_seamless_cubemap_per_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_seamless_cubemap_per_texture
}

EW_ARB_separate_shader_objects :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_separate_shader_objects
}

EW_ARB_shader_atomic_counter_ops :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_atomic_counter_ops
}

EW_ARB_shader_atomic_counters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_atomic_counters
}

EW_ARB_shader_ballot :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_ballot
}

EW_ARB_shader_bit_encoding :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_bit_encoding
}

EW_ARB_shader_clock :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_clock
}

EW_ARB_shader_draw_parameters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_draw_parameters
}

EW_ARB_shader_group_vote :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_group_vote
}

EW_ARB_shader_image_load_store :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_image_load_store
}

EW_ARB_shader_image_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_image_size
}

EW_ARB_shader_objects :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_objects
}

EW_ARB_shader_precision :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_precision
}

EW_ARB_shader_stencil_export :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_stencil_export
}

EW_ARB_shader_storage_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_storage_buffer_object
}

EW_ARB_shader_subroutine :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_subroutine
}

EW_ARB_shader_texture_image_samples :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_texture_image_samples
}

EW_ARB_shader_texture_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_texture_lod
}

EW_ARB_shader_viewport_layer_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shader_viewport_layer_array
}

EW_ARB_shading_language_100 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shading_language_100
}

EW_ARB_shading_language_420pack :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shading_language_420pack
}

EW_ARB_shading_language_include :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shading_language_include
}

EW_ARB_shading_language_packing :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shading_language_packing
}

EW_ARB_shadow :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shadow
}

EW_ARB_shadow_ambient :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_shadow_ambient
}

EW_ARB_sparse_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sparse_buffer
}

EW_ARB_sparse_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sparse_texture
}

EW_ARB_sparse_texture2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sparse_texture2
}

EW_ARB_sparse_texture_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sparse_texture_clamp
}

EW_ARB_spirv_extensions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_spirv_extensions
}

EW_ARB_stencil_texturing :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_stencil_texturing
}

EW_ARB_sync :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_sync
}

EW_ARB_tessellation_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_tessellation_shader
}

EW_ARB_texture_barrier :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_barrier
}

EW_ARB_texture_border_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_border_clamp
}

EW_ARB_texture_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_buffer_object
}

EW_ARB_texture_buffer_object_rgb32 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_buffer_object_rgb32
}

EW_ARB_texture_buffer_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_buffer_range
}

EW_ARB_texture_compression :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_compression
}

EW_ARB_texture_compression_bptc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_compression_bptc
}

EW_ARB_texture_compression_rgtc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_compression_rgtc
}

EW_ARB_texture_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_cube_map
}

EW_ARB_texture_cube_map_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_cube_map_array
}

EW_ARB_texture_env_add :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_env_add
}

EW_ARB_texture_env_combine :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_env_combine
}

EW_ARB_texture_env_crossbar :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_env_crossbar
}

EW_ARB_texture_env_dot3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_env_dot3
}

EW_ARB_texture_filter_anisotropic :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_filter_anisotropic
}

EW_ARB_texture_filter_minmax :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_filter_minmax
}

EW_ARB_texture_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_float
}

EW_ARB_texture_gather :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_gather
}

EW_ARB_texture_mirror_clamp_to_edge :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_mirror_clamp_to_edge
}

EW_ARB_texture_mirrored_repeat :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_mirrored_repeat
}

EW_ARB_texture_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_multisample
}

EW_ARB_texture_non_power_of_two :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_non_power_of_two
}

EW_ARB_texture_query_levels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_query_levels
}

EW_ARB_texture_query_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_query_lod
}

EW_ARB_texture_rectangle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_rectangle
}

EW_ARB_texture_rg :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_rg
}

EW_ARB_texture_rgb10_a2ui :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_rgb10_a2ui
}

EW_ARB_texture_stencil8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_stencil8
}

EW_ARB_texture_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_storage
}

EW_ARB_texture_storage_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_storage_multisample
}

EW_ARB_texture_swizzle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_swizzle
}

EW_ARB_texture_view :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_texture_view
}

EW_ARB_timer_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_timer_query
}

EW_ARB_transform_feedback2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_transform_feedback2
}

EW_ARB_transform_feedback3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_transform_feedback3
}

EW_ARB_transform_feedback_instanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_transform_feedback_instanced
}

EW_ARB_transform_feedback_overflow_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_transform_feedback_overflow_query
}

EW_ARB_transpose_matrix :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_transpose_matrix
}

EW_ARB_uniform_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_uniform_buffer_object
}

EW_ARB_vertex_array_bgra :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_array_bgra
}

EW_ARB_vertex_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_array_object
}

EW_ARB_vertex_attrib_64bit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_attrib_64bit
}

EW_ARB_vertex_attrib_binding :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_attrib_binding
}

EW_ARB_vertex_blend :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_blend
}

EW_ARB_vertex_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_buffer_object
}

EW_ARB_vertex_program :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_program
}

EW_ARB_vertex_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_shader
}

EW_ARB_vertex_type_10f_11f_11f_rev :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_type_10f_11f_11f_rev
}

EW_ARB_vertex_type_2_10_10_10_rev :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_vertex_type_2_10_10_10_rev
}

EW_ARB_viewport_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_viewport_array
}

EW_ARB_window_pos :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARB_window_pos
}

EW_ARM_mali_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_mali_program_binary
}

EW_ARM_mali_shader_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_mali_shader_binary
}

EW_ARM_rgba8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_rgba8
}

EW_ARM_shader_core_properties :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_shader_core_properties
}

EW_ARM_shader_framebuffer_fetch :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_shader_framebuffer_fetch
}

EW_ARM_shader_framebuffer_fetch_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_shader_framebuffer_fetch_depth_stencil
}

EW_ARM_texture_unnormalized_coordinates :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ARM_texture_unnormalized_coordinates
}

EW_ATIX_point_sprites :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATIX_point_sprites
}

EW_ATIX_texture_env_combine3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATIX_texture_env_combine3
}

EW_ATIX_texture_env_route :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATIX_texture_env_route
}

EW_ATIX_vertex_shader_output_point_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATIX_vertex_shader_output_point_size
}

EW_ATI_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_draw_buffers
}

EW_ATI_element_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_element_array
}

EW_ATI_envmap_bumpmap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_envmap_bumpmap
}

EW_ATI_fragment_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_fragment_shader
}

EW_ATI_map_object_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_map_object_buffer
}

EW_ATI_meminfo :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_meminfo
}

EW_ATI_pn_triangles :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_pn_triangles
}

EW_ATI_separate_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_separate_stencil
}

EW_ATI_shader_texture_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_shader_texture_lod
}

EW_ATI_text_fragment_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_text_fragment_shader
}

EW_ATI_texture_compression_3dc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_texture_compression_3dc
}

EW_ATI_texture_env_combine3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_texture_env_combine3
}

EW_ATI_texture_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_texture_float
}

EW_ATI_texture_mirror_once :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_texture_mirror_once
}

EW_ATI_vertex_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_vertex_array_object
}

EW_ATI_vertex_attrib_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_vertex_attrib_array_object
}

EW_ATI_vertex_streams :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_ATI_vertex_streams
}

EW_DMP_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_DMP_program_binary
}

EW_DMP_shader_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_DMP_shader_binary
}

EW_EXT_422_pixels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_422_pixels
}

EW_EXT_Cg_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_Cg_shader
}

EW_EXT_EGL_image_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_EGL_image_array
}

EW_EXT_EGL_image_external_wrap_modes :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_EGL_image_external_wrap_modes
}

EW_EXT_EGL_image_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_EGL_image_storage
}

EW_EXT_EGL_image_storage_compression :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_EGL_image_storage_compression
}

EW_EXT_EGL_sync :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_EGL_sync
}

EW_EXT_YUV_target :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_YUV_target
}

EW_EXT_abgr :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_abgr
}

EW_EXT_base_instance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_base_instance
}

EW_EXT_bgra :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_bgra
}

EW_EXT_bindable_uniform :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_bindable_uniform
}

EW_EXT_blend_color :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_color
}

EW_EXT_blend_equation_separate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_equation_separate
}

EW_EXT_blend_func_extended :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_func_extended
}

EW_EXT_blend_func_separate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_func_separate
}

EW_EXT_blend_logic_op :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_logic_op
}

EW_EXT_blend_minmax :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_minmax
}

EW_EXT_blend_subtract :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_blend_subtract
}

EW_EXT_buffer_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_buffer_storage
}

EW_EXT_clear_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_clear_texture
}

EW_EXT_clip_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_clip_control
}

EW_EXT_clip_cull_distance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_clip_cull_distance
}

EW_EXT_clip_volume_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_clip_volume_hint
}

EW_EXT_cmyka :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_cmyka
}

EW_EXT_color_buffer_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_color_buffer_float
}

EW_EXT_color_buffer_half_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_color_buffer_half_float
}

EW_EXT_color_subtable :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_color_subtable
}

EW_EXT_compiled_vertex_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_compiled_vertex_array
}

EW_EXT_compressed_ETC1_RGB8_sub_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_compressed_ETC1_RGB8_sub_texture
}

EW_EXT_conservative_depth :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_conservative_depth
}

EW_EXT_convolution :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_convolution
}

EW_EXT_coordinate_frame :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_coordinate_frame
}

EW_EXT_copy_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_copy_image
}

EW_EXT_copy_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_copy_texture
}

EW_EXT_cull_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_cull_vertex
}

EW_EXT_debug_label :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_debug_label
}

EW_EXT_debug_marker :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_debug_marker
}

EW_EXT_depth_bounds_test :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_depth_bounds_test
}

EW_EXT_depth_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_depth_clamp
}

EW_EXT_direct_state_access :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_direct_state_access
}

EW_EXT_discard_framebuffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_discard_framebuffer
}

EW_EXT_disjoint_timer_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_disjoint_timer_query
}

EW_EXT_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_buffers
}

EW_EXT_draw_buffers2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_buffers2
}

EW_EXT_draw_buffers_indexed :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_buffers_indexed
}

EW_EXT_draw_elements_base_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_elements_base_vertex
}

EW_EXT_draw_instanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_instanced
}

EW_EXT_draw_range_elements :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_range_elements
}

EW_EXT_draw_transform_feedback :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_draw_transform_feedback
}

EW_EXT_external_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_external_buffer
}

EW_EXT_float_blend :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_float_blend
}

EW_EXT_fog_coord :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_fog_coord
}

EW_EXT_frag_depth :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_frag_depth
}

EW_EXT_fragment_lighting :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_fragment_lighting
}

EW_EXT_framebuffer_blit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_blit
}

EW_EXT_framebuffer_blit_layers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_blit_layers
}

EW_EXT_framebuffer_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_multisample
}

EW_EXT_framebuffer_multisample_blit_scaled :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_multisample_blit_scaled
}

EW_EXT_framebuffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_object
}

EW_EXT_framebuffer_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_framebuffer_sRGB
}

EW_EXT_geometry_point_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_geometry_point_size
}

EW_EXT_geometry_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_geometry_shader
}

EW_EXT_geometry_shader4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_geometry_shader4
}

EW_EXT_gpu_program_parameters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_gpu_program_parameters
}

EW_EXT_gpu_shader4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_gpu_shader4
}

EW_EXT_gpu_shader5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_gpu_shader5
}

EW_EXT_histogram :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_histogram
}

EW_EXT_index_array_formats :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_index_array_formats
}

EW_EXT_index_func :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_index_func
}

EW_EXT_index_material :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_index_material
}

EW_EXT_index_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_index_texture
}

EW_EXT_instanced_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_instanced_arrays
}

EW_EXT_light_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_light_texture
}

EW_EXT_map_buffer_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_map_buffer_range
}

EW_EXT_memory_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_memory_object
}

EW_EXT_memory_object_fd :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_memory_object_fd
}

EW_EXT_memory_object_win32 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_memory_object_win32
}

EW_EXT_misc_attribute :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_misc_attribute
}

EW_EXT_multi_draw_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multi_draw_arrays
}

EW_EXT_multi_draw_indirect :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multi_draw_indirect
}

EW_EXT_multiple_textures :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multiple_textures
}

EW_EXT_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multisample
}

EW_EXT_multisample_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multisample_compatibility
}

EW_EXT_multisampled_render_to_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multisampled_render_to_texture
}

EW_EXT_multisampled_render_to_texture2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multisampled_render_to_texture2
}

EW_EXT_multiview_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multiview_draw_buffers
}

EW_EXT_multiview_tessellation_geometry_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multiview_tessellation_geometry_shader
}

EW_EXT_multiview_texture_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multiview_texture_multisample
}

EW_EXT_multiview_timer_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_multiview_timer_query
}

EW_EXT_occlusion_query_boolean :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_occlusion_query_boolean
}

EW_EXT_packed_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_packed_depth_stencil
}

EW_EXT_packed_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_packed_float
}

EW_EXT_packed_pixels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_packed_pixels
}

EW_EXT_paletted_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_paletted_texture
}

EW_EXT_pixel_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_pixel_buffer_object
}

EW_EXT_pixel_transform :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_pixel_transform
}

EW_EXT_pixel_transform_color_table :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_pixel_transform_color_table
}

EW_EXT_point_parameters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_point_parameters
}

EW_EXT_polygon_offset :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_polygon_offset
}

EW_EXT_polygon_offset_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_polygon_offset_clamp
}

EW_EXT_post_depth_coverage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_post_depth_coverage
}

EW_EXT_primitive_bounding_box :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_primitive_bounding_box
}

EW_EXT_protected_textures :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_protected_textures
}

EW_EXT_provoking_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_provoking_vertex
}

EW_EXT_pvrtc_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_pvrtc_sRGB
}

EW_EXT_raster_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_raster_multisample
}

EW_EXT_read_format_bgra :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_read_format_bgra
}

EW_EXT_render_snorm :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_render_snorm
}

EW_EXT_rescale_normal :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_rescale_normal
}

EW_EXT_robustness :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_robustness
}

EW_EXT_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_sRGB
}

EW_EXT_sRGB_write_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_sRGB_write_control
}

EW_EXT_scene_marker :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_scene_marker
}

EW_EXT_secondary_color :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_secondary_color
}

EW_EXT_semaphore :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_semaphore
}

EW_EXT_semaphore_fd :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_semaphore_fd
}

EW_EXT_semaphore_win32 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_semaphore_win32
}

EW_EXT_separate_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_separate_depth_stencil
}

EW_EXT_separate_shader_objects :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_separate_shader_objects
}

EW_EXT_separate_specular_color :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_separate_specular_color
}

EW_EXT_shader_framebuffer_fetch :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_framebuffer_fetch
}

EW_EXT_shader_framebuffer_fetch_non_coherent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_framebuffer_fetch_non_coherent
}

EW_EXT_shader_group_vote :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_group_vote
}

EW_EXT_shader_image_load_formatted :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_image_load_formatted
}

EW_EXT_shader_image_load_store :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_image_load_store
}

EW_EXT_shader_implicit_conversions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_implicit_conversions
}

EW_EXT_shader_integer_mix :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_integer_mix
}

EW_EXT_shader_io_blocks :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_io_blocks
}

EW_EXT_shader_non_constant_global_initializers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_non_constant_global_initializers
}

EW_EXT_shader_pixel_local_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_pixel_local_storage
}

EW_EXT_shader_pixel_local_storage2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_pixel_local_storage2
}

EW_EXT_shader_samples_identical :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_samples_identical
}

EW_EXT_shader_texture_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shader_texture_lod
}

EW_EXT_shadow_funcs :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shadow_funcs
}

EW_EXT_shadow_samplers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shadow_samplers
}

EW_EXT_shared_texture_palette :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_shared_texture_palette
}

EW_EXT_sparse_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_sparse_texture
}

EW_EXT_sparse_texture2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_sparse_texture2
}

EW_EXT_static_vertex_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_static_vertex_array
}

EW_EXT_stencil_clear_tag :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_stencil_clear_tag
}

EW_EXT_stencil_two_side :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_stencil_two_side
}

EW_EXT_stencil_wrap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_stencil_wrap
}

EW_EXT_subtexture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_subtexture
}

EW_EXT_tessellation_point_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_tessellation_point_size
}

EW_EXT_tessellation_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_tessellation_shader
}

EW_EXT_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture
}

EW_EXT_texture3D :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture3D
}

EW_EXT_texture_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_array
}

EW_EXT_texture_border_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_border_clamp
}

EW_EXT_texture_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_buffer
}

EW_EXT_texture_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_buffer_object
}

EW_EXT_texture_compression_astc_decode_mode :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_astc_decode_mode
}

EW_EXT_texture_compression_astc_decode_mode_rgb9e5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5
}

EW_EXT_texture_compression_bptc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_bptc
}

EW_EXT_texture_compression_dxt1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_dxt1
}

EW_EXT_texture_compression_latc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_latc
}

EW_EXT_texture_compression_rgtc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_rgtc
}

EW_EXT_texture_compression_s3tc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_s3tc
}

EW_EXT_texture_compression_s3tc_srgb :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_compression_s3tc_srgb
}

EW_EXT_texture_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_cube_map
}

EW_EXT_texture_cube_map_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_cube_map_array
}

EW_EXT_texture_edge_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_edge_clamp
}

EW_EXT_texture_env :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_env
}

EW_EXT_texture_env_add :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_env_add
}

EW_EXT_texture_env_combine :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_env_combine
}

EW_EXT_texture_env_dot3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_env_dot3
}

EW_EXT_texture_filter_anisotropic :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_filter_anisotropic
}

EW_EXT_texture_filter_minmax :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_filter_minmax
}

EW_EXT_texture_format_BGRA8888 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_format_BGRA8888
}

EW_EXT_texture_format_sRGB_override :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_format_sRGB_override
}

EW_EXT_texture_integer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_integer
}

EW_EXT_texture_lod_bias :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_lod_bias
}

EW_EXT_texture_mirror_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_mirror_clamp
}

EW_EXT_texture_mirror_clamp_to_edge :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_mirror_clamp_to_edge
}

EW_EXT_texture_norm16 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_norm16
}

EW_EXT_texture_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_object
}

EW_EXT_texture_perturb_normal :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_perturb_normal
}

EW_EXT_texture_query_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_query_lod
}

EW_EXT_texture_rectangle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_rectangle
}

EW_EXT_texture_rg :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_rg
}

EW_EXT_texture_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_sRGB
}

EW_EXT_texture_sRGB_R8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_sRGB_R8
}

EW_EXT_texture_sRGB_RG8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_sRGB_RG8
}

EW_EXT_texture_sRGB_decode :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_sRGB_decode
}

EW_EXT_texture_shadow_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_shadow_lod
}

EW_EXT_texture_shared_exponent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_shared_exponent
}

EW_EXT_texture_snorm :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_snorm
}

EW_EXT_texture_storage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_storage
}

EW_EXT_texture_storage_compression :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_storage_compression
}

EW_EXT_texture_swizzle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_swizzle
}

EW_EXT_texture_type_2_10_10_10_REV :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_type_2_10_10_10_REV
}

EW_EXT_texture_view :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_texture_view
}

EW_EXT_timer_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_timer_query
}

EW_EXT_transform_feedback :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_transform_feedback
}

EW_EXT_unpack_subimage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_unpack_subimage
}

EW_EXT_vertex_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_array
}

EW_EXT_vertex_array_bgra :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_array_bgra
}

EW_EXT_vertex_array_setXXX :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_array_setXXX
}

EW_EXT_vertex_attrib_64bit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_attrib_64bit
}

EW_EXT_vertex_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_shader
}

EW_EXT_vertex_weighting :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_vertex_weighting
}

EW_EXT_win32_keyed_mutex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_win32_keyed_mutex
}

EW_EXT_window_rectangles :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_window_rectangles
}

EW_EXT_x11_sync_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_EXT_x11_sync_object
}

EW_FJ_shader_binary_GCCSO :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_FJ_shader_binary_GCCSO
}

EW_GREMEDY_frame_terminator :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_GREMEDY_frame_terminator
}

EW_GREMEDY_string_marker :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_GREMEDY_string_marker
}

EW_HP_convolution_border_modes :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_HP_convolution_border_modes
}

EW_HP_image_transform :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_HP_image_transform
}

EW_HP_occlusion_test :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_HP_occlusion_test
}

EW_HP_texture_lighting :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_HP_texture_lighting
}

EW_IBM_cull_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_cull_vertex
}

EW_IBM_multimode_draw_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_multimode_draw_arrays
}

EW_IBM_rasterpos_clip :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_rasterpos_clip
}

EW_IBM_static_data :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_static_data
}

EW_IBM_texture_mirrored_repeat :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_texture_mirrored_repeat
}

EW_IBM_vertex_array_lists :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IBM_vertex_array_lists
}

EW_IMG_bindless_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_bindless_texture
}

EW_IMG_framebuffer_downsample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_framebuffer_downsample
}

EW_IMG_multisampled_render_to_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_multisampled_render_to_texture
}

EW_IMG_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_program_binary
}

EW_IMG_pvric_end_to_end_signature :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_pvric_end_to_end_signature
}

EW_IMG_read_format :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_read_format
}

EW_IMG_shader_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_shader_binary
}

EW_IMG_texture_compression_pvrtc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_texture_compression_pvrtc
}

EW_IMG_texture_compression_pvrtc2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_texture_compression_pvrtc2
}

EW_IMG_texture_env_enhanced_fixed_function :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_texture_env_enhanced_fixed_function
}

EW_IMG_texture_filter_cubic :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_texture_filter_cubic
}

EW_IMG_tile_region_protection :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_IMG_tile_region_protection
}

EW_INGR_color_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INGR_color_clamp
}

EW_INGR_interlace_read :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INGR_interlace_read
}

EW_INTEL_blackhole_render :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_blackhole_render
}

EW_INTEL_conservative_rasterization :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_conservative_rasterization
}

EW_INTEL_fragment_shader_ordering :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_fragment_shader_ordering
}

EW_INTEL_framebuffer_CMAA :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_framebuffer_CMAA
}

EW_INTEL_map_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_map_texture
}

EW_INTEL_parallel_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_parallel_arrays
}

EW_INTEL_performance_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_performance_query
}

EW_INTEL_shader_integer_functions2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_shader_integer_functions2
}

EW_INTEL_texture_scissor :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_INTEL_texture_scissor
}

EW_KHR_blend_equation_advanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_blend_equation_advanced
}

EW_KHR_blend_equation_advanced_coherent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_blend_equation_advanced_coherent
}

EW_KHR_context_flush_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_context_flush_control
}

EW_KHR_debug :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_debug
}

EW_KHR_no_error :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_no_error
}

EW_KHR_parallel_shader_compile :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_parallel_shader_compile
}

EW_KHR_robust_buffer_access_behavior :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_robust_buffer_access_behavior
}

EW_KHR_robustness :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_robustness
}

EW_KHR_shader_subgroup :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_shader_subgroup
}

EW_KHR_texture_compression_astc_hdr :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_texture_compression_astc_hdr
}

EW_KHR_texture_compression_astc_ldr :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_texture_compression_astc_ldr
}

EW_KHR_texture_compression_astc_sliced_3d :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KHR_texture_compression_astc_sliced_3d
}

EW_KTX_buffer_region :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_KTX_buffer_region
}

EW_MESAX_texture_stack :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESAX_texture_stack
}

EW_MESA_bgra :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_bgra
}

EW_MESA_framebuffer_flip_x :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_framebuffer_flip_x
}

EW_MESA_framebuffer_flip_y :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_framebuffer_flip_y
}

EW_MESA_framebuffer_swap_xy :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_framebuffer_swap_xy
}

EW_MESA_pack_invert :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_pack_invert
}

EW_MESA_program_binary_formats :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_program_binary_formats
}

EW_MESA_resize_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_resize_buffers
}

EW_MESA_shader_integer_functions :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_shader_integer_functions
}

EW_MESA_tile_raster_order :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_tile_raster_order
}

EW_MESA_window_pos :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_window_pos
}

EW_MESA_ycbcr_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_MESA_ycbcr_texture
}

EW_NVX_blend_equation_advanced_multi_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_blend_equation_advanced_multi_draw_buffers
}

EW_NVX_conditional_render :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_conditional_render
}

EW_NVX_gpu_memory_info :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_gpu_memory_info
}

EW_NVX_gpu_multicast2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_gpu_multicast2
}

EW_NVX_linked_gpu_multicast :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_linked_gpu_multicast
}

EW_NVX_progress_fence :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NVX_progress_fence
}

EW_NV_3dvision_settings :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_3dvision_settings
}

EW_NV_EGL_stream_consumer_external :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_EGL_stream_consumer_external
}

EW_NV_alpha_to_coverage_dither_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_alpha_to_coverage_dither_control
}

EW_NV_bgr :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_bgr
}

EW_NV_bindless_multi_draw_indirect :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_bindless_multi_draw_indirect
}

EW_NV_bindless_multi_draw_indirect_count :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_bindless_multi_draw_indirect_count
}

EW_NV_bindless_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_bindless_texture
}

EW_NV_blend_equation_advanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_blend_equation_advanced
}

EW_NV_blend_equation_advanced_coherent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_blend_equation_advanced_coherent
}

EW_NV_blend_minmax_factor :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_blend_minmax_factor
}

EW_NV_blend_square :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_blend_square
}

EW_NV_clip_space_w_scaling :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_clip_space_w_scaling
}

EW_NV_command_list :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_command_list
}

EW_NV_compute_program5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_compute_program5
}

EW_NV_compute_shader_derivatives :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_compute_shader_derivatives
}

EW_NV_conditional_render :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conditional_render
}

EW_NV_conservative_raster :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conservative_raster
}

EW_NV_conservative_raster_dilate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conservative_raster_dilate
}

EW_NV_conservative_raster_pre_snap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conservative_raster_pre_snap
}

EW_NV_conservative_raster_pre_snap_triangles :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conservative_raster_pre_snap_triangles
}

EW_NV_conservative_raster_underestimation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_conservative_raster_underestimation
}

EW_NV_copy_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_copy_buffer
}

EW_NV_copy_depth_to_color :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_copy_depth_to_color
}

EW_NV_copy_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_copy_image
}

EW_NV_deep_texture3D :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_deep_texture3D
}

EW_NV_depth_buffer_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_depth_buffer_float
}

EW_NV_depth_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_depth_clamp
}

EW_NV_depth_nonlinear :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_depth_nonlinear
}

EW_NV_depth_range_unclamped :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_depth_range_unclamped
}

EW_NV_draw_buffers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_draw_buffers
}

EW_NV_draw_instanced :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_draw_instanced
}

EW_NV_draw_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_draw_texture
}

EW_NV_draw_vulkan_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_draw_vulkan_image
}

EW_NV_evaluators :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_evaluators
}

EW_NV_explicit_attrib_location :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_explicit_attrib_location
}

EW_NV_explicit_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_explicit_multisample
}

EW_NV_fbo_color_attachments :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fbo_color_attachments
}

EW_NV_fence :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fence
}

EW_NV_fill_rectangle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fill_rectangle
}

EW_NV_float_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_float_buffer
}

EW_NV_fog_distance :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fog_distance
}

EW_NV_fragment_coverage_to_color :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_coverage_to_color
}

EW_NV_fragment_program :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_program
}

EW_NV_fragment_program2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_program2
}

EW_NV_fragment_program4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_program4
}

EW_NV_fragment_program_option :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_program_option
}

EW_NV_fragment_shader_barycentric :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_shader_barycentric
}

EW_NV_fragment_shader_interlock :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_fragment_shader_interlock
}

EW_NV_framebuffer_blit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_framebuffer_blit
}

EW_NV_framebuffer_mixed_samples :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_framebuffer_mixed_samples
}

EW_NV_framebuffer_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_framebuffer_multisample
}

EW_NV_framebuffer_multisample_coverage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_framebuffer_multisample_coverage
}

EW_NV_generate_mipmap_sRGB :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_generate_mipmap_sRGB
}

EW_NV_geometry_program4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_geometry_program4
}

EW_NV_geometry_shader4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_geometry_shader4
}

EW_NV_geometry_shader_passthrough :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_geometry_shader_passthrough
}

EW_NV_gpu_multicast :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_multicast
}

EW_NV_gpu_program4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_program4
}

EW_NV_gpu_program5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_program5
}

EW_NV_gpu_program5_mem_extended :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_program5_mem_extended
}

EW_NV_gpu_program_fp64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_program_fp64
}

EW_NV_gpu_shader5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_gpu_shader5
}

EW_NV_half_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_half_float
}

EW_NV_image_formats :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_image_formats
}

EW_NV_instanced_arrays :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_instanced_arrays
}

EW_NV_internalformat_sample_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_internalformat_sample_query
}

EW_NV_light_max_exponent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_light_max_exponent
}

EW_NV_memory_attachment :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_memory_attachment
}

EW_NV_memory_object_sparse :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_memory_object_sparse
}

EW_NV_mesh_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_mesh_shader
}

EW_NV_multisample_coverage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_multisample_coverage
}

EW_NV_multisample_filter_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_multisample_filter_hint
}

EW_NV_non_square_matrices :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_non_square_matrices
}

EW_NV_occlusion_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_occlusion_query
}

EW_NV_pack_subimage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_pack_subimage
}

EW_NV_packed_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_packed_depth_stencil
}

EW_NV_packed_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_packed_float
}

EW_NV_packed_float_linear :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_packed_float_linear
}

EW_NV_parameter_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_parameter_buffer_object
}

EW_NV_parameter_buffer_object2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_parameter_buffer_object2
}

EW_NV_path_rendering :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_path_rendering
}

EW_NV_path_rendering_shared_edge :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_path_rendering_shared_edge
}

EW_NV_pixel_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_pixel_buffer_object
}

EW_NV_pixel_data_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_pixel_data_range
}

EW_NV_platform_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_platform_binary
}

EW_NV_point_sprite :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_point_sprite
}

EW_NV_polygon_mode :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_polygon_mode
}

EW_NV_present_video :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_present_video
}

EW_NV_primitive_restart :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_primitive_restart
}

EW_NV_primitive_shading_rate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_primitive_shading_rate
}

EW_NV_query_resource_tag :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_query_resource_tag
}

EW_NV_read_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_read_buffer
}

EW_NV_read_buffer_front :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_read_buffer_front
}

EW_NV_read_depth :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_read_depth
}

EW_NV_read_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_read_depth_stencil
}

EW_NV_read_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_read_stencil
}

EW_NV_register_combiners :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_register_combiners
}

EW_NV_register_combiners2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_register_combiners2
}

EW_NV_representative_fragment_test :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_representative_fragment_test
}

EW_NV_robustness_video_memory_purge :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_robustness_video_memory_purge
}

EW_NV_sRGB_formats :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_sRGB_formats
}

EW_NV_sample_locations :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_sample_locations
}

EW_NV_sample_mask_override_coverage :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_sample_mask_override_coverage
}

EW_NV_scissor_exclusive :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_scissor_exclusive
}

EW_NV_shader_atomic_counters :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_atomic_counters
}

EW_NV_shader_atomic_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_atomic_float
}

EW_NV_shader_atomic_float64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_atomic_float64
}

EW_NV_shader_atomic_fp16_vector :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_atomic_fp16_vector
}

EW_NV_shader_atomic_int64 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_atomic_int64
}

EW_NV_shader_buffer_load :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_buffer_load
}

EW_NV_shader_noperspective_interpolation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_noperspective_interpolation
}

EW_NV_shader_storage_buffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_storage_buffer_object
}

EW_NV_shader_subgroup_partitioned :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_subgroup_partitioned
}

EW_NV_shader_texture_footprint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_texture_footprint
}

EW_NV_shader_thread_group :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_thread_group
}

EW_NV_shader_thread_shuffle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shader_thread_shuffle
}

EW_NV_shading_rate_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shading_rate_image
}

EW_NV_shadow_samplers_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shadow_samplers_array
}

EW_NV_shadow_samplers_cube :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_shadow_samplers_cube
}

EW_NV_stereo_view_rendering :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_stereo_view_rendering
}

EW_NV_tessellation_program5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_tessellation_program5
}

EW_NV_texgen_emboss :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texgen_emboss
}

EW_NV_texgen_reflection :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texgen_reflection
}

EW_NV_texture_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_array
}

EW_NV_texture_barrier :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_barrier
}

EW_NV_texture_border_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_border_clamp
}

EW_NV_texture_compression_latc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_compression_latc
}

EW_NV_texture_compression_s3tc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_compression_s3tc
}

EW_NV_texture_compression_s3tc_update :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_compression_s3tc_update
}

EW_NV_texture_compression_vtc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_compression_vtc
}

EW_NV_texture_env_combine4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_env_combine4
}

EW_NV_texture_expand_normal :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_expand_normal
}

EW_NV_texture_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_multisample
}

EW_NV_texture_npot_2D_mipmap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_npot_2D_mipmap
}

EW_NV_texture_rectangle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_rectangle
}

EW_NV_texture_rectangle_compressed :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_rectangle_compressed
}

EW_NV_texture_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_shader
}

EW_NV_texture_shader2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_shader2
}

EW_NV_texture_shader3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_texture_shader3
}

EW_NV_timeline_semaphore :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_timeline_semaphore
}

EW_NV_transform_feedback :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_transform_feedback
}

EW_NV_transform_feedback2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_transform_feedback2
}

EW_NV_uniform_buffer_std430_layout :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_uniform_buffer_std430_layout
}

EW_NV_uniform_buffer_unified_memory :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_uniform_buffer_unified_memory
}

EW_NV_vdpau_interop :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vdpau_interop
}

EW_NV_vdpau_interop2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vdpau_interop2
}

EW_NV_vertex_array_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_array_range
}

EW_NV_vertex_array_range2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_array_range2
}

EW_NV_vertex_attrib_integer_64bit :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_attrib_integer_64bit
}

EW_NV_vertex_buffer_unified_memory :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_buffer_unified_memory
}

EW_NV_vertex_program :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program
}

EW_NV_vertex_program1_1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program1_1
}

EW_NV_vertex_program2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program2
}

EW_NV_vertex_program2_option :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program2_option
}

EW_NV_vertex_program3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program3
}

EW_NV_vertex_program4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_vertex_program4
}

EW_NV_video_capture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_video_capture
}

EW_NV_viewport_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_viewport_array
}

EW_NV_viewport_array2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_viewport_array2
}

EW_NV_viewport_swizzle :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_NV_viewport_swizzle
}

EW_OES_EGL_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_EGL_image
}

EW_OES_EGL_image_external :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_EGL_image_external
}

EW_OES_EGL_image_external_essl3 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_EGL_image_external_essl3
}

EW_OES_blend_equation_separate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_blend_equation_separate
}

EW_OES_blend_func_separate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_blend_func_separate
}

EW_OES_blend_subtract :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_blend_subtract
}

EW_OES_byte_coordinates :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_byte_coordinates
}

EW_OES_compressed_ETC1_RGB8_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_compressed_ETC1_RGB8_texture
}

EW_OES_compressed_paletted_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_compressed_paletted_texture
}

EW_OES_copy_image :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_copy_image
}

EW_OES_depth24 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_depth24
}

EW_OES_depth32 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_depth32
}

EW_OES_depth_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_depth_texture
}

EW_OES_depth_texture_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_depth_texture_cube_map
}

EW_OES_draw_buffers_indexed :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_draw_buffers_indexed
}

EW_OES_draw_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_draw_texture
}

EW_OES_element_index_uint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_element_index_uint
}

EW_OES_extended_matrix_palette :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_extended_matrix_palette
}

EW_OES_fbo_render_mipmap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_fbo_render_mipmap
}

EW_OES_fragment_precision_high :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_fragment_precision_high
}

EW_OES_framebuffer_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_framebuffer_object
}

EW_OES_geometry_point_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_geometry_point_size
}

EW_OES_geometry_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_geometry_shader
}

EW_OES_get_program_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_get_program_binary
}

EW_OES_gpu_shader5 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_gpu_shader5
}

EW_OES_mapbuffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_mapbuffer
}

EW_OES_matrix_get :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_matrix_get
}

EW_OES_matrix_palette :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_matrix_palette
}

EW_OES_packed_depth_stencil :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_packed_depth_stencil
}

EW_OES_point_size_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_point_size_array
}

EW_OES_point_sprite :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_point_sprite
}

EW_OES_read_format :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_read_format
}

EW_OES_required_internalformat :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_required_internalformat
}

EW_OES_rgb8_rgba8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_rgb8_rgba8
}

EW_OES_sample_shading :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_sample_shading
}

EW_OES_sample_variables :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_sample_variables
}

EW_OES_shader_image_atomic :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_shader_image_atomic
}

EW_OES_shader_io_blocks :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_shader_io_blocks
}

EW_OES_shader_multisample_interpolation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_shader_multisample_interpolation
}

EW_OES_single_precision :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_single_precision
}

EW_OES_standard_derivatives :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_standard_derivatives
}

EW_OES_stencil1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_stencil1
}

EW_OES_stencil4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_stencil4
}

EW_OES_stencil8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_stencil8
}

EW_OES_surfaceless_context :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_surfaceless_context
}

EW_OES_tessellation_point_size :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_tessellation_point_size
}

EW_OES_tessellation_shader :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_tessellation_shader
}

EW_OES_texture_3D :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_3D
}

EW_OES_texture_border_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_border_clamp
}

EW_OES_texture_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_buffer
}

EW_OES_texture_compression_astc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_compression_astc
}

EW_OES_texture_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_cube_map
}

EW_OES_texture_cube_map_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_cube_map_array
}

EW_OES_texture_env_crossbar :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_env_crossbar
}

EW_OES_texture_mirrored_repeat :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_mirrored_repeat
}

EW_OES_texture_npot :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_npot
}

EW_OES_texture_stencil8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_stencil8
}

EW_OES_texture_storage_multisample_2d_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_storage_multisample_2d_array
}

EW_OES_texture_view :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_texture_view
}

EW_OES_vertex_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_vertex_array_object
}

EW_OES_vertex_half_float :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_vertex_half_float
}

EW_OES_vertex_type_10_10_10_2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OES_vertex_type_10_10_10_2
}

EW_OML_interlace :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OML_interlace
}

EW_OML_resample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OML_resample
}

EW_OML_subsample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OML_subsample
}

EW_OVR_multiview :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OVR_multiview
}

EW_OVR_multiview2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OVR_multiview2
}

EW_OVR_multiview_multisampled_render_to_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_OVR_multiview_multisampled_render_to_texture
}

EW_PGI_misc_hints :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_PGI_misc_hints
}

EW_PGI_vertex_hints :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_PGI_vertex_hints
}

EW_QCOM_YUV_texture_gather :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_YUV_texture_gather
}

EW_QCOM_alpha_test :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_alpha_test
}

EW_QCOM_binning_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_binning_control
}

EW_QCOM_driver_control :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_driver_control
}

EW_QCOM_extended_get :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_extended_get
}

EW_QCOM_extended_get2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_extended_get2
}

EW_QCOM_frame_extrapolation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_frame_extrapolation
}

EW_QCOM_framebuffer_foveated :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_framebuffer_foveated
}

EW_QCOM_motion_estimation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_motion_estimation
}

EW_QCOM_perfmon_global_mode :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_perfmon_global_mode
}

EW_QCOM_render_sRGB_R8_RG8 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_render_sRGB_R8_RG8
}

EW_QCOM_render_shared_exponent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_render_shared_exponent
}

EW_QCOM_shader_framebuffer_fetch_noncoherent :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_shader_framebuffer_fetch_noncoherent
}

EW_QCOM_shader_framebuffer_fetch_rate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_shader_framebuffer_fetch_rate
}

EW_QCOM_shading_rate :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_shading_rate
}

EW_QCOM_texture_foveated :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_texture_foveated
}

EW_QCOM_texture_foveated2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_texture_foveated2
}

EW_QCOM_texture_foveated_subsampled_layout :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_texture_foveated_subsampled_layout
}

EW_QCOM_texture_lod_bias :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_texture_lod_bias
}

EW_QCOM_tiled_rendering :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_tiled_rendering
}

EW_QCOM_writeonly_rendering :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_writeonly_rendering
}

EW_QCOM_ycbcr_degamma :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_QCOM_ycbcr_degamma
}

EW_REGAL_ES1_0_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_ES1_0_compatibility
}

EW_REGAL_ES1_1_compatibility :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_ES1_1_compatibility
}

EW_REGAL_enable :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_enable
}

EW_REGAL_error_string :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_error_string
}

EW_REGAL_extension_query :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_extension_query
}

EW_REGAL_log :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_log
}

EW_REGAL_proc_address :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REGAL_proc_address
}

EW_REND_screen_coordinates :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_REND_screen_coordinates
}

EW_S3_s3tc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_S3_s3tc
}

EW_SGIS_clip_band_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_clip_band_hint
}

EW_SGIS_color_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_color_range
}

EW_SGIS_detail_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_detail_texture
}

EW_SGIS_fog_function :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_fog_function
}

EW_SGIS_generate_mipmap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_generate_mipmap
}

EW_SGIS_line_texgen :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_line_texgen
}

EW_SGIS_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_multisample
}

EW_SGIS_multitexture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_multitexture
}

EW_SGIS_pixel_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_pixel_texture
}

EW_SGIS_point_line_texgen :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_point_line_texgen
}

EW_SGIS_shared_multisample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_shared_multisample
}

EW_SGIS_sharpen_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_sharpen_texture
}

EW_SGIS_texture4D :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture4D
}

EW_SGIS_texture_border_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture_border_clamp
}

EW_SGIS_texture_edge_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture_edge_clamp
}

EW_SGIS_texture_filter4 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture_filter4
}

EW_SGIS_texture_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture_lod
}

EW_SGIS_texture_select :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIS_texture_select
}

EW_SGIX_async :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_async
}

EW_SGIX_async_histogram :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_async_histogram
}

EW_SGIX_async_pixel :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_async_pixel
}

EW_SGIX_bali_g_instruments :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_bali_g_instruments
}

EW_SGIX_bali_r_instruments :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_bali_r_instruments
}

EW_SGIX_bali_timer_instruments :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_bali_timer_instruments
}

EW_SGIX_blend_alpha_minmax :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_blend_alpha_minmax
}

EW_SGIX_blend_cadd :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_blend_cadd
}

EW_SGIX_blend_cmultiply :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_blend_cmultiply
}

EW_SGIX_calligraphic_fragment :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_calligraphic_fragment
}

EW_SGIX_clipmap :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_clipmap
}

EW_SGIX_color_matrix_accuracy :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_color_matrix_accuracy
}

EW_SGIX_color_table_index_mode :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_color_table_index_mode
}

EW_SGIX_complex_polar :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_complex_polar
}

EW_SGIX_convolution_accuracy :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_convolution_accuracy
}

EW_SGIX_cube_map :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_cube_map
}

EW_SGIX_cylinder_texgen :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_cylinder_texgen
}

EW_SGIX_datapipe :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_datapipe
}

EW_SGIX_decimation :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_decimation
}

EW_SGIX_depth_pass_instrument :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_depth_pass_instrument
}

EW_SGIX_depth_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_depth_texture
}

EW_SGIX_dvc :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_dvc
}

EW_SGIX_flush_raster :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_flush_raster
}

EW_SGIX_fog_blend :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_blend
}

EW_SGIX_fog_factor_to_alpha :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_factor_to_alpha
}

EW_SGIX_fog_layers :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_layers
}

EW_SGIX_fog_offset :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_offset
}

EW_SGIX_fog_patchy :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_patchy
}

EW_SGIX_fog_scale :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_scale
}

EW_SGIX_fog_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fog_texture
}

EW_SGIX_fragment_lighting_space :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fragment_lighting_space
}

EW_SGIX_fragment_specular_lighting :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fragment_specular_lighting
}

EW_SGIX_fragments_instrument :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_fragments_instrument
}

EW_SGIX_framezoom :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_framezoom
}

EW_SGIX_icc_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_icc_texture
}

EW_SGIX_igloo_interface :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_igloo_interface
}

EW_SGIX_image_compression :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_image_compression
}

EW_SGIX_impact_pixel_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_impact_pixel_texture
}

EW_SGIX_instrument_error :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_instrument_error
}

EW_SGIX_interlace :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_interlace
}

EW_SGIX_ir_instrument1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_ir_instrument1
}

EW_SGIX_line_quality_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_line_quality_hint
}

EW_SGIX_list_priority :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_list_priority
}

EW_SGIX_mpeg1 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_mpeg1
}

EW_SGIX_mpeg2 :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_mpeg2
}

EW_SGIX_nonlinear_lighting_pervertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_nonlinear_lighting_pervertex
}

EW_SGIX_nurbs_eval :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_nurbs_eval
}

EW_SGIX_occlusion_instrument :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_occlusion_instrument
}

EW_SGIX_packed_6bytes :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_packed_6bytes
}

EW_SGIX_pixel_texture :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_pixel_texture
}

EW_SGIX_pixel_texture_bits :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_pixel_texture_bits
}

EW_SGIX_pixel_texture_lod :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_pixel_texture_lod
}

EW_SGIX_pixel_tiles :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_pixel_tiles
}

EW_SGIX_polynomial_ffd :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_polynomial_ffd
}

EW_SGIX_quad_mesh :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_quad_mesh
}

EW_SGIX_reference_plane :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_reference_plane
}

EW_SGIX_resample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_resample
}

EW_SGIX_scalebias_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_scalebias_hint
}

EW_SGIX_shadow :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_shadow
}

EW_SGIX_shadow_ambient :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_shadow_ambient
}

EW_SGIX_slim :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_slim
}

EW_SGIX_spotlight_cutoff :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_spotlight_cutoff
}

EW_SGIX_sprite :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_sprite
}

EW_SGIX_subdiv_patch :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_subdiv_patch
}

EW_SGIX_subsample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_subsample
}

EW_SGIX_tag_sample_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_tag_sample_buffer
}

EW_SGIX_texture_add_env :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_add_env
}

EW_SGIX_texture_coordinate_clamp :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_coordinate_clamp
}

EW_SGIX_texture_lod_bias :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_lod_bias
}

EW_SGIX_texture_mipmap_anisotropic :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_mipmap_anisotropic
}

EW_SGIX_texture_multi_buffer :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_multi_buffer
}

EW_SGIX_texture_phase :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_phase
}

EW_SGIX_texture_range :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_range
}

EW_SGIX_texture_scale_bias :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_scale_bias
}

EW_SGIX_texture_supersample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_texture_supersample
}

EW_SGIX_vector_ops :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_vector_ops
}

EW_SGIX_vertex_array_object :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_vertex_array_object
}

EW_SGIX_vertex_preclip :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_vertex_preclip
}

EW_SGIX_vertex_preclip_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_vertex_preclip_hint
}

EW_SGIX_ycrcb :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_ycrcb
}

EW_SGIX_ycrcb_subsample :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_ycrcb_subsample
}

EW_SGIX_ycrcba :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGIX_ycrcba
}

EW_SGI_color_matrix :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_color_matrix
}

EW_SGI_color_table :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_color_table
}

EW_SGI_complex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_complex
}

EW_SGI_complex_type :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_complex_type
}

EW_SGI_fft :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_fft
}

EW_SGI_texture_color_table :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SGI_texture_color_table
}

EW_SUNX_constant_data :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUNX_constant_data
}

EW_SUN_convolution_border_modes :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_convolution_border_modes
}

EW_SUN_global_alpha :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_global_alpha
}

EW_SUN_mesh_array :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_mesh_array
}

EW_SUN_read_video_pixels :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_read_video_pixels
}

EW_SUN_slice_accum :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_slice_accum
}

EW_SUN_triangle_list :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_triangle_list
}

EW_SUN_vertex :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_SUN_vertex
}

EW_VIV_shader_binary :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_VIV_shader_binary
}

EW_WIN_phong_shading :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_WIN_phong_shading
}

EW_WIN_scene_markerXXX :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_WIN_scene_markerXXX
}

EW_WIN_specular_fog :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_WIN_specular_fog
}

EW_WIN_swap_hint :: #force_inline proc "contextless" () -> GLboolean {
    return __GLEW_WIN_swap_hint
}

when (ODIN_OS == .Linux) {

when #config(GLEW_STATIC, false) {
    foreign import gl_runic "lib/linux/libGLEW.a"
} else {
    foreign import gl_runic "system:GLEW"
}

} else when (ODIN_OS == .Windows) && (ODIN_ARCH == .amd64) {

when #config(GLEW_STATIC, false) {
    foreign import gl_runic "lib/windows/x86_64/glew32s.lib"
} else {
    foreign import gl_runic "lib/windows/x86_64/glew32.lib"
}

} else when (ODIN_OS == .Darwin) && (ODIN_ARCH == .amd64) {

when #config(GLEW_STATIC, false) {
    foreign import gl_runic "lib/macos/x86_64/libGLEW.a"
} else {
    foreign import gl_runic "lib/macos/x86_64/libGLEW.dylib"
}

} else {

when #config(GLEW_STATIC, false) {
    when ODIN_OS == .Darwin {
    foreign import gl_runic "system:GLEW"
} else {
    foreign import gl_runic "system:libGLEW.a"
}
} else {
    foreign import gl_runic "system:GLEW"
}

}

